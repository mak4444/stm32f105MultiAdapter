
FLOAD VForthM/vfmneed.4 

FLOAD _mak/COMM6.F

S" /dev/ttyACM2" COMM_OPEN

: TERM
 BEGIN
   KEY? IF  KEY   UEMIT  THEN
   COM-CNT IF  COM-GET 
   EMIT  THEN
 AGAIN
;

: TERMTST
 BEGIN
   KEY? IF KEY EMIT THEN
 AGAIN
;

: COMEMITS
 BEGIN
    COM-CNT  KEY? 0= AND
 WHILE
     COM-GET EMIT
 REPEAT ;

CREATE 'ok.'  'o' C, 'k' C, '.'  C,
0 VALUE ok.I

: COMEMITS_OK
 0 TO ok.I
 BEGIN
        COM-CNT
	IF	COM-GET DUP EMIT
		'ok.' ok.I + C@ = IF ok.I 1+ TO ok.I ELSE 0 TO ok.I THEN
	THEN	
\ 	KEY? IF KEY 'Q' = THROW THEN
 	KEY? IF KEY  THROW THEN
	  2 ok.I  U<
 UNTIL
 ;

VARIABLE &#I 
VARIABLE S&#I

: #I0  PARSE-NAME 2DUP + 0 SWAP C! INCLUDED ;
: #I1 &#I @ S&#I ! 
  ['] #I0 DUP &#I !  CATCH DROP  S&#I @ &#I !  ;

' #I1 &#I  !
: #I  &#I @ EXECUTE ;

: #EXIT [  &INTERPRET @ LIT,  ] &INTERPRET ! ;
: MEC&INTERPRET_
  SOURCE DROP
 C@
  '#'
 =
  IF [  &INTERPRET @ COMPILE,  ]
  ELSE COMEMITS
 SOURCE
 CR ." {" 2DUP TYPE ." }"
 TO_COMN 
 1 EMIT COMEMITS_OK 2 EMIT
  THEN
;


: MEC&INTERPRET
\ F7_ED
 ['] MEC&INTERPRET_ CATCH 
 DUP IF [  &INTERPRET @ LIT,  ] &INTERPRET ! THEN
 THROW
;

: TERM3 ( -- )

 [']  MEC&INTERPRET_  &INTERPRET !

;

: %> 0 parse 2DUP ." <" 2DUP TYPE ." >" TO_COMN  COMEMITS_OK ;


\ COM.
\ TERM3
\ TERMTST
  
\ WORDS