forth.c: In function ‘COM’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:337:7: note: in expansion of macro ‘HERE’
  CELL(HERE)=dd;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:337:7: note: in expansion of macro ‘HERE’
  CELL(HERE)=dd;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:338:1: note: in expansion of macro ‘HERE’
 HERE+=4;
 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:338:1: note: in expansion of macro ‘HERE’
 HERE+=4;
 ^
forth.c: In function ‘WCOM’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:343:8: note: in expansion of macro ‘HERE’
  WCELL(HERE)=dd;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:343:8: note: in expansion of macro ‘HERE’
  WCELL(HERE)=dd;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:344:2: note: in expansion of macro ‘HERE’
  HERE+=2;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:344:2: note: in expansion of macro ‘HERE’
  HERE+=2;
  ^
forth.c: In function ‘CCOM’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:349:7: note: in expansion of macro ‘HERE’
  BYTE(HERE)=dd;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:96:14: note: in expansion of macro ‘CELL’
 #define HERE CELL(DPOINT)
              ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:349:7: note: in expansion of macro ‘HERE’
  BYTE(HERE)=dd;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:350:3: note: in expansion of macro ‘HERE’
   HERE+=1;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:350:3: note: in expansion of macro ‘HERE’
   HERE+=1;
   ^
forth.c: In function ‘StrComp’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:356:7: note: in expansion of macro ‘HERE’
 addr0=HERE;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:356:7: note: in expansion of macro ‘HERE’
 addr0=HERE;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:361:1: note: in expansion of macro ‘HERE’
 HERE=addr1;
 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:361:1: note: in expansion of macro ‘HERE’
 HERE=addr1;
 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:362:4: note: in expansion of macro ‘HERE’
 if(HERE&1)CCOM(0);
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:362:4: note: in expansion of macro ‘HERE’
 if(HERE&1)CCOM(0);
    ^
forth.c: In function ‘SHEADER’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:367:6: note: in expansion of macro ‘current’
  COM(current);
      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:367:6: note: in expansion of macro ‘current’
  COM(current);
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:368:5: note: in expansion of macro ‘last’
     last=HERE;
     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:368:5: note: in expansion of macro ‘last’
     last=HERE;
     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:368:10: note: in expansion of macro ‘HERE’
     last=HERE;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:368:10: note: in expansion of macro ‘HERE’
     last=HERE;
          ^
forth.c: In function ‘IMMED’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:99:15: note: in expansion of macro ‘CELL’
 #define last  CELL(LAST)
               ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:382:7: note: in expansion of macro ‘last’
  BYTE(last)=BYTE(last)|0x80;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:99:15: note: in expansion of macro ‘CELL’
 #define last  CELL(LAST)
               ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:382:7: note: in expansion of macro ‘last’
  BYTE(last)=BYTE(last)|0x80;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:99:15: note: in expansion of macro ‘CELL’
 #define last  CELL(LAST)
               ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:382:18: note: in expansion of macro ‘last’
  BYTE(last)=BYTE(last)|0x80;
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:99:15: note: in expansion of macro ‘CELL’
 #define last  CELL(LAST)
               ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:382:18: note: in expansion of macro ‘last’
  BYTE(last)=BYTE(last)|0x80;
                  ^
forth.c: In function ‘PRIM’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:388:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:388:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:388:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:388:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c: In function ‘CONSTANT’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:395:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:395:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:395:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:395:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c: In function ‘CREATE’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:403:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:403:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:403:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:403:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c: In function ‘CC’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:461:13: note: in expansion of macro ‘current’
  __u32 addr=current;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:461:13: note: in expansion of macro ‘current’
  __u32 addr=current;
             ^
forth.c: In function ‘STR’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:483:8: note: in expansion of macro ‘HERE’
  addr0=HERE;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:483:8: note: in expansion of macro ‘HERE’
  addr0=HERE;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:487:5: note: in expansion of macro ‘HERE’
  if(HERE&1)CCOM(0);
     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:487:5: note: in expansion of macro ‘HERE’
  if(HERE&1)CCOM(0);
     ^
forth.c: In function ‘F_END’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:499:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:499:2: note: in expansion of macro ‘current’
  current=last;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:499:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:499:10: note: in expansion of macro ‘last’
  current=last;
          ^
forth.c: In function ‘BEGIN’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:504:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:504:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:504:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:504:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:504:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE;
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:504:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE;
                 ^
forth.c: In function ‘AGAIN’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:510:11: note: in expansion of macro ‘sp’
  COM(CELL(sp));
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:510:11: note: in expansion of macro ‘sp’
  COM(CELL(sp));
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:511:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:511:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c: In function ‘UNTIL’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:517:11: note: in expansion of macro ‘sp’
  COM(CELL(sp));
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:517:11: note: in expansion of macro ‘sp’
  COM(CELL(sp));
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:518:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:518:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c: In function ‘AHEAD’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:523:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:523:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:523:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:523:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:525:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:525:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:525:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:525:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:525:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE-4;
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:525:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE-4;
                 ^
forth.c: In function ‘IF’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:530:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:530:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:530:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:530:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=0;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:532:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:532:2: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:532:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:532:13: note: in expansion of macro ‘sp’
  sp-=4;CELL(sp)=HERE-4;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:532:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE-4;
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:532:17: note: in expansion of macro ‘HERE’
  sp-=4;CELL(sp)=HERE-4;
                 ^
forth.c: In function ‘WHILE’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:539:9: note: in expansion of macro ‘sp’
  t=CELL(sp);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:539:9: note: in expansion of macro ‘sp’
  t=CELL(sp);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:540:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:540:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:540:16: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:540:16: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:541:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=t;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:541:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=t;
       ^
forth.c: In function ‘THEN’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:546:7: note: in expansion of macro ‘CELL’
  CELL(CELL(sp))=HERE;
       ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:546:12: note: in expansion of macro ‘sp’
  CELL(CELL(sp))=HERE;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:546:7: note: in expansion of macro ‘CELL’
  CELL(CELL(sp))=HERE;
       ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:546:12: note: in expansion of macro ‘sp’
  CELL(CELL(sp))=HERE;
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:546:17: note: in expansion of macro ‘HERE’
  CELL(CELL(sp))=HERE;
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:546:17: note: in expansion of macro ‘HERE’
  CELL(CELL(sp))=HERE;
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:547:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:547:2: note: in expansion of macro ‘sp’
  sp+=4;
  ^
forth.c: In function ‘ELSE’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:554:9: note: in expansion of macro ‘sp’
  t=CELL(sp);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:554:9: note: in expansion of macro ‘sp’
  t=CELL(sp);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:555:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:555:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:555:16: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:555:16: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(sp+4);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:556:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=t;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:556:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=t;
       ^
forth.c: In function ‘NextWord’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:575:11: note: in expansion of macro ‘TO_IN’
 addr=CELL(TO_IN) + TIB ;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:575:11: note: in expansion of macro ‘TO_IN’
 addr=CELL(TO_IN) + TIB ;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:575:20: note: in expansion of macro ‘TIB’
 addr=CELL(TO_IN) + TIB ;
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:575:20: note: in expansion of macro ‘TIB’
 addr=CELL(TO_IN) + TIB ;
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:576:7: note: in expansion of macro ‘TIB’
 Eaddr=TIB+CELL(NTIB);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:576:7: note: in expansion of macro ‘TIB’
 Eaddr=TIB+CELL(NTIB);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:576:16: note: in expansion of macro ‘NTIB’
 Eaddr=TIB+CELL(NTIB);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:576:16: note: in expansion of macro ‘NTIB’
 Eaddr=TIB+CELL(NTIB);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:577:1: note: in expansion of macro ‘sp’
 sp-=8;
 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:577:1: note: in expansion of macro ‘sp’
 sp-=8;
 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:579:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=Waddr=addr;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:579:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=Waddr=addr;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:581:7: note: in expansion of macro ‘sp’
  CELL(sp)=addr-Waddr-1;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:581:7: note: in expansion of macro ‘sp’
  CELL(sp)=addr-Waddr-1;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:582:7: note: in expansion of macro ‘TO_IN’
  CELL(TO_IN)=addr - TIB;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:582:7: note: in expansion of macro ‘TO_IN’
  CELL(TO_IN)=addr - TIB;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:582:21: note: in expansion of macro ‘TIB’
  CELL(TO_IN)=addr - TIB;
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:582:21: note: in expansion of macro ‘TIB’
  CELL(TO_IN)=addr - TIB;
                     ^
forth.c: In function ‘Parse’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:590:11: note: in expansion of macro ‘TO_IN’
 addr=CELL(TO_IN) + TIB ;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:590:11: note: in expansion of macro ‘TO_IN’
 addr=CELL(TO_IN) + TIB ;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:590:20: note: in expansion of macro ‘TIB’
 addr=CELL(TO_IN) + TIB ;
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:590:20: note: in expansion of macro ‘TIB’
 addr=CELL(TO_IN) + TIB ;
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:591:7: note: in expansion of macro ‘TIB’
 Eaddr=TIB+CELL(NTIB);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:591:7: note: in expansion of macro ‘TIB’
 Eaddr=TIB+CELL(NTIB);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:591:16: note: in expansion of macro ‘NTIB’
 Eaddr=TIB+CELL(NTIB);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:591:16: note: in expansion of macro ‘NTIB’
 Eaddr=TIB+CELL(NTIB);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:592:9: note: in expansion of macro ‘sp’
 ch=BYTE(sp);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:592:9: note: in expansion of macro ‘sp’
 ch=BYTE(sp);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:593:1: note: in expansion of macro ‘sp’
 sp-=4;
 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:593:1: note: in expansion of macro ‘sp’
 sp-=4;
 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:594:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=Waddr=addr;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:594:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=Waddr=addr;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:596:7: note: in expansion of macro ‘sp’
  CELL(sp)=addr-Waddr-1;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:596:7: note: in expansion of macro ‘sp’
  CELL(sp)=addr-Waddr-1;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:597:7: note: in expansion of macro ‘TO_IN’
  CELL(TO_IN)=addr - TIB;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:597:7: note: in expansion of macro ‘TO_IN’
  CELL(TO_IN)=addr - TIB;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:597:21: note: in expansion of macro ‘TIB’
  CELL(TO_IN)=addr - TIB;
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:597:21: note: in expansion of macro ‘TIB’
  CELL(TO_IN)=addr - TIB;
                     ^
forth.c: In function ‘SQ’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:602:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:602:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:602:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:602:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:603:10: note: in expansion of macro ‘STATE’
  if(CELL(STATE))
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:603:10: note: in expansion of macro ‘STATE’
  if(CELL(STATE))
          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:606:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:606:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:607:16: note: in expansion of macro ‘sp’
      size=CELL(sp);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:607:16: note: in expansion of macro ‘sp’
      size=CELL(sp);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:610:3: note: in expansion of macro ‘sp’
   sp+=8;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:610:3: note: in expansion of macro ‘sp’
   sp+=8;
   ^
forth.c: In function ‘CQ’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:616:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:616:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:616:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:616:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=(__u32)'"';Parse();
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:617:10: note: in expansion of macro ‘STATE’
  if(CELL(STATE))
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:617:10: note: in expansion of macro ‘STATE’
  if(CELL(STATE))
          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:620:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:620:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:621:16: note: in expansion of macro ‘sp’
      size=CELL(sp);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:621:16: note: in expansion of macro ‘sp’
      size=CELL(sp);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:624:3: note: in expansion of macro ‘sp’
   sp+=8;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:624:3: note: in expansion of macro ‘sp’
   sp+=8;
   ^
forth.c: In function ‘Source’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:631:2: note: in expansion of macro ‘sp’
  sp-=8;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:631:2: note: in expansion of macro ‘sp’
  sp-=8;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:632:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=TIB;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:632:7: note: in expansion of macro ‘sp’
  CELL(sp+4)=TIB;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:632:13: note: in expansion of macro ‘TIB’
  CELL(sp+4)=TIB;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:632:13: note: in expansion of macro ‘TIB’
  CELL(sp+4)=TIB;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:633:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(NTIB);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:633:7: note: in expansion of macro ‘sp’
  CELL(sp)=CELL(NTIB);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:633:16: note: in expansion of macro ‘NTIB’
  CELL(sp)=CELL(NTIB);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:633:16: note: in expansion of macro ‘NTIB’
  CELL(sp)=CELL(NTIB);
                ^
forth.c: In function ‘SourceST’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:639:7: note: in expansion of macro ‘NTIB’
  CELL(NTIB)=len=CELL(sp);
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:639:7: note: in expansion of macro ‘NTIB’
  CELL(NTIB)=len=CELL(sp);
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:639:22: note: in expansion of macro ‘sp’
  CELL(NTIB)=len=CELL(sp);
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:639:22: note: in expansion of macro ‘sp’
  CELL(NTIB)=len=CELL(sp);
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:640:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:640:12: note: in expansion of macro ‘sp’
  addr=CELL(sp+4);
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:105:13: note: in expansion of macro ‘CELL’
 #define TIB CELL(ATIB)
             ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:641:20: note: in expansion of macro ‘TIB’
  while(len--) BYTE(TIB+len)=BYTE(addr+len);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:105:13: note: in expansion of macro ‘CELL’
 #define TIB CELL(ATIB)
             ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:105:18: note: in expansion of macro ‘ATIB’
 #define TIB CELL(ATIB)
                  ^
forth.c:641:20: note: in expansion of macro ‘TIB’
  while(len--) BYTE(TIB+len)=BYTE(addr+len);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:642:2: note: in expansion of macro ‘sp’
  sp+=8;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:642:2: note: in expansion of macro ‘sp’
  sp+=8;
  ^
forth.c: In function ‘SearchWordList’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:654:19: note: in expansion of macro ‘CELL’
   __u32 addr=CELL(CELL(sp));
                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:654:24: note: in expansion of macro ‘sp’
   __u32 addr=CELL(CELL(sp));
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:654:19: note: in expansion of macro ‘CELL’
   __u32 addr=CELL(CELL(sp));
                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:654:24: note: in expansion of macro ‘sp’
   __u32 addr=CELL(CELL(sp));
                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:655:20: note: in expansion of macro ‘sp’
    __u8  size=CELL(sp+4);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:655:20: note: in expansion of macro ‘sp’
    __u8  size=CELL(sp+4);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:656:22: note: in expansion of macro ‘CELL’
    __u8 * word=&BYTE(CELL(sp+8));
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:656:27: note: in expansion of macro ‘sp’
    __u8 * word=&BYTE(CELL(sp+8));
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:656:22: note: in expansion of macro ‘CELL’
    __u8 * word=&BYTE(CELL(sp+8));
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:656:27: note: in expansion of macro ‘sp’
    __u8 * word=&BYTE(CELL(sp+8));
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:659:7: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:659:7: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:659:19: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:659:19: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:665:7: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:665:7: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:665:19: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:665:19: note: in expansion of macro ‘sp’
       sp+=8; CELL(sp)=0; return;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:669:4: note: in expansion of macro ‘sp’
    sp+=4;
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:669:4: note: in expansion of macro ‘sp’
    sp+=4;
    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:671:14: note: in expansion of macro ‘sp’
         CELL(sp)=1;
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:671:14: note: in expansion of macro ‘sp’
         CELL(sp)=1;
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:673:8: note: in expansion of macro ‘sp’
   CELL(sp)=-1;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:673:8: note: in expansion of macro ‘sp’
   CELL(sp)=-1;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:674:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=FromName(addr);
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:674:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=FromName(addr);
        ^
forth.c: In function ‘SFind’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:684:11: note: in expansion of macro ‘CONTEXT’
 { int voc=CONTEXT;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:684:11: note: in expansion of macro ‘CONTEXT’
 { int voc=CONTEXT;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:686:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=0;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:686:2: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=0;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:686:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=0;
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:686:14: note: in expansion of macro ‘sp’
  sp-=4; CELL(sp)=0;
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:688:4: note: in expansion of macro ‘sp’
  { sp+=4;
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:688:4: note: in expansion of macro ‘sp’
  { sp+=4;
    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:6: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:6: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:17: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:17: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:26: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:689:26: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:6: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:6: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:17: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:17: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:26: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:690:26: note: in expansion of macro ‘sp’
      sp-=4;CELL(sp)=CELL(sp+8);
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:691:3: note: in expansion of macro ‘sp’
   sp-=4;CELL(sp)=CELL(voc);
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:691:3: note: in expansion of macro ‘sp’
   sp-=4;CELL(sp)=CELL(voc);
   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:691:14: note: in expansion of macro ‘sp’
   sp-=4;CELL(sp)=CELL(voc);
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:691:14: note: in expansion of macro ‘sp’
   sp-=4;CELL(sp)=CELL(voc);
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:693:11: note: in expansion of macro ‘sp’
   if(CELL(sp))
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:693:11: note: in expansion of macro ‘sp’
   if(CELL(sp))
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:695:9: note: in expansion of macro ‘sp’
    CELL(sp+8)=CELL(sp);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:695:9: note: in expansion of macro ‘sp’
    CELL(sp+8)=CELL(sp);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:695:20: note: in expansion of macro ‘sp’
    CELL(sp+8)=CELL(sp);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:695:20: note: in expansion of macro ‘sp’
    CELL(sp+8)=CELL(sp);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:696:9: note: in expansion of macro ‘sp’
    CELL(sp+12)=CELL(sp+4);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:696:9: note: in expansion of macro ‘sp’
    CELL(sp+12)=CELL(sp+4);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:696:21: note: in expansion of macro ‘sp’
    CELL(sp+12)=CELL(sp+4);
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:696:21: note: in expansion of macro ‘sp’
    CELL(sp+12)=CELL(sp+4);
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:697:4: note: in expansion of macro ‘sp’
    sp+=8;
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:697:4: note: in expansion of macro ‘sp’
    sp+=8;
    ^
forth.c: In function ‘rl_gets’:
forth.c:715:7: warning: implicit declaration of function ‘free’ [-Wimplicit-function-declaration]
       free (line_read);
       ^
forth.c:715:7: warning: incompatible implicit declaration of built-in function ‘free’
forth.c:715:7: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
forth.c: In function ‘virtual_machine’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:741:2: note: in expansion of macro ‘sp’
  sp=rp-32*444;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:741:2: note: in expansion of macro ‘sp’
  sp=rp-32*444;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:749:4: note: in expansion of macro ‘sp’
    sp-=4;CELL(sp)=ireg;
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:749:4: note: in expansion of macro ‘sp’
    sp-=4;CELL(sp)=ireg;
    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:749:15: note: in expansion of macro ‘sp’
    sp-=4;CELL(sp)=ireg;
               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:749:15: note: in expansion of macro ‘sp’
    sp-=4;CELL(sp)=ireg;
               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:36: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:36: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:45: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:45: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:54: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:764:54: note: in expansion of macro ‘sp’
      case sw_swap: /*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:765:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=t;
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:765:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=t;
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:35: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:35: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:46: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:46: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:57: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:768:57: note: in expansion of macro ‘sp’
      case sw_rot: /*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:39: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:39: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:48: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:769:48: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:36: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:36: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:45: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:45: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:54: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:770:54: note: in expansion of macro ‘sp’
      case sw_rrot: /*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:28: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:39: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:39: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:50: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:771:50: note: in expansion of macro ‘sp’
                       CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:772:34: note: in expansion of macro ‘sp’
      case sw_0equ: /*0=*/   CELL(sp)=-!CELL(sp);break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:772:34: note: in expansion of macro ‘sp’
      case sw_0equ: /*0=*/   CELL(sp)=-!CELL(sp);break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:772:45: note: in expansion of macro ‘sp’
      case sw_0equ: /*0=*/   CELL(sp)=-!CELL(sp);break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:772:45: note: in expansion of macro ‘sp’
      case sw_0equ: /*0=*/   CELL(sp)=-!CELL(sp);break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:773:36: note: in expansion of macro ‘sp’
      case sw_0Nequ: /*0<>*/   CELL(sp)=-!!CELL(sp);break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:773:36: note: in expansion of macro ‘sp’
      case sw_0Nequ: /*0<>*/   CELL(sp)=-!!CELL(sp);break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:773:48: note: in expansion of macro ‘sp’
      case sw_0Nequ: /*0<>*/   CELL(sp)=-!!CELL(sp);break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:773:48: note: in expansion of macro ‘sp’
      case sw_0Nequ: /*0<>*/   CELL(sp)=-!!CELL(sp);break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:774:33: note: in expansion of macro ‘sp’
      case sw_0LT: /*0<*/   CELL(sp)=-((INT32)CELL(sp)<0);break;
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:774:33: note: in expansion of macro ‘sp’
      case sw_0LT: /*0<*/   CELL(sp)=-((INT32)CELL(sp)<0);break;
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:774:51: note: in expansion of macro ‘sp’
      case sw_0LT: /*0<*/   CELL(sp)=-((INT32)CELL(sp)<0);break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:774:51: note: in expansion of macro ‘sp’
      case sw_0LT: /*0<*/   CELL(sp)=-((INT32)CELL(sp)<0);break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:775:33: note: in expansion of macro ‘sp’
      case sw_0GT: /*0>*/   CELL(sp)=-((INT32)CELL(sp)>0);break;
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:775:33: note: in expansion of macro ‘sp’
      case sw_0GT: /*0>*/   CELL(sp)=-((INT32)CELL(sp)>0);break;
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:775:51: note: in expansion of macro ‘sp’
      case sw_0GT: /*0>*/   CELL(sp)=-((INT32)CELL(sp)>0);break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:775:51: note: in expansion of macro ‘sp’
      case sw_0GT: /*0>*/   CELL(sp)=-((INT32)CELL(sp)>0);break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:33: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:33: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:46: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:46: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:56: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:56: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:63: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:776:63: note: in expansion of macro ‘sp’
      case sw_equ: /*=*/    CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:34: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:34: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:47: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:47: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:57: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:57: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:64: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:777:64: note: in expansion of macro ‘sp’
      case sw_nequ: /*=*/    CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
                                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:778:38: note: in expansion of macro ‘sp’
      case sw_negate: /*negate*/ CELL(sp)=-CELL(sp);break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:778:38: note: in expansion of macro ‘sp’
      case sw_negate: /*negate*/ CELL(sp)=-CELL(sp);break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:778:48: note: in expansion of macro ‘sp’
      case sw_negate: /*negate*/ CELL(sp)=-CELL(sp);break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:778:48: note: in expansion of macro ‘sp’
      case sw_negate: /*negate*/ CELL(sp)=-CELL(sp);break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:779:38: note: in expansion of macro ‘sp’
      case sw_invert: /*invert*/ CELL(sp)=~CELL(sp);break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:779:38: note: in expansion of macro ‘sp’
      case sw_invert: /*invert*/ CELL(sp)=~CELL(sp);break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:779:48: note: in expansion of macro ‘sp’
      case sw_invert: /*invert*/ CELL(sp)=~CELL(sp);break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:779:48: note: in expansion of macro ‘sp’
      case sw_invert: /*invert*/ CELL(sp)=~CELL(sp);break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:780:42: note: in expansion of macro ‘sp’
      case sw_ummul: /* um* */ umul(&CELL(sp),&CELL(sp+4));break;
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:780:42: note: in expansion of macro ‘sp’
      case sw_ummul: /* um* */ umul(&CELL(sp),&CELL(sp+4));break;
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:780:52: note: in expansion of macro ‘sp’
      case sw_ummul: /* um* */ umul(&CELL(sp),&CELL(sp+4));break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:780:52: note: in expansion of macro ‘sp’
      case sw_ummul: /* um* */ umul(&CELL(sp),&CELL(sp+4));break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:781:36: note: in expansion of macro ‘sp’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:781:36: note: in expansion of macro ‘sp’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:781:45: note: in expansion of macro ‘CELL’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                             ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:781:50: note: in expansion of macro ‘sp’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:781:45: note: in expansion of macro ‘CELL’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                             ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:781:50: note: in expansion of macro ‘sp’
      case sw_Cload: /* C@ */  CELL(sp)=BYTE(CELL(sp));break;
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:782:36: note: in expansion of macro ‘sp’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:782:36: note: in expansion of macro ‘sp’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:782:46: note: in expansion of macro ‘CELL’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:782:51: note: in expansion of macro ‘sp’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:782:46: note: in expansion of macro ‘CELL’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:782:51: note: in expansion of macro ‘sp’
      case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:783:35: note: in expansion of macro ‘sp’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:783:35: note: in expansion of macro ‘sp’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:783:44: note: in expansion of macro ‘CELL’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:783:49: note: in expansion of macro ‘sp’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:783:44: note: in expansion of macro ‘CELL’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:783:49: note: in expansion of macro ‘sp’
      case sw_load: /* @ */   CELL(sp)=CELL(CELL(sp));break;
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:784:36: note: in expansion of macro ‘sp’
      case sw_1add: /* 1+ */   CELL(sp)++;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:784:36: note: in expansion of macro ‘sp’
      case sw_1add: /* 1+ */   CELL(sp)++;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:785:36: note: in expansion of macro ‘sp’
      case sw_2add: /* 2+ */   CELL(sp)+=2;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:785:36: note: in expansion of macro ‘sp’
      case sw_2add: /* 2+ */   CELL(sp)+=2;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:786:36: note: in expansion of macro ‘sp’
      case sw_1sub: /* 1- */   CELL(sp)--;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:786:36: note: in expansion of macro ‘sp’
      case sw_1sub: /* 1- */   CELL(sp)--;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:787:36: note: in expansion of macro ‘sp’
      case sw_2sub: /* 2+ */   CELL(sp)-=2;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:787:36: note: in expansion of macro ‘sp’
      case sw_2sub: /* 2+ */   CELL(sp)-=2;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:788:36: note: in expansion of macro ‘sp’
      case sw_2mul: /* 2* */   CELL(sp)*=2;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:788:36: note: in expansion of macro ‘sp’
      case sw_2mul: /* 2* */   CELL(sp)*=2;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:789:36: note: in expansion of macro ‘sp’
      case sw_2div: /* 2/ */   CELL(sp)=(INT32)CELL(sp)/2;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:789:36: note: in expansion of macro ‘sp’
      case sw_2div: /* 2/ */   CELL(sp)=(INT32)CELL(sp)/2;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:789:52: note: in expansion of macro ‘sp’
      case sw_2div: /* 2/ */   CELL(sp)=(INT32)CELL(sp)/2;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:789:52: note: in expansion of macro ‘sp’
      case sw_2div: /* 2/ */   CELL(sp)=(INT32)CELL(sp)/2;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:34: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:34: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:45: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:45: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:54: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:54: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:60: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:790:60: note: in expansion of macro ‘sp’
      case sw_add: /* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:34: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:34: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:46: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:46: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:50: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:791:50: note: in expansion of macro ‘sp’
      case sw_sub: /* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:34: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:34: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:52: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:52: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:68: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:68: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:74: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:792:74: note: in expansion of macro ‘sp’
      case sw_mul: /* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
                                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:793:37: note: in expansion of macro ‘sp’
      case sw_div: /* / */   if(CELL(sp))
                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:793:37: note: in expansion of macro ‘sp’
      case sw_div: /* / */   if(CELL(sp))
                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:19: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:19: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:37: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:37: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:55: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:55: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:59: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:794:59: note: in expansion of macro ‘sp’
            { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
                                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:795:19: note: in expansion of macro ‘sp’
            } CELL(sp+4)=(__u32)-1; sp+=4;break;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:795:19: note: in expansion of macro ‘sp’
            } CELL(sp+4)=(__u32)-1; sp+=4;break;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:795:36: note: in expansion of macro ‘sp’
            } CELL(sp+4)=(__u32)-1; sp+=4;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:795:36: note: in expansion of macro ‘sp’
            } CELL(sp+4)=(__u32)-1; sp+=4;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:796:37: note: in expansion of macro ‘sp’
      case sw_mod: /* mod */ if(CELL(sp))
                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:796:37: note: in expansion of macro ‘sp’
      case sw_mod: /* mod */ if(CELL(sp))
                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:12: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:12: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:30: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:30: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:48: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:48: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:52: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:797:52: note: in expansion of macro ‘sp’
     { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:798:12: note: in expansion of macro ‘sp’
     } CELL(sp+4)=0; sp+=4;break;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:798:12: note: in expansion of macro ‘sp’
     } CELL(sp+4)=0; sp+=4;break;
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:798:21: note: in expansion of macro ‘sp’
     } CELL(sp+4)=0; sp+=4;break;
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:798:21: note: in expansion of macro ‘sp’
     } CELL(sp+4)=0; sp+=4;break;
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:799:40: note: in expansion of macro ‘sp’
      case sw_celldiv: /* cell/ */ CELL(sp)>>=2;break;
                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:799:40: note: in expansion of macro ‘sp’
      case sw_celldiv: /* cell/ */ CELL(sp)>>=2;break;
                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:800:38: note: in expansion of macro ‘sp’
      case sw_cells: /* cells */ CELL(sp)<<=2;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:800:38: note: in expansion of macro ‘sp’
      case sw_cells: /* cells */ CELL(sp)<<=2;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:801:38: note: in expansion of macro ‘sp’
      case sw_cellp: /* cells */ CELL(sp)+=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:801:38: note: in expansion of macro ‘sp’
      case sw_cellp: /* cells */ CELL(sp)+=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:802:38: note: in expansion of macro ‘sp’
      case sw_cellm: /* cells */ CELL(sp)-=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:802:38: note: in expansion of macro ‘sp’
      case sw_cellm: /* cells */ CELL(sp)-=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:34: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:34: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:45: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:45: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:54: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:54: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:60: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:803:60: note: in expansion of macro ‘sp’
      case sw_and: /* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:33: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:33: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:44: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:44: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:53: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:53: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:59: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:804:59: note: in expansion of macro ‘sp’
      case sw_or: /* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
                                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:34: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:34: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:45: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:45: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:54: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:54: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:60: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:805:60: note: in expansion of macro ‘sp’
      case sw_xor: /* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
                                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:34: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:34: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:47: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:47: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:58: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:58: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:63: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:806:63: note: in expansion of macro ‘sp’
      case sw_uLT: /* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:33: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:33: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:53: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:53: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:71: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:71: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:76: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:807:76: note: in expansion of macro ‘sp’
      case sw_LT: /* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
                                                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:34: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:34: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:47: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:47: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:58: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:58: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:63: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:808:63: note: in expansion of macro ‘sp’
      case sw_uGT: /* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:32: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:32: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:52: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:52: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:70: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:70: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:75: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:809:75: note: in expansion of macro ‘sp’
      case sw_GT: /* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
                                                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:36: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:36: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:20: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                    ^
forth.c:810:46: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:51: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:20: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                    ^
forth.c:810:46: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:51: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:26: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                          ^
forth.c:810:57: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:62: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:26: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                          ^
forth.c:810:57: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:62: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:32: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                ^
forth.c:810:46: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:51: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:32: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                ^
forth.c:810:46: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:51: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:38: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                      ^
forth.c:810:57: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:62: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:38: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                      ^
forth.c:810:57: note: in expansion of macro ‘CELL’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:62: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:67: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:810:67: note: in expansion of macro ‘sp’
      case sw_umin: /* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
                                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:36: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:36: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:20: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                    ^
forth.c:811:46: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:51: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:20: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                    ^
forth.c:811:46: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:51: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:26: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                          ^
forth.c:811:57: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:62: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:26: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                          ^
forth.c:811:57: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:62: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:32: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                ^
forth.c:811:46: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:51: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:32: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                ^
forth.c:811:46: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                              ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:51: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:38: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                      ^
forth.c:811:57: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:62: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:38: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                      ^
forth.c:811:57: note: in expansion of macro ‘CELL’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                         ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:62: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:67: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:811:67: note: in expansion of macro ‘sp’
      case sw_umax: /* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
                                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:34: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:34: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:20: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                    ^
forth.c:812:51: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:56: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:20: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                    ^
forth.c:812:51: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:56: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:26: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                          ^
forth.c:812:69: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:74: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:26: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                          ^
forth.c:812:69: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:74: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:32: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                ^
forth.c:812:51: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:56: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:32: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                ^
forth.c:812:51: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:56: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:21:38: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                      ^
forth.c:812:69: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:74: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:21:38: note: in definition of macro ‘MIN’
 #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
                                      ^
forth.c:812:69: note: in expansion of macro ‘CELL’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:74: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:79: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:812:79: note: in expansion of macro ‘sp’
      case sw_min: /* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:34: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:34: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:20: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                    ^
forth.c:813:51: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:56: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:20: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                    ^
forth.c:813:51: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:56: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:26: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                          ^
forth.c:813:69: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:74: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:26: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                          ^
forth.c:813:69: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:74: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:32: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                ^
forth.c:813:51: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:56: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:32: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                ^
forth.c:813:51: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                   ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:56: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:22:38: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                      ^
forth.c:813:69: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:74: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:22:38: note: in definition of macro ‘MAX’
 #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))
                                      ^
forth.c:813:69: note: in expansion of macro ‘CELL’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:74: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:79: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:813:79: note: in expansion of macro ‘sp’
      case sw_max: /* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
                                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:36: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:36: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:49: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:49: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:53: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:814:53: note: in expansion of macro ‘sp’
      case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:36: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:36: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:49: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:49: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:53: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:815:53: note: in expansion of macro ‘sp’
      case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:816:39: note: in expansion of macro ‘sp’
      case sw_umSmod:/*um/mod*/if(CELL(sp)<=CELL(sp+4)) { /*overflow */
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:816:39: note: in expansion of macro ‘sp’
      case sw_umSmod:/*um/mod*/if(CELL(sp)<=CELL(sp+4)) { /*overflow */
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:816:49: note: in expansion of macro ‘sp’
      case sw_umSmod:/*um/mod*/if(CELL(sp)<=CELL(sp+4)) { /*overflow */
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:816:49: note: in expansion of macro ‘sp’
      case sw_umSmod:/*um/mod*/if(CELL(sp)<=CELL(sp+4)) { /*overflow */
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:13: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:13: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:24: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:24: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:43: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:818:43: note: in expansion of macro ‘sp’
             sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:36: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:36: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:46: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:46: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:58: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:820:58: note: in expansion of macro ‘sp’
                         udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:821:25: note: in expansion of macro ‘sp’
                         sp+=4;
                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:821:25: note: in expansion of macro ‘sp’
                         sp+=4;
                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:823:52: note: in expansion of macro ‘sp’
      case sw_addcy: /* +cy */ { __u32 sum; if(CELL(sp)) { /* carry in */
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:823:52: note: in expansion of macro ‘sp’
      case sw_addcy: /* +cy */ { __u32 sum; if(CELL(sp)) { /* carry in */
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:824:36: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4)+1;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:824:36: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4)+1;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:824:47: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4)+1;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:824:47: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4)+1;
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:825:27: note: in expansion of macro ‘sp’
                           sp+=4;
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:825:27: note: in expansion of macro ‘sp’
                           sp+=4;
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:826:32: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<=CELL(sp));
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:826:32: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<=CELL(sp));
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:826:47: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<=CELL(sp));
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:826:47: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<=CELL(sp));
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:827:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)=sum;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:827:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)=sum;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:829:36: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4);
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:829:36: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4);
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:829:47: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4);
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:829:47: note: in expansion of macro ‘sp’
                           sum=CELL(sp+8)+CELL(sp+4);
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:830:27: note: in expansion of macro ‘sp’
                           sp+=4;
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:830:27: note: in expansion of macro ‘sp’
                           sp+=4;
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:831:32: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<CELL(sp));
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:831:32: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<CELL(sp));
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:831:46: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<CELL(sp));
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:831:46: note: in expansion of macro ‘sp’
                           CELL(sp)=(sum<CELL(sp));
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:832:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)=sum;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:832:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)=sum;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:836:38: note: in expansion of macro ‘sp’
            { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:836:38: note: in expansion of macro ‘sp’
            { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:836:61: note: in expansion of macro ‘sp’
            { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
                                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:836:61: note: in expansion of macro ‘sp’
            { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
                                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:837:26: note: in expansion of macro ‘sp’
             ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:837:26: note: in expansion of macro ‘sp’
             ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:837:51: note: in expansion of macro ‘sp’
             ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
                                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:837:51: note: in expansion of macro ‘sp’
             ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:838:23: note: in expansion of macro ‘sp’
                  CELL(sp+8)=sum>>32;
                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:838:23: note: in expansion of macro ‘sp’
                  CELL(sp+8)=sum>>32;
                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:839:23: note: in expansion of macro ‘sp’
                  CELL(sp+12)=sum; sp+=8;break;
                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:839:23: note: in expansion of macro ‘sp’
                  CELL(sp+12)=sum; sp+=8;break;
                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:839:35: note: in expansion of macro ‘sp’
                  CELL(sp+12)=sum; sp+=8;break;
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:839:35: note: in expansion of macro ‘sp’
                  CELL(sp+12)=sum; sp+=8;break;
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:841:38: note: in expansion of macro ‘sp’
      case sw_scan1:/*scan1*/ if(CELL(sp)){ /* scan from right */
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:841:38: note: in expansion of macro ‘sp’
      case sw_scan1:/*scan1*/ if(CELL(sp)){ /* scan from right */
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:842:43: note: in expansion of macro ‘sp’
                          t=0;while(!(CELL(sp+4)&1) && t<32) {
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:842:43: note: in expansion of macro ‘sp’
                          t=0;while(!(CELL(sp+4)&1) && t<32) {
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:843:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)>>=1;t++;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:843:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)>>=1;t++;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:846:43: note: in expansion of macro ‘sp’
                          t=0;while(!(CELL(sp+4)&0x80000000) && t<32) {
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:846:43: note: in expansion of macro ‘sp’
                          t=0;while(!(CELL(sp+4)&0x80000000) && t<32) {
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:847:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)<<=1;t++;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:847:32: note: in expansion of macro ‘sp’
                           CELL(sp+4)<<=1;t++;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:849:25: note: in expansion of macro ‘sp’
                        }sp+=4;CELL(sp)=t;break;
                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:849:25: note: in expansion of macro ‘sp’
                        }sp+=4;CELL(sp)=t;break;
                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:849:36: note: in expansion of macro ‘sp’
                        }sp+=4;CELL(sp)=t;break;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:849:36: note: in expansion of macro ‘sp’
                        }sp+=4;CELL(sp)=t;break;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:850:30: note: in expansion of macro ‘sp’
      case sw_drop:/* drop */ sp+=4;break;
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:850:30: note: in expansion of macro ‘sp’
      case sw_drop:/* drop */ sp+=4;break;
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:851:31: note: in expansion of macro ‘sp’
      case sw_2drop:/* drop */ sp+=8;break;
                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:851:31: note: in expansion of macro ‘sp’
      case sw_2drop:/* drop */ sp+=8;break;
                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:852:33: note: in expansion of macro ‘CELL’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:852:38: note: in expansion of macro ‘sp’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:852:33: note: in expansion of macro ‘CELL’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:852:38: note: in expansion of macro ‘sp’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:852:53: note: in expansion of macro ‘sp’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:852:53: note: in expansion of macro ‘sp’
      case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:853:33: note: in expansion of macro ‘CELL’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:853:38: note: in expansion of macro ‘sp’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:853:33: note: in expansion of macro ‘CELL’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:853:38: note: in expansion of macro ‘sp’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:853:45: note: in expansion of macro ‘sp’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:853:45: note: in expansion of macro ‘sp’
      case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:854:33: note: in expansion of macro ‘CELL’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:38: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:854:33: note: in expansion of macro ‘CELL’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:38: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:48: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:48: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:54: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:854:54: note: in expansion of macro ‘sp’
      case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:855:37: note: in expansion of macro ‘CELL’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:42: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:855:37: note: in expansion of macro ‘CELL’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:42: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:53: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:53: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:59: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:855:59: note: in expansion of macro ‘sp’
      case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
                                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:856:33: note: in expansion of macro ‘CELL’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:38: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:856:33: note: in expansion of macro ‘CELL’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                 ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:38: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:48: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:48: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:54: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:856:54: note: in expansion of macro ‘sp’
      case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:857:34: note: in expansion of macro ‘CELL’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:39: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:89:34: note: in definition of macro ‘WCELL’
 #define WCELL(reg) (*(__u16*)v2r(reg))
                                  ^
forth.c:857:34: note: in expansion of macro ‘CELL’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:39: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:49: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:49: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:55: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:857:55: note: in expansion of macro ‘sp’
      case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
                                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:858:36: note: in expansion of macro ‘CELL’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                    ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:41: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:858:36: note: in expansion of macro ‘CELL’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                    ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:41: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:52: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:52: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:58: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:858:58: note: in expansion of macro ‘sp’
      case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:29: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:29: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:42: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:42: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:859:52: note: in expansion of macro ‘CELL’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                                    ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:57: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:859:52: note: in expansion of macro ‘CELL’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                                    ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:859:57: note: in expansion of macro ‘sp’
      case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:860:46: note: in expansion of macro ‘sp’
      case sw_2swap:/* 2swap */    dtmp=DCELL(sp);
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:860:46: note: in expansion of macro ‘sp’
      case sw_2swap:/* 2swap */    dtmp=DCELL(sp);
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:861:11: note: in expansion of macro ‘sp’
     DCELL(sp)=DCELL(sp+8);
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:861:11: note: in expansion of macro ‘sp’
     DCELL(sp)=DCELL(sp+8);
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:861:21: note: in expansion of macro ‘sp’
     DCELL(sp)=DCELL(sp+8);
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:861:21: note: in expansion of macro ‘sp’
     DCELL(sp)=DCELL(sp+8);
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:862:11: note: in expansion of macro ‘sp’
     DCELL(sp+8)=dtmp;break;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:91:34: note: in definition of macro ‘DCELL’
 #define DCELL(reg) (*(__u64*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:862:11: note: in expansion of macro ‘sp’
     DCELL(sp+8)=dtmp;break;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:37: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:37: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:54: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:54: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:60: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:863:60: note: in expansion of macro ‘sp’
      case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
                                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:864:30: note: in expansion of macro ‘sp’
                         CELL(sp)=t;break;
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:864:30: note: in expansion of macro ‘sp’
                         CELL(sp)=t;break;
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:866:41: note: in expansion of macro ‘sp’
      case sw_VFMAdr:/* VFMADR */        sp-=4;
                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:866:41: note: in expansion of macro ‘sp’
      case sw_VFMAdr:/* VFMADR */        sp-=4;
                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:867:11: note: in expansion of macro ‘sp’
      CELL(sp)= (__u32)&mem; break;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:867:11: note: in expansion of macro ‘sp’
      CELL(sp)= (__u32)&mem; break;
           ^
forth.c:867:16: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
      CELL(sp)= (__u32)&mem; break;
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:870:16: note: in expansion of macro ‘sp’
       tmp=CELL(sp);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:870:16: note: in expansion of macro ‘sp’
       tmp=CELL(sp);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:871:12: note: in expansion of macro ‘sp’
       CELL(sp)=  *(__u32*)tmp; break;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:871:12: note: in expansion of macro ‘sp’
       CELL(sp)=  *(__u32*)tmp; break;
            ^
forth.c:871:19: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       CELL(sp)=  *(__u32*)tmp; break;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:874:22: note: in expansion of macro ‘sp’
       *(__u32*)(CELL(sp))=CELL(sp+4);
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:874:22: note: in expansion of macro ‘sp’
       *(__u32*)(CELL(sp))=CELL(sp+4);
                      ^
forth.c:874:8: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       *(__u32*)(CELL(sp))=CELL(sp+4);
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:874:32: note: in expansion of macro ‘sp’
       *(__u32*)(CELL(sp))=CELL(sp+4);
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:874:32: note: in expansion of macro ‘sp’
       *(__u32*)(CELL(sp))=CELL(sp+4);
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:875:7: note: in expansion of macro ‘sp’
       sp+=8;break;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:875:7: note: in expansion of macro ‘sp’
       sp+=8;break;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:878:16: note: in expansion of macro ‘sp’
       tmp=CELL(sp);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:878:16: note: in expansion of macro ‘sp’
       tmp=CELL(sp);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:879:12: note: in expansion of macro ‘sp’
       CELL(sp)= (__u32) *(__u8*)tmp; break;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:879:12: note: in expansion of macro ‘sp’
       CELL(sp)= (__u32) *(__u8*)tmp; break;
            ^
forth.c:879:26: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       CELL(sp)= (__u32) *(__u8*)tmp; break;
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:885:24: note: in expansion of macro ‘sp’
      BB= (__u8*)  CELL(sp+4);
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:885:24: note: in expansion of macro ‘sp’
      BB= (__u8*)  CELL(sp+4);
                        ^
forth.c:885:10: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
      BB= (__u8*)  CELL(sp+4);
          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:886:15: note: in expansion of macro ‘sp’
      len=CELL(sp);
               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:886:15: note: in expansion of macro ‘sp’
      len=CELL(sp);
               ^
forth.c:890:6: warning: format ‘%X’ expects argument of type ‘unsigned int’, but argument 3 has type ‘__u8 * {aka unsigned char *}’ [-Wformat=]
      "%X\t%2X %2X %2X %2X %2X %2X %2X %2X  %2X %2X %2X %2X %2X %2X %2X %2X | ",
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:894:19: note: in expansion of macro ‘OUTPUT’
      ttwrite(CELL(OUTPUT),buffer, t  );
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:894:19: note: in expansion of macro ‘OUTPUT’
      ttwrite(CELL(OUTPUT),buffer, t  );
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:896:47: note: in expansion of macro ‘OUTPUT’
          {  if(  BB[t]<' ')      ttwrite(CELL(OUTPUT),".", 1  );
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:896:47: note: in expansion of macro ‘OUTPUT’
          {  if(  BB[t]<' ')      ttwrite(CELL(OUTPUT),".", 1  );
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:897:29: note: in expansion of macro ‘OUTPUT’
          else  ttwrite(CELL(OUTPUT),&BB[t], 1  );
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:897:29: note: in expansion of macro ‘OUTPUT’
          else  ttwrite(CELL(OUTPUT),&BB[t], 1  );
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:898:26: note: in expansion of macro ‘OUTPUT’
          }  ttwrite(CELL(OUTPUT),"\n", 1  );
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:898:26: note: in expansion of macro ‘OUTPUT’
          }  ttwrite(CELL(OUTPUT),"\n", 1  );
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:902:17: note: in expansion of macro ‘sp’
          }      sp+=8;
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:902:17: note: in expansion of macro ‘sp’
          }      sp+=8;
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:905:39: note: in expansion of macro ‘sp’
      case sw_qdup:/* dup  */  if(CELL(sp)==0)break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:905:39: note: in expansion of macro ‘sp’
      case sw_qdup:/* dup  */  if(CELL(sp)==0)break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:29: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:29: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:40: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:40: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:49: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:906:49: note: in expansion of macro ‘sp’
      case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
                                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:30: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:30: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:41: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:41: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:50: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:907:50: note: in expansion of macro ‘sp’
      case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:30: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:30: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:41: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:41: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:50: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:908:50: note: in expansion of macro ‘sp’
      case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:32: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:32: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:43: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:43: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:52: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:910:52: note: in expansion of macro ‘sp’
      case sw_2over:/* 2over */ sp-=4;CELL(sp)=CELL(sp+12);
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:5: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:5: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:16: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:16: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:25: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:911:25: note: in expansion of macro ‘sp’
     sp-=4;CELL(sp)=CELL(sp+12);break;
                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:913:34: note: in expansion of macro ‘sp’
      case sw_rload: /* r@   */   sp-=4;CELL(sp)=CELL(rp);break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:913:34: note: in expansion of macro ‘sp’
      case sw_rload: /* r@   */   sp-=4;CELL(sp)=CELL(rp);break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:913:45: note: in expansion of macro ‘sp’
      case sw_rload: /* r@   */   sp-=4;CELL(sp)=CELL(rp);break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:913:45: note: in expansion of macro ‘sp’
      case sw_rload: /* r@   */   sp-=4;CELL(sp)=CELL(rp);break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:914:32: note: in expansion of macro ‘sp’
      case sw_rGT: /* r>   */   sp-=4;CELL(sp)=CELL(rp);
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:914:32: note: in expansion of macro ‘sp’
      case sw_rGT: /* r>   */   sp-=4;CELL(sp)=CELL(rp);
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:914:43: note: in expansion of macro ‘sp’
      case sw_rGT: /* r>   */   sp-=4;CELL(sp)=CELL(rp);
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:914:43: note: in expansion of macro ‘sp’
      case sw_rGT: /* r>   */   sp-=4;CELL(sp)=CELL(rp);
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:916:56: note: in expansion of macro ‘sp’
      case sw_dupGTr: /* dup>r   */ rp-=4;CELL(rp)=CELL(sp);break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:916:56: note: in expansion of macro ‘sp’
      case sw_dupGTr: /* dup>r   */ rp-=4;CELL(rp)=CELL(sp);break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:917:52: note: in expansion of macro ‘sp’
      case sw_GTr: /* >r   */   rp-=4;CELL(rp)=CELL(sp);sp+=4;break;
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:917:52: note: in expansion of macro ‘sp’
      case sw_GTr: /* >r   */   rp-=4;CELL(rp)=CELL(sp);sp+=4;break;
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:917:56: note: in expansion of macro ‘sp’
      case sw_GTr: /* >r   */   rp-=4;CELL(rp)=CELL(sp);sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:917:56: note: in expansion of macro ‘sp’
      case sw_GTr: /* >r   */   rp-=4;CELL(rp)=CELL(sp);sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:918:35: note: in expansion of macro ‘sp’
      case sw_2rload: /* 2r@   */  sp-=8;CELL(sp)=CELL(rp);
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:918:35: note: in expansion of macro ‘sp’
      case sw_2rload: /* 2r@   */  sp-=8;CELL(sp)=CELL(rp);
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:918:46: note: in expansion of macro ‘sp’
      case sw_2rload: /* 2r@   */  sp-=8;CELL(sp)=CELL(rp);
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:918:46: note: in expansion of macro ‘sp’
      case sw_2rload: /* 2r@   */  sp-=8;CELL(sp)=CELL(rp);
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:919:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=CELL(rp+4);break;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:919:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=CELL(rp+4);break;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:920:33: note: in expansion of macro ‘sp’
      case sw_2rGT: /* 2r>   */  sp-=8;CELL(sp)=CELL(rp);
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:920:33: note: in expansion of macro ‘sp’
      case sw_2rGT: /* 2r>   */  sp-=8;CELL(sp)=CELL(rp);
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:920:44: note: in expansion of macro ‘sp’
      case sw_2rGT: /* 2r>   */  sp-=8;CELL(sp)=CELL(rp);
                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:920:44: note: in expansion of macro ‘sp’
      case sw_2rGT: /* 2r>   */  sp-=8;CELL(sp)=CELL(rp);
                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:921:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=CELL(rp+4);
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:921:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=CELL(rp+4);
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:923:53: note: in expansion of macro ‘sp’
      case sw_2GTr: /* 2>r   */  rp-=8;CELL(rp)=CELL(sp);
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:923:53: note: in expansion of macro ‘sp’
      case sw_2GTr: /* 2>r   */  rp-=8;CELL(rp)=CELL(sp);
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:924:19: note: in expansion of macro ‘sp’
   CELL(rp+4)=CELL(sp+4);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:924:19: note: in expansion of macro ‘sp’
   CELL(rp+4)=CELL(sp+4);
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:925:2: note: in expansion of macro ‘sp’
  sp+=8;break;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:925:2: note: in expansion of macro ‘sp’
  sp+=8;break;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:927:7: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=ip;ip+=4;break;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:927:7: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=ip;ip+=4;break;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:927:18: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=ip;ip+=4;break;
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:927:18: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=ip;ip+=4;break;
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:929:7: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=CELL(ip);ip+=4;break;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:929:7: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=CELL(ip);ip+=4;break;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:929:18: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=CELL(ip);ip+=4;break;
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:929:18: note: in expansion of macro ‘sp’
       sp-=4;CELL(sp)=CELL(ip);ip+=4;break;
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:932:42: note: in expansion of macro ‘sp’
      case sw_comp:/* , */       COM(CELL(sp));       sp+=4;break;
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:932:42: note: in expansion of macro ‘sp’
      case sw_comp:/* , */       COM(CELL(sp));       sp+=4;break;
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:932:54: note: in expansion of macro ‘sp’
      case sw_comp:/* , */       COM(CELL(sp));       sp+=4;break;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:932:54: note: in expansion of macro ‘sp’
      case sw_comp:/* , */       COM(CELL(sp));       sp+=4;break;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:933:44: note: in expansion of macro ‘sp’
      case sw_Wcomp:/* W, */      WCOM(CELL(sp));       sp+=4;break;
                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:933:44: note: in expansion of macro ‘sp’
      case sw_Wcomp:/* W, */      WCOM(CELL(sp));       sp+=4;break;
                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:933:56: note: in expansion of macro ‘sp’
      case sw_Wcomp:/* W, */      WCOM(CELL(sp));       sp+=4;break;
                                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:933:56: note: in expansion of macro ‘sp’
      case sw_Wcomp:/* W, */      WCOM(CELL(sp));       sp+=4;break;
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:934:45: note: in expansion of macro ‘sp’
      case sw_Ccomp:/* C, */       CCOM(CELL(sp));       sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:934:45: note: in expansion of macro ‘sp’
      case sw_Ccomp:/* C, */       CCOM(CELL(sp));       sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:934:57: note: in expansion of macro ‘sp’
      case sw_Ccomp:/* C, */       CCOM(CELL(sp));       sp+=4;break;
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:934:57: note: in expansion of macro ‘sp’
      case sw_Ccomp:/* C, */       CCOM(CELL(sp));       sp+=4;break;
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:935:34: note: in expansion of macro ‘HERE’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:935:34: note: in expansion of macro ‘HERE’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:935:45: note: in expansion of macro ‘sp’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:935:45: note: in expansion of macro ‘sp’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:935:50: note: in expansion of macro ‘sp’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:935:50: note: in expansion of macro ‘sp’
      case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:936:44: note: in expansion of macro ‘sp’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:936:44: note: in expansion of macro ‘sp’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:936:53: note: in expansion of macro ‘CELL’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:936:58: note: in expansion of macro ‘sp’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:936:53: note: in expansion of macro ‘CELL’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:936:58: note: in expansion of macro ‘sp’
      case sw_perform: /* perform */   CELL(sp)=CELL(CELL(sp));
                                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:938:34: note: in expansion of macro ‘sp’
       rp-=4;CELL(rp)=ip; ip=CELL(sp); sp+=4;break;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:938:34: note: in expansion of macro ‘sp’
       rp-=4;CELL(rp)=ip; ip=CELL(sp); sp+=4;break;
                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:938:39: note: in expansion of macro ‘sp’
       rp-=4;CELL(rp)=ip; ip=CELL(sp); sp+=4;break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:938:39: note: in expansion of macro ‘sp’
       rp-=4;CELL(rp)=ip; ip=CELL(sp); sp+=4;break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:940:20: note: in expansion of macro ‘sp’
       Compile(CELL(sp));
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:940:20: note: in expansion of macro ‘sp’
       Compile(CELL(sp));
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:941:7: note: in expansion of macro ‘sp’
       sp+=4;break;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:941:7: note: in expansion of macro ‘sp’
       sp+=4;break;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:945:39: note: in expansion of macro ‘sp’
      case sw_FromName:/*return*/ CELL(sp)=FromName(CELL(sp));break;
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:945:39: note: in expansion of macro ‘sp’
      case sw_FromName:/*return*/ CELL(sp)=FromName(CELL(sp));break;
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:945:57: note: in expansion of macro ‘sp’
      case sw_FromName:/*return*/ CELL(sp)=FromName(CELL(sp));break;
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:945:57: note: in expansion of macro ‘sp’
      case sw_FromName:/*return*/ CELL(sp)=FromName(CELL(sp));break;
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:32: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:32: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:43: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:43: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:47: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:948:47: note: in expansion of macro ‘sp’
      case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:949:30: note: in expansion of macro ‘sp’
      case sw_spST: /* sp! */ sp=CELL(sp);break;
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:949:30: note: in expansion of macro ‘sp’
      case sw_spST: /* sp! */ sp=CELL(sp);break;
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:949:38: note: in expansion of macro ‘sp’
      case sw_spST: /* sp! */ sp=CELL(sp);break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:949:38: note: in expansion of macro ‘sp’
      case sw_spST: /* sp! */ sp=CELL(sp);break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:950:32: note: in expansion of macro ‘sp’
      case sw_rpload: /* rp@ */ sp-=4;CELL(sp)=rp;break;
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:950:32: note: in expansion of macro ‘sp’
      case sw_rpload: /* rp@ */ sp-=4;CELL(sp)=rp;break;
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:950:43: note: in expansion of macro ‘sp’
      case sw_rpload: /* rp@ */ sp-=4;CELL(sp)=rp;break;
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:950:43: note: in expansion of macro ‘sp’
      case sw_rpload: /* rp@ */ sp-=4;CELL(sp)=rp;break;
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:951:38: note: in expansion of macro ‘sp’
      case sw_rpST: /* rp! */ rp=CELL(sp);sp+=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:951:38: note: in expansion of macro ‘sp’
      case sw_rpST: /* rp! */ rp=CELL(sp);sp+=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:951:42: note: in expansion of macro ‘sp’
      case sw_rpST: /* rp! */ rp=CELL(sp);sp+=4;break;
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:951:42: note: in expansion of macro ‘sp’
      case sw_rpST: /* rp! */ rp=CELL(sp);sp+=4;break;
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:957:29: note: in expansion of macro ‘HANDLER’
             CELL(rp+8)=CELL(HANDLER);
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:957:29: note: in expansion of macro ‘HANDLER’
             CELL(rp+8)=CELL(HANDLER);
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:958:24: note: in expansion of macro ‘sp’
             CELL(rp+4)=sp;
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:958:24: note: in expansion of macro ‘sp’
             CELL(rp+4)=sp;
                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:960:18: note: in expansion of macro ‘HANDLER’
             CELL(HANDLER)=rp;
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:960:18: note: in expansion of macro ‘HANDLER’
             CELL(HANDLER)=rp;
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:961:19: note: in expansion of macro ‘sp’
           ip=CELL(sp);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:961:19: note: in expansion of macro ‘sp’
           ip=CELL(sp);
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:962:11: note: in expansion of macro ‘sp’
           sp+=4;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:962:11: note: in expansion of macro ‘sp’
           sp+=4;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:965:16: note: in expansion of macro ‘HANDLER’
           CELL(HANDLER)=CELL(rp+8-4);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:965:16: note: in expansion of macro ‘HANDLER’
           CELL(HANDLER)=CELL(rp+8-4);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:967:11: note: in expansion of macro ‘sp’
           sp-=4;CELL(sp)=0;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:967:11: note: in expansion of macro ‘sp’
           sp-=4;CELL(sp)=0;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:967:22: note: in expansion of macro ‘sp’
           sp-=4;CELL(sp)=0;
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:967:22: note: in expansion of macro ‘sp’
           sp-=4;CELL(sp)=0;
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:971:22: note: in expansion of macro ‘sp’
            if( !CELL(sp)) { sp+=4; break; }
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:971:22: note: in expansion of macro ‘sp’
            if( !CELL(sp)) { sp+=4; break; }
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:971:29: note: in expansion of macro ‘sp’
            if( !CELL(sp)) { sp+=4; break; }
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:971:29: note: in expansion of macro ‘sp’
            if( !CELL(sp)) { sp+=4; break; }
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:972:22: note: in expansion of macro ‘HANDLER’
            if( !CELL(HANDLER)) {for(;;);}
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:972:22: note: in expansion of macro ‘HANDLER’
            if( !CELL(HANDLER)) {for(;;);}
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:973:32: note: in expansion of macro ‘sp’
            { __u32 savesp=CELL(sp);
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:973:32: note: in expansion of macro ‘sp’
            { __u32 savesp=CELL(sp);
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:974:22: note: in expansion of macro ‘HANDLER’
              rp=CELL(HANDLER);
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:974:22: note: in expansion of macro ‘HANDLER’
              rp=CELL(HANDLER);
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:975:19: note: in expansion of macro ‘HANDLER’
              CELL(HANDLER)=CELL(rp+8);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:975:19: note: in expansion of macro ‘HANDLER’
              CELL(HANDLER)=CELL(rp+8);
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:976:14: note: in expansion of macro ‘sp’
              sp=CELL(rp+4);
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:976:14: note: in expansion of macro ‘sp’
              sp=CELL(rp+4);
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:977:19: note: in expansion of macro ‘sp’
              CELL(sp)=savesp;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:977:19: note: in expansion of macro ‘sp’
              CELL(sp)=savesp;
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:986:15: note: in expansion of macro ‘sp’
       if(CELL(sp)) ip+=4; else ip= CELL(ip); sp+=4; break;
               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:986:15: note: in expansion of macro ‘sp’
       if(CELL(sp)) ip+=4; else ip= CELL(ip); sp+=4; break;
               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:986:46: note: in expansion of macro ‘sp’
       if(CELL(sp)) ip+=4; else ip= CELL(ip); sp+=4; break;
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:986:46: note: in expansion of macro ‘sp’
       if(CELL(sp)) ip+=4; else ip= CELL(ip); sp+=4; break;
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:999:34: note: in expansion of macro ‘sp’
      case sw_key: /*read char */ sp-=4;
                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:999:34: note: in expansion of macro ‘sp’
      case sw_key: /*read char */ sp-=4;
                                  ^
forth.c:1000:18: warning: implicit declaration of function ‘ttgetch’ [-Wimplicit-function-declaration]
      tmp =(__u32)ttgetch();
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1001:11: note: in expansion of macro ‘sp’
      CELL(sp)= tmp;
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1001:11: note: in expansion of macro ‘sp’
      CELL(sp)= tmp;
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1005:19: note: in expansion of macro ‘OUTPUT’
      ttwrite(CELL(OUTPUT),&BYTE(sp),1);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1005:19: note: in expansion of macro ‘OUTPUT’
      ttwrite(CELL(OUTPUT),&BYTE(sp),1);
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1005:33: note: in expansion of macro ‘sp’
      ttwrite(CELL(OUTPUT),&BYTE(sp),1);
                                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1005:33: note: in expansion of macro ‘sp’
      ttwrite(CELL(OUTPUT),&BYTE(sp),1);
                                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1006:7: note: in expansion of macro ‘sp’
       sp+=4;break;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1006:7: note: in expansion of macro ‘sp’
       sp+=4;break;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1007:35: note: in expansion of macro ‘sp’
      case sw_keyq: /*check key */ sp-=4;CELL(sp)=-(INT32)ttkbhit();break;
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1007:35: note: in expansion of macro ‘sp’
      case sw_keyq: /*check key */ sp-=4;CELL(sp)=-(INT32)ttkbhit();break;
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1007:46: note: in expansion of macro ‘sp’
      case sw_keyq: /*check key */ sp-=4;CELL(sp)=-(INT32)ttkbhit();break;
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1007:46: note: in expansion of macro ‘sp’
      case sw_keyq: /*check key */ sp-=4;CELL(sp)=-(INT32)ttkbhit();break;
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1009:19: note: in expansion of macro ‘sp’
          if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1009:19: note: in expansion of macro ‘sp’
          if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1009:30: note: in expansion of macro ‘sp’
          if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1009:30: note: in expansion of macro ‘sp’
          if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1010:24: note: in expansion of macro ‘OUTPUT’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1010:24: note: in expansion of macro ‘OUTPUT’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1010:38: note: in expansion of macro ‘CELL’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1010:43: note: in expansion of macro ‘sp’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1010:38: note: in expansion of macro ‘CELL’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1010:43: note: in expansion of macro ‘sp’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1010:55: note: in expansion of macro ‘sp’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1010:55: note: in expansion of macro ‘sp’
           ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
                                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1011:9: note: in expansion of macro ‘sp’
         sp+=8;break;
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1011:9: note: in expansion of macro ‘sp’
         sp+=8;break;
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1015:18: note: in expansion of macro ‘sp’
        tmp= CELL(sp);
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1015:18: note: in expansion of macro ‘sp’
        tmp= CELL(sp);
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1018:20: note: in expansion of macro ‘OUTPUT’
       ttwrite(CELL(OUTPUT),buffer, t  );
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1018:20: note: in expansion of macro ‘OUTPUT’
       ttwrite(CELL(OUTPUT),buffer, t  );
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1020:6: note: in expansion of macro ‘sp’
      sp+=4;break;
      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1020:6: note: in expansion of macro ‘sp’
      sp+=4;break;
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1023:39: note: in expansion of macro ‘sp’
          sprintf (buffer, "%d ", CELL(sp));
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1023:39: note: in expansion of macro ‘sp’
          sprintf (buffer, "%d ", CELL(sp));
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1025:6: note: in expansion of macro ‘sp’
      sp+=4;break;
      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1025:6: note: in expansion of macro ‘sp’
      sp+=4;break;
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1027:31: note: in expansion of macro ‘sp’
      case sw_count: /*count*/ sp-=4;
                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1027:31: note: in expansion of macro ‘sp’
      case sw_count: /*count*/ sp-=4;
                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1028:12: note: in expansion of macro ‘sp’
       CELL(sp)= BYTE(CELL(sp+4)); 
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1028:12: note: in expansion of macro ‘sp’
       CELL(sp)= BYTE(CELL(sp+4)); 
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1028:22: note: in expansion of macro ‘CELL’
       CELL(sp)= BYTE(CELL(sp+4)); 
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1028:27: note: in expansion of macro ‘sp’
       CELL(sp)= BYTE(CELL(sp+4)); 
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1028:22: note: in expansion of macro ‘CELL’
       CELL(sp)= BYTE(CELL(sp+4)); 
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1028:27: note: in expansion of macro ‘sp’
       CELL(sp)= BYTE(CELL(sp+4)); 
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1029:12: note: in expansion of macro ‘sp’
       CELL(sp+4)++; break;
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1029:12: note: in expansion of macro ‘sp’
       CELL(sp+4)++; break;
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1030:29: note: in expansion of macro ‘sp’
      case sw_cstr: /*(C")*/ sp-=4;  CELL(sp)=ip; t=BYTE(ip++);
                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1030:29: note: in expansion of macro ‘sp’
      case sw_cstr: /*(C")*/ sp-=4;  CELL(sp)=ip; t=BYTE(ip++);
                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1030:42: note: in expansion of macro ‘sp’
      case sw_cstr: /*(C")*/ sp-=4;  CELL(sp)=ip; t=BYTE(ip++);
                                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1030:42: note: in expansion of macro ‘sp’
      case sw_cstr: /*(C")*/ sp-=4;  CELL(sp)=ip; t=BYTE(ip++);
                                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:28: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:28: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:54: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:54: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:66: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1032:66: note: in expansion of macro ‘sp’
      case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
                                                                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1035:27: note: in expansion of macro ‘sp’
    StrComp( (__u8 *)(CELL(sp+4)),CELL(sp));
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1035:27: note: in expansion of macro ‘sp’
    StrComp( (__u8 *)(CELL(sp+4)),CELL(sp));
                           ^
forth.c:1035:13: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
    StrComp( (__u8 *)(CELL(sp+4)),CELL(sp));
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1035:39: note: in expansion of macro ‘sp’
    StrComp( (__u8 *)(CELL(sp+4)),CELL(sp));
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1035:39: note: in expansion of macro ‘sp’
    StrComp( (__u8 *)(CELL(sp+4)),CELL(sp));
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1036:4: note: in expansion of macro ‘sp’
    sp+=8;break;
    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1036:4: note: in expansion of macro ‘sp’
    sp+=8;break;
    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1040:21: note: in expansion of macro ‘sp’
           len1=CELL(sp);    addr1=CELL(sp+4);
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1040:21: note: in expansion of macro ‘sp’
           len1=CELL(sp);    addr1=CELL(sp+4);
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1040:40: note: in expansion of macro ‘sp’
           len1=CELL(sp);    addr1=CELL(sp+4);
                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1040:40: note: in expansion of macro ‘sp’
           len1=CELL(sp);    addr1=CELL(sp+4);
                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:21: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:21: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:40: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:40: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:48: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1041:48: note: in expansion of macro ‘sp’
           len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
                                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1042:38: note: in expansion of macro ‘sp’
                if(len1!=len2) { CELL(sp)=len1-len2; break; }
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1042:38: note: in expansion of macro ‘sp’
                if(len1!=len2) { CELL(sp)=len1-len2; break; }
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1045:21: note: in expansion of macro ‘sp’
                CELL(sp)=memcmp(&BYTE(addr1),&BYTE(addr2),len1);
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1045:21: note: in expansion of macro ‘sp’
                CELL(sp)=memcmp(&BYTE(addr1),&BYTE(addr2),len1);
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:7: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:7: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:22: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:22: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:36: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1053:36: note: in expansion of macro ‘sp’
       sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1054:54: note: in expansion of macro ‘sp’
        if(!make_name(v2r(addr),len)) {ior=-202; CELL(sp)=ior;break;}
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1054:54: note: in expansion of macro ‘sp’
        if(!make_name(v2r(addr),len)) {ior=-202; CELL(sp)=ior;break;}
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1055:26: note: in expansion of macro ‘sp’
   ior=open(filename,CELL(sp-4),S_IRUSR | S_IWUSR );
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1055:26: note: in expansion of macro ‘sp’
   ior=open(filename,CELL(sp-4),S_IRUSR | S_IWUSR );
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1056:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=ior;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1056:8: note: in expansion of macro ‘sp’
   CELL(sp+4)=ior;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1057:9: note: in expansion of macro ‘sp’
    CELL(sp)=-((ior+1)==0);break;
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1057:9: note: in expansion of macro ‘sp’
    CELL(sp)=-((ior+1)==0);break;
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1059:47: note: in expansion of macro ‘sp’
      case sw_closefile: /*close-file*/   CELL(sp)=close(CELL(sp));break;;
                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1059:47: note: in expansion of macro ‘sp’
      case sw_closefile: /*close-file*/   CELL(sp)=close(CELL(sp));break;;
                                               ^
forth.c:1059:51: warning: implicit declaration of function ‘close’ [-Wimplicit-function-declaration]
      case sw_closefile: /*close-file*/   CELL(sp)=close(CELL(sp));break;;
                                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1059:62: note: in expansion of macro ‘sp’
      case sw_closefile: /*close-file*/   CELL(sp)=close(CELL(sp));break;;
                                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1059:62: note: in expansion of macro ‘sp’
      case sw_closefile: /*close-file*/   CELL(sp)=close(CELL(sp));break;;
                                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:40: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:40: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:54: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:54: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:70: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1060:70: note: in expansion of macro ‘sp’
      case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1061:22: note: in expansion of macro ‘sp’
            addr=CELL(sp);
                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1061:22: note: in expansion of macro ‘sp’
            addr=CELL(sp);
                      ^
forth.c:1062:6: warning: implicit declaration of function ‘write’ [-Wimplicit-function-declaration]
      write(fp,v2r(addr),len);
      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1064:23: note: in expansion of macro ‘sp’
                  CELL(sp)=ior;break;
                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1064:23: note: in expansion of macro ‘sp’
                  CELL(sp)=ior;break;
                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1070:11: note: in expansion of macro ‘sp’
   fp=CELL(sp);
           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1070:11: note: in expansion of macro ‘sp’
   fp=CELL(sp);
           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1071:12: note: in expansion of macro ‘sp’
   len=CELL(sp+4);
            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1071:12: note: in expansion of macro ‘sp’
   len=CELL(sp+4);
            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1072:16: note: in expansion of macro ‘sp’
      addr=CELL(sp+8);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1072:16: note: in expansion of macro ‘sp’
      addr=CELL(sp+8);
                ^
forth.c:1092:16: warning: implicit declaration of function ‘read’ [-Wimplicit-function-declaration]
    do{     rrr=read(fp,&BYTE(addr+res),1);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1115:28: note: in expansion of macro ‘sp’
                if(res)CELL(sp+4)=0xffffffff;
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1115:28: note: in expansion of macro ‘sp’
                if(res)CELL(sp+4)=0xffffffff;
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1116:27: note: in expansion of macro ‘sp’
                else  CELL(sp+4)=0;
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1116:27: note: in expansion of macro ‘sp’
                else  CELL(sp+4)=0;
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1118:31: note: in expansion of macro ‘sp’
                          CELL(sp+8)=res;
                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1118:31: note: in expansion of macro ‘sp’
                          CELL(sp+8)=res;
                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1119:31: note: in expansion of macro ‘sp’
                          CELL(sp)=ior;
                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1119:31: note: in expansion of macro ‘sp’
                          CELL(sp)=ior;
                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:39: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:39: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:53: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:53: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:69: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1123:69: note: in expansion of macro ‘sp’
      case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
                                                                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1124:21: note: in expansion of macro ‘sp’
           addr=CELL(sp);
                     ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1124:21: note: in expansion of macro ‘sp’
           addr=CELL(sp);
                     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1126:16: note: in expansion of macro ‘sp’
           CELL(sp)=res;break;
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1126:16: note: in expansion of macro ‘sp’
           CELL(sp)=res;break;
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:38: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:38: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:52: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:52: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:68: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1127:68: note: in expansion of macro ‘sp’
      case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
                                                                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1128:19: note: in expansion of macro ‘sp’
         addr=CELL(sp+4);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1128:19: note: in expansion of macro ‘sp’
         addr=CELL(sp+4);
                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1130:14: note: in expansion of macro ‘sp’
         CELL(sp+4)=res;
              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1130:14: note: in expansion of macro ‘sp’
         CELL(sp+4)=res;
              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1131:10: note: in expansion of macro ‘sp’
     CELL(sp)=ior;break;
          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1131:10: note: in expansion of macro ‘sp’
     CELL(sp)=ior;break;
          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1133:50: note: in expansion of macro ‘sp’
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1133:50: note: in expansion of macro ‘sp’
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                  ^
forth.c:1133:56: warning: implicit declaration of function ‘FILEID’ [-Wimplicit-function-declaration]
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1133:68: note: in expansion of macro ‘sp’
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1133:68: note: in expansion of macro ‘sp’
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                                    ^
forth.c:1133:75: error: expected ‘;’ before ‘QFERR’
      case sw_repositionfile: /*reposition-file*/ sp+=8;FILEID(CELL(sp-8)) QFERR
                                                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1134:63: note: in expansion of macro ‘sp’
                              lseek(fp,CELL(sp),SEEK_SET);CELL(sp)=ior;break;
                                                               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1134:63: note: in expansion of macro ‘sp’
                              lseek(fp,CELL(sp),SEEK_SET);CELL(sp)=ior;break;
                                                               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1136:46: note: in expansion of macro ‘sp’
      case sw_fileposition: /*file-position*/ sp-=8;FILEID(CELL(sp+8)) QFERR
                                              ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1136:46: note: in expansion of macro ‘sp’
      case sw_fileposition: /*file-position*/ sp-=8;FILEID(CELL(sp+8)) QFERR
                                              ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1136:64: note: in expansion of macro ‘sp’
      case sw_fileposition: /*file-position*/ sp-=8;FILEID(CELL(sp+8)) QFERR
                                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1136:64: note: in expansion of macro ‘sp’
      case sw_fileposition: /*file-position*/ sp-=8;FILEID(CELL(sp+8)) QFERR
                                                                ^
forth.c:1136:71: error: expected ‘;’ before ‘QFERR’
      case sw_fileposition: /*file-position*/ sp-=8;FILEID(CELL(sp+8)) QFERR
                                                                       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1137:77: note: in expansion of macro ‘sp’
                              CELL(sp+8)=lseek(fp, (off_t) 0, SEEK_CUR);CELL(sp+4)=0;
                                                                             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1137:77: note: in expansion of macro ‘sp’
                              CELL(sp+8)=lseek(fp, (off_t) 0, SEEK_CUR);CELL(sp+4)=0;
                                                                             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1138:35: note: in expansion of macro ‘sp’
                              CELL(sp)=ior;break;
                                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1138:35: note: in expansion of macro ‘sp’
                              CELL(sp)=ior;break;
                                   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1148:32: note: in expansion of macro ‘sp’
      case sw_SHeader: if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1148:32: note: in expansion of macro ‘sp’
      case sw_SHeader: if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1148:43: note: in expansion of macro ‘sp’
      case sw_SHeader: if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1148:43: note: in expansion of macro ‘sp’
      case sw_SHeader: if( CELL(sp+4)+CELL(sp) < MEMSIZE )
                                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1149:39: note: in expansion of macro ‘CELL’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                       ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1149:44: note: in expansion of macro ‘sp’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1149:39: note: in expansion of macro ‘CELL’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                       ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1149:44: note: in expansion of macro ‘sp’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1149:57: note: in expansion of macro ‘sp’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                                         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1149:57: note: in expansion of macro ‘sp’
                        SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
                                                         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1150:13: note: in expansion of macro ‘sp’
             sp+=8; break;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1150:13: note: in expansion of macro ‘sp’
             sp+=8; break;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1154:24: note: in expansion of macro ‘sp’
   __u32 a_size =  CELL(sp);
                        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1154:24: note: in expansion of macro ‘sp’
   __u32 a_size =  CELL(sp);
                        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1156:3: note: in expansion of macro ‘sp’
   sp-=4;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1156:3: note: in expansion of macro ‘sp’
   sp-=4;
   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1161:19: note: in expansion of macro ‘sp’
   if(ii==17) CELL(sp) = -1;
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1161:19: note: in expansion of macro ‘sp’
   if(ii==17) CELL(sp) = -1;
                   ^
forth.c:1163:21: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
   { __u8 * a_addr = malloc(a_size);
                     ^
forth.c:1163:21: warning: incompatible implicit declaration of built-in function ‘malloc’
forth.c:1163:21: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1165:9: note: in expansion of macro ‘sp’
    CELL(sp)=0;
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1165:9: note: in expansion of macro ‘sp’
    CELL(sp)=0;
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1166:9: note: in expansion of macro ‘sp’
    CELL(sp+4)=ii<<(32-4);
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1166:9: note: in expansion of macro ‘sp’
    CELL(sp+4)=ii<<(32-4);
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1173:19: note: in expansion of macro ‘sp’
  { __u8 ii = CELL(sp)>>(32-4);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1173:19: note: in expansion of macro ‘sp’
  { __u8 ii = CELL(sp)>>(32-4);
                   ^
forth.c:1174:3: warning: incompatible implicit declaration of built-in function ‘free’
   free( DescriptorTable[ii] );
   ^
forth.c:1174:3: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1176:8: note: in expansion of macro ‘sp’
   CELL(sp) = 0 ;
        ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1176:8: note: in expansion of macro ‘sp’
   CELL(sp) = 0 ;
        ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1180:21: note: in expansion of macro ‘CELL’
       strcpy( &BYTE(CELL(sp)+1) , vatr );
                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1180:26: note: in expansion of macro ‘sp’
       strcpy( &BYTE(CELL(sp)+1) , vatr );
                          ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1180:21: note: in expansion of macro ‘CELL’
       strcpy( &BYTE(CELL(sp)+1) , vatr );
                     ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1180:26: note: in expansion of macro ‘sp’
       strcpy( &BYTE(CELL(sp)+1) , vatr );
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1181:12: note: in expansion of macro ‘CELL’
       BYTE(CELL(sp))=strlen(vatr);
            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1181:17: note: in expansion of macro ‘sp’
       BYTE(CELL(sp))=strlen(vatr);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:88:24: note: in definition of macro ‘BYTE’
 #define BYTE(reg) *v2r(reg)
                        ^
forth.c:1181:12: note: in expansion of macro ‘CELL’
       BYTE(CELL(sp))=strlen(vatr);
            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1181:17: note: in expansion of macro ‘sp’
       BYTE(CELL(sp))=strlen(vatr);
                 ^
forth.c:1184:26: warning: implicit declaration of function ‘usleep’ [-Wimplicit-function-declaration]
      case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
                          ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1184:38: note: in expansion of macro ‘sp’
      case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
                                      ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1184:38: note: in expansion of macro ‘sp’
      case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
                                      ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1184:48: note: in expansion of macro ‘sp’
      case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
                                                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1184:48: note: in expansion of macro ‘sp’
      case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
                                                ^
forth.c: At top level:
forth.c:1201:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
 make_image()
 ^
forth.c: In function ‘make_image’:
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1204:3: note: in expansion of macro ‘HERE’
   HERE=0;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1204:3: note: in expansion of macro ‘HERE’
   HERE=0;
   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1205:2: note: in expansion of macro ‘HERE’
  HERE=vocs_beg;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1205:2: note: in expansion of macro ‘HERE’
  HERE=vocs_beg;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:1206:7: note: in expansion of macro ‘HANDLER’
  CELL(HANDLER)=0;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:65:18: note: in expansion of macro ‘farrd’
 #define HANDLER  farrd(oHANDLER)
                  ^
forth.c:1206:7: note: in expansion of macro ‘HANDLER’
  CELL(HANDLER)=0;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:1207:7: note: in expansion of macro ‘ATIB’
  CELL(ATIB)=TTIB;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:1207:7: note: in expansion of macro ‘ATIB’
  CELL(ATIB)=TTIB;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:62:15: note: in expansion of macro ‘farrd’
 #define TTIB  farrd(oTTIB)
               ^
forth.c:1207:13: note: in expansion of macro ‘TTIB’
  CELL(ATIB)=TTIB;
             ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:62:15: note: in expansion of macro ‘farrd’
 #define TTIB  farrd(oTTIB)
               ^
forth.c:1207:13: note: in expansion of macro ‘TTIB’
  CELL(ATIB)=TTIB;
             ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1208:7: note: in expansion of macro ‘CONTEXT’
  CELL(CONTEXT)=VFORTH;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1208:7: note: in expansion of macro ‘CONTEXT’
  CELL(CONTEXT)=VFORTH;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1208:16: note: in expansion of macro ‘VFORTH’
  CELL(CONTEXT)=VFORTH;
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1208:16: note: in expansion of macro ‘VFORTH’
  CELL(CONTEXT)=VFORTH;
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1209:7: note: in expansion of macro ‘CONTEXT’
  CELL(CONTEXT+4)=0;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1209:7: note: in expansion of macro ‘CONTEXT’
  CELL(CONTEXT+4)=0;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:1210:7: note: in expansion of macro ‘CURRENT’
  CELL(CURRENT)=VFORTH;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:1210:7: note: in expansion of macro ‘CURRENT’
  CELL(CURRENT)=VFORTH;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1210:16: note: in expansion of macro ‘VFORTH’
  CELL(CURRENT)=VFORTH;
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1210:16: note: in expansion of macro ‘VFORTH’
  CELL(CURRENT)=VFORTH;
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:74:16: note: in expansion of macro ‘farrd’
 #define INPUT  farrd(oINPUT)
                ^
forth.c:1211:7: note: in expansion of macro ‘INPUT’
  CELL(INPUT)=0;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:74:16: note: in expansion of macro ‘farrd’
 #define INPUT  farrd(oINPUT)
                ^
forth.c:1211:7: note: in expansion of macro ‘INPUT’
  CELL(INPUT)=0;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1212:7: note: in expansion of macro ‘OUTPUT’
  CELL(OUTPUT)=1;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1212:7: note: in expansion of macro ‘OUTPUT’
  CELL(OUTPUT)=1;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:69:17: note: in expansion of macro ‘farrd’
 #define LFORTH  farrd(oLFORTH)
                 ^
forth.c:1213:7: note: in expansion of macro ‘LFORTH’
  CELL(LFORTH)=0;
       ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:69:17: note: in expansion of macro ‘farrd’
 #define LFORTH  farrd(oLFORTH)
                 ^
forth.c:1213:7: note: in expansion of macro ‘LFORTH’
  CELL(LFORTH)=0;
       ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:1214:2: note: in expansion of macro ‘current’
  current=0;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:1214:2: note: in expansion of macro ‘current’
  current=0;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1215:2: note: in expansion of macro ‘sp’
  sp = MEMSIZE-32*2;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:59:13: note: in expansion of macro ‘farrd’
 #define SP  farrd(oSP)
             ^
forth.c:108:27: note: in expansion of macro ‘SP’
 #define sp (*(__u32*)&mem[SP])
                           ^
forth.c:1215:2: note: in expansion of macro ‘sp’
  sp = MEMSIZE-32*2;
  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:1362:20: note: in expansion of macro ‘current’
 HEADER("EXECUTE"); current=last; COM(sw_GTr<<1|0x4001);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:102:23: note: in expansion of macro ‘CELL’
 #define current  CELL(CELL(CURRENT))
                       ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:102:28: note: in expansion of macro ‘CURRENT’
 #define current  CELL(CELL(CURRENT))
                            ^
forth.c:1362:20: note: in expansion of macro ‘current’
 HEADER("EXECUTE"); current=last; COM(sw_GTr<<1|0x4001);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:1362:28: note: in expansion of macro ‘last’
 HEADER("EXECUTE"); current=last; COM(sw_GTr<<1|0x4001);
                            ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:99:20: note: in expansion of macro ‘LAST’
 #define last  CELL(LAST)
                    ^
forth.c:1362:28: note: in expansion of macro ‘last’
 HEADER("EXECUTE"); current=last; COM(sw_GTr<<1|0x4001);
                            ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:1365:16: note: in expansion of macro ‘TO_IN’
 CONSTANT(">IN",TO_IN);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:60:16: note: in expansion of macro ‘farrd’
 #define TO_IN  farrd(oTO_IN)
                ^
forth.c:1365:16: note: in expansion of macro ‘TO_IN’
 CONSTANT(">IN",TO_IN);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:1366:18: note: in expansion of macro ‘STATE’
 CONSTANT("STATE",STATE);
                  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:64:16: note: in expansion of macro ‘farrd’
 #define STATE  farrd(oSTATE)
                ^
forth.c:1366:18: note: in expansion of macro ‘STATE’
 CONSTANT("STATE",STATE);
                  ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:1369:17: note: in expansion of macro ‘ATIB’
 CONSTANT("ATIB",ATIB);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:63:15: note: in expansion of macro ‘farrd’
 #define ATIB  farrd(oATIB)
               ^
forth.c:1369:17: note: in expansion of macro ‘ATIB’
 CONSTANT("ATIB",ATIB);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:62:15: note: in expansion of macro ‘farrd’
 #define TTIB  farrd(oTTIB)
               ^
forth.c:1370:17: note: in expansion of macro ‘TTIB’
 CONSTANT("TTIB",TTIB);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:62:15: note: in expansion of macro ‘farrd’
 #define TTIB  farrd(oTTIB)
               ^
forth.c:1370:17: note: in expansion of macro ‘TTIB’
 CONSTANT("TTIB",TTIB);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:1371:17: note: in expansion of macro ‘NTIB’
 CONSTANT("#TIB",NTIB);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:61:15: note: in expansion of macro ‘farrd’
 #define NTIB  farrd(oNTIB)
               ^
forth.c:1371:17: note: in expansion of macro ‘NTIB’
 CONSTANT("#TIB",NTIB);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:1372:15: note: in expansion of macro ‘DPOINT’
 CONSTANT("DP",DPOINT);
               ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:1372:15: note: in expansion of macro ‘DPOINT’
 CONSTANT("DP",DPOINT);
               ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:1373:20: note: in expansion of macro ‘CURRENT’
 CONSTANT("CURRENT",CURRENT);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:72:18: note: in expansion of macro ‘farrd’
 #define CURRENT  farrd(oCURRENT)
                  ^
forth.c:1373:20: note: in expansion of macro ‘CURRENT’
 CONSTANT("CURRENT",CURRENT);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1374:20: note: in expansion of macro ‘CONTEXT’
 CONSTANT("CONTEXT",CONTEXT);
                    ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:71:18: note: in expansion of macro ‘farrd’
 #define CONTEXT  farrd(oCONTEXT)
                  ^
forth.c:1374:20: note: in expansion of macro ‘CONTEXT’
 CONSTANT("CONTEXT",CONTEXT);
                    ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:1375:17: note: in expansion of macro ‘LAST’
 CONSTANT("LAST",LAST);
                 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:68:15: note: in expansion of macro ‘farrd’
 #define LAST  farrd(oLAST)
               ^
forth.c:1375:17: note: in expansion of macro ‘LAST’
 CONSTANT("LAST",LAST);
                 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1376:27: note: in expansion of macro ‘VFORTH’
 CONSTANT("FORTH-WORDLIST",VFORTH);
                           ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:70:17: note: in expansion of macro ‘farrd’
 #define VFORTH  farrd(oVFORTH)
                 ^
forth.c:1376:27: note: in expansion of macro ‘VFORTH’
 CONSTANT("FORTH-WORDLIST",VFORTH);
                           ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1386:1: note: in expansion of macro ‘HERE’
 HERE+=0x300;
 ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1386:1: note: in expansion of macro ‘HERE’
 HERE+=0x300;
 ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1388:16: note: in expansion of macro ‘HERE’
 CONSTANT("PAD",HERE-0x100);
                ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1388:16: note: in expansion of macro ‘HERE’
 CONSTANT("PAD",HERE-0x100);
                ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1394:19: note: in expansion of macro ‘OUTPUT’
 CONSTANT("STDOUT",OUTPUT);
                   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:73:17: note: in expansion of macro ‘farrd’
 #define OUTPUT  farrd(oOUTPUT)
                 ^
forth.c:1394:19: note: in expansion of macro ‘OUTPUT’
 CONSTANT("STDOUT",OUTPUT);
                   ^
forth.c:1555:9: warning: unknown escape sequence: '\:'
  HEADER("\:");
         ^
forth.c:1574:5: warning: unknown escape sequence: '\:'
  CC("\:");    TP(">CRE\n"); LIT(sw_ip<<1|0x4001); CC("W,");
     ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1728:9: note: in expansion of macro ‘HERE’
   shere=HERE;
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1728:9: note: in expansion of macro ‘HERE’
   shere=HERE;
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1729:3: note: in expansion of macro ‘HERE’
   HERE+=1000;
   ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1729:3: note: in expansion of macro ‘HERE’
   HERE+=1000;
   ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1731:9: note: in expansion of macro ‘HERE’
  FSTART=HERE;
         ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1731:9: note: in expansion of macro ‘HERE’
  FSTART=HERE;
         ^
forth.c:57:22: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                      ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1772:2: note: in expansion of macro ‘HERE’
  HERE=shere;
  ^
forth.c:57:44: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 #define farrd(reg)  ((int)&(f_boot->reg) - (int)(f_boot))
                                            ^
forth.c:90:34: note: in definition of macro ‘CELL’
 #define CELL(reg)  (*(__u32*)v2r(reg))
                                  ^
forth.c:67:17: note: in expansion of macro ‘farrd’
 #define DPOINT  farrd(oDPOINT)
                 ^
forth.c:96:19: note: in expansion of macro ‘DPOINT’
 #define HERE CELL(DPOINT)
                   ^
forth.c:1772:2: note: in expansion of macro ‘HERE’
  HERE=shere;
  ^
make: *** [tmp/forth.o] Error 1
