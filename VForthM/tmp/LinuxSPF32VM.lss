
LinuxSPF32VM:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000038  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000360  00000000000002d0  00000000000002d0  000002d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000017d  0000000000000630  0000000000000630  00000630  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000048  00000000000007ae  00000000000007ae  000007ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  00000000000007f8  00000000000007f8  000007f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000d8  0000000000000828  0000000000000828  00000828  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000258  0000000000000900  0000000000000900  00000900  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000b58  0000000000000b58  00000b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001a0  0000000000000b70  0000000000000b70  00000b70  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000000d10  0000000000000d10  00000d10  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         0000c792  0000000000000d20  0000000000000d20  00000d20  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  000000000000d4b4  000000000000d4b4  0000d4b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000b20  000000000000d4c0  000000000000d4c0  0000d4c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 000001d4  000000000000dfe0  000000000000dfe0  0000dfe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000007c8  000000000000e1b8  000000000000e1b8  0000e1b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  000000000020ece8  000000000020ece8  0000ece8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  000000000020ecf0  000000000020ecf0  0000ecf0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000200  000000000020ecf8  000000000020ecf8  0000ecf8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000108  000000000020eef8  000000000020eef8  0000eef8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000018  000000000020f000  000000000020f000  0000f000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00402380  000000000020f020  000000000020f020  0000f018  2**5
                  ALLOC
 24 .comment      00000024  0000000000000000  0000000000000000  0000f018  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000090  0000000000000000  0000000000000000  0000f03c  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   000026e3  0000000000000000  0000000000000000  0000f0cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 000005cc  0000000000000000  0000000000000000  000117af  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   00000f01  0000000000000000  0000000000000000  00011d7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    00001696  0000000000000000  0000000000000000  00012c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_ranges 00000090  0000000000000000  0000000000000000  00014312  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x8e3>
 248:	78 38                	js     282 <_init-0x8d6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 82 17 7c 67 a7    	add    %al,-0x589883e9(%rdx)
 289:	22 e5                	and    %ch,%ah
 28b:	11 85 ec cd a4 1c    	adc    %eax,0x1ca4cdec(%rbp)
 291:	7c 09                	jl     29c <_init-0x8bc>
 293:	b6 3a                	mov    $0x3a,%dh
 295:	91                   	xchg   %eax,%ecx
 296:	d5                   	(bad)  
 297:	65                   	gs

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	03 00                	add    (%rax),%eax
 29a:	00 00                	add    %al,(%rax)
 29c:	1f                   	(bad)  
 29d:	00 00                	add    %al,(%rax)
 29f:	00 01                	add    %al,(%rcx)
 2a1:	00 00                	add    %al,(%rax)
 2a3:	00 06                	add    %al,(%rsi)
 2a5:	00 00                	add    %al,(%rax)
 2a7:	00 88 c0 20 01 00    	add    %cl,0x120c0(%rax)
 2ad:	04 40                	add    $0x40,%al
 2af:	09 1f                	or     %ebx,(%rdi)
 2b1:	00 00                	add    %al,(%rax)
 2b3:	00 21                	add    %ah,(%rcx)
 2b5:	00 00                	add    %al,(%rax)
 2b7:	00 23                	add    %ah,(%rbx)
 2b9:	00 00                	add    %al,(%rax)
 2bb:	00 42 45             	add    %al,0x45(%rdx)
 2be:	d5                   	(bad)  
 2bf:	ec                   	in     (%dx),%al
 2c0:	bb e3 92 7c d8       	mov    $0xd87c92e3,%ebx
 2c5:	71 58                	jno    31f <_init-0x839>
 2c7:	1c b9                	sbb    $0xb9,%al
 2c9:	8d                   	(bad)  
 2ca:	f1                   	icebp  
 2cb:	0e                   	(bad)  
 2cc:	eb d3                	jmp    2a1 <_init-0x8b7>
 2ce:	ef                   	out    %eax,(%dx)
 2cf:	0e                   	(bad)  

Disassembly of section .dynsym:

00000000000002d0 <.dynsym>:
	...
 2e8:	4a 01 00             	rex.WX add %rax,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 12                	add    %dl,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 9d 00 00 00 12    	add    %bl,0x12000000(%rbp)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 ec                	add    %ch,%ah
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 b1 00 00 00 12    	add    %dh,0x12000000(%rcx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 87 00 00 00 12    	add    %al,0x12000000(%rdi)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 44 01 00          	add    %al,0x0(%rcx,%rax,1)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 57 00             	add    %dl,0x0(%rdi)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	c7 00 00 00 12 00    	movl   $0x120000,(%rax)
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	6b 00 00             	imul   $0x0,(%rax),%eax
 3c3:	00 12                	add    %dl,(%rdx)
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 b6 00 00 00 12    	add    %dh,0x12000000(%rsi)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 aa 00 00 00 12    	add    %ch,0x12000000(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 f4                	add    %dh,%ah
 409:	00 00                	add    %al,(%rax)
 40b:	00 12                	add    %dl,(%rdx)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 01                	add    %al,(%rcx)
 421:	01 00                	add    %eax,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 78 00             	add    %bh,0x0(%rax)
 43a:	00 00                	add    %al,(%rax)
 43c:	12 00                	adc    (%rax),%al
	...
 44e:	00 00                	add    %al,(%rax)
 450:	0e                   	(bad)  
 451:	01 00                	add    %eax,(%rax)
 453:	00 12                	add    %dl,(%rdx)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 e0                	add    %ah,%al
 469:	00 00                	add    %al,(%rax)
 46b:	00 12                	add    %dl,(%rdx)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 32                	add    %dh,(%rdx)
 481:	01 00                	add    %eax,(%rax)
 483:	00 12                	add    %dl,(%rdx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 e5                	add    %ah,%ch
 499:	00 00                	add    %al,(%rax)
 49b:	00 12                	add    %dl,(%rdx)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 ce                	add    %cl,%dh
 4b1:	00 00                	add    %al,(%rax)
 4b3:	00 12                	add    %dl,(%rdx)
	...
 4c5:	00 00                	add    %al,(%rax)
 4c7:	00 2e                	add    %ch,(%rsi)
 4c9:	00 00                	add    %al,(%rax)
 4cb:	00 20                	add    %ah,(%rax)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 fa                	add    %bh,%dl
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 12                	add    %dl,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 19                	add    %bl,(%rcx)
 4f9:	01 00                	add    %eax,(%rax)
 4fb:	00 12                	add    %dl,(%rdx)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 d6                	add    %dl,%dh
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 14 01             	add    %dl,(%rcx,%rax,1)
 52a:	00 00                	add    %al,(%rax)
 52c:	12 00                	adc    (%rax),%al
	...
 53e:	00 00                	add    %al,(%rax)
 540:	a9 00 00 00 12       	test   $0x12000000,%eax
	...
 555:	00 00                	add    %al,(%rax)
 557:	00 a4 00 00 00 12 00 	add    %ah,0x120000(%rax,%rax,1)
	...
 56e:	00 00                	add    %al,(%rax)
 570:	3d 00 00 00 20       	cmp    $0x20000000,%eax
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 23                	add    %ah,(%rbx)
 589:	01 00                	add    %eax,(%rax)
 58b:	00 22                	add    %ah,(%rdx)
	...
 59d:	00 00                	add    %al,(%rax)
 59f:	00 07                	add    %al,(%rdi)
 5a1:	01 00                	add    %eax,(%rax)
 5a3:	00 12                	add    %dl,(%rdx)
	...
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 4f 01             	add    %cl,0x1(%rdi)
 5ba:	00 00                	add    %al,(%rax)
 5bc:	10 00                	adc    %al,(%rax)
 5be:	17                   	(bad)  
 5bf:	00 18                	add    %bl,(%rax)
 5c1:	f0 20 00             	lock and %al,(%rax)
	...
 5d0:	62 01                	(bad)  
 5d2:	00 00                	add    %al,(%rax)
 5d4:	10 00                	adc    %al,(%rax)
 5d6:	18 00                	sbb    %al,(%rax)
 5d8:	a0 13 61 00 00 00 00 	movabs 0x6113,%al
 5df:	00 00 
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 56 01             	add    %dl,0x1(%rsi)
 5ea:	00 00                	add    %al,(%rax)
 5ec:	10 00                	adc    %al,(%rax)
 5ee:	18 00                	sbb    %al,(%rax)
 5f0:	18 f0                	sbb    %dh,%al
 5f2:	20 00                	and    %al,(%rax)
	...
 600:	65 00 00             	add    %al,%gs:(%rax)
 603:	00 12                	add    %dl,(%rdx)
 605:	00 0b                	add    %cl,(%rbx)
 607:	00 58 0b             	add    %bl,0xb(%rax)
	...
 616:	00 00                	add    %al,(%rax)
 618:	81 00 00 00 12 00    	addl   $0x120000,(%rax)
 61e:	0f 00                	(bad)  
 620:	b4 d4                	mov    $0xd4,%ah
	...

Disassembly of section .dynstr:

0000000000000630 <.dynstr>:
 630:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 634:	72 65                	jb     69b <_init-0x4bd>
 636:	61                   	(bad)  
 637:	64 6c                	fs insb (%dx),%es:(%rdi)
 639:	69 6e 65 2e 73 6f 2e 	imul   $0x2e6f732e,0x65(%rsi),%ebp
 640:	37                   	(bad)  
 641:	00 5f 49             	add    %bl,0x49(%rdi)
 644:	54                   	push   %rsp
 645:	4d 5f                	rex.WRB pop %r15
 647:	64 65 72 65          	fs gs jb 6b0 <_init-0x4a8>
 64b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 652:	4d 
 653:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 655:	6f                   	outsl  %ds:(%rsi),(%dx)
 656:	6e                   	outsb  %ds:(%rsi),(%dx)
 657:	65 54                	gs push %rsp
 659:	61                   	(bad)  
 65a:	62                   	(bad)  
 65b:	6c                   	insb   (%dx),%es:(%rdi)
 65c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 660:	67 6d                	insl   (%dx),%es:(%edi)
 662:	6f                   	outsl  %ds:(%rsi),(%dx)
 663:	6e                   	outsb  %ds:(%rsi),(%dx)
 664:	5f                   	pop    %rdi
 665:	73 74                	jae    6db <_init-0x47d>
 667:	61                   	(bad)  
 668:	72 74                	jb     6de <_init-0x47a>
 66a:	5f                   	pop    %rdi
 66b:	5f                   	pop    %rdi
 66c:	00 5f 49             	add    %bl,0x49(%rdi)
 66f:	54                   	push   %rsp
 670:	4d 5f                	rex.WRB pop %r15
 672:	72 65                	jb     6d9 <_init-0x47f>
 674:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 67b:	4d 
 67c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 67e:	6f                   	outsl  %ds:(%rsi),(%dx)
 67f:	6e                   	outsb  %ds:(%rsi),(%dx)
 680:	65 54                	gs push %rsp
 682:	61                   	(bad)  
 683:	62                   	(bad)  
 684:	6c                   	insb   (%dx),%es:(%rdi)
 685:	65 00 77 72          	add    %dh,%gs:0x72(%rdi)
 689:	69 74 65 5f 68 69 73 	imul   $0x74736968,0x5f(%rbp,%riz,2),%esi
 690:	74 
 691:	6f                   	outsl  %ds:(%rsi),(%dx)
 692:	72 79                	jb     70d <_init-0x44b>
 694:	00 5f 69             	add    %bl,0x69(%rdi)
 697:	6e                   	outsb  %ds:(%rsi),(%dx)
 698:	69 74 00 72 65 61 64 	imul   $0x5f646165,0x72(%rax,%rax,1),%esi
 69f:	5f 
 6a0:	68 69 73 74 6f       	pushq  $0x6f747369
 6a5:	72 79                	jb     720 <_init-0x438>
 6a7:	00 72 65             	add    %dh,0x65(%rdx)
 6aa:	61                   	(bad)  
 6ab:	64 6c                	fs insb (%dx),%es:(%rdi)
 6ad:	69 6e 65 00 5f 66 69 	imul   $0x69665f00,0x65(%rsi),%ebp
 6b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 6b5:	69 00 61 64 64 5f    	imul   $0x5f646461,(%rax),%eax
 6bb:	68 69 73 74 6f       	pushq  $0x6f747369
 6c0:	72 79                	jb     73b <_init-0x41d>
 6c2:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 6c6:	63 2e                	movslq (%rsi),%ebp
 6c8:	73 6f                	jae    739 <_init-0x41f>
 6ca:	2e 36 00 73 74       	cs add %dh,%ss:0x74(%rbx)
 6cf:	72 63                	jb     734 <_init-0x424>
 6d1:	70 79                	jo     74c <_init-0x40c>
 6d3:	00 65 78             	add    %ah,0x78(%rbp)
 6d6:	69 74 00 73 70 72 69 	imul   $0x6e697270,0x73(%rax,%rax,1),%esi
 6dd:	6e 
 6de:	74 66                	je     746 <_init-0x412>
 6e0:	00 70 75             	add    %dh,0x75(%rax)
 6e3:	74 73                	je     758 <_init-0x400>
 6e5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 6e8:	73 74                	jae    75e <_init-0x3fa>
 6ea:	61                   	(bad)  
 6eb:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 6ee:	63 68 6b             	movslq 0x6b(%rax),%ebp
 6f1:	5f                   	pop    %rdi
 6f2:	66 61                	data16 (bad) 
 6f4:	69 6c 00 73 74 72 6c 	imul   $0x656c7274,0x73(%rax,%rax,1),%ebp
 6fb:	65 
 6fc:	6e                   	outsb  %ds:(%rsi),(%dx)
 6fd:	00 67 65             	add    %ah,0x65(%rdi)
 700:	74 63                	je     765 <_init-0x3f3>
 702:	68 61 72 00 74       	pushq  $0x74007261
 707:	63 73 65             	movslq 0x65(%rbx),%esi
 70a:	74 61                	je     76d <_init-0x3eb>
 70c:	74 74                	je     782 <_init-0x3d6>
 70e:	72 00                	jb     710 <_init-0x448>
 710:	72 65                	jb     777 <_init-0x3e1>
 712:	61                   	(bad)  
 713:	64 00 6d 65          	add    %ch,%fs:0x65(%rbp)
 717:	6d                   	insl   (%dx),%es:(%rdi)
 718:	63 6d 70             	movslq 0x70(%rbp),%ebp
 71b:	00 74 6f 75          	add    %dh,0x75(%rdi,%rbp,2)
 71f:	70 70                	jo     791 <_init-0x3c7>
 721:	65 72 00             	gs jb  724 <_init-0x434>
 724:	6c                   	insb   (%dx),%es:(%rdi)
 725:	73 65                	jae    78c <_init-0x3cc>
 727:	65 6b 00 6d          	imul   $0x6d,%gs:(%rax),%eax
 72b:	61                   	(bad)  
 72c:	6c                   	insb   (%dx),%es:(%rdi)
 72d:	6c                   	insb   (%dx),%es:(%rdi)
 72e:	6f                   	outsl  %ds:(%rsi),(%dx)
 72f:	63 00                	movslq (%rax),%eax
 731:	69 6f 63 74 6c 00 75 	imul   $0x75006c74,0x63(%rdi),%ebp
 738:	73 6c                	jae    7a6 <_init-0x3b2>
 73a:	65 65 70 00          	gs gs jo 73e <_init-0x41a>
 73e:	63 6c 6f 73          	movslq 0x73(%rdi,%rbp,2),%ebp
 742:	65 00 6f 70          	add    %ch,%gs:0x70(%rdi)
 746:	65 6e                	outsb  %gs:(%rsi),(%dx)
 748:	00 74 63 67          	add    %dh,0x67(%rbx,%riz,2)
 74c:	65 74 61             	gs je  7b0 <_init-0x3a8>
 74f:	74 74                	je     7c5 <_init-0x393>
 751:	72 00                	jb     753 <_init-0x405>
 753:	5f                   	pop    %rdi
 754:	5f                   	pop    %rdi
 755:	63 78 61             	movslq 0x61(%rax),%edi
 758:	5f                   	pop    %rdi
 759:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 75f:	7a 65                	jp     7c6 <_init-0x392>
 761:	00 5f 5f             	add    %bl,0x5f(%rdi)
 764:	6c                   	insb   (%dx),%es:(%rdi)
 765:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 76c:	72 74                	jb     7e2 <_init-0x376>
 76e:	5f                   	pop    %rdi
 76f:	6d                   	insl   (%dx),%es:(%rdi)
 770:	61                   	(bad)  
 771:	69 6e 00 77 72 69 74 	imul   $0x74697277,0x0(%rsi),%ebp
 778:	65 00 66 72          	add    %ah,%gs:0x72(%rsi)
 77c:	65 65 00 5f 65       	gs add %bl,%gs:0x65(%rdi)
 781:	64 61                	fs (bad) 
 783:	74 61                	je     7e6 <_init-0x372>
 785:	00 5f 5f             	add    %bl,0x5f(%rdi)
 788:	62 73                	(bad)  
 78a:	73 5f                	jae    7eb <_init-0x36d>
 78c:	73 74                	jae    802 <_init-0x356>
 78e:	61                   	(bad)  
 78f:	72 74                	jb     805 <_init-0x353>
 791:	00 5f 65             	add    %bl,0x65(%rdi)
 794:	6e                   	outsb  %ds:(%rsi),(%dx)
 795:	64 00 47 4c          	add    %al,%fs:0x4c(%rdi)
 799:	49                   	rex.WB
 79a:	42                   	rex.X
 79b:	43 5f                	rex.XB pop %r15
 79d:	32 2e                	xor    (%rsi),%ch
 79f:	34 00                	xor    $0x0,%al
 7a1:	47                   	rex.RXB
 7a2:	4c                   	rex.WR
 7a3:	49                   	rex.WB
 7a4:	42                   	rex.X
 7a5:	43 5f                	rex.XB pop %r15
 7a7:	32 2e                	xor    (%rsi),%ch
 7a9:	32 2e                	xor    (%rsi),%ch
 7ab:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000007ae <.gnu.version>:
 7ae:	00 00                	add    %al,(%rax)
 7b0:	02 00                	add    (%rax),%al
 7b2:	00 00                	add    %al,(%rax)
 7b4:	02 00                	add    (%rax),%al
 7b6:	02 00                	add    (%rax),%al
 7b8:	02 00                	add    (%rax),%al
 7ba:	00 00                	add    %al,(%rax)
 7bc:	02 00                	add    (%rax),%al
 7be:	00 00                	add    %al,(%rax)
 7c0:	02 00                	add    (%rax),%al
 7c2:	00 00                	add    %al,(%rax)
 7c4:	03 00                	add    (%rax),%eax
 7c6:	02 00                	add    (%rax),%al
 7c8:	02 00                	add    (%rax),%al
 7ca:	02 00                	add    (%rax),%al
 7cc:	00 00                	add    %al,(%rax)
 7ce:	02 00                	add    (%rax),%al
 7d0:	02 00                	add    (%rax),%al
 7d2:	02 00                	add    (%rax),%al
 7d4:	02 00                	add    (%rax),%al
 7d6:	02 00                	add    (%rax),%al
 7d8:	00 00                	add    %al,(%rax)
 7da:	02 00                	add    (%rax),%al
 7dc:	02 00                	add    (%rax),%al
 7de:	02 00                	add    (%rax),%al
 7e0:	02 00                	add    (%rax),%al
 7e2:	02 00                	add    (%rax),%al
 7e4:	02 00                	add    (%rax),%al
 7e6:	00 00                	add    %al,(%rax)
 7e8:	02 00                	add    (%rax),%al
 7ea:	02 00                	add    (%rax),%al
 7ec:	01 00                	add    %eax,(%rax)
 7ee:	01 00                	add    %eax,(%rax)
 7f0:	01 00                	add    %eax,(%rax)
 7f2:	01 00                	add    %eax,(%rax)
 7f4:	01 00                	add    %eax,(%rax)

Disassembly of section .gnu.version_r:

00000000000007f8 <.gnu.version_r>:
 7f8:	01 00                	add    %eax,(%rax)
 7fa:	02 00                	add    (%rax),%al
 7fc:	93                   	xchg   %eax,%ebx
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 10                	add    %dl,(%rax)
 801:	00 00                	add    %al,(%rax)
 803:	00 00                	add    %al,(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 80a:	69 0d 00 00 03 00 67 	imul   $0x167,0x30000(%rip),%ecx        # 30814 <__FRAME_END__+0x21e98>
 811:	01 00 00 
 814:	10 00                	adc    %al,(%rax)
 816:	00 00                	add    %al,(%rax)
 818:	75 1a                	jne    834 <_init-0x324>
 81a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 820:	71 01                	jno    823 <_init-0x335>
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000828 <.rela.dyn>:
 828:	e8 ec 20 00 00       	callq  2919 <Source+0xb0>
 82d:	00 00                	add    %al,(%rax)
 82f:	00 08                	add    %cl,(%rax)
 831:	00 00                	add    %al,(%rax)
 833:	00 00                	add    %al,(%rax)
 835:	00 00                	add    %al,(%rax)
 837:	00 20                	add    %ah,(%rax)
 839:	0e                   	(bad)  
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	f0 ec                	lock in (%dx),%al
 842:	20 00                	and    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	08 00                	or     %al,(%rax)
 84a:	00 00                	add    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	e0 0d                	loopne 85f <_init-0x2f9>
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	08 f0                	or     %dh,%al
 85a:	20 00                	and    %al,(%rax)
 85c:	00 00                	add    %al,(%rax)
 85e:	00 00                	add    %al,(%rax)
 860:	08 00                	or     %al,(%rax)
 862:	00 00                	add    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	08 f0                	or     %dh,%al
 86a:	20 00                	and    %al,(%rax)
 86c:	00 00                	add    %al,(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	10 f0                	adc    %dh,%al
 872:	20 00                	and    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	08 00                	or     %al,(%rax)
 87a:	00 00                	add    %al,(%rax)
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	c8 d4 00 00          	enterq $0xd4,$0x0
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	d8 ef                	fsubr  %st(7),%st
 88a:	20 00                	and    %al,(%rax)
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	06                   	(bad)  
 891:	00 00                	add    %al,(%rax)
 893:	00 02                	add    %al,(%rdx)
	...
 89d:	00 00                	add    %al,(%rax)
 89f:	00 e0                	add    %ah,%al
 8a1:	ef                   	out    %eax,(%dx)
 8a2:	20 00                	and    %al,(%rax)
 8a4:	00 00                	add    %al,(%rax)
 8a6:	00 00                	add    %al,(%rax)
 8a8:	06                   	(bad)  
 8a9:	00 00                	add    %al,(%rax)
 8ab:	00 12                	add    %dl,(%rdx)
	...
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 e8                	add    %ch,%al
 8b9:	ef                   	out    %eax,(%dx)
 8ba:	20 00                	and    %al,(%rax)
 8bc:	00 00                	add    %al,(%rax)
 8be:	00 00                	add    %al,(%rax)
 8c0:	06                   	(bad)  
 8c1:	00 00                	add    %al,(%rax)
 8c3:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 8c9 <_init-0x28f>
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 00                	add    %al,(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 f0                	add    %dh,%al
 8d1:	ef                   	out    %eax,(%dx)
 8d2:	20 00                	and    %al,(%rax)
 8d4:	00 00                	add    %al,(%rax)
 8d6:	00 00                	add    %al,(%rax)
 8d8:	06                   	(bad)  
 8d9:	00 00                	add    %al,(%rax)
 8db:	00 1c 00             	add    %bl,(%rax,%rax,1)
	...
 8e6:	00 00                	add    %al,(%rax)
 8e8:	f8                   	clc    
 8e9:	ef                   	out    %eax,(%dx)
 8ea:	20 00                	and    %al,(%rax)
 8ec:	00 00                	add    %al,(%rax)
 8ee:	00 00                	add    %al,(%rax)
 8f0:	06                   	(bad)  
 8f1:	00 00                	add    %al,(%rax)
 8f3:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 8f9 <_init-0x25f>
 8f9:	00 00                	add    %al,(%rax)
 8fb:	00 00                	add    %al,(%rax)
 8fd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000900 <.rela.plt>:
 900:	10 ef                	adc    %ch,%bh
 902:	20 00                	and    %al,(%rax)
 904:	00 00                	add    %al,(%rax)
 906:	00 00                	add    %al,(%rax)
 908:	07                   	(bad)  
 909:	00 00                	add    %al,(%rax)
 90b:	00 01                	add    %al,(%rcx)
	...
 915:	00 00                	add    %al,(%rax)
 917:	00 18                	add    %bl,(%rax)
 919:	ef                   	out    %eax,(%dx)
 91a:	20 00                	and    %al,(%rax)
 91c:	00 00                	add    %al,(%rax)
 91e:	00 00                	add    %al,(%rax)
 920:	07                   	(bad)  
 921:	00 00                	add    %al,(%rax)
 923:	00 03                	add    %al,(%rbx)
	...
 92d:	00 00                	add    %al,(%rax)
 92f:	00 20                	add    %ah,(%rax)
 931:	ef                   	out    %eax,(%dx)
 932:	20 00                	and    %al,(%rax)
 934:	00 00                	add    %al,(%rax)
 936:	00 00                	add    %al,(%rax)
 938:	07                   	(bad)  
 939:	00 00                	add    %al,(%rax)
 93b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 946:	00 00                	add    %al,(%rax)
 948:	28 ef                	sub    %ch,%bh
 94a:	20 00                	and    %al,(%rax)
 94c:	00 00                	add    %al,(%rax)
 94e:	00 00                	add    %al,(%rax)
 950:	07                   	(bad)  
 951:	00 00                	add    %al,(%rax)
 953:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 959 <_init-0x1ff>
 959:	00 00                	add    %al,(%rax)
 95b:	00 00                	add    %al,(%rax)
 95d:	00 00                	add    %al,(%rax)
 95f:	00 30                	add    %dh,(%rax)
 961:	ef                   	out    %eax,(%dx)
 962:	20 00                	and    %al,(%rax)
 964:	00 00                	add    %al,(%rax)
 966:	00 00                	add    %al,(%rax)
 968:	07                   	(bad)  
 969:	00 00                	add    %al,(%rax)
 96b:	00 06                	add    %al,(%rsi)
	...
 975:	00 00                	add    %al,(%rax)
 977:	00 38                	add    %bh,(%rax)
 979:	ef                   	out    %eax,(%dx)
 97a:	20 00                	and    %al,(%rax)
 97c:	00 00                	add    %al,(%rax)
 97e:	00 00                	add    %al,(%rax)
 980:	07                   	(bad)  
 981:	00 00                	add    %al,(%rax)
 983:	00 07                	add    %al,(%rdi)
	...
 98d:	00 00                	add    %al,(%rax)
 98f:	00 40 ef             	add    %al,-0x11(%rax)
 992:	20 00                	and    %al,(%rax)
 994:	00 00                	add    %al,(%rax)
 996:	00 00                	add    %al,(%rax)
 998:	07                   	(bad)  
 999:	00 00                	add    %al,(%rax)
 99b:	00 08                	add    %cl,(%rax)
	...
 9a5:	00 00                	add    %al,(%rax)
 9a7:	00 48 ef             	add    %cl,-0x11(%rax)
 9aa:	20 00                	and    %al,(%rax)
 9ac:	00 00                	add    %al,(%rax)
 9ae:	00 00                	add    %al,(%rax)
 9b0:	07                   	(bad)  
 9b1:	00 00                	add    %al,(%rax)
 9b3:	00 09                	add    %cl,(%rcx)
	...
 9bd:	00 00                	add    %al,(%rax)
 9bf:	00 50 ef             	add    %dl,-0x11(%rax)
 9c2:	20 00                	and    %al,(%rax)
 9c4:	00 00                	add    %al,(%rax)
 9c6:	00 00                	add    %al,(%rax)
 9c8:	07                   	(bad)  
 9c9:	00 00                	add    %al,(%rax)
 9cb:	00 0a                	add    %cl,(%rdx)
	...
 9d5:	00 00                	add    %al,(%rax)
 9d7:	00 58 ef             	add    %bl,-0x11(%rax)
 9da:	20 00                	and    %al,(%rax)
 9dc:	00 00                	add    %al,(%rax)
 9de:	00 00                	add    %al,(%rax)
 9e0:	07                   	(bad)  
 9e1:	00 00                	add    %al,(%rax)
 9e3:	00 0b                	add    %cl,(%rbx)
	...
 9ed:	00 00                	add    %al,(%rax)
 9ef:	00 60 ef             	add    %ah,-0x11(%rax)
 9f2:	20 00                	and    %al,(%rax)
 9f4:	00 00                	add    %al,(%rax)
 9f6:	00 00                	add    %al,(%rax)
 9f8:	07                   	(bad)  
 9f9:	00 00                	add    %al,(%rax)
 9fb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 a06:	00 00                	add    %al,(%rax)
 a08:	68 ef 20 00 00       	pushq  $0x20ef
 a0d:	00 00                	add    %al,(%rax)
 a0f:	00 07                	add    %al,(%rdi)
 a11:	00 00                	add    %al,(%rax)
 a13:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # a19 <_init-0x13f>
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 00                	add    %al,(%rax)
 a1d:	00 00                	add    %al,(%rax)
 a1f:	00 70 ef             	add    %dh,-0x11(%rax)
 a22:	20 00                	and    %al,(%rax)
 a24:	00 00                	add    %al,(%rax)
 a26:	00 00                	add    %al,(%rax)
 a28:	07                   	(bad)  
 a29:	00 00                	add    %al,(%rax)
 a2b:	00 0e                	add    %cl,(%rsi)
	...
 a35:	00 00                	add    %al,(%rax)
 a37:	00 78 ef             	add    %bh,-0x11(%rax)
 a3a:	20 00                	and    %al,(%rax)
 a3c:	00 00                	add    %al,(%rax)
 a3e:	00 00                	add    %al,(%rax)
 a40:	07                   	(bad)  
 a41:	00 00                	add    %al,(%rax)
 a43:	00 0f                	add    %cl,(%rdi)
	...
 a4d:	00 00                	add    %al,(%rax)
 a4f:	00 80 ef 20 00 00    	add    %al,0x20ef(%rax)
 a55:	00 00                	add    %al,(%rax)
 a57:	00 07                	add    %al,(%rdi)
 a59:	00 00                	add    %al,(%rax)
 a5b:	00 10                	add    %dl,(%rax)
	...
 a65:	00 00                	add    %al,(%rax)
 a67:	00 88 ef 20 00 00    	add    %cl,0x20ef(%rax)
 a6d:	00 00                	add    %al,(%rax)
 a6f:	00 07                	add    %al,(%rdi)
 a71:	00 00                	add    %al,(%rax)
 a73:	00 11                	add    %dl,(%rcx)
	...
 a7d:	00 00                	add    %al,(%rax)
 a7f:	00 90 ef 20 00 00    	add    %dl,0x20ef(%rax)
 a85:	00 00                	add    %al,(%rax)
 a87:	00 07                	add    %al,(%rdi)
 a89:	00 00                	add    %al,(%rax)
 a8b:	00 13                	add    %dl,(%rbx)
	...
 a95:	00 00                	add    %al,(%rax)
 a97:	00 98 ef 20 00 00    	add    %bl,0x20ef(%rax)
 a9d:	00 00                	add    %al,(%rax)
 a9f:	00 07                	add    %al,(%rdi)
 aa1:	00 00                	add    %al,(%rax)
 aa3:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
 aae:	00 00                	add    %al,(%rax)
 ab0:	a0 ef 20 00 00 00 00 	movabs 0x7000000000020ef,%al
 ab7:	00 07 
 ab9:	00 00                	add    %al,(%rax)
 abb:	00 16                	add    %dl,(%rsi)
	...
 ac5:	00 00                	add    %al,(%rax)
 ac7:	00 a8 ef 20 00 00    	add    %ch,0x20ef(%rax)
 acd:	00 00                	add    %al,(%rax)
 acf:	00 07                	add    %al,(%rdi)
 ad1:	00 00                	add    %al,(%rax)
 ad3:	00 17                	add    %dl,(%rdi)
	...
 add:	00 00                	add    %al,(%rax)
 adf:	00 b0 ef 20 00 00    	add    %dh,0x20ef(%rax)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 07                	add    %al,(%rdi)
 ae9:	00 00                	add    %al,(%rax)
 aeb:	00 18                	add    %bl,(%rax)
	...
 af5:	00 00                	add    %al,(%rax)
 af7:	00 b8 ef 20 00 00    	add    %bh,0x20ef(%rax)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 07                	add    %al,(%rdi)
 b01:	00 00                	add    %al,(%rax)
 b03:	00 19                	add    %bl,(%rcx)
	...
 b0d:	00 00                	add    %al,(%rax)
 b0f:	00 c0                	add    %al,%al
 b11:	ef                   	out    %eax,(%dx)
 b12:	20 00                	and    %al,(%rax)
 b14:	00 00                	add    %al,(%rax)
 b16:	00 00                	add    %al,(%rax)
 b18:	07                   	(bad)  
 b19:	00 00                	add    %al,(%rax)
 b1b:	00 1a                	add    %bl,(%rdx)
	...
 b25:	00 00                	add    %al,(%rax)
 b27:	00 c8                	add    %cl,%al
 b29:	ef                   	out    %eax,(%dx)
 b2a:	20 00                	and    %al,(%rax)
 b2c:	00 00                	add    %al,(%rax)
 b2e:	00 00                	add    %al,(%rax)
 b30:	07                   	(bad)  
 b31:	00 00                	add    %al,(%rax)
 b33:	00 1b                	add    %bl,(%rbx)
	...
 b3d:	00 00                	add    %al,(%rax)
 b3f:	00 d0                	add    %dl,%al
 b41:	ef                   	out    %eax,(%dx)
 b42:	20 00                	and    %al,(%rax)
 b44:	00 00                	add    %al,(%rax)
 b46:	00 00                	add    %al,(%rax)
 b48:	07                   	(bad)  
 b49:	00 00                	add    %al,(%rax)
 b4b:	00 1e                	add    %bl,(%rsi)
	...

Disassembly of section .init:

0000000000000b58 <_init>:
 b58:	48 83 ec 08          	sub    $0x8,%rsp
 b5c:	48 8b 05 85 e4 20 00 	mov    0x20e485(%rip),%rax        # 20efe8 <__gmon_start__>
 b63:	48 85 c0             	test   %rax,%rax
 b66:	74 02                	je     b6a <_init+0x12>
 b68:	ff d0                	callq  *%rax
 b6a:	48 83 c4 08          	add    $0x8,%rsp
 b6e:	c3                   	retq   

Disassembly of section .plt:

0000000000000b70 <.plt>:
 b70:	ff 35 8a e3 20 00    	pushq  0x20e38a(%rip)        # 20ef00 <_GLOBAL_OFFSET_TABLE_+0x8>
 b76:	ff 25 8c e3 20 00    	jmpq   *0x20e38c(%rip)        # 20ef08 <_GLOBAL_OFFSET_TABLE_+0x10>
 b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b80 <free@plt>:
 b80:	ff 25 8a e3 20 00    	jmpq   *0x20e38a(%rip)        # 20ef10 <free@GLIBC_2.2.5>
 b86:	68 00 00 00 00       	pushq  $0x0
 b8b:	e9 e0 ff ff ff       	jmpq   b70 <.plt>

0000000000000b90 <strcpy@plt>:
 b90:	ff 25 82 e3 20 00    	jmpq   *0x20e382(%rip)        # 20ef18 <strcpy@GLIBC_2.2.5>
 b96:	68 01 00 00 00       	pushq  $0x1
 b9b:	e9 d0 ff ff ff       	jmpq   b70 <.plt>

0000000000000ba0 <toupper@plt>:
 ba0:	ff 25 7a e3 20 00    	jmpq   *0x20e37a(%rip)        # 20ef20 <toupper@GLIBC_2.2.5>
 ba6:	68 02 00 00 00       	pushq  $0x2
 bab:	e9 c0 ff ff ff       	jmpq   b70 <.plt>

0000000000000bb0 <puts@plt>:
 bb0:	ff 25 72 e3 20 00    	jmpq   *0x20e372(%rip)        # 20ef28 <puts@GLIBC_2.2.5>
 bb6:	68 03 00 00 00       	pushq  $0x3
 bbb:	e9 b0 ff ff ff       	jmpq   b70 <.plt>

0000000000000bc0 <add_history@plt>:
 bc0:	ff 25 6a e3 20 00    	jmpq   *0x20e36a(%rip)        # 20ef30 <add_history>
 bc6:	68 04 00 00 00       	pushq  $0x4
 bcb:	e9 a0 ff ff ff       	jmpq   b70 <.plt>

0000000000000bd0 <write@plt>:
 bd0:	ff 25 62 e3 20 00    	jmpq   *0x20e362(%rip)        # 20ef38 <write@GLIBC_2.2.5>
 bd6:	68 05 00 00 00       	pushq  $0x5
 bdb:	e9 90 ff ff ff       	jmpq   b70 <.plt>

0000000000000be0 <write_history@plt>:
 be0:	ff 25 5a e3 20 00    	jmpq   *0x20e35a(%rip)        # 20ef40 <write_history>
 be6:	68 06 00 00 00       	pushq  $0x6
 beb:	e9 80 ff ff ff       	jmpq   b70 <.plt>

0000000000000bf0 <strlen@plt>:
 bf0:	ff 25 52 e3 20 00    	jmpq   *0x20e352(%rip)        # 20ef48 <strlen@GLIBC_2.2.5>
 bf6:	68 07 00 00 00       	pushq  $0x7
 bfb:	e9 70 ff ff ff       	jmpq   b70 <.plt>

0000000000000c00 <read_history@plt>:
 c00:	ff 25 4a e3 20 00    	jmpq   *0x20e34a(%rip)        # 20ef50 <read_history>
 c06:	68 08 00 00 00       	pushq  $0x8
 c0b:	e9 60 ff ff ff       	jmpq   b70 <.plt>

0000000000000c10 <__stack_chk_fail@plt>:
 c10:	ff 25 42 e3 20 00    	jmpq   *0x20e342(%rip)        # 20ef58 <__stack_chk_fail@GLIBC_2.4>
 c16:	68 09 00 00 00       	pushq  $0x9
 c1b:	e9 50 ff ff ff       	jmpq   b70 <.plt>

0000000000000c20 <printf@plt>:
 c20:	ff 25 3a e3 20 00    	jmpq   *0x20e33a(%rip)        # 20ef60 <printf@GLIBC_2.2.5>
 c26:	68 0a 00 00 00       	pushq  $0xa
 c2b:	e9 40 ff ff ff       	jmpq   b70 <.plt>

0000000000000c30 <lseek@plt>:
 c30:	ff 25 32 e3 20 00    	jmpq   *0x20e332(%rip)        # 20ef68 <lseek@GLIBC_2.2.5>
 c36:	68 0b 00 00 00       	pushq  $0xb
 c3b:	e9 30 ff ff ff       	jmpq   b70 <.plt>

0000000000000c40 <ioctl@plt>:
 c40:	ff 25 2a e3 20 00    	jmpq   *0x20e32a(%rip)        # 20ef70 <ioctl@GLIBC_2.2.5>
 c46:	68 0c 00 00 00       	pushq  $0xc
 c4b:	e9 20 ff ff ff       	jmpq   b70 <.plt>

0000000000000c50 <readline@plt>:
 c50:	ff 25 22 e3 20 00    	jmpq   *0x20e322(%rip)        # 20ef78 <readline>
 c56:	68 0d 00 00 00       	pushq  $0xd
 c5b:	e9 10 ff ff ff       	jmpq   b70 <.plt>

0000000000000c60 <close@plt>:
 c60:	ff 25 1a e3 20 00    	jmpq   *0x20e31a(%rip)        # 20ef80 <close@GLIBC_2.2.5>
 c66:	68 0e 00 00 00       	pushq  $0xe
 c6b:	e9 00 ff ff ff       	jmpq   b70 <.plt>

0000000000000c70 <read@plt>:
 c70:	ff 25 12 e3 20 00    	jmpq   *0x20e312(%rip)        # 20ef88 <read@GLIBC_2.2.5>
 c76:	68 0f 00 00 00       	pushq  $0xf
 c7b:	e9 f0 fe ff ff       	jmpq   b70 <.plt>

0000000000000c80 <memcmp@plt>:
 c80:	ff 25 0a e3 20 00    	jmpq   *0x20e30a(%rip)        # 20ef90 <memcmp@GLIBC_2.2.5>
 c86:	68 10 00 00 00       	pushq  $0x10
 c8b:	e9 e0 fe ff ff       	jmpq   b70 <.plt>

0000000000000c90 <getchar@plt>:
 c90:	ff 25 02 e3 20 00    	jmpq   *0x20e302(%rip)        # 20ef98 <getchar@GLIBC_2.2.5>
 c96:	68 11 00 00 00       	pushq  $0x11
 c9b:	e9 d0 fe ff ff       	jmpq   b70 <.plt>

0000000000000ca0 <malloc@plt>:
 ca0:	ff 25 fa e2 20 00    	jmpq   *0x20e2fa(%rip)        # 20efa0 <malloc@GLIBC_2.2.5>
 ca6:	68 12 00 00 00       	pushq  $0x12
 cab:	e9 c0 fe ff ff       	jmpq   b70 <.plt>

0000000000000cb0 <tcgetattr@plt>:
 cb0:	ff 25 f2 e2 20 00    	jmpq   *0x20e2f2(%rip)        # 20efa8 <tcgetattr@GLIBC_2.2.5>
 cb6:	68 13 00 00 00       	pushq  $0x13
 cbb:	e9 b0 fe ff ff       	jmpq   b70 <.plt>

0000000000000cc0 <tcsetattr@plt>:
 cc0:	ff 25 ea e2 20 00    	jmpq   *0x20e2ea(%rip)        # 20efb0 <tcsetattr@GLIBC_2.2.5>
 cc6:	68 14 00 00 00       	pushq  $0x14
 ccb:	e9 a0 fe ff ff       	jmpq   b70 <.plt>

0000000000000cd0 <open@plt>:
 cd0:	ff 25 e2 e2 20 00    	jmpq   *0x20e2e2(%rip)        # 20efb8 <open@GLIBC_2.2.5>
 cd6:	68 15 00 00 00       	pushq  $0x15
 cdb:	e9 90 fe ff ff       	jmpq   b70 <.plt>

0000000000000ce0 <sprintf@plt>:
 ce0:	ff 25 da e2 20 00    	jmpq   *0x20e2da(%rip)        # 20efc0 <sprintf@GLIBC_2.2.5>
 ce6:	68 16 00 00 00       	pushq  $0x16
 ceb:	e9 80 fe ff ff       	jmpq   b70 <.plt>

0000000000000cf0 <exit@plt>:
 cf0:	ff 25 d2 e2 20 00    	jmpq   *0x20e2d2(%rip)        # 20efc8 <exit@GLIBC_2.2.5>
 cf6:	68 17 00 00 00       	pushq  $0x17
 cfb:	e9 70 fe ff ff       	jmpq   b70 <.plt>

0000000000000d00 <usleep@plt>:
 d00:	ff 25 ca e2 20 00    	jmpq   *0x20e2ca(%rip)        # 20efd0 <usleep@GLIBC_2.2.5>
 d06:	68 18 00 00 00       	pushq  $0x18
 d0b:	e9 60 fe ff ff       	jmpq   b70 <.plt>

Disassembly of section .plt.got:

0000000000000d10 <__cxa_finalize@plt>:
 d10:	ff 25 e2 e2 20 00    	jmpq   *0x20e2e2(%rip)        # 20eff8 <__cxa_finalize@GLIBC_2.2.5>
 d16:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000d20 <_start>:
     d20:	31 ed                	xor    %ebp,%ebp
     d22:	49 89 d1             	mov    %rdx,%r9
     d25:	5e                   	pop    %rsi
     d26:	48 89 e2             	mov    %rsp,%rdx
     d29:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     d2d:	50                   	push   %rax
     d2e:	54                   	push   %rsp
     d2f:	4c 8d 05 7a c7 00 00 	lea    0xc77a(%rip),%r8        # d4b0 <__libc_csu_fini>
     d36:	48 8d 0d 03 c7 00 00 	lea    0xc703(%rip),%rcx        # d440 <__libc_csu_init>
     d3d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # e2a <main>
     d44:	ff 15 96 e2 20 00    	callq  *0x20e296(%rip)        # 20efe0 <__libc_start_main@GLIBC_2.2.5>
     d4a:	f4                   	hlt    
     d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000d50 <deregister_tm_clones>:
     d50:	48 8d 3d c1 e2 20 00 	lea    0x20e2c1(%rip),%rdi        # 20f018 <__TMC_END__>
     d57:	55                   	push   %rbp
     d58:	48 8d 05 b9 e2 20 00 	lea    0x20e2b9(%rip),%rax        # 20f018 <__TMC_END__>
     d5f:	48 39 f8             	cmp    %rdi,%rax
     d62:	48 89 e5             	mov    %rsp,%rbp
     d65:	74 19                	je     d80 <deregister_tm_clones+0x30>
     d67:	48 8b 05 6a e2 20 00 	mov    0x20e26a(%rip),%rax        # 20efd8 <_ITM_deregisterTMCloneTable>
     d6e:	48 85 c0             	test   %rax,%rax
     d71:	74 0d                	je     d80 <deregister_tm_clones+0x30>
     d73:	5d                   	pop    %rbp
     d74:	ff e0                	jmpq   *%rax
     d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     d7d:	00 00 00 
     d80:	5d                   	pop    %rbp
     d81:	c3                   	retq   
     d82:	0f 1f 40 00          	nopl   0x0(%rax)
     d86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     d8d:	00 00 00 

0000000000000d90 <register_tm_clones>:
     d90:	48 8d 3d 81 e2 20 00 	lea    0x20e281(%rip),%rdi        # 20f018 <__TMC_END__>
     d97:	48 8d 35 7a e2 20 00 	lea    0x20e27a(%rip),%rsi        # 20f018 <__TMC_END__>
     d9e:	55                   	push   %rbp
     d9f:	48 29 fe             	sub    %rdi,%rsi
     da2:	48 89 e5             	mov    %rsp,%rbp
     da5:	48 c1 fe 03          	sar    $0x3,%rsi
     da9:	48 89 f0             	mov    %rsi,%rax
     dac:	48 c1 e8 3f          	shr    $0x3f,%rax
     db0:	48 01 c6             	add    %rax,%rsi
     db3:	48 d1 fe             	sar    %rsi
     db6:	74 18                	je     dd0 <register_tm_clones+0x40>
     db8:	48 8b 05 31 e2 20 00 	mov    0x20e231(%rip),%rax        # 20eff0 <_ITM_registerTMCloneTable>
     dbf:	48 85 c0             	test   %rax,%rax
     dc2:	74 0c                	je     dd0 <register_tm_clones+0x40>
     dc4:	5d                   	pop    %rbp
     dc5:	ff e0                	jmpq   *%rax
     dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     dce:	00 00 
     dd0:	5d                   	pop    %rbp
     dd1:	c3                   	retq   
     dd2:	0f 1f 40 00          	nopl   0x0(%rax)
     dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     ddd:	00 00 00 

0000000000000de0 <__do_global_dtors_aux>:
     de0:	80 3d 39 e2 20 00 00 	cmpb   $0x0,0x20e239(%rip)        # 20f020 <completed.7696>
     de7:	75 2f                	jne    e18 <__do_global_dtors_aux+0x38>
     de9:	48 83 3d 07 e2 20 00 	cmpq   $0x0,0x20e207(%rip)        # 20eff8 <__cxa_finalize@GLIBC_2.2.5>
     df0:	00 
     df1:	55                   	push   %rbp
     df2:	48 89 e5             	mov    %rsp,%rbp
     df5:	74 0c                	je     e03 <__do_global_dtors_aux+0x23>
     df7:	48 8b 3d 0a e2 20 00 	mov    0x20e20a(%rip),%rdi        # 20f008 <__dso_handle>
     dfe:	e8 0d ff ff ff       	callq  d10 <__cxa_finalize@plt>
     e03:	e8 48 ff ff ff       	callq  d50 <deregister_tm_clones>
     e08:	c6 05 11 e2 20 00 01 	movb   $0x1,0x20e211(%rip)        # 20f020 <completed.7696>
     e0f:	5d                   	pop    %rbp
     e10:	c3                   	retq   
     e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     e18:	f3 c3                	repz retq 
     e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000e20 <frame_dummy>:
     e20:	55                   	push   %rbp
     e21:	48 89 e5             	mov    %rsp,%rbp
     e24:	5d                   	pop    %rbp
     e25:	e9 66 ff ff ff       	jmpq   d90 <register_tm_clones>

0000000000000e2a <main>:
     e2a:	55                   	push   %rbp
     e2b:	48 89 e5             	mov    %rsp,%rbp
     e2e:	48 83 ec 10          	sub    $0x10,%rsp
     e32:	89 7d fc             	mov    %edi,-0x4(%rbp)
     e35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
     e39:	48 8d 05 84 c6 00 00 	lea    0xc684(%rip),%rax        # d4c4 <_IO_stdin_used+0x4>
     e40:	48 89 05 e9 e1 20 00 	mov    %rax,0x20e1e9(%rip)        # 20f030 <vatr>
     e47:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
     e4b:	7e 0f                	jle    e5c <main+0x32>
     e4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     e51:	48 8b 40 08          	mov    0x8(%rax),%rax
     e55:	48 89 05 d4 e1 20 00 	mov    %rax,0x20e1d4(%rip)        # 20f030 <vatr>
     e5c:	b8 00 00 00 00       	mov    $0x0,%eax
     e61:	e8 db c2 00 00       	callq  d141 <vfm_do>
     e66:	b8 00 00 00 00       	mov    $0x0,%eax
     e6b:	c9                   	leaveq 
     e6c:	c3                   	retq   

0000000000000e6d <v2r>:
__u8 mem[MEMSIZE+3+4];

__u8 * DescriptorTable [16];

__u8 * v2r(__u32 VAddr)
{
     e6d:	55                   	push   %rbp
     e6e:	48 89 e5             	mov    %rsp,%rbp
     e71:	89 7d fc             	mov    %edi,-0x4(%rbp)
//	return &mem[VAddr];
	return &  (DescriptorTable [ VAddr >> (32-4) ])[VAddr];
     e74:	8b 45 fc             	mov    -0x4(%rbp),%eax
     e77:	c1 e8 1c             	shr    $0x1c,%eax
     e7a:	89 c0                	mov    %eax,%eax
     e7c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e83:	00 
     e84:	48 8d 05 b5 e1 20 00 	lea    0x20e1b5(%rip),%rax        # 20f040 <DescriptorTable>
     e8b:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
     e8f:	8b 45 fc             	mov    -0x4(%rbp),%eax
     e92:	48 01 d0             	add    %rdx,%rax
}
     e95:	5d                   	pop    %rbp
     e96:	c3                   	retq   

0000000000000e97 <make_name>:

char filename[256];
char FileErrName[256];

int make_name(char *addr,__u32 len)
{
     e97:	55                   	push   %rbp
     e98:	48 89 e5             	mov    %rsp,%rbp
     e9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     e9f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 int i;
 for(i=0;i<len && i<256;i++) {
     ea2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
     ea9:	eb 24                	jmp    ecf <make_name+0x38>
//    if(addr[i]=='.' && addr[i+1]=='.') return 0;
    filename[i]=addr[i];
     eab:	8b 45 fc             	mov    -0x4(%rbp),%eax
     eae:	48 63 d0             	movslq %eax,%rdx
     eb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     eb5:	48 01 d0             	add    %rdx,%rax
     eb8:	0f b6 08             	movzbl (%rax),%ecx
     ebb:	8b 45 fc             	mov    -0x4(%rbp),%eax
     ebe:	48 63 d0             	movslq %eax,%rdx
     ec1:	48 8d 05 b8 e3 60 00 	lea    0x60e3b8(%rip),%rax        # 60f280 <filename>
     ec8:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 for(i=0;i<len && i<256;i++) {
     ecb:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
     ecf:	8b 45 fc             	mov    -0x4(%rbp),%eax
     ed2:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
     ed5:	76 09                	jbe    ee0 <make_name+0x49>
     ed7:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
     ede:	7e cb                	jle    eab <make_name+0x14>
   /* Prohibit filenames in other directories */
 }
 filename[i]='\0';
     ee0:	8b 45 fc             	mov    -0x4(%rbp),%eax
     ee3:	48 63 d0             	movslq %eax,%rdx
     ee6:	48 8d 05 93 e3 60 00 	lea    0x60e393(%rip),%rax        # 60f280 <filename>
     eed:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
 return 1;
     ef1:	b8 01 00 00 00       	mov    $0x1,%eax
}
     ef6:	5d                   	pop    %rbp
     ef7:	c3                   	retq   

0000000000000ef8 <umul>:

/* Multiply 32-bit unsigned numbers *a and *b.
   High half of 64-bit result in *a, low half in *b
*/
static void umul(__u32 *a,__u32 *b)
{
     ef8:	55                   	push   %rbp
     ef9:	48 89 e5             	mov    %rsp,%rbp
     efc:	48 83 ec 70          	sub    $0x70,%rsp
     f00:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     f04:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
     f08:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     f0f:	00 00 
     f11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     f15:	31 c0                	xor    %eax,%eax
 __u32 ah,al,bh,bl,ph,pm1,pm2,pl;
 char cc[44];
 ah=*a>>16;al=*a&0xffff;
     f17:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     f1b:	8b 00                	mov    (%rax),%eax
     f1d:	c1 e8 10             	shr    $0x10,%eax
     f20:	89 45 a8             	mov    %eax,-0x58(%rbp)
     f23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     f27:	8b 00                	mov    (%rax),%eax
     f29:	25 ff ff 00 00       	and    $0xffff,%eax
     f2e:	89 45 ac             	mov    %eax,-0x54(%rbp)
 bh=*b>>16;bl=*b&0xffff;
     f31:	48 8b 45 90          	mov    -0x70(%rbp),%rax
     f35:	8b 00                	mov    (%rax),%eax
     f37:	c1 e8 10             	shr    $0x10,%eax
     f3a:	89 45 b0             	mov    %eax,-0x50(%rbp)
     f3d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
     f41:	8b 00                	mov    (%rax),%eax
     f43:	25 ff ff 00 00       	and    $0xffff,%eax
     f48:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 //sprintf(cc,"umul=%x %x\n",*b,vtst); write(1,cc,strlen(cc));

 pl=al*bl;
     f4b:	8b 45 ac             	mov    -0x54(%rbp),%eax
     f4e:	0f af 45 b4          	imul   -0x4c(%rbp),%eax
     f52:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 if((ah|bh)==0) {
     f55:	8b 45 a8             	mov    -0x58(%rbp),%eax
     f58:	0b 45 b0             	or     -0x50(%rbp),%eax
     f5b:	85 c0                	test   %eax,%eax
     f5d:	75 09                	jne    f68 <umul+0x70>
  ph=0;
     f5f:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
     f66:	eb 6c                	jmp    fd4 <umul+0xdc>
 } else {
  pm1=al*bh;
     f68:	8b 45 ac             	mov    -0x54(%rbp),%eax
     f6b:	0f af 45 b0          	imul   -0x50(%rbp),%eax
     f6f:	89 45 b8             	mov    %eax,-0x48(%rbp)
  pm2=ah*bl;
     f72:	8b 45 a8             	mov    -0x58(%rbp),%eax
     f75:	0f af 45 b4          	imul   -0x4c(%rbp),%eax
     f79:	89 45 bc             	mov    %eax,-0x44(%rbp)
  ph=ah*bh;
     f7c:	8b 45 a8             	mov    -0x58(%rbp),%eax
     f7f:	0f af 45 b0          	imul   -0x50(%rbp),%eax
     f83:	89 45 a0             	mov    %eax,-0x60(%rbp)
  pl=pl+(pm1<<16);
     f86:	8b 45 b8             	mov    -0x48(%rbp),%eax
     f89:	c1 e0 10             	shl    $0x10,%eax
     f8c:	01 45 a4             	add    %eax,-0x5c(%rbp)
  ph+=(pl<(pm1<<16));
     f8f:	8b 45 b8             	mov    -0x48(%rbp),%eax
     f92:	c1 e0 10             	shl    $0x10,%eax
     f95:	39 45 a4             	cmp    %eax,-0x5c(%rbp)
     f98:	0f 92 c0             	setb   %al
     f9b:	0f b6 c0             	movzbl %al,%eax
     f9e:	01 45 a0             	add    %eax,-0x60(%rbp)
  pl=pl+(pm2<<16);
     fa1:	8b 45 bc             	mov    -0x44(%rbp),%eax
     fa4:	c1 e0 10             	shl    $0x10,%eax
     fa7:	01 45 a4             	add    %eax,-0x5c(%rbp)
  ph+=(pl<(pm2<<16));
     faa:	8b 45 bc             	mov    -0x44(%rbp),%eax
     fad:	c1 e0 10             	shl    $0x10,%eax
     fb0:	39 45 a4             	cmp    %eax,-0x5c(%rbp)
     fb3:	0f 92 c0             	setb   %al
     fb6:	0f b6 c0             	movzbl %al,%eax
     fb9:	01 45 a0             	add    %eax,-0x60(%rbp)
  ph=ph+(pm1>>16)+(pm2>>16);
     fbc:	8b 45 b8             	mov    -0x48(%rbp),%eax
     fbf:	c1 e8 10             	shr    $0x10,%eax
     fc2:	89 c2                	mov    %eax,%edx
     fc4:	8b 45 a0             	mov    -0x60(%rbp),%eax
     fc7:	01 c2                	add    %eax,%edx
     fc9:	8b 45 bc             	mov    -0x44(%rbp),%eax
     fcc:	c1 e8 10             	shr    $0x10,%eax
     fcf:	01 d0                	add    %edx,%eax
     fd1:	89 45 a0             	mov    %eax,-0x60(%rbp)
 }
 *a=ph;*b=pl;
     fd4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     fd8:	8b 55 a0             	mov    -0x60(%rbp),%edx
     fdb:	89 10                	mov    %edx,(%rax)
     fdd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
     fe1:	8b 55 a4             	mov    -0x5c(%rbp),%edx
     fe4:	89 10                	mov    %edx,(%rax)
}
     fe6:	90                   	nop
     fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     feb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     ff2:	00 00 
     ff4:	74 05                	je     ffb <umul+0x103>
     ff6:	e8 15 fc ff ff       	callq  c10 <__stack_chk_fail@plt>
     ffb:	c9                   	leaveq 
     ffc:	c3                   	retq   

0000000000000ffd <udiv>:

/* Divide 64-bit unsigned number (high half *b, low half *c) by
   32-bit unsigend number in *a. Quotient in *b, remainder in *c.
*/
static void udiv(__u32 *a,__u32 *b,__u32 *c)
{
     ffd:	55                   	push   %rbp
     ffe:	48 89 e5             	mov    %rsp,%rbp
    1001:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1005:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1009:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 __u32 d,qh,ql;
 int i,cy;
 qh=*b;ql=*c;d=*a;
    100d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1011:	8b 00                	mov    (%rax),%eax
    1013:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1016:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    101a:	8b 00                	mov    (%rax),%eax
    101c:	89 45 f0             	mov    %eax,-0x10(%rbp)
    101f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1023:	8b 00                	mov    (%rax),%eax
    1025:	89 45 f8             	mov    %eax,-0x8(%rbp)
 if(qh==0) {
    1028:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    102c:	75 26                	jne    1054 <udiv+0x57>
  *b=ql/d;
    102e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1031:	ba 00 00 00 00       	mov    $0x0,%edx
    1036:	f7 75 f8             	divl   -0x8(%rbp)
    1039:	89 c2                	mov    %eax,%edx
    103b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    103f:	89 10                	mov    %edx,(%rax)
  *c=ql%d;
    1041:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1044:	ba 00 00 00 00       	mov    $0x0,%edx
    1049:	f7 75 f8             	divl   -0x8(%rbp)
    104c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1050:	89 10                	mov    %edx,(%rax)
   }
   *c=qh;
   *b=ql;
  }
 }
}
    1052:	eb 60                	jmp    10b4 <udiv+0xb7>
  for(i=0;i<32;i++) {
    1054:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    105b:	eb 51                	jmp    10ae <udiv+0xb1>
   cy=qh&0x80000000;
    105d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1060:	25 00 00 00 80       	and    $0x80000000,%eax
    1065:	89 45 fc             	mov    %eax,-0x4(%rbp)
   qh<<=1;
    1068:	d1 65 ec             	shll   -0x14(%rbp)
   if(ql&0x80000000)qh++;
    106b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    106e:	85 c0                	test   %eax,%eax
    1070:	79 04                	jns    1076 <udiv+0x79>
    1072:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
   ql<<=1;
    1076:	d1 65 f0             	shll   -0x10(%rbp)
   if(qh>=d||cy) {
    1079:	8b 45 ec             	mov    -0x14(%rbp),%eax
    107c:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    107f:	73 06                	jae    1087 <udiv+0x8a>
    1081:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1085:	74 11                	je     1098 <udiv+0x9b>
    qh-=d;
    1087:	8b 45 f8             	mov    -0x8(%rbp),%eax
    108a:	29 45 ec             	sub    %eax,-0x14(%rbp)
    ql++;
    108d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    cy=0;
    1091:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   *c=qh;
    1098:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    109c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    109f:	89 10                	mov    %edx,(%rax)
   *b=ql;
    10a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    10a5:	8b 55 f0             	mov    -0x10(%rbp),%edx
    10a8:	89 10                	mov    %edx,(%rax)
  for(i=0;i<32;i++) {
    10aa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    10ae:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
    10b2:	7e a9                	jle    105d <udiv+0x60>
}
    10b4:	90                   	nop
    10b5:	5d                   	pop    %rbp
    10b6:	c3                   	retq   

00000000000010b7 <COM>:
  sw_hi
};


void COM(__u32 dd)
{ 
    10b7:	55                   	push   %rbp
    10b8:	48 89 e5             	mov    %rsp,%rbp
    10bb:	48 83 ec 08          	sub    $0x8,%rsp
    10bf:	89 7d fc             	mov    %edi,-0x4(%rbp)
 CELL(HERE)=dd;
    10c2:	48 8b 05 bf e2 60 00 	mov    0x60e2bf(%rip),%rax        # 60f388 <f_boot>
    10c9:	48 05 20 01 00 00    	add    $0x120,%rax
    10cf:	89 c2                	mov    %eax,%edx
    10d1:	48 8b 05 b0 e2 60 00 	mov    0x60e2b0(%rip),%rax        # 60f388 <f_boot>
    10d8:	29 c2                	sub    %eax,%edx
    10da:	89 d0                	mov    %edx,%eax
    10dc:	89 c7                	mov    %eax,%edi
    10de:	e8 8a fd ff ff       	callq  e6d <v2r>
    10e3:	8b 00                	mov    (%rax),%eax
    10e5:	89 c7                	mov    %eax,%edi
    10e7:	e8 81 fd ff ff       	callq  e6d <v2r>
    10ec:	48 89 c2             	mov    %rax,%rdx
    10ef:	8b 45 fc             	mov    -0x4(%rbp),%eax
    10f2:	89 02                	mov    %eax,(%rdx)
HERE+=4;
    10f4:	48 8b 05 8d e2 60 00 	mov    0x60e28d(%rip),%rax        # 60f388 <f_boot>
    10fb:	48 05 20 01 00 00    	add    $0x120,%rax
    1101:	89 c2                	mov    %eax,%edx
    1103:	48 8b 05 7e e2 60 00 	mov    0x60e27e(%rip),%rax        # 60f388 <f_boot>
    110a:	29 c2                	sub    %eax,%edx
    110c:	89 d0                	mov    %edx,%eax
    110e:	89 c7                	mov    %eax,%edi
    1110:	e8 58 fd ff ff       	callq  e6d <v2r>
    1115:	8b 10                	mov    (%rax),%edx
    1117:	83 c2 04             	add    $0x4,%edx
    111a:	89 10                	mov    %edx,(%rax)
}
    111c:	90                   	nop
    111d:	c9                   	leaveq 
    111e:	c3                   	retq   

000000000000111f <WCOM>:

void WCOM(__u16 dd)
{ 
    111f:	55                   	push   %rbp
    1120:	48 89 e5             	mov    %rsp,%rbp
    1123:	48 83 ec 08          	sub    $0x8,%rsp
    1127:	89 f8                	mov    %edi,%eax
    1129:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
	WCELL(HERE)=dd;
    112d:	48 8b 05 54 e2 60 00 	mov    0x60e254(%rip),%rax        # 60f388 <f_boot>
    1134:	48 05 20 01 00 00    	add    $0x120,%rax
    113a:	89 c2                	mov    %eax,%edx
    113c:	48 8b 05 45 e2 60 00 	mov    0x60e245(%rip),%rax        # 60f388 <f_boot>
    1143:	29 c2                	sub    %eax,%edx
    1145:	89 d0                	mov    %edx,%eax
    1147:	89 c7                	mov    %eax,%edi
    1149:	e8 1f fd ff ff       	callq  e6d <v2r>
    114e:	8b 00                	mov    (%rax),%eax
    1150:	89 c7                	mov    %eax,%edi
    1152:	e8 16 fd ff ff       	callq  e6d <v2r>
    1157:	48 89 c2             	mov    %rax,%rdx
    115a:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
    115e:	66 89 02             	mov    %ax,(%rdx)
	HERE+=2;
    1161:	48 8b 05 20 e2 60 00 	mov    0x60e220(%rip),%rax        # 60f388 <f_boot>
    1168:	48 05 20 01 00 00    	add    $0x120,%rax
    116e:	89 c2                	mov    %eax,%edx
    1170:	48 8b 05 11 e2 60 00 	mov    0x60e211(%rip),%rax        # 60f388 <f_boot>
    1177:	29 c2                	sub    %eax,%edx
    1179:	89 d0                	mov    %edx,%eax
    117b:	89 c7                	mov    %eax,%edi
    117d:	e8 eb fc ff ff       	callq  e6d <v2r>
    1182:	8b 10                	mov    (%rax),%edx
    1184:	83 c2 02             	add    $0x2,%edx
    1187:	89 10                	mov    %edx,(%rax)
}
    1189:	90                   	nop
    118a:	c9                   	leaveq 
    118b:	c3                   	retq   

000000000000118c <CCOM>:

void CCOM(__u8 dd)
{ 
    118c:	55                   	push   %rbp
    118d:	48 89 e5             	mov    %rsp,%rbp
    1190:	48 83 ec 08          	sub    $0x8,%rsp
    1194:	89 f8                	mov    %edi,%eax
    1196:	88 45 fc             	mov    %al,-0x4(%rbp)
 BYTE(HERE)=dd;
    1199:	48 8b 05 e8 e1 60 00 	mov    0x60e1e8(%rip),%rax        # 60f388 <f_boot>
    11a0:	48 05 20 01 00 00    	add    $0x120,%rax
    11a6:	89 c2                	mov    %eax,%edx
    11a8:	48 8b 05 d9 e1 60 00 	mov    0x60e1d9(%rip),%rax        # 60f388 <f_boot>
    11af:	29 c2                	sub    %eax,%edx
    11b1:	89 d0                	mov    %edx,%eax
    11b3:	89 c7                	mov    %eax,%edi
    11b5:	e8 b3 fc ff ff       	callq  e6d <v2r>
    11ba:	8b 00                	mov    (%rax),%eax
    11bc:	89 c7                	mov    %eax,%edi
    11be:	e8 aa fc ff ff       	callq  e6d <v2r>
    11c3:	48 89 c2             	mov    %rax,%rdx
    11c6:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
    11ca:	88 02                	mov    %al,(%rdx)
  HERE+=1;
    11cc:	48 8b 05 b5 e1 60 00 	mov    0x60e1b5(%rip),%rax        # 60f388 <f_boot>
    11d3:	48 05 20 01 00 00    	add    $0x120,%rax
    11d9:	89 c2                	mov    %eax,%edx
    11db:	48 8b 05 a6 e1 60 00 	mov    0x60e1a6(%rip),%rax        # 60f388 <f_boot>
    11e2:	29 c2                	sub    %eax,%edx
    11e4:	89 d0                	mov    %edx,%eax
    11e6:	89 c7                	mov    %eax,%edi
    11e8:	e8 80 fc ff ff       	callq  e6d <v2r>
    11ed:	8b 10                	mov    (%rax),%edx
    11ef:	83 c2 01             	add    $0x1,%edx
    11f2:	89 10                	mov    %edx,(%rax)
}
    11f4:	90                   	nop
    11f5:	c9                   	leaveq 
    11f6:	c3                   	retq   

00000000000011f7 <StrComp>:

void StrComp(__u8 * word,__u32 size)
{ __u32 addr1,addr0;
    11f7:	55                   	push   %rbp
    11f8:	48 89 e5             	mov    %rsp,%rbp
    11fb:	53                   	push   %rbx
    11fc:	48 83 ec 20          	sub    $0x20,%rsp
    1200:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    1204:	89 75 dc             	mov    %esi,-0x24(%rbp)
  
addr0=HERE;
    1207:	48 8b 05 7a e1 60 00 	mov    0x60e17a(%rip),%rax        # 60f388 <f_boot>
    120e:	48 05 20 01 00 00    	add    $0x120,%rax
    1214:	89 c2                	mov    %eax,%edx
    1216:	48 8b 05 6b e1 60 00 	mov    0x60e16b(%rip),%rax        # 60f388 <f_boot>
    121d:	29 c2                	sub    %eax,%edx
    121f:	89 d0                	mov    %edx,%eax
    1221:	89 c7                	mov    %eax,%edi
    1223:	e8 45 fc ff ff       	callq  e6d <v2r>
    1228:	8b 00                	mov    (%rax),%eax
    122a:	89 45 f4             	mov    %eax,-0xc(%rbp)
addr1=addr0+1;
    122d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1230:	83 c0 01             	add    $0x1,%eax
    1233:	89 45 f0             	mov    %eax,-0x10(%rbp)
while(size--)
    1236:	eb 24                	jmp    125c <StrComp+0x65>
	   BYTE(addr1++)=*word++;
    1238:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    123c:	48 8d 43 01          	lea    0x1(%rbx),%rax
    1240:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1244:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1247:	8d 50 01             	lea    0x1(%rax),%edx
    124a:	89 55 f0             	mov    %edx,-0x10(%rbp)
    124d:	89 c7                	mov    %eax,%edi
    124f:	e8 19 fc ff ff       	callq  e6d <v2r>
    1254:	48 89 c2             	mov    %rax,%rdx
    1257:	0f b6 03             	movzbl (%rbx),%eax
    125a:	88 02                	mov    %al,(%rdx)
while(size--)
    125c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    125f:	8d 50 ff             	lea    -0x1(%rax),%edx
    1262:	89 55 dc             	mov    %edx,-0x24(%rbp)
    1265:	85 c0                	test   %eax,%eax
    1267:	75 cf                	jne    1238 <StrComp+0x41>
BYTE(addr0)=addr1-addr0-1;
    1269:	8b 45 f0             	mov    -0x10(%rbp),%eax
    126c:	89 c2                	mov    %eax,%edx
    126e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1271:	89 d3                	mov    %edx,%ebx
    1273:	29 c3                	sub    %eax,%ebx
    1275:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1278:	89 c7                	mov    %eax,%edi
    127a:	e8 ee fb ff ff       	callq  e6d <v2r>
    127f:	48 89 c2             	mov    %rax,%rdx
    1282:	8d 43 ff             	lea    -0x1(%rbx),%eax
    1285:	88 02                	mov    %al,(%rdx)
HERE=addr1;
    1287:	48 8b 05 fa e0 60 00 	mov    0x60e0fa(%rip),%rax        # 60f388 <f_boot>
    128e:	48 05 20 01 00 00    	add    $0x120,%rax
    1294:	89 c2                	mov    %eax,%edx
    1296:	48 8b 05 eb e0 60 00 	mov    0x60e0eb(%rip),%rax        # 60f388 <f_boot>
    129d:	29 c2                	sub    %eax,%edx
    129f:	89 d0                	mov    %edx,%eax
    12a1:	89 c7                	mov    %eax,%edi
    12a3:	e8 c5 fb ff ff       	callq  e6d <v2r>
    12a8:	48 89 c2             	mov    %rax,%rdx
    12ab:	8b 45 f0             	mov    -0x10(%rbp),%eax
    12ae:	89 02                	mov    %eax,(%rdx)
if(HERE&1)CCOM(0);
    12b0:	48 8b 05 d1 e0 60 00 	mov    0x60e0d1(%rip),%rax        # 60f388 <f_boot>
    12b7:	48 05 20 01 00 00    	add    $0x120,%rax
    12bd:	89 c2                	mov    %eax,%edx
    12bf:	48 8b 05 c2 e0 60 00 	mov    0x60e0c2(%rip),%rax        # 60f388 <f_boot>
    12c6:	29 c2                	sub    %eax,%edx
    12c8:	89 d0                	mov    %edx,%eax
    12ca:	89 c7                	mov    %eax,%edi
    12cc:	e8 9c fb ff ff       	callq  e6d <v2r>
    12d1:	8b 00                	mov    (%rax),%eax
    12d3:	83 e0 01             	and    $0x1,%eax
    12d6:	85 c0                	test   %eax,%eax
    12d8:	74 0a                	je     12e4 <StrComp+0xed>
    12da:	bf 00 00 00 00       	mov    $0x0,%edi
    12df:	e8 a8 fe ff ff       	callq  118c <CCOM>
}
    12e4:	90                   	nop
    12e5:	48 83 c4 20          	add    $0x20,%rsp
    12e9:	5b                   	pop    %rbx
    12ea:	5d                   	pop    %rbp
    12eb:	c3                   	retq   

00000000000012ec <SHEADER>:

void SHEADER(__u8 * word,__u32 size)
{ //    if(   size  & ( ~0xff  )  )	 printf(  "\nSHEADER size = %d\n",size );
    12ec:	55                   	push   %rbp
    12ed:	48 89 e5             	mov    %rsp,%rbp
    12f0:	53                   	push   %rbx
    12f1:	48 83 ec 10          	sub    $0x10,%rsp
    12f5:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    12f9:	89 75 ec             	mov    %esi,-0x14(%rbp)
	COM(current);
    12fc:	48 8b 05 85 e0 60 00 	mov    0x60e085(%rip),%rax        # 60f388 <f_boot>
    1303:	48 05 74 01 00 00    	add    $0x174,%rax
    1309:	89 c2                	mov    %eax,%edx
    130b:	48 8b 05 76 e0 60 00 	mov    0x60e076(%rip),%rax        # 60f388 <f_boot>
    1312:	29 c2                	sub    %eax,%edx
    1314:	89 d0                	mov    %edx,%eax
    1316:	89 c7                	mov    %eax,%edi
    1318:	e8 50 fb ff ff       	callq  e6d <v2r>
    131d:	8b 00                	mov    (%rax),%eax
    131f:	89 c7                	mov    %eax,%edi
    1321:	e8 47 fb ff ff       	callq  e6d <v2r>
    1326:	8b 00                	mov    (%rax),%eax
    1328:	89 c7                	mov    %eax,%edi
    132a:	e8 88 fd ff ff       	callq  10b7 <COM>
   	last=HERE;
    132f:	48 8b 05 52 e0 60 00 	mov    0x60e052(%rip),%rax        # 60f388 <f_boot>
    1336:	48 05 20 01 00 00    	add    $0x120,%rax
    133c:	89 c2                	mov    %eax,%edx
    133e:	48 8b 05 43 e0 60 00 	mov    0x60e043(%rip),%rax        # 60f388 <f_boot>
    1345:	29 c2                	sub    %eax,%edx
    1347:	89 d0                	mov    %edx,%eax
    1349:	89 c7                	mov    %eax,%edi
    134b:	e8 1d fb ff ff       	callq  e6d <v2r>
    1350:	48 89 c3             	mov    %rax,%rbx
    1353:	48 8b 05 2e e0 60 00 	mov    0x60e02e(%rip),%rax        # 60f388 <f_boot>
    135a:	48 05 24 01 00 00    	add    $0x124,%rax
    1360:	89 c2                	mov    %eax,%edx
    1362:	48 8b 05 1f e0 60 00 	mov    0x60e01f(%rip),%rax        # 60f388 <f_boot>
    1369:	29 c2                	sub    %eax,%edx
    136b:	89 d0                	mov    %edx,%eax
    136d:	89 c7                	mov    %eax,%edi
    136f:	e8 f9 fa ff ff       	callq  e6d <v2r>
    1374:	48 89 c2             	mov    %rax,%rdx
    1377:	8b 03                	mov    (%rbx),%eax
    1379:	89 02                	mov    %eax,(%rdx)
	StrComp(word,size);
    137b:	8b 55 ec             	mov    -0x14(%rbp),%edx
    137e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1382:	89 d6                	mov    %edx,%esi
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 6b fe ff ff       	callq  11f7 <StrComp>
}
    138c:	90                   	nop
    138d:	48 83 c4 10          	add    $0x10,%rsp
    1391:	5b                   	pop    %rbx
    1392:	5d                   	pop    %rbp
    1393:	c3                   	retq   

0000000000001394 <HEADER>:


void HEADER(__u8 * word)
{  
    1394:	55                   	push   %rbp
    1395:	48 89 e5             	mov    %rsp,%rbp
    1398:	48 83 ec 18          	sub    $0x18,%rsp
    139c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	__u32 i;
    for (i = 0; word[i] != 0; i ++);
    13a0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    13a7:	eb 04                	jmp    13ad <HEADER+0x19>
    13a9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    13ad:	8b 55 fc             	mov    -0x4(%rbp),%edx
    13b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b4:	48 01 d0             	add    %rdx,%rax
    13b7:	0f b6 00             	movzbl (%rax),%eax
    13ba:	84 c0                	test   %al,%al
    13bc:	75 eb                	jne    13a9 <HEADER+0x15>
	SHEADER(word,i);
    13be:	8b 55 fc             	mov    -0x4(%rbp),%edx
    13c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13c5:	89 d6                	mov    %edx,%esi
    13c7:	48 89 c7             	mov    %rax,%rdi
    13ca:	e8 1d ff ff ff       	callq  12ec <SHEADER>
}
    13cf:	90                   	nop
    13d0:	c9                   	leaveq 
    13d1:	c3                   	retq   

00000000000013d2 <IMMED>:

void IMMED()
{       
    13d2:	55                   	push   %rbp
    13d3:	48 89 e5             	mov    %rsp,%rbp
    13d6:	53                   	push   %rbx
	BYTE(last)=BYTE(last)|0x80;
    13d7:	48 8b 05 aa df 60 00 	mov    0x60dfaa(%rip),%rax        # 60f388 <f_boot>
    13de:	48 05 24 01 00 00    	add    $0x124,%rax
    13e4:	89 c2                	mov    %eax,%edx
    13e6:	48 8b 05 9b df 60 00 	mov    0x60df9b(%rip),%rax        # 60f388 <f_boot>
    13ed:	29 c2                	sub    %eax,%edx
    13ef:	89 d0                	mov    %edx,%eax
    13f1:	89 c7                	mov    %eax,%edi
    13f3:	e8 75 fa ff ff       	callq  e6d <v2r>
    13f8:	8b 00                	mov    (%rax),%eax
    13fa:	89 c7                	mov    %eax,%edi
    13fc:	e8 6c fa ff ff       	callq  e6d <v2r>
    1401:	0f b6 18             	movzbl (%rax),%ebx
    1404:	48 8b 05 7d df 60 00 	mov    0x60df7d(%rip),%rax        # 60f388 <f_boot>
    140b:	48 05 24 01 00 00    	add    $0x124,%rax
    1411:	89 c2                	mov    %eax,%edx
    1413:	48 8b 05 6e df 60 00 	mov    0x60df6e(%rip),%rax        # 60f388 <f_boot>
    141a:	29 c2                	sub    %eax,%edx
    141c:	89 d0                	mov    %edx,%eax
    141e:	89 c7                	mov    %eax,%edi
    1420:	e8 48 fa ff ff       	callq  e6d <v2r>
    1425:	8b 00                	mov    (%rax),%eax
    1427:	89 c7                	mov    %eax,%edi
    1429:	e8 3f fa ff ff       	callq  e6d <v2r>
    142e:	83 cb 80             	or     $0xffffff80,%ebx
    1431:	89 da                	mov    %ebx,%edx
    1433:	88 10                	mov    %dl,(%rax)
}
    1435:	90                   	nop
    1436:	5b                   	pop    %rbx
    1437:	5d                   	pop    %rbp
    1438:	c3                   	retq   

0000000000001439 <PRIM>:

void PRIM(__u8 * word,__u32 cod)
{	
    1439:	55                   	push   %rbp
    143a:	48 89 e5             	mov    %rsp,%rbp
    143d:	53                   	push   %rbx
    143e:	48 83 ec 10          	sub    $0x10,%rsp
    1442:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1446:	89 75 ec             	mov    %esi,-0x14(%rbp)
	HEADER(word);
    1449:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    144d:	48 89 c7             	mov    %rax,%rdi
    1450:	e8 3f ff ff ff       	callq  1394 <HEADER>
	current=last;
    1455:	48 8b 05 2c df 60 00 	mov    0x60df2c(%rip),%rax        # 60f388 <f_boot>
    145c:	48 05 24 01 00 00    	add    $0x124,%rax
    1462:	89 c2                	mov    %eax,%edx
    1464:	48 8b 05 1d df 60 00 	mov    0x60df1d(%rip),%rax        # 60f388 <f_boot>
    146b:	29 c2                	sub    %eax,%edx
    146d:	89 d0                	mov    %edx,%eax
    146f:	89 c7                	mov    %eax,%edi
    1471:	e8 f7 f9 ff ff       	callq  e6d <v2r>
    1476:	48 89 c3             	mov    %rax,%rbx
    1479:	48 8b 05 08 df 60 00 	mov    0x60df08(%rip),%rax        # 60f388 <f_boot>
    1480:	48 05 74 01 00 00    	add    $0x174,%rax
    1486:	89 c2                	mov    %eax,%edx
    1488:	48 8b 05 f9 de 60 00 	mov    0x60def9(%rip),%rax        # 60f388 <f_boot>
    148f:	29 c2                	sub    %eax,%edx
    1491:	89 d0                	mov    %edx,%eax
    1493:	89 c7                	mov    %eax,%edi
    1495:	e8 d3 f9 ff ff       	callq  e6d <v2r>
    149a:	8b 00                	mov    (%rax),%eax
    149c:	89 c7                	mov    %eax,%edi
    149e:	e8 ca f9 ff ff       	callq  e6d <v2r>
    14a3:	48 89 c2             	mov    %rax,%rdx
    14a6:	8b 03                	mov    (%rbx),%eax
    14a8:	89 02                	mov    %eax,(%rdx)
	COM(cod<<1|0x8001);
    14aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
    14ad:	01 c0                	add    %eax,%eax
    14af:	0d 01 80 00 00       	or     $0x8001,%eax
    14b4:	89 c7                	mov    %eax,%edi
    14b6:	e8 fc fb ff ff       	callq  10b7 <COM>
}
    14bb:	90                   	nop
    14bc:	48 83 c4 10          	add    $0x10,%rsp
    14c0:	5b                   	pop    %rbx
    14c1:	5d                   	pop    %rbp
    14c2:	c3                   	retq   

00000000000014c3 <CONSTANT>:

void CONSTANT(__u8 * word,__u32 dd)
{	
    14c3:	55                   	push   %rbp
    14c4:	48 89 e5             	mov    %rsp,%rbp
    14c7:	53                   	push   %rbx
    14c8:	48 83 ec 10          	sub    $0x10,%rsp
    14cc:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    14d0:	89 75 ec             	mov    %esi,-0x14(%rbp)
	HEADER(word);
    14d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14d7:	48 89 c7             	mov    %rax,%rdi
    14da:	e8 b5 fe ff ff       	callq  1394 <HEADER>
	current=last;
    14df:	48 8b 05 a2 de 60 00 	mov    0x60dea2(%rip),%rax        # 60f388 <f_boot>
    14e6:	48 05 24 01 00 00    	add    $0x124,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 05 93 de 60 00 	mov    0x60de93(%rip),%rax        # 60f388 <f_boot>
    14f5:	29 c2                	sub    %eax,%edx
    14f7:	89 d0                	mov    %edx,%eax
    14f9:	89 c7                	mov    %eax,%edi
    14fb:	e8 6d f9 ff ff       	callq  e6d <v2r>
    1500:	48 89 c3             	mov    %rax,%rbx
    1503:	48 8b 05 7e de 60 00 	mov    0x60de7e(%rip),%rax        # 60f388 <f_boot>
    150a:	48 05 74 01 00 00    	add    $0x174,%rax
    1510:	89 c2                	mov    %eax,%edx
    1512:	48 8b 05 6f de 60 00 	mov    0x60de6f(%rip),%rax        # 60f388 <f_boot>
    1519:	29 c2                	sub    %eax,%edx
    151b:	89 d0                	mov    %edx,%eax
    151d:	89 c7                	mov    %eax,%edi
    151f:	e8 49 f9 ff ff       	callq  e6d <v2r>
    1524:	8b 00                	mov    (%rax),%eax
    1526:	89 c7                	mov    %eax,%edi
    1528:	e8 40 f9 ff ff       	callq  e6d <v2r>
    152d:	48 89 c2             	mov    %rax,%rdx
    1530:	8b 03                	mov    (%rbx),%eax
    1532:	89 02                	mov    %eax,(%rdx)
	COM(sw_lit<<1|0x4001);
    1534:	bf a3 40 00 00       	mov    $0x40a3,%edi
    1539:	e8 79 fb ff ff       	callq  10b7 <COM>
	COM(dd);
    153e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1541:	89 c7                	mov    %eax,%edi
    1543:	e8 6f fb ff ff       	callq  10b7 <COM>
}
    1548:	90                   	nop
    1549:	48 83 c4 10          	add    $0x10,%rsp
    154d:	5b                   	pop    %rbx
    154e:	5d                   	pop    %rbp
    154f:	c3                   	retq   

0000000000001550 <CREATE>:

void CREATE(__u8 * word)
	{	
    1550:	55                   	push   %rbp
    1551:	48 89 e5             	mov    %rsp,%rbp
    1554:	53                   	push   %rbx
    1555:	48 83 ec 08          	sub    $0x8,%rsp
    1559:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
	HEADER(word);
    155d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1561:	48 89 c7             	mov    %rax,%rdi
    1564:	e8 2b fe ff ff       	callq  1394 <HEADER>
	current=last;
    1569:	48 8b 05 18 de 60 00 	mov    0x60de18(%rip),%rax        # 60f388 <f_boot>
    1570:	48 05 24 01 00 00    	add    $0x124,%rax
    1576:	89 c2                	mov    %eax,%edx
    1578:	48 8b 05 09 de 60 00 	mov    0x60de09(%rip),%rax        # 60f388 <f_boot>
    157f:	29 c2                	sub    %eax,%edx
    1581:	89 d0                	mov    %edx,%eax
    1583:	89 c7                	mov    %eax,%edi
    1585:	e8 e3 f8 ff ff       	callq  e6d <v2r>
    158a:	48 89 c3             	mov    %rax,%rbx
    158d:	48 8b 05 f4 dd 60 00 	mov    0x60ddf4(%rip),%rax        # 60f388 <f_boot>
    1594:	48 05 74 01 00 00    	add    $0x174,%rax
    159a:	89 c2                	mov    %eax,%edx
    159c:	48 8b 05 e5 dd 60 00 	mov    0x60dde5(%rip),%rax        # 60f388 <f_boot>
    15a3:	29 c2                	sub    %eax,%edx
    15a5:	89 d0                	mov    %edx,%eax
    15a7:	89 c7                	mov    %eax,%edi
    15a9:	e8 bf f8 ff ff       	callq  e6d <v2r>
    15ae:	8b 00                	mov    (%rax),%eax
    15b0:	89 c7                	mov    %eax,%edi
    15b2:	e8 b6 f8 ff ff       	callq  e6d <v2r>
    15b7:	48 89 c2             	mov    %rax,%rdx
    15ba:	8b 03                	mov    (%rbx),%eax
    15bc:	89 02                	mov    %eax,(%rdx)
	COM(sw_ip<<1|0x4001);
    15be:	bf a1 40 00 00       	mov    $0x40a1,%edi
    15c3:	e8 ef fa ff ff       	callq  10b7 <COM>
}
    15c8:	90                   	nop
    15c9:	48 83 c4 08          	add    $0x8,%rsp
    15cd:	5b                   	pop    %rbx
    15ce:	5d                   	pop    %rbp
    15cf:	c3                   	retq   

00000000000015d0 <VARIABLE>:

void VARIABLE(__u8 * word)
{	
    15d0:	55                   	push   %rbp
    15d1:	48 89 e5             	mov    %rsp,%rbp
    15d4:	48 83 ec 08          	sub    $0x8,%rsp
    15d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	CREATE(word);
    15dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15e0:	48 89 c7             	mov    %rax,%rdi
    15e3:	e8 68 ff ff ff       	callq  1550 <CREATE>
	COM(0);
    15e8:	bf 00 00 00 00       	mov    $0x0,%edi
    15ed:	e8 c5 fa ff ff       	callq  10b7 <COM>
}
    15f2:	90                   	nop
    15f3:	c9                   	leaveq 
    15f4:	c3                   	retq   

00000000000015f5 <memcasecmp>:

#ifndef memcasecmp
__u32 memcasecmp (const void *vs1, const void *vs2, __u32 n)
{
    15f5:	55                   	push   %rbp
    15f6:	48 89 e5             	mov    %rsp,%rbp
    15f9:	53                   	push   %rbx
    15fa:	48 83 ec 48          	sub    $0x48,%rsp
    15fe:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    1602:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    1606:	89 55 bc             	mov    %edx,-0x44(%rbp)
  unsigned int i;
  unsigned char const *s1 = (unsigned char const *) vs1;
    1609:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    160d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  unsigned char const *s2 = (unsigned char const *) vs2;
    1611:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1615:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (i = 0; i < n; i++)
    1619:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    1620:	eb 62                	jmp    1684 <memcasecmp+0x8f>
    {
      unsigned char u1 = *s1++;
    1622:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1626:	48 8d 50 01          	lea    0x1(%rax),%rdx
    162a:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    162e:	0f b6 00             	movzbl (%rax),%eax
    1631:	88 45 da             	mov    %al,-0x26(%rbp)
      unsigned char u2 = *s2++;
    1634:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1638:	48 8d 50 01          	lea    0x1(%rax),%rdx
    163c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1640:	0f b6 00             	movzbl (%rax),%eax
    1643:	88 45 db             	mov    %al,-0x25(%rbp)
      if (toupper (u1) != toupper (u2))
    1646:	0f b6 45 da          	movzbl -0x26(%rbp),%eax
    164a:	89 c7                	mov    %eax,%edi
    164c:	e8 4f f5 ff ff       	callq  ba0 <toupper@plt>
    1651:	89 c3                	mov    %eax,%ebx
    1653:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
    1657:	89 c7                	mov    %eax,%edi
    1659:	e8 42 f5 ff ff       	callq  ba0 <toupper@plt>
    165e:	39 c3                	cmp    %eax,%ebx
    1660:	74 1e                	je     1680 <memcasecmp+0x8b>
        return toupper (u1) - toupper (u2);
    1662:	0f b6 45 da          	movzbl -0x26(%rbp),%eax
    1666:	89 c7                	mov    %eax,%edi
    1668:	e8 33 f5 ff ff       	callq  ba0 <toupper@plt>
    166d:	89 c3                	mov    %eax,%ebx
    166f:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
    1673:	89 c7                	mov    %eax,%edi
    1675:	e8 26 f5 ff ff       	callq  ba0 <toupper@plt>
    167a:	29 c3                	sub    %eax,%ebx
    167c:	89 d8                	mov    %ebx,%eax
    167e:	eb 11                	jmp    1691 <memcasecmp+0x9c>
  for (i = 0; i < n; i++)
    1680:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    1684:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1687:	3b 45 bc             	cmp    -0x44(%rbp),%eax
    168a:	72 96                	jb     1622 <memcasecmp+0x2d>
    }
  return 0;
    168c:	b8 00 00 00 00       	mov    $0x0,%eax
}
    1691:	48 83 c4 48          	add    $0x48,%rsp
    1695:	5b                   	pop    %rbx
    1696:	5d                   	pop    %rbp
    1697:	c3                   	retq   

0000000000001698 <SEARCH>:
#endif

__u32 SEARCH(__u32 wid,  __u8 * word)
{ __u32 addr=wid;
    1698:	55                   	push   %rbp
    1699:	48 89 e5             	mov    %rsp,%rbp
    169c:	53                   	push   %rbx
    169d:	48 83 ec 28          	sub    $0x28,%rsp
    16a1:	89 7d dc             	mov    %edi,-0x24(%rbp)
    16a4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    16a8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    16ab:	89 45 ec             	mov    %eax,-0x14(%rbp)
  for(;;)
  {	if( !memcasecmp(word,&BYTE(addr+1),BYTE(addr)&0x7F) )
    16ae:	8b 45 ec             	mov    -0x14(%rbp),%eax
    16b1:	89 c7                	mov    %eax,%edi
    16b3:	e8 b5 f7 ff ff       	callq  e6d <v2r>
    16b8:	0f b6 00             	movzbl (%rax),%eax
    16bb:	0f b6 c0             	movzbl %al,%eax
    16be:	83 e0 7f             	and    $0x7f,%eax
    16c1:	89 c3                	mov    %eax,%ebx
    16c3:	8b 45 ec             	mov    -0x14(%rbp),%eax
    16c6:	83 c0 01             	add    $0x1,%eax
    16c9:	89 c7                	mov    %eax,%edi
    16cb:	e8 9d f7 ff ff       	callq  e6d <v2r>
    16d0:	48 89 c1             	mov    %rax,%rcx
    16d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    16d7:	89 da                	mov    %ebx,%edx
    16d9:	48 89 ce             	mov    %rcx,%rsi
    16dc:	48 89 c7             	mov    %rax,%rdi
    16df:	e8 11 ff ff ff       	callq  15f5 <memcasecmp>
    16e4:	85 c0                	test   %eax,%eax
    16e6:	75 05                	jne    16ed <SEARCH+0x55>
	return addr;
    16e8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    16eb:	eb 1e                	jmp    170b <SEARCH+0x73>
	addr-=4;
    16ed:	83 6d ec 04          	subl   $0x4,-0x14(%rbp)
	addr=CELL(addr);
    16f1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    16f4:	89 c7                	mov    %eax,%edi
    16f6:	e8 72 f7 ff ff       	callq  e6d <v2r>
    16fb:	8b 00                	mov    (%rax),%eax
    16fd:	89 45 ec             	mov    %eax,-0x14(%rbp)
	if(!addr) return 0;
    1700:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    1704:	75 a8                	jne    16ae <SEARCH+0x16>
    1706:	b8 00 00 00 00       	mov    $0x0,%eax
  }
}
    170b:	48 83 c4 28          	add    $0x28,%rsp
    170f:	5b                   	pop    %rbx
    1710:	5d                   	pop    %rbp
    1711:	c3                   	retq   

0000000000001712 <FromName_>:

__u32 FromName_(__u32 addr)
{ 
    1712:	55                   	push   %rbp
    1713:	48 89 e5             	mov    %rsp,%rbp
    1716:	48 83 ec 08          	sub    $0x8,%rsp
    171a:	89 7d fc             	mov    %edi,-0x4(%rbp)
 addr+=(BYTE(addr)&0x7f)+1;
    171d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1720:	89 c7                	mov    %eax,%edi
    1722:	e8 46 f7 ff ff       	callq  e6d <v2r>
    1727:	0f b6 00             	movzbl (%rax),%eax
    172a:	0f b6 c0             	movzbl %al,%eax
    172d:	83 e0 7f             	and    $0x7f,%eax
    1730:	83 c0 01             	add    $0x1,%eax
    1733:	01 45 fc             	add    %eax,-0x4(%rbp)
  if(addr&1)addr++;
    1736:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1739:	83 e0 01             	and    $0x1,%eax
    173c:	85 c0                	test   %eax,%eax
    173e:	74 04                	je     1744 <FromName_+0x32>
    1740:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  return addr;
    1744:	8b 45 fc             	mov    -0x4(%rbp),%eax
}
    1747:	c9                   	leaveq 
    1748:	c3                   	retq   

0000000000001749 <Compile>:

void Compile(__u32 addr)
{	__u32 cod;
    1749:	55                   	push   %rbp
    174a:	48 89 e5             	mov    %rsp,%rbp
    174d:	48 83 ec 18          	sub    $0x18,%rsp
    1751:	89 7d ec             	mov    %edi,-0x14(%rbp)
	
	  cod=CELL(addr);
    1754:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1757:	89 c7                	mov    %eax,%edi
    1759:	e8 0f f7 ff ff       	callq  e6d <v2r>
    175e:	8b 00                	mov    (%rax),%eax
    1760:	89 45 fc             	mov    %eax,-0x4(%rbp)
	  if((cod&0x8001)==0x8001)
    1763:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1766:	25 01 80 00 00       	and    $0x8001,%eax
    176b:	3d 01 80 00 00       	cmp    $0x8001,%eax
    1770:	75 11                	jne    1783 <Compile+0x3a>
		  {COM(cod&0x3FFF); return;}
    1772:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1775:	25 ff 3f 00 00       	and    $0x3fff,%eax
    177a:	89 c7                	mov    %eax,%edi
    177c:	e8 36 f9 ff ff       	callq  10b7 <COM>
    1781:	eb 0a                	jmp    178d <Compile+0x44>
	  COM(addr);
    1783:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1786:	89 c7                	mov    %eax,%edi
    1788:	e8 2a f9 ff ff       	callq  10b7 <COM>

}
    178d:	c9                   	leaveq 
    178e:	c3                   	retq   

000000000000178f <CC>:


void CC(__u8 * word)
{       
    178f:	55                   	push   %rbp
    1790:	48 89 e5             	mov    %rsp,%rbp
    1793:	48 83 ec 20          	sub    $0x20,%rsp
    1797:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	__u32 addr=current;
    179b:	48 8b 05 e6 db 60 00 	mov    0x60dbe6(%rip),%rax        # 60f388 <f_boot>
    17a2:	48 05 74 01 00 00    	add    $0x174,%rax
    17a8:	89 c2                	mov    %eax,%edx
    17aa:	48 8b 05 d7 db 60 00 	mov    0x60dbd7(%rip),%rax        # 60f388 <f_boot>
    17b1:	29 c2                	sub    %eax,%edx
    17b3:	89 d0                	mov    %edx,%eax
    17b5:	89 c7                	mov    %eax,%edi
    17b7:	e8 b1 f6 ff ff       	callq  e6d <v2r>
    17bc:	8b 00                	mov    (%rax),%eax
    17be:	89 c7                	mov    %eax,%edi
    17c0:	e8 a8 f6 ff ff       	callq  e6d <v2r>
    17c5:	8b 00                	mov    (%rax),%eax
    17c7:	89 45 fc             	mov    %eax,-0x4(%rbp)
	__u8 size;

	for (size = 0; word[size] != 0; size ++);
    17ca:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
    17ce:	eb 0a                	jmp    17da <CC+0x4b>
    17d0:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
    17d4:	83 c0 01             	add    $0x1,%eax
    17d7:	88 45 fb             	mov    %al,-0x5(%rbp)
    17da:	0f b6 55 fb          	movzbl -0x5(%rbp),%edx
    17de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17e2:	48 01 d0             	add    %rdx,%rax
    17e5:	0f b6 00             	movzbl (%rax),%eax
    17e8:	84 c0                	test   %al,%al
    17ea:	75 e4                	jne    17d0 <CC+0x41>

	do	{
		addr=SEARCH(addr,word);
    17ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    17f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    17f3:	48 89 d6             	mov    %rdx,%rsi
    17f6:	89 c7                	mov    %eax,%edi
    17f8:	e8 9b fe ff ff       	callq  1698 <SEARCH>
    17fd:	89 45 fc             	mov    %eax,-0x4(%rbp)
//		if(!addr){ printf("\nmake_image: %s dont found\n " ,word);  }
	   	if((BYTE(addr)&0x3f)==size ) break;
    1800:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1803:	89 c7                	mov    %eax,%edi
    1805:	e8 63 f6 ff ff       	callq  e6d <v2r>
    180a:	0f b6 00             	movzbl (%rax),%eax
    180d:	0f b6 c0             	movzbl %al,%eax
    1810:	83 e0 3f             	and    $0x3f,%eax
    1813:	89 c2                	mov    %eax,%edx
    1815:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
    1819:	39 c2                	cmp    %eax,%edx
    181b:	74 1a                	je     1837 <CC+0xa8>
		addr=CELL(addr-4);
    181d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1820:	83 e8 04             	sub    $0x4,%eax
    1823:	89 c7                	mov    %eax,%edi
    1825:	e8 43 f6 ff ff       	callq  e6d <v2r>
    182a:	8b 00                	mov    (%rax),%eax
    182c:	89 45 fc             	mov    %eax,-0x4(%rbp)
	}while(addr);
    182f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    1833:	75 b7                	jne    17ec <CC+0x5d>
    1835:	eb 01                	jmp    1838 <CC+0xa9>
	   	if((BYTE(addr)&0x3f)==size ) break;
    1837:	90                   	nop

	  if(!addr)
    1838:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    183c:	75 02                	jne    1840 <CC+0xb1>
	    for(;;);
    183e:	eb fe                	jmp    183e <CC+0xaf>
	  Compile(FromName_(addr));
    1840:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1843:	89 c7                	mov    %eax,%edi
    1845:	e8 c8 fe ff ff       	callq  1712 <FromName_>
    184a:	89 c7                	mov    %eax,%edi
    184c:	e8 f8 fe ff ff       	callq  1749 <Compile>
}
    1851:	90                   	nop
    1852:	c9                   	leaveq 
    1853:	c3                   	retq   

0000000000001854 <STR>:

void STR(char * str)
{	
    1854:	55                   	push   %rbp
    1855:	48 89 e5             	mov    %rsp,%rbp
    1858:	53                   	push   %rbx
    1859:	48 83 ec 18          	sub    $0x18,%rsp
    185d:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
	char * str0=str;
    1861:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1865:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	__u32 addr0;
	COM(sw_str<<1|1);
    1869:	bf f7 00 00 00       	mov    $0xf7,%edi
    186e:	e8 44 f8 ff ff       	callq  10b7 <COM>
	addr0=HERE;
    1873:	48 8b 05 0e db 60 00 	mov    0x60db0e(%rip),%rax        # 60f388 <f_boot>
    187a:	48 05 20 01 00 00    	add    $0x120,%rax
    1880:	89 c2                	mov    %eax,%edx
    1882:	48 8b 05 ff da 60 00 	mov    0x60daff(%rip),%rax        # 60f388 <f_boot>
    1889:	29 c2                	sub    %eax,%edx
    188b:	89 d0                	mov    %edx,%eax
    188d:	89 c7                	mov    %eax,%edi
    188f:	e8 d9 f5 ff ff       	callq  e6d <v2r>
    1894:	8b 00                	mov    (%rax),%eax
    1896:	89 45 ec             	mov    %eax,-0x14(%rbp)
	CCOM(0);
    1899:	bf 00 00 00 00       	mov    $0x0,%edi
    189e:	e8 e9 f8 ff ff       	callq  118c <CCOM>
	while(*str)  CCOM(*str++);
    18a3:	eb 19                	jmp    18be <STR+0x6a>
    18a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18a9:	48 8d 50 01          	lea    0x1(%rax),%rdx
    18ad:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    18b1:	0f b6 00             	movzbl (%rax),%eax
    18b4:	0f b6 c0             	movzbl %al,%eax
    18b7:	89 c7                	mov    %eax,%edi
    18b9:	e8 ce f8 ff ff       	callq  118c <CCOM>
    18be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c2:	0f b6 00             	movzbl (%rax),%eax
    18c5:	84 c0                	test   %al,%al
    18c7:	75 dc                	jne    18a5 <STR+0x51>
        BYTE(addr0)=(__u8)(str-str0);
    18c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    18cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    18d1:	48 89 d3             	mov    %rdx,%rbx
    18d4:	48 29 c3             	sub    %rax,%rbx
    18d7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    18da:	89 c7                	mov    %eax,%edi
    18dc:	e8 8c f5 ff ff       	callq  e6d <v2r>
    18e1:	89 da                	mov    %ebx,%edx
    18e3:	88 10                	mov    %dl,(%rax)
	if(HERE&1)CCOM(0);
    18e5:	48 8b 05 9c da 60 00 	mov    0x60da9c(%rip),%rax        # 60f388 <f_boot>
    18ec:	48 05 20 01 00 00    	add    $0x120,%rax
    18f2:	89 c2                	mov    %eax,%edx
    18f4:	48 8b 05 8d da 60 00 	mov    0x60da8d(%rip),%rax        # 60f388 <f_boot>
    18fb:	29 c2                	sub    %eax,%edx
    18fd:	89 d0                	mov    %edx,%eax
    18ff:	89 c7                	mov    %eax,%edi
    1901:	e8 67 f5 ff ff       	callq  e6d <v2r>
    1906:	8b 00                	mov    (%rax),%eax
    1908:	83 e0 01             	and    $0x1,%eax
    190b:	85 c0                	test   %eax,%eax
    190d:	74 0a                	je     1919 <STR+0xc5>
    190f:	bf 00 00 00 00       	mov    $0x0,%edi
    1914:	e8 73 f8 ff ff       	callq  118c <CCOM>
}
    1919:	90                   	nop
    191a:	48 83 c4 18          	add    $0x18,%rsp
    191e:	5b                   	pop    %rbx
    191f:	5d                   	pop    %rbp
    1920:	c3                   	retq   

0000000000001921 <TP>:

void TP(char * str)
{ 
    1921:	55                   	push   %rbp
    1922:	48 89 e5             	mov    %rsp,%rbp
    1925:	48 83 ec 08          	sub    $0x8,%rsp
    1929:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 STR(str);
    192d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1931:	48 89 c7             	mov    %rax,%rdi
    1934:	e8 1b ff ff ff       	callq  1854 <STR>
 COM(sw_type<<1|1);
    1939:	bf ed 00 00 00       	mov    $0xed,%edi
    193e:	e8 74 f7 ff ff       	callq  10b7 <COM>
}
    1943:	90                   	nop
    1944:	c9                   	leaveq 
    1945:	c3                   	retq   

0000000000001946 <F_END>:

void F_END()
{	
    1946:	55                   	push   %rbp
    1947:	48 89 e5             	mov    %rsp,%rbp
    194a:	53                   	push   %rbx
	COM(0x8001);
    194b:	bf 01 80 00 00       	mov    $0x8001,%edi
    1950:	e8 62 f7 ff ff       	callq  10b7 <COM>
	current=last;
    1955:	48 8b 05 2c da 60 00 	mov    0x60da2c(%rip),%rax        # 60f388 <f_boot>
    195c:	48 05 24 01 00 00    	add    $0x124,%rax
    1962:	89 c2                	mov    %eax,%edx
    1964:	48 8b 05 1d da 60 00 	mov    0x60da1d(%rip),%rax        # 60f388 <f_boot>
    196b:	29 c2                	sub    %eax,%edx
    196d:	89 d0                	mov    %edx,%eax
    196f:	89 c7                	mov    %eax,%edi
    1971:	e8 f7 f4 ff ff       	callq  e6d <v2r>
    1976:	48 89 c3             	mov    %rax,%rbx
    1979:	48 8b 05 08 da 60 00 	mov    0x60da08(%rip),%rax        # 60f388 <f_boot>
    1980:	48 05 74 01 00 00    	add    $0x174,%rax
    1986:	89 c2                	mov    %eax,%edx
    1988:	48 8b 05 f9 d9 60 00 	mov    0x60d9f9(%rip),%rax        # 60f388 <f_boot>
    198f:	29 c2                	sub    %eax,%edx
    1991:	89 d0                	mov    %edx,%eax
    1993:	89 c7                	mov    %eax,%edi
    1995:	e8 d3 f4 ff ff       	callq  e6d <v2r>
    199a:	8b 00                	mov    (%rax),%eax
    199c:	89 c7                	mov    %eax,%edi
    199e:	e8 ca f4 ff ff       	callq  e6d <v2r>
    19a3:	48 89 c2             	mov    %rax,%rdx
    19a6:	8b 03                	mov    (%rbx),%eax
    19a8:	89 02                	mov    %eax,(%rdx)
}
    19aa:	90                   	nop
    19ab:	5b                   	pop    %rbx
    19ac:	5d                   	pop    %rbp
    19ad:	c3                   	retq   

00000000000019ae <BEGIN>:

void BEGIN()
{	
    19ae:	55                   	push   %rbp
    19af:	48 89 e5             	mov    %rsp,%rbp
    19b2:	53                   	push   %rbx
	sp-=4;CELL(sp)=HERE;
    19b3:	48 8b 05 ce d9 60 00 	mov    0x60d9ce(%rip),%rax        # 60f388 <f_boot>
    19ba:	48 83 c0 04          	add    $0x4,%rax
    19be:	89 c2                	mov    %eax,%edx
    19c0:	48 8b 05 c1 d9 60 00 	mov    0x60d9c1(%rip),%rax        # 60f388 <f_boot>
    19c7:	29 c2                	sub    %eax,%edx
    19c9:	89 d0                	mov    %edx,%eax
    19cb:	48 63 d0             	movslq %eax,%rdx
    19ce:	48 8d 05 0b d7 20 00 	lea    0x20d70b(%rip),%rax        # 20f0e0 <mem>
    19d5:	48 01 d0             	add    %rdx,%rax
    19d8:	8b 10                	mov    (%rax),%edx
    19da:	48 8b 05 a7 d9 60 00 	mov    0x60d9a7(%rip),%rax        # 60f388 <f_boot>
    19e1:	48 83 c0 04          	add    $0x4,%rax
    19e5:	89 c1                	mov    %eax,%ecx
    19e7:	48 8b 05 9a d9 60 00 	mov    0x60d99a(%rip),%rax        # 60f388 <f_boot>
    19ee:	29 c1                	sub    %eax,%ecx
    19f0:	89 c8                	mov    %ecx,%eax
    19f2:	48 63 c8             	movslq %eax,%rcx
    19f5:	48 8d 05 e4 d6 20 00 	lea    0x20d6e4(%rip),%rax        # 20f0e0 <mem>
    19fc:	48 01 c8             	add    %rcx,%rax
    19ff:	83 ea 04             	sub    $0x4,%edx
    1a02:	89 10                	mov    %edx,(%rax)
    1a04:	48 8b 05 7d d9 60 00 	mov    0x60d97d(%rip),%rax        # 60f388 <f_boot>
    1a0b:	48 05 20 01 00 00    	add    $0x120,%rax
    1a11:	89 c2                	mov    %eax,%edx
    1a13:	48 8b 05 6e d9 60 00 	mov    0x60d96e(%rip),%rax        # 60f388 <f_boot>
    1a1a:	29 c2                	sub    %eax,%edx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	89 c7                	mov    %eax,%edi
    1a20:	e8 48 f4 ff ff       	callq  e6d <v2r>
    1a25:	48 89 c3             	mov    %rax,%rbx
    1a28:	48 8b 05 59 d9 60 00 	mov    0x60d959(%rip),%rax        # 60f388 <f_boot>
    1a2f:	48 83 c0 04          	add    $0x4,%rax
    1a33:	89 c2                	mov    %eax,%edx
    1a35:	48 8b 05 4c d9 60 00 	mov    0x60d94c(%rip),%rax        # 60f388 <f_boot>
    1a3c:	29 c2                	sub    %eax,%edx
    1a3e:	89 d0                	mov    %edx,%eax
    1a40:	48 63 d0             	movslq %eax,%rdx
    1a43:	48 8d 05 96 d6 20 00 	lea    0x20d696(%rip),%rax        # 20f0e0 <mem>
    1a4a:	48 01 d0             	add    %rdx,%rax
    1a4d:	8b 00                	mov    (%rax),%eax
    1a4f:	89 c7                	mov    %eax,%edi
    1a51:	e8 17 f4 ff ff       	callq  e6d <v2r>
    1a56:	48 89 c2             	mov    %rax,%rdx
    1a59:	8b 03                	mov    (%rbx),%eax
    1a5b:	89 02                	mov    %eax,(%rdx)
}
    1a5d:	90                   	nop
    1a5e:	5b                   	pop    %rbx
    1a5f:	5d                   	pop    %rbp
    1a60:	c3                   	retq   

0000000000001a61 <AGAIN>:

void AGAIN()
{	
    1a61:	55                   	push   %rbp
    1a62:	48 89 e5             	mov    %rsp,%rbp
	COM(sw_branch<<1|1);
    1a65:	bf cd 00 00 00       	mov    $0xcd,%edi
    1a6a:	e8 48 f6 ff ff       	callq  10b7 <COM>
	COM(CELL(sp));
    1a6f:	48 8b 05 12 d9 60 00 	mov    0x60d912(%rip),%rax        # 60f388 <f_boot>
    1a76:	48 83 c0 04          	add    $0x4,%rax
    1a7a:	89 c2                	mov    %eax,%edx
    1a7c:	48 8b 05 05 d9 60 00 	mov    0x60d905(%rip),%rax        # 60f388 <f_boot>
    1a83:	29 c2                	sub    %eax,%edx
    1a85:	89 d0                	mov    %edx,%eax
    1a87:	48 63 d0             	movslq %eax,%rdx
    1a8a:	48 8d 05 4f d6 20 00 	lea    0x20d64f(%rip),%rax        # 20f0e0 <mem>
    1a91:	48 01 d0             	add    %rdx,%rax
    1a94:	8b 00                	mov    (%rax),%eax
    1a96:	89 c7                	mov    %eax,%edi
    1a98:	e8 d0 f3 ff ff       	callq  e6d <v2r>
    1a9d:	8b 00                	mov    (%rax),%eax
    1a9f:	89 c7                	mov    %eax,%edi
    1aa1:	e8 11 f6 ff ff       	callq  10b7 <COM>
	sp+=4;
    1aa6:	48 8b 05 db d8 60 00 	mov    0x60d8db(%rip),%rax        # 60f388 <f_boot>
    1aad:	48 83 c0 04          	add    $0x4,%rax
    1ab1:	89 c2                	mov    %eax,%edx
    1ab3:	48 8b 05 ce d8 60 00 	mov    0x60d8ce(%rip),%rax        # 60f388 <f_boot>
    1aba:	29 c2                	sub    %eax,%edx
    1abc:	89 d0                	mov    %edx,%eax
    1abe:	48 63 d0             	movslq %eax,%rdx
    1ac1:	48 8d 05 18 d6 20 00 	lea    0x20d618(%rip),%rax        # 20f0e0 <mem>
    1ac8:	48 01 d0             	add    %rdx,%rax
    1acb:	8b 10                	mov    (%rax),%edx
    1acd:	48 8b 05 b4 d8 60 00 	mov    0x60d8b4(%rip),%rax        # 60f388 <f_boot>
    1ad4:	48 83 c0 04          	add    $0x4,%rax
    1ad8:	89 c1                	mov    %eax,%ecx
    1ada:	48 8b 05 a7 d8 60 00 	mov    0x60d8a7(%rip),%rax        # 60f388 <f_boot>
    1ae1:	29 c1                	sub    %eax,%ecx
    1ae3:	89 c8                	mov    %ecx,%eax
    1ae5:	48 63 c8             	movslq %eax,%rcx
    1ae8:	48 8d 05 f1 d5 20 00 	lea    0x20d5f1(%rip),%rax        # 20f0e0 <mem>
    1aef:	48 01 c8             	add    %rcx,%rax
    1af2:	83 c2 04             	add    $0x4,%edx
    1af5:	89 10                	mov    %edx,(%rax)
}
    1af7:	90                   	nop
    1af8:	5d                   	pop    %rbp
    1af9:	c3                   	retq   

0000000000001afa <UNTIL>:

void UNTIL()
{	
    1afa:	55                   	push   %rbp
    1afb:	48 89 e5             	mov    %rsp,%rbp
	COM(sw_0branch<<1|1);
    1afe:	bf cf 00 00 00       	mov    $0xcf,%edi
    1b03:	e8 af f5 ff ff       	callq  10b7 <COM>
	COM(CELL(sp));
    1b08:	48 8b 05 79 d8 60 00 	mov    0x60d879(%rip),%rax        # 60f388 <f_boot>
    1b0f:	48 83 c0 04          	add    $0x4,%rax
    1b13:	89 c2                	mov    %eax,%edx
    1b15:	48 8b 05 6c d8 60 00 	mov    0x60d86c(%rip),%rax        # 60f388 <f_boot>
    1b1c:	29 c2                	sub    %eax,%edx
    1b1e:	89 d0                	mov    %edx,%eax
    1b20:	48 63 d0             	movslq %eax,%rdx
    1b23:	48 8d 05 b6 d5 20 00 	lea    0x20d5b6(%rip),%rax        # 20f0e0 <mem>
    1b2a:	48 01 d0             	add    %rdx,%rax
    1b2d:	8b 00                	mov    (%rax),%eax
    1b2f:	89 c7                	mov    %eax,%edi
    1b31:	e8 37 f3 ff ff       	callq  e6d <v2r>
    1b36:	8b 00                	mov    (%rax),%eax
    1b38:	89 c7                	mov    %eax,%edi
    1b3a:	e8 78 f5 ff ff       	callq  10b7 <COM>
	sp+=4;
    1b3f:	48 8b 05 42 d8 60 00 	mov    0x60d842(%rip),%rax        # 60f388 <f_boot>
    1b46:	48 83 c0 04          	add    $0x4,%rax
    1b4a:	89 c2                	mov    %eax,%edx
    1b4c:	48 8b 05 35 d8 60 00 	mov    0x60d835(%rip),%rax        # 60f388 <f_boot>
    1b53:	29 c2                	sub    %eax,%edx
    1b55:	89 d0                	mov    %edx,%eax
    1b57:	48 63 d0             	movslq %eax,%rdx
    1b5a:	48 8d 05 7f d5 20 00 	lea    0x20d57f(%rip),%rax        # 20f0e0 <mem>
    1b61:	48 01 d0             	add    %rdx,%rax
    1b64:	8b 10                	mov    (%rax),%edx
    1b66:	48 8b 05 1b d8 60 00 	mov    0x60d81b(%rip),%rax        # 60f388 <f_boot>
    1b6d:	48 83 c0 04          	add    $0x4,%rax
    1b71:	89 c1                	mov    %eax,%ecx
    1b73:	48 8b 05 0e d8 60 00 	mov    0x60d80e(%rip),%rax        # 60f388 <f_boot>
    1b7a:	29 c1                	sub    %eax,%ecx
    1b7c:	89 c8                	mov    %ecx,%eax
    1b7e:	48 63 c8             	movslq %eax,%rcx
    1b81:	48 8d 05 58 d5 20 00 	lea    0x20d558(%rip),%rax        # 20f0e0 <mem>
    1b88:	48 01 c8             	add    %rcx,%rax
    1b8b:	83 c2 04             	add    $0x4,%edx
    1b8e:	89 10                	mov    %edx,(%rax)
}
    1b90:	90                   	nop
    1b91:	5d                   	pop    %rbp
    1b92:	c3                   	retq   

0000000000001b93 <AHEAD>:

void AHEAD()
{       
    1b93:	55                   	push   %rbp
    1b94:	48 89 e5             	mov    %rsp,%rbp
    1b97:	53                   	push   %rbx
	sp-=4;CELL(sp)=0;
    1b98:	48 8b 05 e9 d7 60 00 	mov    0x60d7e9(%rip),%rax        # 60f388 <f_boot>
    1b9f:	48 83 c0 04          	add    $0x4,%rax
    1ba3:	89 c2                	mov    %eax,%edx
    1ba5:	48 8b 05 dc d7 60 00 	mov    0x60d7dc(%rip),%rax        # 60f388 <f_boot>
    1bac:	29 c2                	sub    %eax,%edx
    1bae:	89 d0                	mov    %edx,%eax
    1bb0:	48 63 d0             	movslq %eax,%rdx
    1bb3:	48 8d 05 26 d5 20 00 	lea    0x20d526(%rip),%rax        # 20f0e0 <mem>
    1bba:	48 01 d0             	add    %rdx,%rax
    1bbd:	8b 10                	mov    (%rax),%edx
    1bbf:	48 8b 05 c2 d7 60 00 	mov    0x60d7c2(%rip),%rax        # 60f388 <f_boot>
    1bc6:	48 83 c0 04          	add    $0x4,%rax
    1bca:	89 c1                	mov    %eax,%ecx
    1bcc:	48 8b 05 b5 d7 60 00 	mov    0x60d7b5(%rip),%rax        # 60f388 <f_boot>
    1bd3:	29 c1                	sub    %eax,%ecx
    1bd5:	89 c8                	mov    %ecx,%eax
    1bd7:	48 63 c8             	movslq %eax,%rcx
    1bda:	48 8d 05 ff d4 20 00 	lea    0x20d4ff(%rip),%rax        # 20f0e0 <mem>
    1be1:	48 01 c8             	add    %rcx,%rax
    1be4:	83 ea 04             	sub    $0x4,%edx
    1be7:	89 10                	mov    %edx,(%rax)
    1be9:	48 8b 05 98 d7 60 00 	mov    0x60d798(%rip),%rax        # 60f388 <f_boot>
    1bf0:	48 83 c0 04          	add    $0x4,%rax
    1bf4:	89 c2                	mov    %eax,%edx
    1bf6:	48 8b 05 8b d7 60 00 	mov    0x60d78b(%rip),%rax        # 60f388 <f_boot>
    1bfd:	29 c2                	sub    %eax,%edx
    1bff:	89 d0                	mov    %edx,%eax
    1c01:	48 63 d0             	movslq %eax,%rdx
    1c04:	48 8d 05 d5 d4 20 00 	lea    0x20d4d5(%rip),%rax        # 20f0e0 <mem>
    1c0b:	48 01 d0             	add    %rdx,%rax
    1c0e:	8b 00                	mov    (%rax),%eax
    1c10:	89 c7                	mov    %eax,%edi
    1c12:	e8 56 f2 ff ff       	callq  e6d <v2r>
    1c17:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	AGAIN();
    1c1d:	b8 00 00 00 00       	mov    $0x0,%eax
    1c22:	e8 3a fe ff ff       	callq  1a61 <AGAIN>
	sp-=4;CELL(sp)=HERE-4;
    1c27:	48 8b 05 5a d7 60 00 	mov    0x60d75a(%rip),%rax        # 60f388 <f_boot>
    1c2e:	48 83 c0 04          	add    $0x4,%rax
    1c32:	89 c2                	mov    %eax,%edx
    1c34:	48 8b 05 4d d7 60 00 	mov    0x60d74d(%rip),%rax        # 60f388 <f_boot>
    1c3b:	29 c2                	sub    %eax,%edx
    1c3d:	89 d0                	mov    %edx,%eax
    1c3f:	48 63 d0             	movslq %eax,%rdx
    1c42:	48 8d 05 97 d4 20 00 	lea    0x20d497(%rip),%rax        # 20f0e0 <mem>
    1c49:	48 01 d0             	add    %rdx,%rax
    1c4c:	8b 10                	mov    (%rax),%edx
    1c4e:	48 8b 05 33 d7 60 00 	mov    0x60d733(%rip),%rax        # 60f388 <f_boot>
    1c55:	48 83 c0 04          	add    $0x4,%rax
    1c59:	89 c1                	mov    %eax,%ecx
    1c5b:	48 8b 05 26 d7 60 00 	mov    0x60d726(%rip),%rax        # 60f388 <f_boot>
    1c62:	29 c1                	sub    %eax,%ecx
    1c64:	89 c8                	mov    %ecx,%eax
    1c66:	48 63 c8             	movslq %eax,%rcx
    1c69:	48 8d 05 70 d4 20 00 	lea    0x20d470(%rip),%rax        # 20f0e0 <mem>
    1c70:	48 01 c8             	add    %rcx,%rax
    1c73:	83 ea 04             	sub    $0x4,%edx
    1c76:	89 10                	mov    %edx,(%rax)
    1c78:	48 8b 05 09 d7 60 00 	mov    0x60d709(%rip),%rax        # 60f388 <f_boot>
    1c7f:	48 05 20 01 00 00    	add    $0x120,%rax
    1c85:	89 c2                	mov    %eax,%edx
    1c87:	48 8b 05 fa d6 60 00 	mov    0x60d6fa(%rip),%rax        # 60f388 <f_boot>
    1c8e:	29 c2                	sub    %eax,%edx
    1c90:	89 d0                	mov    %edx,%eax
    1c92:	89 c7                	mov    %eax,%edi
    1c94:	e8 d4 f1 ff ff       	callq  e6d <v2r>
    1c99:	8b 18                	mov    (%rax),%ebx
    1c9b:	48 8b 05 e6 d6 60 00 	mov    0x60d6e6(%rip),%rax        # 60f388 <f_boot>
    1ca2:	48 83 c0 04          	add    $0x4,%rax
    1ca6:	89 c2                	mov    %eax,%edx
    1ca8:	48 8b 05 d9 d6 60 00 	mov    0x60d6d9(%rip),%rax        # 60f388 <f_boot>
    1caf:	29 c2                	sub    %eax,%edx
    1cb1:	89 d0                	mov    %edx,%eax
    1cb3:	48 63 d0             	movslq %eax,%rdx
    1cb6:	48 8d 05 23 d4 20 00 	lea    0x20d423(%rip),%rax        # 20f0e0 <mem>
    1cbd:	48 01 d0             	add    %rdx,%rax
    1cc0:	8b 00                	mov    (%rax),%eax
    1cc2:	89 c7                	mov    %eax,%edi
    1cc4:	e8 a4 f1 ff ff       	callq  e6d <v2r>
    1cc9:	48 89 c2             	mov    %rax,%rdx
    1ccc:	8d 43 fc             	lea    -0x4(%rbx),%eax
    1ccf:	89 02                	mov    %eax,(%rdx)
}
    1cd1:	90                   	nop
    1cd2:	5b                   	pop    %rbx
    1cd3:	5d                   	pop    %rbp
    1cd4:	c3                   	retq   

0000000000001cd5 <IF>:

void IF()
{       
    1cd5:	55                   	push   %rbp
    1cd6:	48 89 e5             	mov    %rsp,%rbp
    1cd9:	53                   	push   %rbx
	sp-=4;CELL(sp)=0;
    1cda:	48 8b 05 a7 d6 60 00 	mov    0x60d6a7(%rip),%rax        # 60f388 <f_boot>
    1ce1:	48 83 c0 04          	add    $0x4,%rax
    1ce5:	89 c2                	mov    %eax,%edx
    1ce7:	48 8b 05 9a d6 60 00 	mov    0x60d69a(%rip),%rax        # 60f388 <f_boot>
    1cee:	29 c2                	sub    %eax,%edx
    1cf0:	89 d0                	mov    %edx,%eax
    1cf2:	48 63 d0             	movslq %eax,%rdx
    1cf5:	48 8d 05 e4 d3 20 00 	lea    0x20d3e4(%rip),%rax        # 20f0e0 <mem>
    1cfc:	48 01 d0             	add    %rdx,%rax
    1cff:	8b 10                	mov    (%rax),%edx
    1d01:	48 8b 05 80 d6 60 00 	mov    0x60d680(%rip),%rax        # 60f388 <f_boot>
    1d08:	48 83 c0 04          	add    $0x4,%rax
    1d0c:	89 c1                	mov    %eax,%ecx
    1d0e:	48 8b 05 73 d6 60 00 	mov    0x60d673(%rip),%rax        # 60f388 <f_boot>
    1d15:	29 c1                	sub    %eax,%ecx
    1d17:	89 c8                	mov    %ecx,%eax
    1d19:	48 63 c8             	movslq %eax,%rcx
    1d1c:	48 8d 05 bd d3 20 00 	lea    0x20d3bd(%rip),%rax        # 20f0e0 <mem>
    1d23:	48 01 c8             	add    %rcx,%rax
    1d26:	83 ea 04             	sub    $0x4,%edx
    1d29:	89 10                	mov    %edx,(%rax)
    1d2b:	48 8b 05 56 d6 60 00 	mov    0x60d656(%rip),%rax        # 60f388 <f_boot>
    1d32:	48 83 c0 04          	add    $0x4,%rax
    1d36:	89 c2                	mov    %eax,%edx
    1d38:	48 8b 05 49 d6 60 00 	mov    0x60d649(%rip),%rax        # 60f388 <f_boot>
    1d3f:	29 c2                	sub    %eax,%edx
    1d41:	89 d0                	mov    %edx,%eax
    1d43:	48 63 d0             	movslq %eax,%rdx
    1d46:	48 8d 05 93 d3 20 00 	lea    0x20d393(%rip),%rax        # 20f0e0 <mem>
    1d4d:	48 01 d0             	add    %rdx,%rax
    1d50:	8b 00                	mov    (%rax),%eax
    1d52:	89 c7                	mov    %eax,%edi
    1d54:	e8 14 f1 ff ff       	callq  e6d <v2r>
    1d59:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	UNTIL();
    1d5f:	b8 00 00 00 00       	mov    $0x0,%eax
    1d64:	e8 91 fd ff ff       	callq  1afa <UNTIL>
	sp-=4;CELL(sp)=HERE-4;
    1d69:	48 8b 05 18 d6 60 00 	mov    0x60d618(%rip),%rax        # 60f388 <f_boot>
    1d70:	48 83 c0 04          	add    $0x4,%rax
    1d74:	89 c2                	mov    %eax,%edx
    1d76:	48 8b 05 0b d6 60 00 	mov    0x60d60b(%rip),%rax        # 60f388 <f_boot>
    1d7d:	29 c2                	sub    %eax,%edx
    1d7f:	89 d0                	mov    %edx,%eax
    1d81:	48 63 d0             	movslq %eax,%rdx
    1d84:	48 8d 05 55 d3 20 00 	lea    0x20d355(%rip),%rax        # 20f0e0 <mem>
    1d8b:	48 01 d0             	add    %rdx,%rax
    1d8e:	8b 10                	mov    (%rax),%edx
    1d90:	48 8b 05 f1 d5 60 00 	mov    0x60d5f1(%rip),%rax        # 60f388 <f_boot>
    1d97:	48 83 c0 04          	add    $0x4,%rax
    1d9b:	89 c1                	mov    %eax,%ecx
    1d9d:	48 8b 05 e4 d5 60 00 	mov    0x60d5e4(%rip),%rax        # 60f388 <f_boot>
    1da4:	29 c1                	sub    %eax,%ecx
    1da6:	89 c8                	mov    %ecx,%eax
    1da8:	48 63 c8             	movslq %eax,%rcx
    1dab:	48 8d 05 2e d3 20 00 	lea    0x20d32e(%rip),%rax        # 20f0e0 <mem>
    1db2:	48 01 c8             	add    %rcx,%rax
    1db5:	83 ea 04             	sub    $0x4,%edx
    1db8:	89 10                	mov    %edx,(%rax)
    1dba:	48 8b 05 c7 d5 60 00 	mov    0x60d5c7(%rip),%rax        # 60f388 <f_boot>
    1dc1:	48 05 20 01 00 00    	add    $0x120,%rax
    1dc7:	89 c2                	mov    %eax,%edx
    1dc9:	48 8b 05 b8 d5 60 00 	mov    0x60d5b8(%rip),%rax        # 60f388 <f_boot>
    1dd0:	29 c2                	sub    %eax,%edx
    1dd2:	89 d0                	mov    %edx,%eax
    1dd4:	89 c7                	mov    %eax,%edi
    1dd6:	e8 92 f0 ff ff       	callq  e6d <v2r>
    1ddb:	8b 18                	mov    (%rax),%ebx
    1ddd:	48 8b 05 a4 d5 60 00 	mov    0x60d5a4(%rip),%rax        # 60f388 <f_boot>
    1de4:	48 83 c0 04          	add    $0x4,%rax
    1de8:	89 c2                	mov    %eax,%edx
    1dea:	48 8b 05 97 d5 60 00 	mov    0x60d597(%rip),%rax        # 60f388 <f_boot>
    1df1:	29 c2                	sub    %eax,%edx
    1df3:	89 d0                	mov    %edx,%eax
    1df5:	48 63 d0             	movslq %eax,%rdx
    1df8:	48 8d 05 e1 d2 20 00 	lea    0x20d2e1(%rip),%rax        # 20f0e0 <mem>
    1dff:	48 01 d0             	add    %rdx,%rax
    1e02:	8b 00                	mov    (%rax),%eax
    1e04:	89 c7                	mov    %eax,%edi
    1e06:	e8 62 f0 ff ff       	callq  e6d <v2r>
    1e0b:	48 89 c2             	mov    %rax,%rdx
    1e0e:	8d 43 fc             	lea    -0x4(%rbx),%eax
    1e11:	89 02                	mov    %eax,(%rdx)
}
    1e13:	90                   	nop
    1e14:	5b                   	pop    %rbx
    1e15:	5d                   	pop    %rbp
    1e16:	c3                   	retq   

0000000000001e17 <WHILE>:

void WHILE()
{ 
    1e17:	55                   	push   %rbp
    1e18:	48 89 e5             	mov    %rsp,%rbp
    1e1b:	53                   	push   %rbx
    1e1c:	48 83 ec 10          	sub    $0x10,%rsp
  __u32 t;
	IF();
    1e20:	b8 00 00 00 00       	mov    $0x0,%eax
    1e25:	e8 ab fe ff ff       	callq  1cd5 <IF>
	t=CELL(sp);
    1e2a:	48 8b 05 57 d5 60 00 	mov    0x60d557(%rip),%rax        # 60f388 <f_boot>
    1e31:	48 83 c0 04          	add    $0x4,%rax
    1e35:	89 c2                	mov    %eax,%edx
    1e37:	48 8b 05 4a d5 60 00 	mov    0x60d54a(%rip),%rax        # 60f388 <f_boot>
    1e3e:	29 c2                	sub    %eax,%edx
    1e40:	89 d0                	mov    %edx,%eax
    1e42:	48 63 d0             	movslq %eax,%rdx
    1e45:	48 8d 05 94 d2 20 00 	lea    0x20d294(%rip),%rax        # 20f0e0 <mem>
    1e4c:	48 01 d0             	add    %rdx,%rax
    1e4f:	8b 00                	mov    (%rax),%eax
    1e51:	89 c7                	mov    %eax,%edi
    1e53:	e8 15 f0 ff ff       	callq  e6d <v2r>
    1e58:	8b 00                	mov    (%rax),%eax
    1e5a:	89 45 f4             	mov    %eax,-0xc(%rbp)
	CELL(sp)=CELL(sp+4);
    1e5d:	48 8b 05 24 d5 60 00 	mov    0x60d524(%rip),%rax        # 60f388 <f_boot>
    1e64:	48 83 c0 04          	add    $0x4,%rax
    1e68:	89 c2                	mov    %eax,%edx
    1e6a:	48 8b 05 17 d5 60 00 	mov    0x60d517(%rip),%rax        # 60f388 <f_boot>
    1e71:	29 c2                	sub    %eax,%edx
    1e73:	89 d0                	mov    %edx,%eax
    1e75:	48 63 d0             	movslq %eax,%rdx
    1e78:	48 8d 05 61 d2 20 00 	lea    0x20d261(%rip),%rax        # 20f0e0 <mem>
    1e7f:	48 01 d0             	add    %rdx,%rax
    1e82:	8b 00                	mov    (%rax),%eax
    1e84:	83 c0 04             	add    $0x4,%eax
    1e87:	89 c7                	mov    %eax,%edi
    1e89:	e8 df ef ff ff       	callq  e6d <v2r>
    1e8e:	48 89 c3             	mov    %rax,%rbx
    1e91:	48 8b 05 f0 d4 60 00 	mov    0x60d4f0(%rip),%rax        # 60f388 <f_boot>
    1e98:	48 83 c0 04          	add    $0x4,%rax
    1e9c:	89 c2                	mov    %eax,%edx
    1e9e:	48 8b 05 e3 d4 60 00 	mov    0x60d4e3(%rip),%rax        # 60f388 <f_boot>
    1ea5:	29 c2                	sub    %eax,%edx
    1ea7:	89 d0                	mov    %edx,%eax
    1ea9:	48 63 d0             	movslq %eax,%rdx
    1eac:	48 8d 05 2d d2 20 00 	lea    0x20d22d(%rip),%rax        # 20f0e0 <mem>
    1eb3:	48 01 d0             	add    %rdx,%rax
    1eb6:	8b 00                	mov    (%rax),%eax
    1eb8:	89 c7                	mov    %eax,%edi
    1eba:	e8 ae ef ff ff       	callq  e6d <v2r>
    1ebf:	48 89 c2             	mov    %rax,%rdx
    1ec2:	8b 03                	mov    (%rbx),%eax
    1ec4:	89 02                	mov    %eax,(%rdx)
	CELL(sp+4)=t;
    1ec6:	48 8b 05 bb d4 60 00 	mov    0x60d4bb(%rip),%rax        # 60f388 <f_boot>
    1ecd:	48 83 c0 04          	add    $0x4,%rax
    1ed1:	89 c2                	mov    %eax,%edx
    1ed3:	48 8b 05 ae d4 60 00 	mov    0x60d4ae(%rip),%rax        # 60f388 <f_boot>
    1eda:	29 c2                	sub    %eax,%edx
    1edc:	89 d0                	mov    %edx,%eax
    1ede:	48 63 d0             	movslq %eax,%rdx
    1ee1:	48 8d 05 f8 d1 20 00 	lea    0x20d1f8(%rip),%rax        # 20f0e0 <mem>
    1ee8:	48 01 d0             	add    %rdx,%rax
    1eeb:	8b 00                	mov    (%rax),%eax
    1eed:	83 c0 04             	add    $0x4,%eax
    1ef0:	89 c7                	mov    %eax,%edi
    1ef2:	e8 76 ef ff ff       	callq  e6d <v2r>
    1ef7:	48 89 c2             	mov    %rax,%rdx
    1efa:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1efd:	89 02                	mov    %eax,(%rdx)
}
    1eff:	90                   	nop
    1f00:	48 83 c4 10          	add    $0x10,%rsp
    1f04:	5b                   	pop    %rbx
    1f05:	5d                   	pop    %rbp
    1f06:	c3                   	retq   

0000000000001f07 <THEN>:

void THEN()
{       
    1f07:	55                   	push   %rbp
    1f08:	48 89 e5             	mov    %rsp,%rbp
    1f0b:	53                   	push   %rbx
	CELL(CELL(sp))=HERE;
    1f0c:	48 8b 05 75 d4 60 00 	mov    0x60d475(%rip),%rax        # 60f388 <f_boot>
    1f13:	48 05 20 01 00 00    	add    $0x120,%rax
    1f19:	89 c2                	mov    %eax,%edx
    1f1b:	48 8b 05 66 d4 60 00 	mov    0x60d466(%rip),%rax        # 60f388 <f_boot>
    1f22:	29 c2                	sub    %eax,%edx
    1f24:	89 d0                	mov    %edx,%eax
    1f26:	89 c7                	mov    %eax,%edi
    1f28:	e8 40 ef ff ff       	callq  e6d <v2r>
    1f2d:	48 89 c3             	mov    %rax,%rbx
    1f30:	48 8b 05 51 d4 60 00 	mov    0x60d451(%rip),%rax        # 60f388 <f_boot>
    1f37:	48 83 c0 04          	add    $0x4,%rax
    1f3b:	89 c2                	mov    %eax,%edx
    1f3d:	48 8b 05 44 d4 60 00 	mov    0x60d444(%rip),%rax        # 60f388 <f_boot>
    1f44:	29 c2                	sub    %eax,%edx
    1f46:	89 d0                	mov    %edx,%eax
    1f48:	48 63 d0             	movslq %eax,%rdx
    1f4b:	48 8d 05 8e d1 20 00 	lea    0x20d18e(%rip),%rax        # 20f0e0 <mem>
    1f52:	48 01 d0             	add    %rdx,%rax
    1f55:	8b 00                	mov    (%rax),%eax
    1f57:	89 c7                	mov    %eax,%edi
    1f59:	e8 0f ef ff ff       	callq  e6d <v2r>
    1f5e:	8b 00                	mov    (%rax),%eax
    1f60:	89 c7                	mov    %eax,%edi
    1f62:	e8 06 ef ff ff       	callq  e6d <v2r>
    1f67:	48 89 c2             	mov    %rax,%rdx
    1f6a:	8b 03                	mov    (%rbx),%eax
    1f6c:	89 02                	mov    %eax,(%rdx)
	sp+=4;
    1f6e:	48 8b 05 13 d4 60 00 	mov    0x60d413(%rip),%rax        # 60f388 <f_boot>
    1f75:	48 83 c0 04          	add    $0x4,%rax
    1f79:	89 c2                	mov    %eax,%edx
    1f7b:	48 8b 05 06 d4 60 00 	mov    0x60d406(%rip),%rax        # 60f388 <f_boot>
    1f82:	29 c2                	sub    %eax,%edx
    1f84:	89 d0                	mov    %edx,%eax
    1f86:	48 63 d0             	movslq %eax,%rdx
    1f89:	48 8d 05 50 d1 20 00 	lea    0x20d150(%rip),%rax        # 20f0e0 <mem>
    1f90:	48 01 d0             	add    %rdx,%rax
    1f93:	8b 10                	mov    (%rax),%edx
    1f95:	48 8b 05 ec d3 60 00 	mov    0x60d3ec(%rip),%rax        # 60f388 <f_boot>
    1f9c:	48 83 c0 04          	add    $0x4,%rax
    1fa0:	89 c1                	mov    %eax,%ecx
    1fa2:	48 8b 05 df d3 60 00 	mov    0x60d3df(%rip),%rax        # 60f388 <f_boot>
    1fa9:	29 c1                	sub    %eax,%ecx
    1fab:	89 c8                	mov    %ecx,%eax
    1fad:	48 63 c8             	movslq %eax,%rcx
    1fb0:	48 8d 05 29 d1 20 00 	lea    0x20d129(%rip),%rax        # 20f0e0 <mem>
    1fb7:	48 01 c8             	add    %rcx,%rax
    1fba:	83 c2 04             	add    $0x4,%edx
    1fbd:	89 10                	mov    %edx,(%rax)
}
    1fbf:	90                   	nop
    1fc0:	5b                   	pop    %rbx
    1fc1:	5d                   	pop    %rbp
    1fc2:	c3                   	retq   

0000000000001fc3 <ELSE>:

void ELSE()
{ 
    1fc3:	55                   	push   %rbp
    1fc4:	48 89 e5             	mov    %rsp,%rbp
    1fc7:	53                   	push   %rbx
    1fc8:	48 83 ec 10          	sub    $0x10,%rsp
  __u32 t;
	AHEAD();
    1fcc:	b8 00 00 00 00       	mov    $0x0,%eax
    1fd1:	e8 bd fb ff ff       	callq  1b93 <AHEAD>
	t=CELL(sp);
    1fd6:	48 8b 05 ab d3 60 00 	mov    0x60d3ab(%rip),%rax        # 60f388 <f_boot>
    1fdd:	48 83 c0 04          	add    $0x4,%rax
    1fe1:	89 c2                	mov    %eax,%edx
    1fe3:	48 8b 05 9e d3 60 00 	mov    0x60d39e(%rip),%rax        # 60f388 <f_boot>
    1fea:	29 c2                	sub    %eax,%edx
    1fec:	89 d0                	mov    %edx,%eax
    1fee:	48 63 d0             	movslq %eax,%rdx
    1ff1:	48 8d 05 e8 d0 20 00 	lea    0x20d0e8(%rip),%rax        # 20f0e0 <mem>
    1ff8:	48 01 d0             	add    %rdx,%rax
    1ffb:	8b 00                	mov    (%rax),%eax
    1ffd:	89 c7                	mov    %eax,%edi
    1fff:	e8 69 ee ff ff       	callq  e6d <v2r>
    2004:	8b 00                	mov    (%rax),%eax
    2006:	89 45 f4             	mov    %eax,-0xc(%rbp)
	CELL(sp)=CELL(sp+4);
    2009:	48 8b 05 78 d3 60 00 	mov    0x60d378(%rip),%rax        # 60f388 <f_boot>
    2010:	48 83 c0 04          	add    $0x4,%rax
    2014:	89 c2                	mov    %eax,%edx
    2016:	48 8b 05 6b d3 60 00 	mov    0x60d36b(%rip),%rax        # 60f388 <f_boot>
    201d:	29 c2                	sub    %eax,%edx
    201f:	89 d0                	mov    %edx,%eax
    2021:	48 63 d0             	movslq %eax,%rdx
    2024:	48 8d 05 b5 d0 20 00 	lea    0x20d0b5(%rip),%rax        # 20f0e0 <mem>
    202b:	48 01 d0             	add    %rdx,%rax
    202e:	8b 00                	mov    (%rax),%eax
    2030:	83 c0 04             	add    $0x4,%eax
    2033:	89 c7                	mov    %eax,%edi
    2035:	e8 33 ee ff ff       	callq  e6d <v2r>
    203a:	48 89 c3             	mov    %rax,%rbx
    203d:	48 8b 05 44 d3 60 00 	mov    0x60d344(%rip),%rax        # 60f388 <f_boot>
    2044:	48 83 c0 04          	add    $0x4,%rax
    2048:	89 c2                	mov    %eax,%edx
    204a:	48 8b 05 37 d3 60 00 	mov    0x60d337(%rip),%rax        # 60f388 <f_boot>
    2051:	29 c2                	sub    %eax,%edx
    2053:	89 d0                	mov    %edx,%eax
    2055:	48 63 d0             	movslq %eax,%rdx
    2058:	48 8d 05 81 d0 20 00 	lea    0x20d081(%rip),%rax        # 20f0e0 <mem>
    205f:	48 01 d0             	add    %rdx,%rax
    2062:	8b 00                	mov    (%rax),%eax
    2064:	89 c7                	mov    %eax,%edi
    2066:	e8 02 ee ff ff       	callq  e6d <v2r>
    206b:	48 89 c2             	mov    %rax,%rdx
    206e:	8b 03                	mov    (%rbx),%eax
    2070:	89 02                	mov    %eax,(%rdx)
	CELL(sp+4)=t;
    2072:	48 8b 05 0f d3 60 00 	mov    0x60d30f(%rip),%rax        # 60f388 <f_boot>
    2079:	48 83 c0 04          	add    $0x4,%rax
    207d:	89 c2                	mov    %eax,%edx
    207f:	48 8b 05 02 d3 60 00 	mov    0x60d302(%rip),%rax        # 60f388 <f_boot>
    2086:	29 c2                	sub    %eax,%edx
    2088:	89 d0                	mov    %edx,%eax
    208a:	48 63 d0             	movslq %eax,%rdx
    208d:	48 8d 05 4c d0 20 00 	lea    0x20d04c(%rip),%rax        # 20f0e0 <mem>
    2094:	48 01 d0             	add    %rdx,%rax
    2097:	8b 00                	mov    (%rax),%eax
    2099:	83 c0 04             	add    $0x4,%eax
    209c:	89 c7                	mov    %eax,%edi
    209e:	e8 ca ed ff ff       	callq  e6d <v2r>
    20a3:	48 89 c2             	mov    %rax,%rdx
    20a6:	8b 45 f4             	mov    -0xc(%rbp),%eax
    20a9:	89 02                	mov    %eax,(%rdx)
	THEN();
    20ab:	b8 00 00 00 00       	mov    $0x0,%eax
    20b0:	e8 52 fe ff ff       	callq  1f07 <THEN>
}
    20b5:	90                   	nop
    20b6:	48 83 c4 10          	add    $0x10,%rsp
    20ba:	5b                   	pop    %rbx
    20bb:	5d                   	pop    %rbp
    20bc:	c3                   	retq   

00000000000020bd <REPEAT>:

void REPEAT()
{	
    20bd:	55                   	push   %rbp
    20be:	48 89 e5             	mov    %rsp,%rbp
	AGAIN();
    20c1:	b8 00 00 00 00       	mov    $0x0,%eax
    20c6:	e8 96 f9 ff ff       	callq  1a61 <AGAIN>
	THEN();
    20cb:	b8 00 00 00 00       	mov    $0x0,%eax
    20d0:	e8 32 fe ff ff       	callq  1f07 <THEN>
}
    20d5:	90                   	nop
    20d6:	5d                   	pop    %rbp
    20d7:	c3                   	retq   

00000000000020d8 <LIT>:

void LIT(__u32 dd)
{	
    20d8:	55                   	push   %rbp
    20d9:	48 89 e5             	mov    %rsp,%rbp
    20dc:	48 83 ec 08          	sub    $0x8,%rsp
    20e0:	89 7d fc             	mov    %edi,-0x4(%rbp)
	COM(sw_lit<<1|1);
    20e3:	bf a3 00 00 00       	mov    $0xa3,%edi
    20e8:	e8 ca ef ff ff       	callq  10b7 <COM>
	COM(dd);
    20ed:	8b 45 fc             	mov    -0x4(%rbp),%eax
    20f0:	89 c7                	mov    %eax,%edi
    20f2:	e8 c0 ef ff ff       	callq  10b7 <COM>
}
    20f7:	90                   	nop
    20f8:	c9                   	leaveq 
    20f9:	c3                   	retq   

00000000000020fa <NextWord>:

void NextWord()
{ 
    20fa:	55                   	push   %rbp
    20fb:	48 89 e5             	mov    %rsp,%rbp
    20fe:	53                   	push   %rbx
    20ff:	48 83 ec 10          	sub    $0x10,%rsp
  __u32 addr,Waddr,Eaddr;
addr=CELL(TO_IN) + TIB ;
    2103:	48 8b 05 7e d2 60 00 	mov    0x60d27e(%rip),%rax        # 60f388 <f_boot>
    210a:	48 83 c0 08          	add    $0x8,%rax
    210e:	89 c2                	mov    %eax,%edx
    2110:	48 8b 05 71 d2 60 00 	mov    0x60d271(%rip),%rax        # 60f388 <f_boot>
    2117:	29 c2                	sub    %eax,%edx
    2119:	89 d0                	mov    %edx,%eax
    211b:	89 c7                	mov    %eax,%edi
    211d:	e8 4b ed ff ff       	callq  e6d <v2r>
    2122:	8b 18                	mov    (%rax),%ebx
    2124:	48 8b 05 5d d2 60 00 	mov    0x60d25d(%rip),%rax        # 60f388 <f_boot>
    212b:	48 05 10 01 00 00    	add    $0x110,%rax
    2131:	89 c2                	mov    %eax,%edx
    2133:	48 8b 05 4e d2 60 00 	mov    0x60d24e(%rip),%rax        # 60f388 <f_boot>
    213a:	29 c2                	sub    %eax,%edx
    213c:	89 d0                	mov    %edx,%eax
    213e:	89 c7                	mov    %eax,%edi
    2140:	e8 28 ed ff ff       	callq  e6d <v2r>
    2145:	8b 00                	mov    (%rax),%eax
    2147:	01 d8                	add    %ebx,%eax
    2149:	89 45 ec             	mov    %eax,-0x14(%rbp)
Eaddr=TIB+CELL(NTIB);
    214c:	48 8b 05 35 d2 60 00 	mov    0x60d235(%rip),%rax        # 60f388 <f_boot>
    2153:	48 05 10 01 00 00    	add    $0x110,%rax
    2159:	89 c2                	mov    %eax,%edx
    215b:	48 8b 05 26 d2 60 00 	mov    0x60d226(%rip),%rax        # 60f388 <f_boot>
    2162:	29 c2                	sub    %eax,%edx
    2164:	89 d0                	mov    %edx,%eax
    2166:	89 c7                	mov    %eax,%edi
    2168:	e8 00 ed ff ff       	callq  e6d <v2r>
    216d:	8b 18                	mov    (%rax),%ebx
    216f:	48 8b 05 12 d2 60 00 	mov    0x60d212(%rip),%rax        # 60f388 <f_boot>
    2176:	48 83 c0 0c          	add    $0xc,%rax
    217a:	89 c2                	mov    %eax,%edx
    217c:	48 8b 05 05 d2 60 00 	mov    0x60d205(%rip),%rax        # 60f388 <f_boot>
    2183:	29 c2                	sub    %eax,%edx
    2185:	89 d0                	mov    %edx,%eax
    2187:	89 c7                	mov    %eax,%edi
    2189:	e8 df ec ff ff       	callq  e6d <v2r>
    218e:	8b 00                	mov    (%rax),%eax
    2190:	01 d8                	add    %ebx,%eax
    2192:	89 45 f0             	mov    %eax,-0x10(%rbp)
sp-=8;
    2195:	48 8b 05 ec d1 60 00 	mov    0x60d1ec(%rip),%rax        # 60f388 <f_boot>
    219c:	48 83 c0 04          	add    $0x4,%rax
    21a0:	89 c2                	mov    %eax,%edx
    21a2:	48 8b 05 df d1 60 00 	mov    0x60d1df(%rip),%rax        # 60f388 <f_boot>
    21a9:	29 c2                	sub    %eax,%edx
    21ab:	89 d0                	mov    %edx,%eax
    21ad:	48 63 d0             	movslq %eax,%rdx
    21b0:	48 8d 05 29 cf 20 00 	lea    0x20cf29(%rip),%rax        # 20f0e0 <mem>
    21b7:	48 01 d0             	add    %rdx,%rax
    21ba:	8b 10                	mov    (%rax),%edx
    21bc:	48 8b 05 c5 d1 60 00 	mov    0x60d1c5(%rip),%rax        # 60f388 <f_boot>
    21c3:	48 83 c0 04          	add    $0x4,%rax
    21c7:	89 c1                	mov    %eax,%ecx
    21c9:	48 8b 05 b8 d1 60 00 	mov    0x60d1b8(%rip),%rax        # 60f388 <f_boot>
    21d0:	29 c1                	sub    %eax,%ecx
    21d2:	89 c8                	mov    %ecx,%eax
    21d4:	48 63 c8             	movslq %eax,%rcx
    21d7:	48 8d 05 02 cf 20 00 	lea    0x20cf02(%rip),%rax        # 20f0e0 <mem>
    21de:	48 01 c8             	add    %rcx,%rax
    21e1:	83 ea 08             	sub    $0x8,%edx
    21e4:	89 10                	mov    %edx,(%rax)
	while ( (BYTE(addr) <= ' ') & (addr<Eaddr ) )addr++;
    21e6:	eb 04                	jmp    21ec <NextWord+0xf2>
    21e8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    21ec:	8b 45 ec             	mov    -0x14(%rbp),%eax
    21ef:	89 c7                	mov    %eax,%edi
    21f1:	e8 77 ec ff ff       	callq  e6d <v2r>
    21f6:	0f b6 00             	movzbl (%rax),%eax
    21f9:	3c 20                	cmp    $0x20,%al
    21fb:	0f 96 c2             	setbe  %dl
    21fe:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2201:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    2204:	0f 92 c0             	setb   %al
    2207:	21 d0                	and    %edx,%eax
    2209:	84 c0                	test   %al,%al
    220b:	75 db                	jne    21e8 <NextWord+0xee>
	CELL(sp+4)=Waddr=addr;
    220d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2210:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2213:	48 8b 05 6e d1 60 00 	mov    0x60d16e(%rip),%rax        # 60f388 <f_boot>
    221a:	48 83 c0 04          	add    $0x4,%rax
    221e:	89 c2                	mov    %eax,%edx
    2220:	48 8b 05 61 d1 60 00 	mov    0x60d161(%rip),%rax        # 60f388 <f_boot>
    2227:	29 c2                	sub    %eax,%edx
    2229:	89 d0                	mov    %edx,%eax
    222b:	48 63 d0             	movslq %eax,%rdx
    222e:	48 8d 05 ab ce 20 00 	lea    0x20ceab(%rip),%rax        # 20f0e0 <mem>
    2235:	48 01 d0             	add    %rdx,%rax
    2238:	8b 00                	mov    (%rax),%eax
    223a:	83 c0 04             	add    $0x4,%eax
    223d:	89 c7                	mov    %eax,%edi
    223f:	e8 29 ec ff ff       	callq  e6d <v2r>
    2244:	48 89 c2             	mov    %rax,%rdx
    2247:	8b 45 f4             	mov    -0xc(%rbp),%eax
    224a:	89 02                	mov    %eax,(%rdx)
	while ( (BYTE(addr++)  > ' ') & (addr<=Eaddr )	);
    224c:	90                   	nop
    224d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2250:	8d 50 01             	lea    0x1(%rax),%edx
    2253:	89 55 ec             	mov    %edx,-0x14(%rbp)
    2256:	89 c7                	mov    %eax,%edi
    2258:	e8 10 ec ff ff       	callq  e6d <v2r>
    225d:	0f b6 00             	movzbl (%rax),%eax
    2260:	3c 20                	cmp    $0x20,%al
    2262:	0f 97 c2             	seta   %dl
    2265:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2268:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    226b:	0f 96 c0             	setbe  %al
    226e:	21 d0                	and    %edx,%eax
    2270:	84 c0                	test   %al,%al
    2272:	75 d9                	jne    224d <NextWord+0x153>
	CELL(sp)=addr-Waddr-1;
    2274:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2277:	2b 45 f4             	sub    -0xc(%rbp),%eax
    227a:	89 c3                	mov    %eax,%ebx
    227c:	48 8b 05 05 d1 60 00 	mov    0x60d105(%rip),%rax        # 60f388 <f_boot>
    2283:	48 83 c0 04          	add    $0x4,%rax
    2287:	89 c2                	mov    %eax,%edx
    2289:	48 8b 05 f8 d0 60 00 	mov    0x60d0f8(%rip),%rax        # 60f388 <f_boot>
    2290:	29 c2                	sub    %eax,%edx
    2292:	89 d0                	mov    %edx,%eax
    2294:	48 63 d0             	movslq %eax,%rdx
    2297:	48 8d 05 42 ce 20 00 	lea    0x20ce42(%rip),%rax        # 20f0e0 <mem>
    229e:	48 01 d0             	add    %rdx,%rax
    22a1:	8b 00                	mov    (%rax),%eax
    22a3:	89 c7                	mov    %eax,%edi
    22a5:	e8 c3 eb ff ff       	callq  e6d <v2r>
    22aa:	48 89 c2             	mov    %rax,%rdx
    22ad:	8d 43 ff             	lea    -0x1(%rbx),%eax
    22b0:	89 02                	mov    %eax,(%rdx)
	CELL(TO_IN)=addr - TIB;
    22b2:	48 8b 05 cf d0 60 00 	mov    0x60d0cf(%rip),%rax        # 60f388 <f_boot>
    22b9:	48 05 10 01 00 00    	add    $0x110,%rax
    22bf:	89 c2                	mov    %eax,%edx
    22c1:	48 8b 05 c0 d0 60 00 	mov    0x60d0c0(%rip),%rax        # 60f388 <f_boot>
    22c8:	29 c2                	sub    %eax,%edx
    22ca:	89 d0                	mov    %edx,%eax
    22cc:	89 c7                	mov    %eax,%edi
    22ce:	e8 9a eb ff ff       	callq  e6d <v2r>
    22d3:	8b 18                	mov    (%rax),%ebx
    22d5:	48 8b 05 ac d0 60 00 	mov    0x60d0ac(%rip),%rax        # 60f388 <f_boot>
    22dc:	48 83 c0 08          	add    $0x8,%rax
    22e0:	89 c2                	mov    %eax,%edx
    22e2:	48 8b 05 9f d0 60 00 	mov    0x60d09f(%rip),%rax        # 60f388 <f_boot>
    22e9:	29 c2                	sub    %eax,%edx
    22eb:	89 d0                	mov    %edx,%eax
    22ed:	89 c7                	mov    %eax,%edi
    22ef:	e8 79 eb ff ff       	callq  e6d <v2r>
    22f4:	48 89 c2             	mov    %rax,%rdx
    22f7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    22fa:	29 d8                	sub    %ebx,%eax
    22fc:	89 02                	mov    %eax,(%rdx)
}
    22fe:	90                   	nop
    22ff:	48 83 c4 10          	add    $0x10,%rsp
    2303:	5b                   	pop    %rbx
    2304:	5d                   	pop    %rbp
    2305:	c3                   	retq   

0000000000002306 <Parse>:


void Parse()
{ 
    2306:	55                   	push   %rbp
    2307:	48 89 e5             	mov    %rsp,%rbp
    230a:	53                   	push   %rbx
    230b:	48 83 ec 10          	sub    $0x10,%rsp
  __u32 addr,Waddr,Eaddr;
   __u8 ch;
addr=CELL(TO_IN) + TIB ;
    230f:	48 8b 05 72 d0 60 00 	mov    0x60d072(%rip),%rax        # 60f388 <f_boot>
    2316:	48 83 c0 08          	add    $0x8,%rax
    231a:	89 c2                	mov    %eax,%edx
    231c:	48 8b 05 65 d0 60 00 	mov    0x60d065(%rip),%rax        # 60f388 <f_boot>
    2323:	29 c2                	sub    %eax,%edx
    2325:	89 d0                	mov    %edx,%eax
    2327:	89 c7                	mov    %eax,%edi
    2329:	e8 3f eb ff ff       	callq  e6d <v2r>
    232e:	8b 18                	mov    (%rax),%ebx
    2330:	48 8b 05 51 d0 60 00 	mov    0x60d051(%rip),%rax        # 60f388 <f_boot>
    2337:	48 05 10 01 00 00    	add    $0x110,%rax
    233d:	89 c2                	mov    %eax,%edx
    233f:	48 8b 05 42 d0 60 00 	mov    0x60d042(%rip),%rax        # 60f388 <f_boot>
    2346:	29 c2                	sub    %eax,%edx
    2348:	89 d0                	mov    %edx,%eax
    234a:	89 c7                	mov    %eax,%edi
    234c:	e8 1c eb ff ff       	callq  e6d <v2r>
    2351:	8b 00                	mov    (%rax),%eax
    2353:	01 d8                	add    %ebx,%eax
    2355:	89 45 ec             	mov    %eax,-0x14(%rbp)
Eaddr=TIB+CELL(NTIB);
    2358:	48 8b 05 29 d0 60 00 	mov    0x60d029(%rip),%rax        # 60f388 <f_boot>
    235f:	48 05 10 01 00 00    	add    $0x110,%rax
    2365:	89 c2                	mov    %eax,%edx
    2367:	48 8b 05 1a d0 60 00 	mov    0x60d01a(%rip),%rax        # 60f388 <f_boot>
    236e:	29 c2                	sub    %eax,%edx
    2370:	89 d0                	mov    %edx,%eax
    2372:	89 c7                	mov    %eax,%edi
    2374:	e8 f4 ea ff ff       	callq  e6d <v2r>
    2379:	8b 18                	mov    (%rax),%ebx
    237b:	48 8b 05 06 d0 60 00 	mov    0x60d006(%rip),%rax        # 60f388 <f_boot>
    2382:	48 83 c0 0c          	add    $0xc,%rax
    2386:	89 c2                	mov    %eax,%edx
    2388:	48 8b 05 f9 cf 60 00 	mov    0x60cff9(%rip),%rax        # 60f388 <f_boot>
    238f:	29 c2                	sub    %eax,%edx
    2391:	89 d0                	mov    %edx,%eax
    2393:	89 c7                	mov    %eax,%edi
    2395:	e8 d3 ea ff ff       	callq  e6d <v2r>
    239a:	8b 00                	mov    (%rax),%eax
    239c:	01 d8                	add    %ebx,%eax
    239e:	89 45 f0             	mov    %eax,-0x10(%rbp)
ch=BYTE(sp);
    23a1:	48 8b 05 e0 cf 60 00 	mov    0x60cfe0(%rip),%rax        # 60f388 <f_boot>
    23a8:	48 83 c0 04          	add    $0x4,%rax
    23ac:	89 c2                	mov    %eax,%edx
    23ae:	48 8b 05 d3 cf 60 00 	mov    0x60cfd3(%rip),%rax        # 60f388 <f_boot>
    23b5:	29 c2                	sub    %eax,%edx
    23b7:	89 d0                	mov    %edx,%eax
    23b9:	48 63 d0             	movslq %eax,%rdx
    23bc:	48 8d 05 1d cd 20 00 	lea    0x20cd1d(%rip),%rax        # 20f0e0 <mem>
    23c3:	48 01 d0             	add    %rdx,%rax
    23c6:	8b 00                	mov    (%rax),%eax
    23c8:	89 c7                	mov    %eax,%edi
    23ca:	e8 9e ea ff ff       	callq  e6d <v2r>
    23cf:	0f b6 00             	movzbl (%rax),%eax
    23d2:	88 45 eb             	mov    %al,-0x15(%rbp)
sp-=4;
    23d5:	48 8b 05 ac cf 60 00 	mov    0x60cfac(%rip),%rax        # 60f388 <f_boot>
    23dc:	48 83 c0 04          	add    $0x4,%rax
    23e0:	89 c2                	mov    %eax,%edx
    23e2:	48 8b 05 9f cf 60 00 	mov    0x60cf9f(%rip),%rax        # 60f388 <f_boot>
    23e9:	29 c2                	sub    %eax,%edx
    23eb:	89 d0                	mov    %edx,%eax
    23ed:	48 63 d0             	movslq %eax,%rdx
    23f0:	48 8d 05 e9 cc 20 00 	lea    0x20cce9(%rip),%rax        # 20f0e0 <mem>
    23f7:	48 01 d0             	add    %rdx,%rax
    23fa:	8b 10                	mov    (%rax),%edx
    23fc:	48 8b 05 85 cf 60 00 	mov    0x60cf85(%rip),%rax        # 60f388 <f_boot>
    2403:	48 83 c0 04          	add    $0x4,%rax
    2407:	89 c1                	mov    %eax,%ecx
    2409:	48 8b 05 78 cf 60 00 	mov    0x60cf78(%rip),%rax        # 60f388 <f_boot>
    2410:	29 c1                	sub    %eax,%ecx
    2412:	89 c8                	mov    %ecx,%eax
    2414:	48 63 c8             	movslq %eax,%rcx
    2417:	48 8d 05 c2 cc 20 00 	lea    0x20ccc2(%rip),%rax        # 20f0e0 <mem>
    241e:	48 01 c8             	add    %rcx,%rax
    2421:	83 ea 04             	sub    $0x4,%edx
    2424:	89 10                	mov    %edx,(%rax)
	CELL(sp+4)=Waddr=addr;
    2426:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2429:	89 45 f4             	mov    %eax,-0xc(%rbp)
    242c:	48 8b 05 55 cf 60 00 	mov    0x60cf55(%rip),%rax        # 60f388 <f_boot>
    2433:	48 83 c0 04          	add    $0x4,%rax
    2437:	89 c2                	mov    %eax,%edx
    2439:	48 8b 05 48 cf 60 00 	mov    0x60cf48(%rip),%rax        # 60f388 <f_boot>
    2440:	29 c2                	sub    %eax,%edx
    2442:	89 d0                	mov    %edx,%eax
    2444:	48 63 d0             	movslq %eax,%rdx
    2447:	48 8d 05 92 cc 20 00 	lea    0x20cc92(%rip),%rax        # 20f0e0 <mem>
    244e:	48 01 d0             	add    %rdx,%rax
    2451:	8b 00                	mov    (%rax),%eax
    2453:	83 c0 04             	add    $0x4,%eax
    2456:	89 c7                	mov    %eax,%edi
    2458:	e8 10 ea ff ff       	callq  e6d <v2r>
    245d:	48 89 c2             	mov    %rax,%rdx
    2460:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2463:	89 02                	mov    %eax,(%rdx)
	while ( (BYTE(addr)  != ch) & (addr<Eaddr )){addr++;};
    2465:	eb 04                	jmp    246b <Parse+0x165>
    2467:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    246b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    246e:	89 c7                	mov    %eax,%edi
    2470:	e8 f8 e9 ff ff       	callq  e6d <v2r>
    2475:	0f b6 00             	movzbl (%rax),%eax
    2478:	38 45 eb             	cmp    %al,-0x15(%rbp)
    247b:	0f 95 c2             	setne  %dl
    247e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2481:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    2484:	0f 92 c0             	setb   %al
    2487:	21 d0                	and    %edx,%eax
    2489:	84 c0                	test   %al,%al
    248b:	75 da                	jne    2467 <Parse+0x161>
	addr++;
    248d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
	CELL(sp)=addr-Waddr-1;
    2491:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2494:	2b 45 f4             	sub    -0xc(%rbp),%eax
    2497:	89 c3                	mov    %eax,%ebx
    2499:	48 8b 05 e8 ce 60 00 	mov    0x60cee8(%rip),%rax        # 60f388 <f_boot>
    24a0:	48 83 c0 04          	add    $0x4,%rax
    24a4:	89 c2                	mov    %eax,%edx
    24a6:	48 8b 05 db ce 60 00 	mov    0x60cedb(%rip),%rax        # 60f388 <f_boot>
    24ad:	29 c2                	sub    %eax,%edx
    24af:	89 d0                	mov    %edx,%eax
    24b1:	48 63 d0             	movslq %eax,%rdx
    24b4:	48 8d 05 25 cc 20 00 	lea    0x20cc25(%rip),%rax        # 20f0e0 <mem>
    24bb:	48 01 d0             	add    %rdx,%rax
    24be:	8b 00                	mov    (%rax),%eax
    24c0:	89 c7                	mov    %eax,%edi
    24c2:	e8 a6 e9 ff ff       	callq  e6d <v2r>
    24c7:	48 89 c2             	mov    %rax,%rdx
    24ca:	8d 43 ff             	lea    -0x1(%rbx),%eax
    24cd:	89 02                	mov    %eax,(%rdx)
	CELL(TO_IN)=addr - TIB;
    24cf:	48 8b 05 b2 ce 60 00 	mov    0x60ceb2(%rip),%rax        # 60f388 <f_boot>
    24d6:	48 05 10 01 00 00    	add    $0x110,%rax
    24dc:	89 c2                	mov    %eax,%edx
    24de:	48 8b 05 a3 ce 60 00 	mov    0x60cea3(%rip),%rax        # 60f388 <f_boot>
    24e5:	29 c2                	sub    %eax,%edx
    24e7:	89 d0                	mov    %edx,%eax
    24e9:	89 c7                	mov    %eax,%edi
    24eb:	e8 7d e9 ff ff       	callq  e6d <v2r>
    24f0:	8b 18                	mov    (%rax),%ebx
    24f2:	48 8b 05 8f ce 60 00 	mov    0x60ce8f(%rip),%rax        # 60f388 <f_boot>
    24f9:	48 83 c0 08          	add    $0x8,%rax
    24fd:	89 c2                	mov    %eax,%edx
    24ff:	48 8b 05 82 ce 60 00 	mov    0x60ce82(%rip),%rax        # 60f388 <f_boot>
    2506:	29 c2                	sub    %eax,%edx
    2508:	89 d0                	mov    %edx,%eax
    250a:	89 c7                	mov    %eax,%edi
    250c:	e8 5c e9 ff ff       	callq  e6d <v2r>
    2511:	48 89 c2             	mov    %rax,%rdx
    2514:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2517:	29 d8                	sub    %ebx,%eax
    2519:	89 02                	mov    %eax,(%rdx)
}
    251b:	90                   	nop
    251c:	48 83 c4 10          	add    $0x10,%rsp
    2520:	5b                   	pop    %rbx
    2521:	5d                   	pop    %rbp
    2522:	c3                   	retq   

0000000000002523 <SQ>:

void SQ()
{	
    2523:	55                   	push   %rbp
    2524:	48 89 e5             	mov    %rsp,%rbp
    2527:	48 83 ec 10          	sub    $0x10,%rsp
	sp-=4; CELL(sp)=(__u32)'"';Parse();
    252b:	48 8b 05 56 ce 60 00 	mov    0x60ce56(%rip),%rax        # 60f388 <f_boot>
    2532:	48 83 c0 04          	add    $0x4,%rax
    2536:	89 c2                	mov    %eax,%edx
    2538:	48 8b 05 49 ce 60 00 	mov    0x60ce49(%rip),%rax        # 60f388 <f_boot>
    253f:	29 c2                	sub    %eax,%edx
    2541:	89 d0                	mov    %edx,%eax
    2543:	48 63 d0             	movslq %eax,%rdx
    2546:	48 8d 05 93 cb 20 00 	lea    0x20cb93(%rip),%rax        # 20f0e0 <mem>
    254d:	48 01 d0             	add    %rdx,%rax
    2550:	8b 10                	mov    (%rax),%edx
    2552:	48 8b 05 2f ce 60 00 	mov    0x60ce2f(%rip),%rax        # 60f388 <f_boot>
    2559:	48 83 c0 04          	add    $0x4,%rax
    255d:	89 c1                	mov    %eax,%ecx
    255f:	48 8b 05 22 ce 60 00 	mov    0x60ce22(%rip),%rax        # 60f388 <f_boot>
    2566:	29 c1                	sub    %eax,%ecx
    2568:	89 c8                	mov    %ecx,%eax
    256a:	48 63 c8             	movslq %eax,%rcx
    256d:	48 8d 05 6c cb 20 00 	lea    0x20cb6c(%rip),%rax        # 20f0e0 <mem>
    2574:	48 01 c8             	add    %rcx,%rax
    2577:	83 ea 04             	sub    $0x4,%edx
    257a:	89 10                	mov    %edx,(%rax)
    257c:	48 8b 05 05 ce 60 00 	mov    0x60ce05(%rip),%rax        # 60f388 <f_boot>
    2583:	48 83 c0 04          	add    $0x4,%rax
    2587:	89 c2                	mov    %eax,%edx
    2589:	48 8b 05 f8 cd 60 00 	mov    0x60cdf8(%rip),%rax        # 60f388 <f_boot>
    2590:	29 c2                	sub    %eax,%edx
    2592:	89 d0                	mov    %edx,%eax
    2594:	48 63 d0             	movslq %eax,%rdx
    2597:	48 8d 05 42 cb 20 00 	lea    0x20cb42(%rip),%rax        # 20f0e0 <mem>
    259e:	48 01 d0             	add    %rdx,%rax
    25a1:	8b 00                	mov    (%rax),%eax
    25a3:	89 c7                	mov    %eax,%edi
    25a5:	e8 c3 e8 ff ff       	callq  e6d <v2r>
    25aa:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    25b0:	b8 00 00 00 00       	mov    $0x0,%eax
    25b5:	e8 4c fd ff ff       	callq  2306 <Parse>
	if(CELL(STATE))
    25ba:	48 8b 05 c7 cd 60 00 	mov    0x60cdc7(%rip),%rax        # 60f388 <f_boot>
    25c1:	48 05 14 01 00 00    	add    $0x114,%rax
    25c7:	89 c2                	mov    %eax,%edx
    25c9:	48 8b 05 b8 cd 60 00 	mov    0x60cdb8(%rip),%rax        # 60f388 <f_boot>
    25d0:	29 c2                	sub    %eax,%edx
    25d2:	89 d0                	mov    %edx,%eax
    25d4:	89 c7                	mov    %eax,%edi
    25d6:	e8 92 e8 ff ff       	callq  e6d <v2r>
    25db:	8b 00                	mov    (%rax),%eax
    25dd:	85 c0                	test   %eax,%eax
    25df:	0f 84 de 00 00 00    	je     26c3 <SQ+0x1a0>
	{		__u32 addr,size;
	COM(sw_str<<1|1);
    25e5:	bf f7 00 00 00       	mov    $0xf7,%edi
    25ea:	e8 c8 ea ff ff       	callq  10b7 <COM>
	addr=CELL(sp+4);
    25ef:	48 8b 05 92 cd 60 00 	mov    0x60cd92(%rip),%rax        # 60f388 <f_boot>
    25f6:	48 83 c0 04          	add    $0x4,%rax
    25fa:	89 c2                	mov    %eax,%edx
    25fc:	48 8b 05 85 cd 60 00 	mov    0x60cd85(%rip),%rax        # 60f388 <f_boot>
    2603:	29 c2                	sub    %eax,%edx
    2605:	89 d0                	mov    %edx,%eax
    2607:	48 63 d0             	movslq %eax,%rdx
    260a:	48 8d 05 cf ca 20 00 	lea    0x20cacf(%rip),%rax        # 20f0e0 <mem>
    2611:	48 01 d0             	add    %rdx,%rax
    2614:	8b 00                	mov    (%rax),%eax
    2616:	83 c0 04             	add    $0x4,%eax
    2619:	89 c7                	mov    %eax,%edi
    261b:	e8 4d e8 ff ff       	callq  e6d <v2r>
    2620:	8b 00                	mov    (%rax),%eax
    2622:	89 45 f8             	mov    %eax,-0x8(%rbp)
 	   size=CELL(sp);
    2625:	48 8b 05 5c cd 60 00 	mov    0x60cd5c(%rip),%rax        # 60f388 <f_boot>
    262c:	48 83 c0 04          	add    $0x4,%rax
    2630:	89 c2                	mov    %eax,%edx
    2632:	48 8b 05 4f cd 60 00 	mov    0x60cd4f(%rip),%rax        # 60f388 <f_boot>
    2639:	29 c2                	sub    %eax,%edx
    263b:	89 d0                	mov    %edx,%eax
    263d:	48 63 d0             	movslq %eax,%rdx
    2640:	48 8d 05 99 ca 20 00 	lea    0x20ca99(%rip),%rax        # 20f0e0 <mem>
    2647:	48 01 d0             	add    %rdx,%rax
    264a:	8b 00                	mov    (%rax),%eax
    264c:	89 c7                	mov    %eax,%edi
    264e:	e8 1a e8 ff ff       	callq  e6d <v2r>
    2653:	8b 00                	mov    (%rax),%eax
    2655:	89 45 fc             	mov    %eax,-0x4(%rbp)
// 	   size=MIN(size, MEMSIZE-addr);
 	   StrComp(&BYTE(addr),size);
    2658:	8b 45 f8             	mov    -0x8(%rbp),%eax
    265b:	89 c7                	mov    %eax,%edi
    265d:	e8 0b e8 ff ff       	callq  e6d <v2r>
    2662:	48 89 c2             	mov    %rax,%rdx
    2665:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2668:	89 c6                	mov    %eax,%esi
    266a:	48 89 d7             	mov    %rdx,%rdi
    266d:	e8 85 eb ff ff       	callq  11f7 <StrComp>
  sp+=8;
    2672:	48 8b 05 0f cd 60 00 	mov    0x60cd0f(%rip),%rax        # 60f388 <f_boot>
    2679:	48 83 c0 04          	add    $0x4,%rax
    267d:	89 c2                	mov    %eax,%edx
    267f:	48 8b 05 02 cd 60 00 	mov    0x60cd02(%rip),%rax        # 60f388 <f_boot>
    2686:	29 c2                	sub    %eax,%edx
    2688:	89 d0                	mov    %edx,%eax
    268a:	48 63 d0             	movslq %eax,%rdx
    268d:	48 8d 05 4c ca 20 00 	lea    0x20ca4c(%rip),%rax        # 20f0e0 <mem>
    2694:	48 01 d0             	add    %rdx,%rax
    2697:	8b 10                	mov    (%rax),%edx
    2699:	48 8b 05 e8 cc 60 00 	mov    0x60cce8(%rip),%rax        # 60f388 <f_boot>
    26a0:	48 83 c0 04          	add    $0x4,%rax
    26a4:	89 c1                	mov    %eax,%ecx
    26a6:	48 8b 05 db cc 60 00 	mov    0x60ccdb(%rip),%rax        # 60f388 <f_boot>
    26ad:	29 c1                	sub    %eax,%ecx
    26af:	89 c8                	mov    %ecx,%eax
    26b1:	48 63 c8             	movslq %eax,%rcx
    26b4:	48 8d 05 25 ca 20 00 	lea    0x20ca25(%rip),%rax        # 20f0e0 <mem>
    26bb:	48 01 c8             	add    %rcx,%rax
    26be:	83 c2 08             	add    $0x8,%edx
    26c1:	89 10                	mov    %edx,(%rax)
	}
}
    26c3:	90                   	nop
    26c4:	c9                   	leaveq 
    26c5:	c3                   	retq   

00000000000026c6 <CQ>:

void CQ()
{	
    26c6:	55                   	push   %rbp
    26c7:	48 89 e5             	mov    %rsp,%rbp
    26ca:	48 83 ec 10          	sub    $0x10,%rsp
	sp-=4; CELL(sp)=(__u32)'"';Parse();
    26ce:	48 8b 05 b3 cc 60 00 	mov    0x60ccb3(%rip),%rax        # 60f388 <f_boot>
    26d5:	48 83 c0 04          	add    $0x4,%rax
    26d9:	89 c2                	mov    %eax,%edx
    26db:	48 8b 05 a6 cc 60 00 	mov    0x60cca6(%rip),%rax        # 60f388 <f_boot>
    26e2:	29 c2                	sub    %eax,%edx
    26e4:	89 d0                	mov    %edx,%eax
    26e6:	48 63 d0             	movslq %eax,%rdx
    26e9:	48 8d 05 f0 c9 20 00 	lea    0x20c9f0(%rip),%rax        # 20f0e0 <mem>
    26f0:	48 01 d0             	add    %rdx,%rax
    26f3:	8b 10                	mov    (%rax),%edx
    26f5:	48 8b 05 8c cc 60 00 	mov    0x60cc8c(%rip),%rax        # 60f388 <f_boot>
    26fc:	48 83 c0 04          	add    $0x4,%rax
    2700:	89 c1                	mov    %eax,%ecx
    2702:	48 8b 05 7f cc 60 00 	mov    0x60cc7f(%rip),%rax        # 60f388 <f_boot>
    2709:	29 c1                	sub    %eax,%ecx
    270b:	89 c8                	mov    %ecx,%eax
    270d:	48 63 c8             	movslq %eax,%rcx
    2710:	48 8d 05 c9 c9 20 00 	lea    0x20c9c9(%rip),%rax        # 20f0e0 <mem>
    2717:	48 01 c8             	add    %rcx,%rax
    271a:	83 ea 04             	sub    $0x4,%edx
    271d:	89 10                	mov    %edx,(%rax)
    271f:	48 8b 05 62 cc 60 00 	mov    0x60cc62(%rip),%rax        # 60f388 <f_boot>
    2726:	48 83 c0 04          	add    $0x4,%rax
    272a:	89 c2                	mov    %eax,%edx
    272c:	48 8b 05 55 cc 60 00 	mov    0x60cc55(%rip),%rax        # 60f388 <f_boot>
    2733:	29 c2                	sub    %eax,%edx
    2735:	89 d0                	mov    %edx,%eax
    2737:	48 63 d0             	movslq %eax,%rdx
    273a:	48 8d 05 9f c9 20 00 	lea    0x20c99f(%rip),%rax        # 20f0e0 <mem>
    2741:	48 01 d0             	add    %rdx,%rax
    2744:	8b 00                	mov    (%rax),%eax
    2746:	89 c7                	mov    %eax,%edi
    2748:	e8 20 e7 ff ff       	callq  e6d <v2r>
    274d:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    2753:	b8 00 00 00 00       	mov    $0x0,%eax
    2758:	e8 a9 fb ff ff       	callq  2306 <Parse>
	if(CELL(STATE))
    275d:	48 8b 05 24 cc 60 00 	mov    0x60cc24(%rip),%rax        # 60f388 <f_boot>
    2764:	48 05 14 01 00 00    	add    $0x114,%rax
    276a:	89 c2                	mov    %eax,%edx
    276c:	48 8b 05 15 cc 60 00 	mov    0x60cc15(%rip),%rax        # 60f388 <f_boot>
    2773:	29 c2                	sub    %eax,%edx
    2775:	89 d0                	mov    %edx,%eax
    2777:	89 c7                	mov    %eax,%edi
    2779:	e8 ef e6 ff ff       	callq  e6d <v2r>
    277e:	8b 00                	mov    (%rax),%eax
    2780:	85 c0                	test   %eax,%eax
    2782:	0f 84 de 00 00 00    	je     2866 <CQ+0x1a0>
	{		__u32 addr,size;
	COM(sw_cstr<<1|1);
    2788:	bf f5 00 00 00       	mov    $0xf5,%edi
    278d:	e8 25 e9 ff ff       	callq  10b7 <COM>
	addr=CELL(sp+4);
    2792:	48 8b 05 ef cb 60 00 	mov    0x60cbef(%rip),%rax        # 60f388 <f_boot>
    2799:	48 83 c0 04          	add    $0x4,%rax
    279d:	89 c2                	mov    %eax,%edx
    279f:	48 8b 05 e2 cb 60 00 	mov    0x60cbe2(%rip),%rax        # 60f388 <f_boot>
    27a6:	29 c2                	sub    %eax,%edx
    27a8:	89 d0                	mov    %edx,%eax
    27aa:	48 63 d0             	movslq %eax,%rdx
    27ad:	48 8d 05 2c c9 20 00 	lea    0x20c92c(%rip),%rax        # 20f0e0 <mem>
    27b4:	48 01 d0             	add    %rdx,%rax
    27b7:	8b 00                	mov    (%rax),%eax
    27b9:	83 c0 04             	add    $0x4,%eax
    27bc:	89 c7                	mov    %eax,%edi
    27be:	e8 aa e6 ff ff       	callq  e6d <v2r>
    27c3:	8b 00                	mov    (%rax),%eax
    27c5:	89 45 f8             	mov    %eax,-0x8(%rbp)
 	   size=CELL(sp);
    27c8:	48 8b 05 b9 cb 60 00 	mov    0x60cbb9(%rip),%rax        # 60f388 <f_boot>
    27cf:	48 83 c0 04          	add    $0x4,%rax
    27d3:	89 c2                	mov    %eax,%edx
    27d5:	48 8b 05 ac cb 60 00 	mov    0x60cbac(%rip),%rax        # 60f388 <f_boot>
    27dc:	29 c2                	sub    %eax,%edx
    27de:	89 d0                	mov    %edx,%eax
    27e0:	48 63 d0             	movslq %eax,%rdx
    27e3:	48 8d 05 f6 c8 20 00 	lea    0x20c8f6(%rip),%rax        # 20f0e0 <mem>
    27ea:	48 01 d0             	add    %rdx,%rax
    27ed:	8b 00                	mov    (%rax),%eax
    27ef:	89 c7                	mov    %eax,%edi
    27f1:	e8 77 e6 ff ff       	callq  e6d <v2r>
    27f6:	8b 00                	mov    (%rax),%eax
    27f8:	89 45 fc             	mov    %eax,-0x4(%rbp)
// 	   size=MIN(size, MEMSIZE-addr);
 	   StrComp(&BYTE(addr),size);
    27fb:	8b 45 f8             	mov    -0x8(%rbp),%eax
    27fe:	89 c7                	mov    %eax,%edi
    2800:	e8 68 e6 ff ff       	callq  e6d <v2r>
    2805:	48 89 c2             	mov    %rax,%rdx
    2808:	8b 45 fc             	mov    -0x4(%rbp),%eax
    280b:	89 c6                	mov    %eax,%esi
    280d:	48 89 d7             	mov    %rdx,%rdi
    2810:	e8 e2 e9 ff ff       	callq  11f7 <StrComp>
  sp+=8;
    2815:	48 8b 05 6c cb 60 00 	mov    0x60cb6c(%rip),%rax        # 60f388 <f_boot>
    281c:	48 83 c0 04          	add    $0x4,%rax
    2820:	89 c2                	mov    %eax,%edx
    2822:	48 8b 05 5f cb 60 00 	mov    0x60cb5f(%rip),%rax        # 60f388 <f_boot>
    2829:	29 c2                	sub    %eax,%edx
    282b:	89 d0                	mov    %edx,%eax
    282d:	48 63 d0             	movslq %eax,%rdx
    2830:	48 8d 05 a9 c8 20 00 	lea    0x20c8a9(%rip),%rax        # 20f0e0 <mem>
    2837:	48 01 d0             	add    %rdx,%rax
    283a:	8b 10                	mov    (%rax),%edx
    283c:	48 8b 05 45 cb 60 00 	mov    0x60cb45(%rip),%rax        # 60f388 <f_boot>
    2843:	48 83 c0 04          	add    $0x4,%rax
    2847:	89 c1                	mov    %eax,%ecx
    2849:	48 8b 05 38 cb 60 00 	mov    0x60cb38(%rip),%rax        # 60f388 <f_boot>
    2850:	29 c1                	sub    %eax,%ecx
    2852:	89 c8                	mov    %ecx,%eax
    2854:	48 63 c8             	movslq %eax,%rcx
    2857:	48 8d 05 82 c8 20 00 	lea    0x20c882(%rip),%rax        # 20f0e0 <mem>
    285e:	48 01 c8             	add    %rcx,%rax
    2861:	83 c2 08             	add    $0x8,%edx
    2864:	89 10                	mov    %edx,(%rax)
	}
}
    2866:	90                   	nop
    2867:	c9                   	leaveq 
    2868:	c3                   	retq   

0000000000002869 <Source>:


void Source()
{	
    2869:	55                   	push   %rbp
    286a:	48 89 e5             	mov    %rsp,%rbp
    286d:	53                   	push   %rbx
	sp-=8;
    286e:	48 8b 05 13 cb 60 00 	mov    0x60cb13(%rip),%rax        # 60f388 <f_boot>
    2875:	48 83 c0 04          	add    $0x4,%rax
    2879:	89 c2                	mov    %eax,%edx
    287b:	48 8b 05 06 cb 60 00 	mov    0x60cb06(%rip),%rax        # 60f388 <f_boot>
    2882:	29 c2                	sub    %eax,%edx
    2884:	89 d0                	mov    %edx,%eax
    2886:	48 63 d0             	movslq %eax,%rdx
    2889:	48 8d 05 50 c8 20 00 	lea    0x20c850(%rip),%rax        # 20f0e0 <mem>
    2890:	48 01 d0             	add    %rdx,%rax
    2893:	8b 10                	mov    (%rax),%edx
    2895:	48 8b 05 ec ca 60 00 	mov    0x60caec(%rip),%rax        # 60f388 <f_boot>
    289c:	48 83 c0 04          	add    $0x4,%rax
    28a0:	89 c1                	mov    %eax,%ecx
    28a2:	48 8b 05 df ca 60 00 	mov    0x60cadf(%rip),%rax        # 60f388 <f_boot>
    28a9:	29 c1                	sub    %eax,%ecx
    28ab:	89 c8                	mov    %ecx,%eax
    28ad:	48 63 c8             	movslq %eax,%rcx
    28b0:	48 8d 05 29 c8 20 00 	lea    0x20c829(%rip),%rax        # 20f0e0 <mem>
    28b7:	48 01 c8             	add    %rcx,%rax
    28ba:	83 ea 08             	sub    $0x8,%edx
    28bd:	89 10                	mov    %edx,(%rax)
	CELL(sp+4)=TIB;
    28bf:	48 8b 05 c2 ca 60 00 	mov    0x60cac2(%rip),%rax        # 60f388 <f_boot>
    28c6:	48 05 10 01 00 00    	add    $0x110,%rax
    28cc:	89 c2                	mov    %eax,%edx
    28ce:	48 8b 05 b3 ca 60 00 	mov    0x60cab3(%rip),%rax        # 60f388 <f_boot>
    28d5:	29 c2                	sub    %eax,%edx
    28d7:	89 d0                	mov    %edx,%eax
    28d9:	89 c7                	mov    %eax,%edi
    28db:	e8 8d e5 ff ff       	callq  e6d <v2r>
    28e0:	48 89 c3             	mov    %rax,%rbx
    28e3:	48 8b 05 9e ca 60 00 	mov    0x60ca9e(%rip),%rax        # 60f388 <f_boot>
    28ea:	48 83 c0 04          	add    $0x4,%rax
    28ee:	89 c2                	mov    %eax,%edx
    28f0:	48 8b 05 91 ca 60 00 	mov    0x60ca91(%rip),%rax        # 60f388 <f_boot>
    28f7:	29 c2                	sub    %eax,%edx
    28f9:	89 d0                	mov    %edx,%eax
    28fb:	48 63 d0             	movslq %eax,%rdx
    28fe:	48 8d 05 db c7 20 00 	lea    0x20c7db(%rip),%rax        # 20f0e0 <mem>
    2905:	48 01 d0             	add    %rdx,%rax
    2908:	8b 00                	mov    (%rax),%eax
    290a:	83 c0 04             	add    $0x4,%eax
    290d:	89 c7                	mov    %eax,%edi
    290f:	e8 59 e5 ff ff       	callq  e6d <v2r>
    2914:	48 89 c2             	mov    %rax,%rdx
    2917:	8b 03                	mov    (%rbx),%eax
    2919:	89 02                	mov    %eax,(%rdx)
	CELL(sp)=CELL(NTIB);
    291b:	48 8b 05 66 ca 60 00 	mov    0x60ca66(%rip),%rax        # 60f388 <f_boot>
    2922:	48 83 c0 0c          	add    $0xc,%rax
    2926:	89 c2                	mov    %eax,%edx
    2928:	48 8b 05 59 ca 60 00 	mov    0x60ca59(%rip),%rax        # 60f388 <f_boot>
    292f:	29 c2                	sub    %eax,%edx
    2931:	89 d0                	mov    %edx,%eax
    2933:	89 c7                	mov    %eax,%edi
    2935:	e8 33 e5 ff ff       	callq  e6d <v2r>
    293a:	48 89 c3             	mov    %rax,%rbx
    293d:	48 8b 05 44 ca 60 00 	mov    0x60ca44(%rip),%rax        # 60f388 <f_boot>
    2944:	48 83 c0 04          	add    $0x4,%rax
    2948:	89 c2                	mov    %eax,%edx
    294a:	48 8b 05 37 ca 60 00 	mov    0x60ca37(%rip),%rax        # 60f388 <f_boot>
    2951:	29 c2                	sub    %eax,%edx
    2953:	89 d0                	mov    %edx,%eax
    2955:	48 63 d0             	movslq %eax,%rdx
    2958:	48 8d 05 81 c7 20 00 	lea    0x20c781(%rip),%rax        # 20f0e0 <mem>
    295f:	48 01 d0             	add    %rdx,%rax
    2962:	8b 00                	mov    (%rax),%eax
    2964:	89 c7                	mov    %eax,%edi
    2966:	e8 02 e5 ff ff       	callq  e6d <v2r>
    296b:	48 89 c2             	mov    %rax,%rdx
    296e:	8b 03                	mov    (%rbx),%eax
    2970:	89 02                	mov    %eax,(%rdx)
}
    2972:	90                   	nop
    2973:	5b                   	pop    %rbx
    2974:	5d                   	pop    %rbp
    2975:	c3                   	retq   

0000000000002976 <SourceST>:

void SourceST()
{	
    2976:	55                   	push   %rbp
    2977:	48 89 e5             	mov    %rsp,%rbp
    297a:	53                   	push   %rbx
    297b:	48 83 ec 10          	sub    $0x10,%rsp
	__u32 len,addr;
	CELL(NTIB)=len=CELL(sp);
    297f:	48 8b 05 02 ca 60 00 	mov    0x60ca02(%rip),%rax        # 60f388 <f_boot>
    2986:	48 83 c0 04          	add    $0x4,%rax
    298a:	89 c2                	mov    %eax,%edx
    298c:	48 8b 05 f5 c9 60 00 	mov    0x60c9f5(%rip),%rax        # 60f388 <f_boot>
    2993:	29 c2                	sub    %eax,%edx
    2995:	89 d0                	mov    %edx,%eax
    2997:	48 63 d0             	movslq %eax,%rdx
    299a:	48 8d 05 3f c7 20 00 	lea    0x20c73f(%rip),%rax        # 20f0e0 <mem>
    29a1:	48 01 d0             	add    %rdx,%rax
    29a4:	8b 00                	mov    (%rax),%eax
    29a6:	89 c7                	mov    %eax,%edi
    29a8:	e8 c0 e4 ff ff       	callq  e6d <v2r>
    29ad:	8b 00                	mov    (%rax),%eax
    29af:	89 45 f0             	mov    %eax,-0x10(%rbp)
    29b2:	48 8b 05 cf c9 60 00 	mov    0x60c9cf(%rip),%rax        # 60f388 <f_boot>
    29b9:	48 83 c0 0c          	add    $0xc,%rax
    29bd:	89 c2                	mov    %eax,%edx
    29bf:	48 8b 05 c2 c9 60 00 	mov    0x60c9c2(%rip),%rax        # 60f388 <f_boot>
    29c6:	29 c2                	sub    %eax,%edx
    29c8:	89 d0                	mov    %edx,%eax
    29ca:	89 c7                	mov    %eax,%edi
    29cc:	e8 9c e4 ff ff       	callq  e6d <v2r>
    29d1:	48 89 c2             	mov    %rax,%rdx
    29d4:	8b 45 f0             	mov    -0x10(%rbp),%eax
    29d7:	89 02                	mov    %eax,(%rdx)
	addr=CELL(sp+4);
    29d9:	48 8b 05 a8 c9 60 00 	mov    0x60c9a8(%rip),%rax        # 60f388 <f_boot>
    29e0:	48 83 c0 04          	add    $0x4,%rax
    29e4:	89 c2                	mov    %eax,%edx
    29e6:	48 8b 05 9b c9 60 00 	mov    0x60c99b(%rip),%rax        # 60f388 <f_boot>
    29ed:	29 c2                	sub    %eax,%edx
    29ef:	89 d0                	mov    %edx,%eax
    29f1:	48 63 d0             	movslq %eax,%rdx
    29f4:	48 8d 05 e5 c6 20 00 	lea    0x20c6e5(%rip),%rax        # 20f0e0 <mem>
    29fb:	48 01 d0             	add    %rdx,%rax
    29fe:	8b 00                	mov    (%rax),%eax
    2a00:	83 c0 04             	add    $0x4,%eax
    2a03:	89 c7                	mov    %eax,%edi
    2a05:	e8 63 e4 ff ff       	callq  e6d <v2r>
    2a0a:	8b 00                	mov    (%rax),%eax
    2a0c:	89 45 f4             	mov    %eax,-0xc(%rbp)
	while(len--)	BYTE(TIB+len)=BYTE(addr+len);
    2a0f:	eb 49                	jmp    2a5a <SourceST+0xe4>
    2a11:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2a14:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2a17:	01 d0                	add    %edx,%eax
    2a19:	89 c7                	mov    %eax,%edi
    2a1b:	e8 4d e4 ff ff       	callq  e6d <v2r>
    2a20:	48 89 c3             	mov    %rax,%rbx
    2a23:	48 8b 05 5e c9 60 00 	mov    0x60c95e(%rip),%rax        # 60f388 <f_boot>
    2a2a:	48 05 10 01 00 00    	add    $0x110,%rax
    2a30:	89 c2                	mov    %eax,%edx
    2a32:	48 8b 05 4f c9 60 00 	mov    0x60c94f(%rip),%rax        # 60f388 <f_boot>
    2a39:	29 c2                	sub    %eax,%edx
    2a3b:	89 d0                	mov    %edx,%eax
    2a3d:	89 c7                	mov    %eax,%edi
    2a3f:	e8 29 e4 ff ff       	callq  e6d <v2r>
    2a44:	8b 10                	mov    (%rax),%edx
    2a46:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2a49:	01 d0                	add    %edx,%eax
    2a4b:	89 c7                	mov    %eax,%edi
    2a4d:	e8 1b e4 ff ff       	callq  e6d <v2r>
    2a52:	48 89 c2             	mov    %rax,%rdx
    2a55:	0f b6 03             	movzbl (%rbx),%eax
    2a58:	88 02                	mov    %al,(%rdx)
    2a5a:	8b 45 f0             	mov    -0x10(%rbp),%eax
    2a5d:	8d 50 ff             	lea    -0x1(%rax),%edx
    2a60:	89 55 f0             	mov    %edx,-0x10(%rbp)
    2a63:	85 c0                	test   %eax,%eax
    2a65:	75 aa                	jne    2a11 <SourceST+0x9b>
	sp+=8;
    2a67:	48 8b 05 1a c9 60 00 	mov    0x60c91a(%rip),%rax        # 60f388 <f_boot>
    2a6e:	48 83 c0 04          	add    $0x4,%rax
    2a72:	89 c2                	mov    %eax,%edx
    2a74:	48 8b 05 0d c9 60 00 	mov    0x60c90d(%rip),%rax        # 60f388 <f_boot>
    2a7b:	29 c2                	sub    %eax,%edx
    2a7d:	89 d0                	mov    %edx,%eax
    2a7f:	48 63 d0             	movslq %eax,%rdx
    2a82:	48 8d 05 57 c6 20 00 	lea    0x20c657(%rip),%rax        # 20f0e0 <mem>
    2a89:	48 01 d0             	add    %rdx,%rax
    2a8c:	8b 10                	mov    (%rax),%edx
    2a8e:	48 8b 05 f3 c8 60 00 	mov    0x60c8f3(%rip),%rax        # 60f388 <f_boot>
    2a95:	48 83 c0 04          	add    $0x4,%rax
    2a99:	89 c1                	mov    %eax,%ecx
    2a9b:	48 8b 05 e6 c8 60 00 	mov    0x60c8e6(%rip),%rax        # 60f388 <f_boot>
    2aa2:	29 c1                	sub    %eax,%ecx
    2aa4:	89 c8                	mov    %ecx,%eax
    2aa6:	48 63 c8             	movslq %eax,%rcx
    2aa9:	48 8d 05 30 c6 20 00 	lea    0x20c630(%rip),%rax        # 20f0e0 <mem>
    2ab0:	48 01 c8             	add    %rcx,%rax
    2ab3:	83 c2 08             	add    $0x8,%edx
    2ab6:	89 10                	mov    %edx,(%rax)
}
    2ab8:	90                   	nop
    2ab9:	48 83 c4 10          	add    $0x10,%rsp
    2abd:	5b                   	pop    %rbx
    2abe:	5d                   	pop    %rbp
    2abf:	c3                   	retq   

0000000000002ac0 <FromName>:

__u32 FromName(__u32 addr)
{ __u32 ixt;
    2ac0:	55                   	push   %rbp
    2ac1:	48 89 e5             	mov    %rsp,%rbp
    2ac4:	48 83 ec 18          	sub    $0x18,%rsp
    2ac8:	89 7d ec             	mov    %edi,-0x14(%rbp)
	   ixt=FromName_(addr);
    2acb:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2ace:	89 c7                	mov    %eax,%edi
    2ad0:	e8 3d ec ff ff       	callq  1712 <FromName_>
    2ad5:	89 45 fc             	mov    %eax,-0x4(%rbp)
	  if(CELL(ixt)==0x7ff) // tag of code/voc separation 
    2ad8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2adb:	89 c7                	mov    %eax,%edi
    2add:	e8 8b e3 ff ff       	callq  e6d <v2r>
    2ae2:	8b 00                	mov    (%rax),%eax
    2ae4:	3d ff 07 00 00       	cmp    $0x7ff,%eax
    2ae9:	75 11                	jne    2afc <FromName+0x3c>
		return CELL(ixt+4);
    2aeb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2aee:	83 c0 04             	add    $0x4,%eax
    2af1:	89 c7                	mov    %eax,%edi
    2af3:	e8 75 e3 ff ff       	callq  e6d <v2r>
    2af8:	8b 00                	mov    (%rax),%eax
    2afa:	eb 03                	jmp    2aff <FromName+0x3f>
    	  else	return ixt; }
    2afc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2aff:	c9                   	leaveq 
    2b00:	c3                   	retq   

0000000000002b01 <SearchWordList>:

void SearchWordList() // ( c-addr u wid --- 0 | xt 1 xt -1 )
{	
    2b01:	55                   	push   %rbp
    2b02:	48 89 e5             	mov    %rsp,%rbp
    2b05:	53                   	push   %rbx
    2b06:	48 83 ec 18          	sub    $0x18,%rsp
  __u32 addr=CELL(CELL(sp));
    2b0a:	48 8b 05 77 c8 60 00 	mov    0x60c877(%rip),%rax        # 60f388 <f_boot>
    2b11:	48 83 c0 04          	add    $0x4,%rax
    2b15:	89 c2                	mov    %eax,%edx
    2b17:	48 8b 05 6a c8 60 00 	mov    0x60c86a(%rip),%rax        # 60f388 <f_boot>
    2b1e:	29 c2                	sub    %eax,%edx
    2b20:	89 d0                	mov    %edx,%eax
    2b22:	48 63 d0             	movslq %eax,%rdx
    2b25:	48 8d 05 b4 c5 20 00 	lea    0x20c5b4(%rip),%rax        # 20f0e0 <mem>
    2b2c:	48 01 d0             	add    %rdx,%rax
    2b2f:	8b 00                	mov    (%rax),%eax
    2b31:	89 c7                	mov    %eax,%edi
    2b33:	e8 35 e3 ff ff       	callq  e6d <v2r>
    2b38:	8b 00                	mov    (%rax),%eax
    2b3a:	89 c7                	mov    %eax,%edi
    2b3c:	e8 2c e3 ff ff       	callq  e6d <v2r>
    2b41:	8b 00                	mov    (%rax),%eax
    2b43:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   __u8  size=CELL(sp+4);
    2b46:	48 8b 05 3b c8 60 00 	mov    0x60c83b(%rip),%rax        # 60f388 <f_boot>
    2b4d:	48 83 c0 04          	add    $0x4,%rax
    2b51:	89 c2                	mov    %eax,%edx
    2b53:	48 8b 05 2e c8 60 00 	mov    0x60c82e(%rip),%rax        # 60f388 <f_boot>
    2b5a:	29 c2                	sub    %eax,%edx
    2b5c:	89 d0                	mov    %edx,%eax
    2b5e:	48 63 d0             	movslq %eax,%rdx
    2b61:	48 8d 05 78 c5 20 00 	lea    0x20c578(%rip),%rax        # 20f0e0 <mem>
    2b68:	48 01 d0             	add    %rdx,%rax
    2b6b:	8b 00                	mov    (%rax),%eax
    2b6d:	83 c0 04             	add    $0x4,%eax
    2b70:	89 c7                	mov    %eax,%edi
    2b72:	e8 f6 e2 ff ff       	callq  e6d <v2r>
    2b77:	8b 00                	mov    (%rax),%eax
    2b79:	88 45 e3             	mov    %al,-0x1d(%rbp)
   __u8 * word=&BYTE(CELL(sp+8));
    2b7c:	48 8b 05 05 c8 60 00 	mov    0x60c805(%rip),%rax        # 60f388 <f_boot>
    2b83:	48 83 c0 04          	add    $0x4,%rax
    2b87:	89 c2                	mov    %eax,%edx
    2b89:	48 8b 05 f8 c7 60 00 	mov    0x60c7f8(%rip),%rax        # 60f388 <f_boot>
    2b90:	29 c2                	sub    %eax,%edx
    2b92:	89 d0                	mov    %edx,%eax
    2b94:	48 63 d0             	movslq %eax,%rdx
    2b97:	48 8d 05 42 c5 20 00 	lea    0x20c542(%rip),%rax        # 20f0e0 <mem>
    2b9e:	48 01 d0             	add    %rdx,%rax
    2ba1:	8b 00                	mov    (%rax),%eax
    2ba3:	83 c0 08             	add    $0x8,%eax
    2ba6:	89 c7                	mov    %eax,%edi
    2ba8:	e8 c0 e2 ff ff       	callq  e6d <v2r>
    2bad:	8b 00                	mov    (%rax),%eax
    2baf:	89 c7                	mov    %eax,%edi
    2bb1:	e8 b7 e2 ff ff       	callq  e6d <v2r>
    2bb6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    	if(!addr)
    2bba:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    2bbe:	0f 85 8a 00 00 00    	jne    2c4e <SearchWordList+0x14d>
    	{
    		sp+=8; CELL(sp)=0; return;
    2bc4:	48 8b 05 bd c7 60 00 	mov    0x60c7bd(%rip),%rax        # 60f388 <f_boot>
    2bcb:	48 83 c0 04          	add    $0x4,%rax
    2bcf:	89 c2                	mov    %eax,%edx
    2bd1:	48 8b 05 b0 c7 60 00 	mov    0x60c7b0(%rip),%rax        # 60f388 <f_boot>
    2bd8:	29 c2                	sub    %eax,%edx
    2bda:	89 d0                	mov    %edx,%eax
    2bdc:	48 63 d0             	movslq %eax,%rdx
    2bdf:	48 8d 05 fa c4 20 00 	lea    0x20c4fa(%rip),%rax        # 20f0e0 <mem>
    2be6:	48 01 d0             	add    %rdx,%rax
    2be9:	8b 10                	mov    (%rax),%edx
    2beb:	48 8b 05 96 c7 60 00 	mov    0x60c796(%rip),%rax        # 60f388 <f_boot>
    2bf2:	48 83 c0 04          	add    $0x4,%rax
    2bf6:	89 c1                	mov    %eax,%ecx
    2bf8:	48 8b 05 89 c7 60 00 	mov    0x60c789(%rip),%rax        # 60f388 <f_boot>
    2bff:	29 c1                	sub    %eax,%ecx
    2c01:	89 c8                	mov    %ecx,%eax
    2c03:	48 63 c8             	movslq %eax,%rcx
    2c06:	48 8d 05 d3 c4 20 00 	lea    0x20c4d3(%rip),%rax        # 20f0e0 <mem>
    2c0d:	48 01 c8             	add    %rcx,%rax
    2c10:	83 c2 08             	add    $0x8,%edx
    2c13:	89 10                	mov    %edx,(%rax)
    2c15:	48 8b 05 6c c7 60 00 	mov    0x60c76c(%rip),%rax        # 60f388 <f_boot>
    2c1c:	48 83 c0 04          	add    $0x4,%rax
    2c20:	89 c2                	mov    %eax,%edx
    2c22:	48 8b 05 5f c7 60 00 	mov    0x60c75f(%rip),%rax        # 60f388 <f_boot>
    2c29:	29 c2                	sub    %eax,%edx
    2c2b:	89 d0                	mov    %edx,%eax
    2c2d:	48 63 d0             	movslq %eax,%rdx
    2c30:	48 8d 05 a9 c4 20 00 	lea    0x20c4a9(%rip),%rax        # 20f0e0 <mem>
    2c37:	48 01 d0             	add    %rdx,%rax
    2c3a:	8b 00                	mov    (%rax),%eax
    2c3c:	89 c7                	mov    %eax,%edi
    2c3e:	e8 2a e2 ff ff       	callq  e6d <v2r>
    2c43:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2c49:	e9 83 02 00 00       	jmpq   2ed1 <SearchWordList+0x3d0>
    	}
   for(;;)
    {
    	if(!addr)
    2c4e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    2c52:	0f 85 8a 00 00 00    	jne    2ce2 <SearchWordList+0x1e1>
    	{
    		sp+=8; CELL(sp)=0; return;
    2c58:	48 8b 05 29 c7 60 00 	mov    0x60c729(%rip),%rax        # 60f388 <f_boot>
    2c5f:	48 83 c0 04          	add    $0x4,%rax
    2c63:	89 c2                	mov    %eax,%edx
    2c65:	48 8b 05 1c c7 60 00 	mov    0x60c71c(%rip),%rax        # 60f388 <f_boot>
    2c6c:	29 c2                	sub    %eax,%edx
    2c6e:	89 d0                	mov    %edx,%eax
    2c70:	48 63 d0             	movslq %eax,%rdx
    2c73:	48 8d 05 66 c4 20 00 	lea    0x20c466(%rip),%rax        # 20f0e0 <mem>
    2c7a:	48 01 d0             	add    %rdx,%rax
    2c7d:	8b 10                	mov    (%rax),%edx
    2c7f:	48 8b 05 02 c7 60 00 	mov    0x60c702(%rip),%rax        # 60f388 <f_boot>
    2c86:	48 83 c0 04          	add    $0x4,%rax
    2c8a:	89 c1                	mov    %eax,%ecx
    2c8c:	48 8b 05 f5 c6 60 00 	mov    0x60c6f5(%rip),%rax        # 60f388 <f_boot>
    2c93:	29 c1                	sub    %eax,%ecx
    2c95:	89 c8                	mov    %ecx,%eax
    2c97:	48 63 c8             	movslq %eax,%rcx
    2c9a:	48 8d 05 3f c4 20 00 	lea    0x20c43f(%rip),%rax        # 20f0e0 <mem>
    2ca1:	48 01 c8             	add    %rcx,%rax
    2ca4:	83 c2 08             	add    $0x8,%edx
    2ca7:	89 10                	mov    %edx,(%rax)
    2ca9:	48 8b 05 d8 c6 60 00 	mov    0x60c6d8(%rip),%rax        # 60f388 <f_boot>
    2cb0:	48 83 c0 04          	add    $0x4,%rax
    2cb4:	89 c2                	mov    %eax,%edx
    2cb6:	48 8b 05 cb c6 60 00 	mov    0x60c6cb(%rip),%rax        # 60f388 <f_boot>
    2cbd:	29 c2                	sub    %eax,%edx
    2cbf:	89 d0                	mov    %edx,%eax
    2cc1:	48 63 d0             	movslq %eax,%rdx
    2cc4:	48 8d 05 15 c4 20 00 	lea    0x20c415(%rip),%rax        # 20f0e0 <mem>
    2ccb:	48 01 d0             	add    %rdx,%rax
    2cce:	8b 00                	mov    (%rax),%eax
    2cd0:	89 c7                	mov    %eax,%edi
    2cd2:	e8 96 e1 ff ff       	callq  e6d <v2r>
    2cd7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2cdd:	e9 ef 01 00 00       	jmpq   2ed1 <SearchWordList+0x3d0>
     	}
	   addr=SEARCH(addr,word);
    2ce2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2ce6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2ce9:	48 89 d6             	mov    %rdx,%rsi
    2cec:	89 c7                	mov    %eax,%edi
    2cee:	e8 a5 e9 ff ff       	callq  1698 <SEARCH>
    2cf3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    	if(!addr)
    2cf6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    2cfa:	0f 85 8a 00 00 00    	jne    2d8a <SearchWordList+0x289>
    	{
    		sp+=8; CELL(sp)=0; return;
    2d00:	48 8b 05 81 c6 60 00 	mov    0x60c681(%rip),%rax        # 60f388 <f_boot>
    2d07:	48 83 c0 04          	add    $0x4,%rax
    2d0b:	89 c2                	mov    %eax,%edx
    2d0d:	48 8b 05 74 c6 60 00 	mov    0x60c674(%rip),%rax        # 60f388 <f_boot>
    2d14:	29 c2                	sub    %eax,%edx
    2d16:	89 d0                	mov    %edx,%eax
    2d18:	48 63 d0             	movslq %eax,%rdx
    2d1b:	48 8d 05 be c3 20 00 	lea    0x20c3be(%rip),%rax        # 20f0e0 <mem>
    2d22:	48 01 d0             	add    %rdx,%rax
    2d25:	8b 10                	mov    (%rax),%edx
    2d27:	48 8b 05 5a c6 60 00 	mov    0x60c65a(%rip),%rax        # 60f388 <f_boot>
    2d2e:	48 83 c0 04          	add    $0x4,%rax
    2d32:	89 c1                	mov    %eax,%ecx
    2d34:	48 8b 05 4d c6 60 00 	mov    0x60c64d(%rip),%rax        # 60f388 <f_boot>
    2d3b:	29 c1                	sub    %eax,%ecx
    2d3d:	89 c8                	mov    %ecx,%eax
    2d3f:	48 63 c8             	movslq %eax,%rcx
    2d42:	48 8d 05 97 c3 20 00 	lea    0x20c397(%rip),%rax        # 20f0e0 <mem>
    2d49:	48 01 c8             	add    %rcx,%rax
    2d4c:	83 c2 08             	add    $0x8,%edx
    2d4f:	89 10                	mov    %edx,(%rax)
    2d51:	48 8b 05 30 c6 60 00 	mov    0x60c630(%rip),%rax        # 60f388 <f_boot>
    2d58:	48 83 c0 04          	add    $0x4,%rax
    2d5c:	89 c2                	mov    %eax,%edx
    2d5e:	48 8b 05 23 c6 60 00 	mov    0x60c623(%rip),%rax        # 60f388 <f_boot>
    2d65:	29 c2                	sub    %eax,%edx
    2d67:	89 d0                	mov    %edx,%eax
    2d69:	48 63 d0             	movslq %eax,%rdx
    2d6c:	48 8d 05 6d c3 20 00 	lea    0x20c36d(%rip),%rax        # 20f0e0 <mem>
    2d73:	48 01 d0             	add    %rdx,%rax
    2d76:	8b 00                	mov    (%rax),%eax
    2d78:	89 c7                	mov    %eax,%edi
    2d7a:	e8 ee e0 ff ff       	callq  e6d <v2r>
    2d7f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    2d85:	e9 47 01 00 00       	jmpq   2ed1 <SearchWordList+0x3d0>
    	}
    	if((BYTE(addr)&0x3f)==size )
    2d8a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2d8d:	89 c7                	mov    %eax,%edi
    2d8f:	e8 d9 e0 ff ff       	callq  e6d <v2r>
    2d94:	0f b6 00             	movzbl (%rax),%eax
    2d97:	0f b6 c0             	movzbl %al,%eax
    2d9a:	83 e0 3f             	and    $0x3f,%eax
    2d9d:	89 c2                	mov    %eax,%edx
    2d9f:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
    2da3:	39 c2                	cmp    %eax,%edx
    2da5:	0f 85 0e 01 00 00    	jne    2eb9 <SearchWordList+0x3b8>
    	{
	  sp+=4;
    2dab:	48 8b 05 d6 c5 60 00 	mov    0x60c5d6(%rip),%rax        # 60f388 <f_boot>
    2db2:	48 83 c0 04          	add    $0x4,%rax
    2db6:	89 c2                	mov    %eax,%edx
    2db8:	48 8b 05 c9 c5 60 00 	mov    0x60c5c9(%rip),%rax        # 60f388 <f_boot>
    2dbf:	29 c2                	sub    %eax,%edx
    2dc1:	89 d0                	mov    %edx,%eax
    2dc3:	48 63 d0             	movslq %eax,%rdx
    2dc6:	48 8d 05 13 c3 20 00 	lea    0x20c313(%rip),%rax        # 20f0e0 <mem>
    2dcd:	48 01 d0             	add    %rdx,%rax
    2dd0:	8b 10                	mov    (%rax),%edx
    2dd2:	48 8b 05 af c5 60 00 	mov    0x60c5af(%rip),%rax        # 60f388 <f_boot>
    2dd9:	48 83 c0 04          	add    $0x4,%rax
    2ddd:	89 c1                	mov    %eax,%ecx
    2ddf:	48 8b 05 a2 c5 60 00 	mov    0x60c5a2(%rip),%rax        # 60f388 <f_boot>
    2de6:	29 c1                	sub    %eax,%ecx
    2de8:	89 c8                	mov    %ecx,%eax
    2dea:	48 63 c8             	movslq %eax,%rcx
    2ded:	48 8d 05 ec c2 20 00 	lea    0x20c2ec(%rip),%rax        # 20f0e0 <mem>
    2df4:	48 01 c8             	add    %rcx,%rax
    2df7:	83 c2 04             	add    $0x4,%edx
    2dfa:	89 10                	mov    %edx,(%rax)
    	  if(BYTE(addr)&0x80)
    2dfc:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2dff:	89 c7                	mov    %eax,%edi
    2e01:	e8 67 e0 ff ff       	callq  e6d <v2r>
    2e06:	0f b6 00             	movzbl (%rax),%eax
    2e09:	84 c0                	test   %al,%al
    2e0b:	79 36                	jns    2e43 <SearchWordList+0x342>
    	   CELL(sp)=1;
    2e0d:	48 8b 05 74 c5 60 00 	mov    0x60c574(%rip),%rax        # 60f388 <f_boot>
    2e14:	48 83 c0 04          	add    $0x4,%rax
    2e18:	89 c2                	mov    %eax,%edx
    2e1a:	48 8b 05 67 c5 60 00 	mov    0x60c567(%rip),%rax        # 60f388 <f_boot>
    2e21:	29 c2                	sub    %eax,%edx
    2e23:	89 d0                	mov    %edx,%eax
    2e25:	48 63 d0             	movslq %eax,%rdx
    2e28:	48 8d 05 b1 c2 20 00 	lea    0x20c2b1(%rip),%rax        # 20f0e0 <mem>
    2e2f:	48 01 d0             	add    %rdx,%rax
    2e32:	8b 00                	mov    (%rax),%eax
    2e34:	89 c7                	mov    %eax,%edi
    2e36:	e8 32 e0 ff ff       	callq  e6d <v2r>
    2e3b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    2e41:	eb 34                	jmp    2e77 <SearchWordList+0x376>
    	  else
		CELL(sp)=-1;
    2e43:	48 8b 05 3e c5 60 00 	mov    0x60c53e(%rip),%rax        # 60f388 <f_boot>
    2e4a:	48 83 c0 04          	add    $0x4,%rax
    2e4e:	89 c2                	mov    %eax,%edx
    2e50:	48 8b 05 31 c5 60 00 	mov    0x60c531(%rip),%rax        # 60f388 <f_boot>
    2e57:	29 c2                	sub    %eax,%edx
    2e59:	89 d0                	mov    %edx,%eax
    2e5b:	48 63 d0             	movslq %eax,%rdx
    2e5e:	48 8d 05 7b c2 20 00 	lea    0x20c27b(%rip),%rax        # 20f0e0 <mem>
    2e65:	48 01 d0             	add    %rdx,%rax
    2e68:	8b 00                	mov    (%rax),%eax
    2e6a:	89 c7                	mov    %eax,%edi
    2e6c:	e8 fc df ff ff       	callq  e6d <v2r>
    2e71:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
		CELL(sp+4)=FromName(addr);
    2e77:	48 8b 05 0a c5 60 00 	mov    0x60c50a(%rip),%rax        # 60f388 <f_boot>
    2e7e:	48 83 c0 04          	add    $0x4,%rax
    2e82:	89 c2                	mov    %eax,%edx
    2e84:	48 8b 05 fd c4 60 00 	mov    0x60c4fd(%rip),%rax        # 60f388 <f_boot>
    2e8b:	29 c2                	sub    %eax,%edx
    2e8d:	89 d0                	mov    %edx,%eax
    2e8f:	48 63 d0             	movslq %eax,%rdx
    2e92:	48 8d 05 47 c2 20 00 	lea    0x20c247(%rip),%rax        # 20f0e0 <mem>
    2e99:	48 01 d0             	add    %rdx,%rax
    2e9c:	8b 00                	mov    (%rax),%eax
    2e9e:	83 c0 04             	add    $0x4,%eax
    2ea1:	89 c7                	mov    %eax,%edi
    2ea3:	e8 c5 df ff ff       	callq  e6d <v2r>
    2ea8:	48 89 c3             	mov    %rax,%rbx
    2eab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2eae:	89 c7                	mov    %eax,%edi
    2eb0:	e8 0b fc ff ff       	callq  2ac0 <FromName>
    2eb5:	89 03                	mov    %eax,(%rbx)
    	  return;
    2eb7:	eb 18                	jmp    2ed1 <SearchWordList+0x3d0>
    	}
		addr-=4;
    2eb9:	83 6d e4 04          	subl   $0x4,-0x1c(%rbp)
		addr=CELL(addr);
    2ebd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2ec0:	89 c7                	mov    %eax,%edi
    2ec2:	e8 a6 df ff ff       	callq  e6d <v2r>
    2ec7:	8b 00                	mov    (%rax),%eax
    2ec9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    	if(!addr)
    2ecc:	e9 7d fd ff ff       	jmpq   2c4e <SearchWordList+0x14d>
    }

}
    2ed1:	48 83 c4 18          	add    $0x18,%rsp
    2ed5:	5b                   	pop    %rbx
    2ed6:	5d                   	pop    %rbp
    2ed7:	c3                   	retq   

0000000000002ed8 <SFind>:

void SFind()
{	int voc=CONTEXT;
    2ed8:	55                   	push   %rbp
    2ed9:	48 89 e5             	mov    %rsp,%rbp
    2edc:	53                   	push   %rbx
    2edd:	48 83 ec 18          	sub    $0x18,%rsp
    2ee1:	48 8b 05 a0 c4 60 00 	mov    0x60c4a0(%rip),%rax        # 60f388 <f_boot>
    2ee8:	48 05 30 01 00 00    	add    $0x130,%rax
    2eee:	89 c2                	mov    %eax,%edx
    2ef0:	48 8b 05 91 c4 60 00 	mov    0x60c491(%rip),%rax        # 60f388 <f_boot>
    2ef7:	29 c2                	sub    %eax,%edx
    2ef9:	89 d0                	mov    %edx,%eax
    2efb:	89 45 ec             	mov    %eax,-0x14(%rbp)
	
	sp-=4; CELL(sp)=0;
    2efe:	48 8b 05 83 c4 60 00 	mov    0x60c483(%rip),%rax        # 60f388 <f_boot>
    2f05:	48 83 c0 04          	add    $0x4,%rax
    2f09:	89 c2                	mov    %eax,%edx
    2f0b:	48 8b 05 76 c4 60 00 	mov    0x60c476(%rip),%rax        # 60f388 <f_boot>
    2f12:	29 c2                	sub    %eax,%edx
    2f14:	89 d0                	mov    %edx,%eax
    2f16:	48 63 d0             	movslq %eax,%rdx
    2f19:	48 8d 05 c0 c1 20 00 	lea    0x20c1c0(%rip),%rax        # 20f0e0 <mem>
    2f20:	48 01 d0             	add    %rdx,%rax
    2f23:	8b 10                	mov    (%rax),%edx
    2f25:	48 8b 05 5c c4 60 00 	mov    0x60c45c(%rip),%rax        # 60f388 <f_boot>
    2f2c:	48 83 c0 04          	add    $0x4,%rax
    2f30:	89 c1                	mov    %eax,%ecx
    2f32:	48 8b 05 4f c4 60 00 	mov    0x60c44f(%rip),%rax        # 60f388 <f_boot>
    2f39:	29 c1                	sub    %eax,%ecx
    2f3b:	89 c8                	mov    %ecx,%eax
    2f3d:	48 63 c8             	movslq %eax,%rcx
    2f40:	48 8d 05 99 c1 20 00 	lea    0x20c199(%rip),%rax        # 20f0e0 <mem>
    2f47:	48 01 c8             	add    %rcx,%rax
    2f4a:	83 ea 04             	sub    $0x4,%edx
    2f4d:	89 10                	mov    %edx,(%rax)
    2f4f:	48 8b 05 32 c4 60 00 	mov    0x60c432(%rip),%rax        # 60f388 <f_boot>
    2f56:	48 83 c0 04          	add    $0x4,%rax
    2f5a:	89 c2                	mov    %eax,%edx
    2f5c:	48 8b 05 25 c4 60 00 	mov    0x60c425(%rip),%rax        # 60f388 <f_boot>
    2f63:	29 c2                	sub    %eax,%edx
    2f65:	89 d0                	mov    %edx,%eax
    2f67:	48 63 d0             	movslq %eax,%rdx
    2f6a:	48 8d 05 6f c1 20 00 	lea    0x20c16f(%rip),%rax        # 20f0e0 <mem>
    2f71:	48 01 d0             	add    %rdx,%rax
    2f74:	8b 00                	mov    (%rax),%eax
    2f76:	89 c7                	mov    %eax,%edi
    2f78:	e8 f0 de ff ff       	callq  e6d <v2r>
    2f7d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	while( CELL(voc) )
    2f83:	e9 c6 03 00 00       	jmpq   334e <SFind+0x476>
	{	sp+=4;
    2f88:	48 8b 05 f9 c3 60 00 	mov    0x60c3f9(%rip),%rax        # 60f388 <f_boot>
    2f8f:	48 83 c0 04          	add    $0x4,%rax
    2f93:	89 c2                	mov    %eax,%edx
    2f95:	48 8b 05 ec c3 60 00 	mov    0x60c3ec(%rip),%rax        # 60f388 <f_boot>
    2f9c:	29 c2                	sub    %eax,%edx
    2f9e:	89 d0                	mov    %edx,%eax
    2fa0:	48 63 d0             	movslq %eax,%rdx
    2fa3:	48 8d 05 36 c1 20 00 	lea    0x20c136(%rip),%rax        # 20f0e0 <mem>
    2faa:	48 01 d0             	add    %rdx,%rax
    2fad:	8b 10                	mov    (%rax),%edx
    2faf:	48 8b 05 d2 c3 60 00 	mov    0x60c3d2(%rip),%rax        # 60f388 <f_boot>
    2fb6:	48 83 c0 04          	add    $0x4,%rax
    2fba:	89 c1                	mov    %eax,%ecx
    2fbc:	48 8b 05 c5 c3 60 00 	mov    0x60c3c5(%rip),%rax        # 60f388 <f_boot>
    2fc3:	29 c1                	sub    %eax,%ecx
    2fc5:	89 c8                	mov    %ecx,%eax
    2fc7:	48 63 c8             	movslq %eax,%rcx
    2fca:	48 8d 05 0f c1 20 00 	lea    0x20c10f(%rip),%rax        # 20f0e0 <mem>
    2fd1:	48 01 c8             	add    %rcx,%rax
    2fd4:	83 c2 04             	add    $0x4,%edx
    2fd7:	89 10                	mov    %edx,(%rax)
	    sp-=4;CELL(sp)=CELL(sp+8);
    2fd9:	48 8b 05 a8 c3 60 00 	mov    0x60c3a8(%rip),%rax        # 60f388 <f_boot>
    2fe0:	48 83 c0 04          	add    $0x4,%rax
    2fe4:	89 c2                	mov    %eax,%edx
    2fe6:	48 8b 05 9b c3 60 00 	mov    0x60c39b(%rip),%rax        # 60f388 <f_boot>
    2fed:	29 c2                	sub    %eax,%edx
    2fef:	89 d0                	mov    %edx,%eax
    2ff1:	48 63 d0             	movslq %eax,%rdx
    2ff4:	48 8d 05 e5 c0 20 00 	lea    0x20c0e5(%rip),%rax        # 20f0e0 <mem>
    2ffb:	48 01 d0             	add    %rdx,%rax
    2ffe:	8b 10                	mov    (%rax),%edx
    3000:	48 8b 05 81 c3 60 00 	mov    0x60c381(%rip),%rax        # 60f388 <f_boot>
    3007:	48 83 c0 04          	add    $0x4,%rax
    300b:	89 c1                	mov    %eax,%ecx
    300d:	48 8b 05 74 c3 60 00 	mov    0x60c374(%rip),%rax        # 60f388 <f_boot>
    3014:	29 c1                	sub    %eax,%ecx
    3016:	89 c8                	mov    %ecx,%eax
    3018:	48 63 c8             	movslq %eax,%rcx
    301b:	48 8d 05 be c0 20 00 	lea    0x20c0be(%rip),%rax        # 20f0e0 <mem>
    3022:	48 01 c8             	add    %rcx,%rax
    3025:	83 ea 04             	sub    $0x4,%edx
    3028:	89 10                	mov    %edx,(%rax)
    302a:	48 8b 05 57 c3 60 00 	mov    0x60c357(%rip),%rax        # 60f388 <f_boot>
    3031:	48 83 c0 04          	add    $0x4,%rax
    3035:	89 c2                	mov    %eax,%edx
    3037:	48 8b 05 4a c3 60 00 	mov    0x60c34a(%rip),%rax        # 60f388 <f_boot>
    303e:	29 c2                	sub    %eax,%edx
    3040:	89 d0                	mov    %edx,%eax
    3042:	48 63 d0             	movslq %eax,%rdx
    3045:	48 8d 05 94 c0 20 00 	lea    0x20c094(%rip),%rax        # 20f0e0 <mem>
    304c:	48 01 d0             	add    %rdx,%rax
    304f:	8b 00                	mov    (%rax),%eax
    3051:	83 c0 08             	add    $0x8,%eax
    3054:	89 c7                	mov    %eax,%edi
    3056:	e8 12 de ff ff       	callq  e6d <v2r>
    305b:	48 89 c3             	mov    %rax,%rbx
    305e:	48 8b 05 23 c3 60 00 	mov    0x60c323(%rip),%rax        # 60f388 <f_boot>
    3065:	48 83 c0 04          	add    $0x4,%rax
    3069:	89 c2                	mov    %eax,%edx
    306b:	48 8b 05 16 c3 60 00 	mov    0x60c316(%rip),%rax        # 60f388 <f_boot>
    3072:	29 c2                	sub    %eax,%edx
    3074:	89 d0                	mov    %edx,%eax
    3076:	48 63 d0             	movslq %eax,%rdx
    3079:	48 8d 05 60 c0 20 00 	lea    0x20c060(%rip),%rax        # 20f0e0 <mem>
    3080:	48 01 d0             	add    %rdx,%rax
    3083:	8b 00                	mov    (%rax),%eax
    3085:	89 c7                	mov    %eax,%edi
    3087:	e8 e1 dd ff ff       	callq  e6d <v2r>
    308c:	48 89 c2             	mov    %rax,%rdx
    308f:	8b 03                	mov    (%rbx),%eax
    3091:	89 02                	mov    %eax,(%rdx)
	    sp-=4;CELL(sp)=CELL(sp+8);
    3093:	48 8b 05 ee c2 60 00 	mov    0x60c2ee(%rip),%rax        # 60f388 <f_boot>
    309a:	48 83 c0 04          	add    $0x4,%rax
    309e:	89 c2                	mov    %eax,%edx
    30a0:	48 8b 05 e1 c2 60 00 	mov    0x60c2e1(%rip),%rax        # 60f388 <f_boot>
    30a7:	29 c2                	sub    %eax,%edx
    30a9:	89 d0                	mov    %edx,%eax
    30ab:	48 63 d0             	movslq %eax,%rdx
    30ae:	48 8d 05 2b c0 20 00 	lea    0x20c02b(%rip),%rax        # 20f0e0 <mem>
    30b5:	48 01 d0             	add    %rdx,%rax
    30b8:	8b 10                	mov    (%rax),%edx
    30ba:	48 8b 05 c7 c2 60 00 	mov    0x60c2c7(%rip),%rax        # 60f388 <f_boot>
    30c1:	48 83 c0 04          	add    $0x4,%rax
    30c5:	89 c1                	mov    %eax,%ecx
    30c7:	48 8b 05 ba c2 60 00 	mov    0x60c2ba(%rip),%rax        # 60f388 <f_boot>
    30ce:	29 c1                	sub    %eax,%ecx
    30d0:	89 c8                	mov    %ecx,%eax
    30d2:	48 63 c8             	movslq %eax,%rcx
    30d5:	48 8d 05 04 c0 20 00 	lea    0x20c004(%rip),%rax        # 20f0e0 <mem>
    30dc:	48 01 c8             	add    %rcx,%rax
    30df:	83 ea 04             	sub    $0x4,%edx
    30e2:	89 10                	mov    %edx,(%rax)
    30e4:	48 8b 05 9d c2 60 00 	mov    0x60c29d(%rip),%rax        # 60f388 <f_boot>
    30eb:	48 83 c0 04          	add    $0x4,%rax
    30ef:	89 c2                	mov    %eax,%edx
    30f1:	48 8b 05 90 c2 60 00 	mov    0x60c290(%rip),%rax        # 60f388 <f_boot>
    30f8:	29 c2                	sub    %eax,%edx
    30fa:	89 d0                	mov    %edx,%eax
    30fc:	48 63 d0             	movslq %eax,%rdx
    30ff:	48 8d 05 da bf 20 00 	lea    0x20bfda(%rip),%rax        # 20f0e0 <mem>
    3106:	48 01 d0             	add    %rdx,%rax
    3109:	8b 00                	mov    (%rax),%eax
    310b:	83 c0 08             	add    $0x8,%eax
    310e:	89 c7                	mov    %eax,%edi
    3110:	e8 58 dd ff ff       	callq  e6d <v2r>
    3115:	48 89 c3             	mov    %rax,%rbx
    3118:	48 8b 05 69 c2 60 00 	mov    0x60c269(%rip),%rax        # 60f388 <f_boot>
    311f:	48 83 c0 04          	add    $0x4,%rax
    3123:	89 c2                	mov    %eax,%edx
    3125:	48 8b 05 5c c2 60 00 	mov    0x60c25c(%rip),%rax        # 60f388 <f_boot>
    312c:	29 c2                	sub    %eax,%edx
    312e:	89 d0                	mov    %edx,%eax
    3130:	48 63 d0             	movslq %eax,%rdx
    3133:	48 8d 05 a6 bf 20 00 	lea    0x20bfa6(%rip),%rax        # 20f0e0 <mem>
    313a:	48 01 d0             	add    %rdx,%rax
    313d:	8b 00                	mov    (%rax),%eax
    313f:	89 c7                	mov    %eax,%edi
    3141:	e8 27 dd ff ff       	callq  e6d <v2r>
    3146:	48 89 c2             	mov    %rax,%rdx
    3149:	8b 03                	mov    (%rbx),%eax
    314b:	89 02                	mov    %eax,(%rdx)
		sp-=4;CELL(sp)=CELL(voc);
    314d:	48 8b 05 34 c2 60 00 	mov    0x60c234(%rip),%rax        # 60f388 <f_boot>
    3154:	48 83 c0 04          	add    $0x4,%rax
    3158:	89 c2                	mov    %eax,%edx
    315a:	48 8b 05 27 c2 60 00 	mov    0x60c227(%rip),%rax        # 60f388 <f_boot>
    3161:	29 c2                	sub    %eax,%edx
    3163:	89 d0                	mov    %edx,%eax
    3165:	48 63 d0             	movslq %eax,%rdx
    3168:	48 8d 05 71 bf 20 00 	lea    0x20bf71(%rip),%rax        # 20f0e0 <mem>
    316f:	48 01 d0             	add    %rdx,%rax
    3172:	8b 10                	mov    (%rax),%edx
    3174:	48 8b 05 0d c2 60 00 	mov    0x60c20d(%rip),%rax        # 60f388 <f_boot>
    317b:	48 83 c0 04          	add    $0x4,%rax
    317f:	89 c1                	mov    %eax,%ecx
    3181:	48 8b 05 00 c2 60 00 	mov    0x60c200(%rip),%rax        # 60f388 <f_boot>
    3188:	29 c1                	sub    %eax,%ecx
    318a:	89 c8                	mov    %ecx,%eax
    318c:	48 63 c8             	movslq %eax,%rcx
    318f:	48 8d 05 4a bf 20 00 	lea    0x20bf4a(%rip),%rax        # 20f0e0 <mem>
    3196:	48 01 c8             	add    %rcx,%rax
    3199:	83 ea 04             	sub    $0x4,%edx
    319c:	89 10                	mov    %edx,(%rax)
    319e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    31a1:	89 c7                	mov    %eax,%edi
    31a3:	e8 c5 dc ff ff       	callq  e6d <v2r>
    31a8:	48 89 c3             	mov    %rax,%rbx
    31ab:	48 8b 05 d6 c1 60 00 	mov    0x60c1d6(%rip),%rax        # 60f388 <f_boot>
    31b2:	48 83 c0 04          	add    $0x4,%rax
    31b6:	89 c2                	mov    %eax,%edx
    31b8:	48 8b 05 c9 c1 60 00 	mov    0x60c1c9(%rip),%rax        # 60f388 <f_boot>
    31bf:	29 c2                	sub    %eax,%edx
    31c1:	89 d0                	mov    %edx,%eax
    31c3:	48 63 d0             	movslq %eax,%rdx
    31c6:	48 8d 05 13 bf 20 00 	lea    0x20bf13(%rip),%rax        # 20f0e0 <mem>
    31cd:	48 01 d0             	add    %rdx,%rax
    31d0:	8b 00                	mov    (%rax),%eax
    31d2:	89 c7                	mov    %eax,%edi
    31d4:	e8 94 dc ff ff       	callq  e6d <v2r>
    31d9:	48 89 c2             	mov    %rax,%rdx
    31dc:	8b 03                	mov    (%rbx),%eax
    31de:	89 02                	mov    %eax,(%rdx)
		SearchWordList();
    31e0:	b8 00 00 00 00       	mov    $0x0,%eax
    31e5:	e8 17 f9 ff ff       	callq  2b01 <SearchWordList>
		if(CELL(sp))
    31ea:	48 8b 05 97 c1 60 00 	mov    0x60c197(%rip),%rax        # 60f388 <f_boot>
    31f1:	48 83 c0 04          	add    $0x4,%rax
    31f5:	89 c2                	mov    %eax,%edx
    31f7:	48 8b 05 8a c1 60 00 	mov    0x60c18a(%rip),%rax        # 60f388 <f_boot>
    31fe:	29 c2                	sub    %eax,%edx
    3200:	89 d0                	mov    %edx,%eax
    3202:	48 63 d0             	movslq %eax,%rdx
    3205:	48 8d 05 d4 be 20 00 	lea    0x20bed4(%rip),%rax        # 20f0e0 <mem>
    320c:	48 01 d0             	add    %rdx,%rax
    320f:	8b 00                	mov    (%rax),%eax
    3211:	89 c7                	mov    %eax,%edi
    3213:	e8 55 dc ff ff       	callq  e6d <v2r>
    3218:	8b 00                	mov    (%rax),%eax
    321a:	85 c0                	test   %eax,%eax
    321c:	0f 84 28 01 00 00    	je     334a <SFind+0x472>
		{
			CELL(sp+8)=CELL(sp);
    3222:	48 8b 05 5f c1 60 00 	mov    0x60c15f(%rip),%rax        # 60f388 <f_boot>
    3229:	48 83 c0 04          	add    $0x4,%rax
    322d:	89 c2                	mov    %eax,%edx
    322f:	48 8b 05 52 c1 60 00 	mov    0x60c152(%rip),%rax        # 60f388 <f_boot>
    3236:	29 c2                	sub    %eax,%edx
    3238:	89 d0                	mov    %edx,%eax
    323a:	48 63 d0             	movslq %eax,%rdx
    323d:	48 8d 05 9c be 20 00 	lea    0x20be9c(%rip),%rax        # 20f0e0 <mem>
    3244:	48 01 d0             	add    %rdx,%rax
    3247:	8b 00                	mov    (%rax),%eax
    3249:	89 c7                	mov    %eax,%edi
    324b:	e8 1d dc ff ff       	callq  e6d <v2r>
    3250:	48 89 c3             	mov    %rax,%rbx
    3253:	48 8b 05 2e c1 60 00 	mov    0x60c12e(%rip),%rax        # 60f388 <f_boot>
    325a:	48 83 c0 04          	add    $0x4,%rax
    325e:	89 c2                	mov    %eax,%edx
    3260:	48 8b 05 21 c1 60 00 	mov    0x60c121(%rip),%rax        # 60f388 <f_boot>
    3267:	29 c2                	sub    %eax,%edx
    3269:	89 d0                	mov    %edx,%eax
    326b:	48 63 d0             	movslq %eax,%rdx
    326e:	48 8d 05 6b be 20 00 	lea    0x20be6b(%rip),%rax        # 20f0e0 <mem>
    3275:	48 01 d0             	add    %rdx,%rax
    3278:	8b 00                	mov    (%rax),%eax
    327a:	83 c0 08             	add    $0x8,%eax
    327d:	89 c7                	mov    %eax,%edi
    327f:	e8 e9 db ff ff       	callq  e6d <v2r>
    3284:	48 89 c2             	mov    %rax,%rdx
    3287:	8b 03                	mov    (%rbx),%eax
    3289:	89 02                	mov    %eax,(%rdx)
			CELL(sp+12)=CELL(sp+4);
    328b:	48 8b 05 f6 c0 60 00 	mov    0x60c0f6(%rip),%rax        # 60f388 <f_boot>
    3292:	48 83 c0 04          	add    $0x4,%rax
    3296:	89 c2                	mov    %eax,%edx
    3298:	48 8b 05 e9 c0 60 00 	mov    0x60c0e9(%rip),%rax        # 60f388 <f_boot>
    329f:	29 c2                	sub    %eax,%edx
    32a1:	89 d0                	mov    %edx,%eax
    32a3:	48 63 d0             	movslq %eax,%rdx
    32a6:	48 8d 05 33 be 20 00 	lea    0x20be33(%rip),%rax        # 20f0e0 <mem>
    32ad:	48 01 d0             	add    %rdx,%rax
    32b0:	8b 00                	mov    (%rax),%eax
    32b2:	83 c0 04             	add    $0x4,%eax
    32b5:	89 c7                	mov    %eax,%edi
    32b7:	e8 b1 db ff ff       	callq  e6d <v2r>
    32bc:	48 89 c3             	mov    %rax,%rbx
    32bf:	48 8b 05 c2 c0 60 00 	mov    0x60c0c2(%rip),%rax        # 60f388 <f_boot>
    32c6:	48 83 c0 04          	add    $0x4,%rax
    32ca:	89 c2                	mov    %eax,%edx
    32cc:	48 8b 05 b5 c0 60 00 	mov    0x60c0b5(%rip),%rax        # 60f388 <f_boot>
    32d3:	29 c2                	sub    %eax,%edx
    32d5:	89 d0                	mov    %edx,%eax
    32d7:	48 63 d0             	movslq %eax,%rdx
    32da:	48 8d 05 ff bd 20 00 	lea    0x20bdff(%rip),%rax        # 20f0e0 <mem>
    32e1:	48 01 d0             	add    %rdx,%rax
    32e4:	8b 00                	mov    (%rax),%eax
    32e6:	83 c0 0c             	add    $0xc,%eax
    32e9:	89 c7                	mov    %eax,%edi
    32eb:	e8 7d db ff ff       	callq  e6d <v2r>
    32f0:	48 89 c2             	mov    %rax,%rdx
    32f3:	8b 03                	mov    (%rbx),%eax
    32f5:	89 02                	mov    %eax,(%rdx)
			sp+=8;
    32f7:	48 8b 05 8a c0 60 00 	mov    0x60c08a(%rip),%rax        # 60f388 <f_boot>
    32fe:	48 83 c0 04          	add    $0x4,%rax
    3302:	89 c2                	mov    %eax,%edx
    3304:	48 8b 05 7d c0 60 00 	mov    0x60c07d(%rip),%rax        # 60f388 <f_boot>
    330b:	29 c2                	sub    %eax,%edx
    330d:	89 d0                	mov    %edx,%eax
    330f:	48 63 d0             	movslq %eax,%rdx
    3312:	48 8d 05 c7 bd 20 00 	lea    0x20bdc7(%rip),%rax        # 20f0e0 <mem>
    3319:	48 01 d0             	add    %rdx,%rax
    331c:	8b 10                	mov    (%rax),%edx
    331e:	48 8b 05 63 c0 60 00 	mov    0x60c063(%rip),%rax        # 60f388 <f_boot>
    3325:	48 83 c0 04          	add    $0x4,%rax
    3329:	89 c1                	mov    %eax,%ecx
    332b:	48 8b 05 56 c0 60 00 	mov    0x60c056(%rip),%rax        # 60f388 <f_boot>
    3332:	29 c1                	sub    %eax,%ecx
    3334:	89 c8                	mov    %ecx,%eax
    3336:	48 63 c8             	movslq %eax,%rcx
    3339:	48 8d 05 a0 bd 20 00 	lea    0x20bda0(%rip),%rax        # 20f0e0 <mem>
    3340:	48 01 c8             	add    %rcx,%rax
    3343:	83 c2 08             	add    $0x8,%edx
    3346:	89 10                	mov    %edx,(%rax)
			return;
    3348:	eb 18                	jmp    3362 <SFind+0x48a>
		}	 voc+=4;
    334a:	83 45 ec 04          	addl   $0x4,-0x14(%rbp)
	while( CELL(voc) )
    334e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3351:	89 c7                	mov    %eax,%edi
    3353:	e8 15 db ff ff       	callq  e6d <v2r>
    3358:	8b 00                	mov    (%rax),%eax
    335a:	85 c0                	test   %eax,%eax
    335c:	0f 85 26 fc ff ff    	jne    2f88 <SFind+0xb0>
	}
}
    3362:	48 83 c4 18          	add    $0x18,%rsp
    3366:	5b                   	pop    %rbx
    3367:	5d                   	pop    %rbp
    3368:	c3                   	retq   

0000000000003369 <rl_gets>:
static char *line_read = (char *)NULL;
// http://oco.org.ua/sp-forth-%D0%B2-linux
/* Read a string, and return a pointer to it.  Returns NULL on EOF. */
char *
rl_gets ()
{
    3369:	55                   	push   %rbp
    336a:	48 89 e5             	mov    %rsp,%rbp
  /* If the buffer has already been allocated, return the memory
     to the free pool. */
  if (line_read)
    336d:	48 8b 05 b4 bc 20 00 	mov    0x20bcb4(%rip),%rax        # 20f028 <line_read>
    3374:	48 85 c0             	test   %rax,%rax
    3377:	74 1a                	je     3393 <rl_gets+0x2a>
    {
      free (line_read);
    3379:	48 8b 05 a8 bc 20 00 	mov    0x20bca8(%rip),%rax        # 20f028 <line_read>
    3380:	48 89 c7             	mov    %rax,%rdi
    3383:	e8 f8 d7 ff ff       	callq  b80 <free@plt>
      line_read = (char *)NULL;
    3388:	48 c7 05 95 bc 20 00 	movq   $0x0,0x20bc95(%rip)        # 20f028 <line_read>
    338f:	00 00 00 00 
    }

  /* Get a line from the user. */
  line_read = readline ("");
    3393:	48 8d 3d 33 a1 00 00 	lea    0xa133(%rip),%rdi        # d4cd <_IO_stdin_used+0xd>
    339a:	e8 b1 d8 ff ff       	callq  c50 <readline@plt>
    339f:	48 89 05 82 bc 20 00 	mov    %rax,0x20bc82(%rip)        # 20f028 <line_read>

  /* If the line has any text in it, save it on the history. */
  if (line_read && *line_read)
    33a6:	48 8b 05 7b bc 20 00 	mov    0x20bc7b(%rip),%rax        # 20f028 <line_read>
    33ad:	48 85 c0             	test   %rax,%rax
    33b0:	74 1d                	je     33cf <rl_gets+0x66>
    33b2:	48 8b 05 6f bc 20 00 	mov    0x20bc6f(%rip),%rax        # 20f028 <line_read>
    33b9:	0f b6 00             	movzbl (%rax),%eax
    33bc:	84 c0                	test   %al,%al
    33be:	74 0f                	je     33cf <rl_gets+0x66>
    add_history (line_read);
    33c0:	48 8b 05 61 bc 20 00 	mov    0x20bc61(%rip),%rax        # 20f028 <line_read>
    33c7:	48 89 c7             	mov    %rax,%rdi
    33ca:	e8 f1 d7 ff ff       	callq  bc0 <add_history@plt>

  return (line_read);
    33cf:	48 8b 05 52 bc 20 00 	mov    0x20bc52(%rip),%rax        # 20f028 <line_read>
}
    33d6:	5d                   	pop    %rbp
    33d7:	c3                   	retq   

00000000000033d8 <virtual_machine>:
#endif

void virtual_machine()
{
    33d8:	55                   	push   %rbp
    33d9:	48 89 e5             	mov    %rsp,%rbp
    33dc:	41 57                	push   %r15
    33de:	41 56                	push   %r14
    33e0:	41 55                	push   %r13
    33e2:	41 54                	push   %r12
    33e4:	53                   	push   %rbx
    33e5:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
    33ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    33f3:	00 00 
    33f5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    33f9:	31 c0                	xor    %eax,%eax
	
 __u32 rp,ip,ireg,t,tmp;
 __u32 addr,len,fp,ior;
 __u32  res;
    char cc[44];
 __u32 zdbg=0;
    33fb:	c7 85 78 fe ff ff 00 	movl   $0x0,-0x188(%rbp)
    3402:	00 00 00 
 __u64 dtmp;
 interrupt=0;
    3405:	c7 05 d9 bc 60 00 00 	movl   $0x0,0x60bcd9(%rip)        # 60f0e8 <interrupt>
    340c:	00 00 00 
 rp=MEMSIZE;
    340f:	c7 85 5c fe ff ff 00 	movl   $0x400000,-0x1a4(%rbp)
    3416:	00 40 00 
 sp=rp-32*444;
    3419:	48 8b 05 68 bf 60 00 	mov    0x60bf68(%rip),%rax        # 60f388 <f_boot>
    3420:	48 83 c0 04          	add    $0x4,%rax
    3424:	89 c2                	mov    %eax,%edx
    3426:	48 8b 05 5b bf 60 00 	mov    0x60bf5b(%rip),%rax        # 60f388 <f_boot>
    342d:	29 c2                	sub    %eax,%edx
    342f:	89 d0                	mov    %edx,%eax
    3431:	48 63 d0             	movslq %eax,%rdx
    3434:	48 8d 05 a5 bc 20 00 	lea    0x20bca5(%rip),%rax        # 20f0e0 <mem>
    343b:	48 01 d0             	add    %rdx,%rax
    343e:	8b 95 5c fe ff ff    	mov    -0x1a4(%rbp),%edx
    3444:	81 ea 80 37 00 00    	sub    $0x3780,%edx
    344a:	89 10                	mov    %edx,(%rax)
 ip=FSTART;
    344c:	48 8d 05 8d bc 20 00 	lea    0x20bc8d(%rip),%rax        # 20f0e0 <mem>
    3453:	8b 00                	mov    (%rax),%eax
    3455:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
 for(;;) {
  if(interrupt) {
    345b:	8b 05 87 bc 60 00    	mov    0x60bc87(%rip),%eax        # 60f0e8 <interrupt>
    3461:	85 c0                	test   %eax,%eax
    3463:	0f 84 d2 00 00 00    	je     353b <virtual_machine+0x163>
   ireg=1;
    3469:	c7 85 7c fe ff ff 01 	movl   $0x1,-0x184(%rbp)
    3470:	00 00 00 
//  doint:
   rp-=4;
    3473:	83 ad 5c fe ff ff 04 	subl   $0x4,-0x1a4(%rbp)
  CELL(rp)=ip;
    347a:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    3480:	89 c7                	mov    %eax,%edi
    3482:	e8 e6 d9 ff ff       	callq  e6d <v2r>
    3487:	48 89 c2             	mov    %rax,%rdx
    348a:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    3490:	89 02                	mov    %eax,(%rdx)
   sp-=4;CELL(sp)=ireg;
    3492:	48 8b 05 ef be 60 00 	mov    0x60beef(%rip),%rax        # 60f388 <f_boot>
    3499:	48 83 c0 04          	add    $0x4,%rax
    349d:	89 c2                	mov    %eax,%edx
    349f:	48 8b 05 e2 be 60 00 	mov    0x60bee2(%rip),%rax        # 60f388 <f_boot>
    34a6:	29 c2                	sub    %eax,%edx
    34a8:	89 d0                	mov    %edx,%eax
    34aa:	48 63 d0             	movslq %eax,%rdx
    34ad:	48 8d 05 2c bc 20 00 	lea    0x20bc2c(%rip),%rax        # 20f0e0 <mem>
    34b4:	48 01 d0             	add    %rdx,%rax
    34b7:	8b 10                	mov    (%rax),%edx
    34b9:	48 8b 05 c8 be 60 00 	mov    0x60bec8(%rip),%rax        # 60f388 <f_boot>
    34c0:	48 83 c0 04          	add    $0x4,%rax
    34c4:	89 c1                	mov    %eax,%ecx
    34c6:	48 8b 05 bb be 60 00 	mov    0x60bebb(%rip),%rax        # 60f388 <f_boot>
    34cd:	29 c1                	sub    %eax,%ecx
    34cf:	89 c8                	mov    %ecx,%eax
    34d1:	48 63 c8             	movslq %eax,%rcx
    34d4:	48 8d 05 05 bc 20 00 	lea    0x20bc05(%rip),%rax        # 20f0e0 <mem>
    34db:	48 01 c8             	add    %rcx,%rax
    34de:	83 ea 04             	sub    $0x4,%edx
    34e1:	89 10                	mov    %edx,(%rax)
    34e3:	48 8b 05 9e be 60 00 	mov    0x60be9e(%rip),%rax        # 60f388 <f_boot>
    34ea:	48 83 c0 04          	add    $0x4,%rax
    34ee:	89 c2                	mov    %eax,%edx
    34f0:	48 8b 05 91 be 60 00 	mov    0x60be91(%rip),%rax        # 60f388 <f_boot>
    34f7:	29 c2                	sub    %eax,%edx
    34f9:	89 d0                	mov    %edx,%eax
    34fb:	48 63 d0             	movslq %eax,%rdx
    34fe:	48 8d 05 db bb 20 00 	lea    0x20bbdb(%rip),%rax        # 20f0e0 <mem>
    3505:	48 01 d0             	add    %rdx,%rax
    3508:	8b 00                	mov    (%rax),%eax
    350a:	89 c7                	mov    %eax,%edi
    350c:	e8 5c d9 ff ff       	callq  e6d <v2r>
    3511:	48 89 c2             	mov    %rax,%rdx
    3514:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    351a:	89 02                	mov    %eax,(%rdx)
   ip=CELL(interrupt);
    351c:	8b 05 c6 bb 60 00    	mov    0x60bbc6(%rip),%eax        # 60f0e8 <interrupt>
    3522:	89 c7                	mov    %eax,%edi
    3524:	e8 44 d9 ff ff       	callq  e6d <v2r>
    3529:	8b 00                	mov    (%rax),%eax
    352b:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
   interrupt=0;
    3531:	c7 05 ad bb 60 00 00 	movl   $0x0,0x60bbad(%rip)        # 60f0e8 <interrupt>
    3538:	00 00 00 
  }
  ireg=CELL(ip);
    353b:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    3541:	89 c7                	mov    %eax,%edi
    3543:	e8 25 d9 ff ff       	callq  e6d <v2r>
    3548:	8b 00                	mov    (%rax),%eax
    354a:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  ip+=4;
    3550:	83 85 60 fe ff ff 04 	addl   $0x4,-0x1a0(%rbp)
  
//  restart: /* Instruction restart after interrupt */
  if(!(ireg&1)) {
    3557:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    355d:	83 e0 01             	and    $0x1,%eax
    3560:	85 c0                	test   %eax,%eax
    3562:	75 30                	jne    3594 <virtual_machine+0x1bc>
            rp-=4;
    3564:	83 ad 5c fe ff ff 04 	subl   $0x4,-0x1a4(%rbp)
            CELL(rp)=ip;
    356b:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    3571:	89 c7                	mov    %eax,%edi
    3573:	e8 f5 d8 ff ff       	callq  e6d <v2r>
    3578:	48 89 c2             	mov    %rax,%rdx
    357b:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    3581:	89 02                	mov    %eax,(%rdx)
            ip= ireg;
    3583:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    3589:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    358f:	e9 c7 fe ff ff       	jmpq   345b <virtual_machine+0x83>
  } else {
	  if(zdbg)  {  printf("z=%x %x %d\n",ip,ireg&0xc000,(ireg&0x3fff)>>1); }
    3594:	83 bd 78 fe ff ff 00 	cmpl   $0x0,-0x188(%rbp)
    359b:	74 35                	je     35d2 <virtual_machine+0x1fa>
    359d:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    35a3:	d1 e8                	shr    %eax
    35a5:	25 ff 1f 00 00       	and    $0x1fff,%eax
    35aa:	89 c1                	mov    %eax,%ecx
    35ac:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    35b2:	25 00 c0 00 00       	and    $0xc000,%eax
    35b7:	89 c2                	mov    %eax,%edx
    35b9:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    35bf:	89 c6                	mov    %eax,%esi
    35c1:	48 8d 3d 06 9f 00 00 	lea    0x9f06(%rip),%rdi        # d4ce <_IO_stdin_used+0xe>
    35c8:	b8 00 00 00 00       	mov    $0x0,%eax
    35cd:	e8 4e d6 ff ff       	callq  c20 <printf@plt>
    switch( (ireg&0x3fff)>>1) {
    35d2:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    35d8:	d1 e8                	shr    %eax
    35da:	25 ff 1f 00 00       	and    $0x1fff,%eax
    35df:	3d 9a 00 00 00       	cmp    $0x9a,%eax
    35e4:	0f 87 5f 6e 00 00    	ja     a449 <virtual_machine+0x7071>
    35ea:	89 c0                	mov    %eax,%eax
    35ec:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    35f3:	00 
    35f4:	48 8d 05 51 9f 00 00 	lea    0x9f51(%rip),%rax        # d54c <_IO_stdin_used+0x8c>
    35fb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    35fe:	48 63 d0             	movslq %eax,%rdx
    3601:	48 8d 05 44 9f 00 00 	lea    0x9f44(%rip),%rax        # d54c <_IO_stdin_used+0x8c>
    3608:	48 01 d0             	add    %rdx,%rax
    360b:	ff e0                	jmpq   *%rax
     case sw_swap:	/*swap*/ t=CELL(sp);CELL(sp)=CELL(sp+4);
    360d:	48 8b 05 74 bd 60 00 	mov    0x60bd74(%rip),%rax        # 60f388 <f_boot>
    3614:	48 83 c0 04          	add    $0x4,%rax
    3618:	89 c2                	mov    %eax,%edx
    361a:	48 8b 05 67 bd 60 00 	mov    0x60bd67(%rip),%rax        # 60f388 <f_boot>
    3621:	29 c2                	sub    %eax,%edx
    3623:	89 d0                	mov    %edx,%eax
    3625:	48 63 d0             	movslq %eax,%rdx
    3628:	48 8d 05 b1 ba 20 00 	lea    0x20bab1(%rip),%rax        # 20f0e0 <mem>
    362f:	48 01 d0             	add    %rdx,%rax
    3632:	8b 00                	mov    (%rax),%eax
    3634:	89 c7                	mov    %eax,%edi
    3636:	e8 32 d8 ff ff       	callq  e6d <v2r>
    363b:	8b 00                	mov    (%rax),%eax
    363d:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    3643:	48 8b 05 3e bd 60 00 	mov    0x60bd3e(%rip),%rax        # 60f388 <f_boot>
    364a:	48 83 c0 04          	add    $0x4,%rax
    364e:	89 c2                	mov    %eax,%edx
    3650:	48 8b 05 31 bd 60 00 	mov    0x60bd31(%rip),%rax        # 60f388 <f_boot>
    3657:	29 c2                	sub    %eax,%edx
    3659:	89 d0                	mov    %edx,%eax
    365b:	48 63 d0             	movslq %eax,%rdx
    365e:	48 8d 05 7b ba 20 00 	lea    0x20ba7b(%rip),%rax        # 20f0e0 <mem>
    3665:	48 01 d0             	add    %rdx,%rax
    3668:	8b 00                	mov    (%rax),%eax
    366a:	83 c0 04             	add    $0x4,%eax
    366d:	89 c7                	mov    %eax,%edi
    366f:	e8 f9 d7 ff ff       	callq  e6d <v2r>
    3674:	48 89 c3             	mov    %rax,%rbx
    3677:	48 8b 05 0a bd 60 00 	mov    0x60bd0a(%rip),%rax        # 60f388 <f_boot>
    367e:	48 83 c0 04          	add    $0x4,%rax
    3682:	89 c2                	mov    %eax,%edx
    3684:	48 8b 05 fd bc 60 00 	mov    0x60bcfd(%rip),%rax        # 60f388 <f_boot>
    368b:	29 c2                	sub    %eax,%edx
    368d:	89 d0                	mov    %edx,%eax
    368f:	48 63 d0             	movslq %eax,%rdx
    3692:	48 8d 05 47 ba 20 00 	lea    0x20ba47(%rip),%rax        # 20f0e0 <mem>
    3699:	48 01 d0             	add    %rdx,%rax
    369c:	8b 00                	mov    (%rax),%eax
    369e:	89 c7                	mov    %eax,%edi
    36a0:	e8 c8 d7 ff ff       	callq  e6d <v2r>
    36a5:	48 89 c2             	mov    %rax,%rdx
    36a8:	8b 03                	mov    (%rbx),%eax
    36aa:	89 02                	mov    %eax,(%rdx)
                      CELL(sp+4)=t;
    36ac:	48 8b 05 d5 bc 60 00 	mov    0x60bcd5(%rip),%rax        # 60f388 <f_boot>
    36b3:	48 83 c0 04          	add    $0x4,%rax
    36b7:	89 c2                	mov    %eax,%edx
    36b9:	48 8b 05 c8 bc 60 00 	mov    0x60bcc8(%rip),%rax        # 60f388 <f_boot>
    36c0:	29 c2                	sub    %eax,%edx
    36c2:	89 d0                	mov    %edx,%eax
    36c4:	48 63 d0             	movslq %eax,%rdx
    36c7:	48 8d 05 12 ba 20 00 	lea    0x20ba12(%rip),%rax        # 20f0e0 <mem>
    36ce:	48 01 d0             	add    %rdx,%rax
    36d1:	8b 00                	mov    (%rax),%eax
    36d3:	83 c0 04             	add    $0x4,%eax
    36d6:	89 c7                	mov    %eax,%edi
    36d8:	e8 90 d7 ff ff       	callq  e6d <v2r>
    36dd:	48 89 c2             	mov    %rax,%rdx
    36e0:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    36e6:	89 02                	mov    %eax,(%rdx)
     case sw_nop:	/*nop*/
    	 break;
    36e8:	e9 5c 6d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rot:	/*rot*/  t=CELL(sp+8);CELL(sp+8)=CELL(sp+4);
    36ed:	48 8b 05 94 bc 60 00 	mov    0x60bc94(%rip),%rax        # 60f388 <f_boot>
    36f4:	48 83 c0 04          	add    $0x4,%rax
    36f8:	89 c2                	mov    %eax,%edx
    36fa:	48 8b 05 87 bc 60 00 	mov    0x60bc87(%rip),%rax        # 60f388 <f_boot>
    3701:	29 c2                	sub    %eax,%edx
    3703:	89 d0                	mov    %edx,%eax
    3705:	48 63 d0             	movslq %eax,%rdx
    3708:	48 8d 05 d1 b9 20 00 	lea    0x20b9d1(%rip),%rax        # 20f0e0 <mem>
    370f:	48 01 d0             	add    %rdx,%rax
    3712:	8b 00                	mov    (%rax),%eax
    3714:	83 c0 08             	add    $0x8,%eax
    3717:	89 c7                	mov    %eax,%edi
    3719:	e8 4f d7 ff ff       	callq  e6d <v2r>
    371e:	8b 00                	mov    (%rax),%eax
    3720:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    3726:	48 8b 05 5b bc 60 00 	mov    0x60bc5b(%rip),%rax        # 60f388 <f_boot>
    372d:	48 83 c0 04          	add    $0x4,%rax
    3731:	89 c2                	mov    %eax,%edx
    3733:	48 8b 05 4e bc 60 00 	mov    0x60bc4e(%rip),%rax        # 60f388 <f_boot>
    373a:	29 c2                	sub    %eax,%edx
    373c:	89 d0                	mov    %edx,%eax
    373e:	48 63 d0             	movslq %eax,%rdx
    3741:	48 8d 05 98 b9 20 00 	lea    0x20b998(%rip),%rax        # 20f0e0 <mem>
    3748:	48 01 d0             	add    %rdx,%rax
    374b:	8b 00                	mov    (%rax),%eax
    374d:	83 c0 04             	add    $0x4,%eax
    3750:	89 c7                	mov    %eax,%edi
    3752:	e8 16 d7 ff ff       	callq  e6d <v2r>
    3757:	48 89 c3             	mov    %rax,%rbx
    375a:	48 8b 05 27 bc 60 00 	mov    0x60bc27(%rip),%rax        # 60f388 <f_boot>
    3761:	48 83 c0 04          	add    $0x4,%rax
    3765:	89 c2                	mov    %eax,%edx
    3767:	48 8b 05 1a bc 60 00 	mov    0x60bc1a(%rip),%rax        # 60f388 <f_boot>
    376e:	29 c2                	sub    %eax,%edx
    3770:	89 d0                	mov    %edx,%eax
    3772:	48 63 d0             	movslq %eax,%rdx
    3775:	48 8d 05 64 b9 20 00 	lea    0x20b964(%rip),%rax        # 20f0e0 <mem>
    377c:	48 01 d0             	add    %rdx,%rax
    377f:	8b 00                	mov    (%rax),%eax
    3781:	83 c0 08             	add    $0x8,%eax
    3784:	89 c7                	mov    %eax,%edi
    3786:	e8 e2 d6 ff ff       	callq  e6d <v2r>
    378b:	48 89 c2             	mov    %rax,%rdx
    378e:	8b 03                	mov    (%rbx),%eax
    3790:	89 02                	mov    %eax,(%rdx)
                      CELL(sp+4)=CELL(sp);CELL(sp)=t;break;
    3792:	48 8b 05 ef bb 60 00 	mov    0x60bbef(%rip),%rax        # 60f388 <f_boot>
    3799:	48 83 c0 04          	add    $0x4,%rax
    379d:	89 c2                	mov    %eax,%edx
    379f:	48 8b 05 e2 bb 60 00 	mov    0x60bbe2(%rip),%rax        # 60f388 <f_boot>
    37a6:	29 c2                	sub    %eax,%edx
    37a8:	89 d0                	mov    %edx,%eax
    37aa:	48 63 d0             	movslq %eax,%rdx
    37ad:	48 8d 05 2c b9 20 00 	lea    0x20b92c(%rip),%rax        # 20f0e0 <mem>
    37b4:	48 01 d0             	add    %rdx,%rax
    37b7:	8b 00                	mov    (%rax),%eax
    37b9:	89 c7                	mov    %eax,%edi
    37bb:	e8 ad d6 ff ff       	callq  e6d <v2r>
    37c0:	48 89 c3             	mov    %rax,%rbx
    37c3:	48 8b 05 be bb 60 00 	mov    0x60bbbe(%rip),%rax        # 60f388 <f_boot>
    37ca:	48 83 c0 04          	add    $0x4,%rax
    37ce:	89 c2                	mov    %eax,%edx
    37d0:	48 8b 05 b1 bb 60 00 	mov    0x60bbb1(%rip),%rax        # 60f388 <f_boot>
    37d7:	29 c2                	sub    %eax,%edx
    37d9:	89 d0                	mov    %edx,%eax
    37db:	48 63 d0             	movslq %eax,%rdx
    37de:	48 8d 05 fb b8 20 00 	lea    0x20b8fb(%rip),%rax        # 20f0e0 <mem>
    37e5:	48 01 d0             	add    %rdx,%rax
    37e8:	8b 00                	mov    (%rax),%eax
    37ea:	83 c0 04             	add    $0x4,%eax
    37ed:	89 c7                	mov    %eax,%edi
    37ef:	e8 79 d6 ff ff       	callq  e6d <v2r>
    37f4:	48 89 c2             	mov    %rax,%rdx
    37f7:	8b 03                	mov    (%rbx),%eax
    37f9:	89 02                	mov    %eax,(%rdx)
    37fb:	48 8b 05 86 bb 60 00 	mov    0x60bb86(%rip),%rax        # 60f388 <f_boot>
    3802:	48 83 c0 04          	add    $0x4,%rax
    3806:	89 c2                	mov    %eax,%edx
    3808:	48 8b 05 79 bb 60 00 	mov    0x60bb79(%rip),%rax        # 60f388 <f_boot>
    380f:	29 c2                	sub    %eax,%edx
    3811:	89 d0                	mov    %edx,%eax
    3813:	48 63 d0             	movslq %eax,%rdx
    3816:	48 8d 05 c3 b8 20 00 	lea    0x20b8c3(%rip),%rax        # 20f0e0 <mem>
    381d:	48 01 d0             	add    %rdx,%rax
    3820:	8b 00                	mov    (%rax),%eax
    3822:	89 c7                	mov    %eax,%edi
    3824:	e8 44 d6 ff ff       	callq  e6d <v2r>
    3829:	48 89 c2             	mov    %rax,%rdx
    382c:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    3832:	89 02                	mov    %eax,(%rdx)
    3834:	e9 10 6c 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rrot:	/*rot*/  t=CELL(sp);CELL(sp)=CELL(sp+4);
    3839:	48 8b 05 48 bb 60 00 	mov    0x60bb48(%rip),%rax        # 60f388 <f_boot>
    3840:	48 83 c0 04          	add    $0x4,%rax
    3844:	89 c2                	mov    %eax,%edx
    3846:	48 8b 05 3b bb 60 00 	mov    0x60bb3b(%rip),%rax        # 60f388 <f_boot>
    384d:	29 c2                	sub    %eax,%edx
    384f:	89 d0                	mov    %edx,%eax
    3851:	48 63 d0             	movslq %eax,%rdx
    3854:	48 8d 05 85 b8 20 00 	lea    0x20b885(%rip),%rax        # 20f0e0 <mem>
    385b:	48 01 d0             	add    %rdx,%rax
    385e:	8b 00                	mov    (%rax),%eax
    3860:	89 c7                	mov    %eax,%edi
    3862:	e8 06 d6 ff ff       	callq  e6d <v2r>
    3867:	8b 00                	mov    (%rax),%eax
    3869:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    386f:	48 8b 05 12 bb 60 00 	mov    0x60bb12(%rip),%rax        # 60f388 <f_boot>
    3876:	48 83 c0 04          	add    $0x4,%rax
    387a:	89 c2                	mov    %eax,%edx
    387c:	48 8b 05 05 bb 60 00 	mov    0x60bb05(%rip),%rax        # 60f388 <f_boot>
    3883:	29 c2                	sub    %eax,%edx
    3885:	89 d0                	mov    %edx,%eax
    3887:	48 63 d0             	movslq %eax,%rdx
    388a:	48 8d 05 4f b8 20 00 	lea    0x20b84f(%rip),%rax        # 20f0e0 <mem>
    3891:	48 01 d0             	add    %rdx,%rax
    3894:	8b 00                	mov    (%rax),%eax
    3896:	83 c0 04             	add    $0x4,%eax
    3899:	89 c7                	mov    %eax,%edi
    389b:	e8 cd d5 ff ff       	callq  e6d <v2r>
    38a0:	48 89 c3             	mov    %rax,%rbx
    38a3:	48 8b 05 de ba 60 00 	mov    0x60bade(%rip),%rax        # 60f388 <f_boot>
    38aa:	48 83 c0 04          	add    $0x4,%rax
    38ae:	89 c2                	mov    %eax,%edx
    38b0:	48 8b 05 d1 ba 60 00 	mov    0x60bad1(%rip),%rax        # 60f388 <f_boot>
    38b7:	29 c2                	sub    %eax,%edx
    38b9:	89 d0                	mov    %edx,%eax
    38bb:	48 63 d0             	movslq %eax,%rdx
    38be:	48 8d 05 1b b8 20 00 	lea    0x20b81b(%rip),%rax        # 20f0e0 <mem>
    38c5:	48 01 d0             	add    %rdx,%rax
    38c8:	8b 00                	mov    (%rax),%eax
    38ca:	89 c7                	mov    %eax,%edi
    38cc:	e8 9c d5 ff ff       	callq  e6d <v2r>
    38d1:	48 89 c2             	mov    %rax,%rdx
    38d4:	8b 03                	mov    (%rbx),%eax
    38d6:	89 02                	mov    %eax,(%rdx)
                      CELL(sp+4)=CELL(sp+8);CELL(sp+8)=t;break;
    38d8:	48 8b 05 a9 ba 60 00 	mov    0x60baa9(%rip),%rax        # 60f388 <f_boot>
    38df:	48 83 c0 04          	add    $0x4,%rax
    38e3:	89 c2                	mov    %eax,%edx
    38e5:	48 8b 05 9c ba 60 00 	mov    0x60ba9c(%rip),%rax        # 60f388 <f_boot>
    38ec:	29 c2                	sub    %eax,%edx
    38ee:	89 d0                	mov    %edx,%eax
    38f0:	48 63 d0             	movslq %eax,%rdx
    38f3:	48 8d 05 e6 b7 20 00 	lea    0x20b7e6(%rip),%rax        # 20f0e0 <mem>
    38fa:	48 01 d0             	add    %rdx,%rax
    38fd:	8b 00                	mov    (%rax),%eax
    38ff:	83 c0 08             	add    $0x8,%eax
    3902:	89 c7                	mov    %eax,%edi
    3904:	e8 64 d5 ff ff       	callq  e6d <v2r>
    3909:	48 89 c3             	mov    %rax,%rbx
    390c:	48 8b 05 75 ba 60 00 	mov    0x60ba75(%rip),%rax        # 60f388 <f_boot>
    3913:	48 83 c0 04          	add    $0x4,%rax
    3917:	89 c2                	mov    %eax,%edx
    3919:	48 8b 05 68 ba 60 00 	mov    0x60ba68(%rip),%rax        # 60f388 <f_boot>
    3920:	29 c2                	sub    %eax,%edx
    3922:	89 d0                	mov    %edx,%eax
    3924:	48 63 d0             	movslq %eax,%rdx
    3927:	48 8d 05 b2 b7 20 00 	lea    0x20b7b2(%rip),%rax        # 20f0e0 <mem>
    392e:	48 01 d0             	add    %rdx,%rax
    3931:	8b 00                	mov    (%rax),%eax
    3933:	83 c0 04             	add    $0x4,%eax
    3936:	89 c7                	mov    %eax,%edi
    3938:	e8 30 d5 ff ff       	callq  e6d <v2r>
    393d:	48 89 c2             	mov    %rax,%rdx
    3940:	8b 03                	mov    (%rbx),%eax
    3942:	89 02                	mov    %eax,(%rdx)
    3944:	48 8b 05 3d ba 60 00 	mov    0x60ba3d(%rip),%rax        # 60f388 <f_boot>
    394b:	48 83 c0 04          	add    $0x4,%rax
    394f:	89 c2                	mov    %eax,%edx
    3951:	48 8b 05 30 ba 60 00 	mov    0x60ba30(%rip),%rax        # 60f388 <f_boot>
    3958:	29 c2                	sub    %eax,%edx
    395a:	89 d0                	mov    %edx,%eax
    395c:	48 63 d0             	movslq %eax,%rdx
    395f:	48 8d 05 7a b7 20 00 	lea    0x20b77a(%rip),%rax        # 20f0e0 <mem>
    3966:	48 01 d0             	add    %rdx,%rax
    3969:	8b 00                	mov    (%rax),%eax
    396b:	83 c0 08             	add    $0x8,%eax
    396e:	89 c7                	mov    %eax,%edi
    3970:	e8 f8 d4 ff ff       	callq  e6d <v2r>
    3975:	48 89 c2             	mov    %rax,%rdx
    3978:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    397e:	89 02                	mov    %eax,(%rdx)
    3980:	e9 c4 6a 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0equ:	/*0=*/   CELL(sp)=-!CELL(sp);break;
    3985:	48 8b 05 fc b9 60 00 	mov    0x60b9fc(%rip),%rax        # 60f388 <f_boot>
    398c:	48 83 c0 04          	add    $0x4,%rax
    3990:	89 c2                	mov    %eax,%edx
    3992:	48 8b 05 ef b9 60 00 	mov    0x60b9ef(%rip),%rax        # 60f388 <f_boot>
    3999:	29 c2                	sub    %eax,%edx
    399b:	89 d0                	mov    %edx,%eax
    399d:	48 63 d0             	movslq %eax,%rdx
    39a0:	48 8d 05 39 b7 20 00 	lea    0x20b739(%rip),%rax        # 20f0e0 <mem>
    39a7:	48 01 d0             	add    %rdx,%rax
    39aa:	8b 00                	mov    (%rax),%eax
    39ac:	89 c7                	mov    %eax,%edi
    39ae:	e8 ba d4 ff ff       	callq  e6d <v2r>
    39b3:	8b 00                	mov    (%rax),%eax
    39b5:	85 c0                	test   %eax,%eax
    39b7:	0f 94 c0             	sete   %al
    39ba:	0f b6 c0             	movzbl %al,%eax
    39bd:	f7 d8                	neg    %eax
    39bf:	89 c3                	mov    %eax,%ebx
    39c1:	48 8b 05 c0 b9 60 00 	mov    0x60b9c0(%rip),%rax        # 60f388 <f_boot>
    39c8:	48 83 c0 04          	add    $0x4,%rax
    39cc:	89 c2                	mov    %eax,%edx
    39ce:	48 8b 05 b3 b9 60 00 	mov    0x60b9b3(%rip),%rax        # 60f388 <f_boot>
    39d5:	29 c2                	sub    %eax,%edx
    39d7:	89 d0                	mov    %edx,%eax
    39d9:	48 63 d0             	movslq %eax,%rdx
    39dc:	48 8d 05 fd b6 20 00 	lea    0x20b6fd(%rip),%rax        # 20f0e0 <mem>
    39e3:	48 01 d0             	add    %rdx,%rax
    39e6:	8b 00                	mov    (%rax),%eax
    39e8:	89 c7                	mov    %eax,%edi
    39ea:	e8 7e d4 ff ff       	callq  e6d <v2r>
    39ef:	89 da                	mov    %ebx,%edx
    39f1:	89 10                	mov    %edx,(%rax)
    39f3:	e9 51 6a 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0Nequ:	/*0<>*/   CELL(sp)=-!!CELL(sp);break;
    39f8:	48 8b 05 89 b9 60 00 	mov    0x60b989(%rip),%rax        # 60f388 <f_boot>
    39ff:	48 83 c0 04          	add    $0x4,%rax
    3a03:	89 c2                	mov    %eax,%edx
    3a05:	48 8b 05 7c b9 60 00 	mov    0x60b97c(%rip),%rax        # 60f388 <f_boot>
    3a0c:	29 c2                	sub    %eax,%edx
    3a0e:	89 d0                	mov    %edx,%eax
    3a10:	48 63 d0             	movslq %eax,%rdx
    3a13:	48 8d 05 c6 b6 20 00 	lea    0x20b6c6(%rip),%rax        # 20f0e0 <mem>
    3a1a:	48 01 d0             	add    %rdx,%rax
    3a1d:	8b 00                	mov    (%rax),%eax
    3a1f:	89 c7                	mov    %eax,%edi
    3a21:	e8 47 d4 ff ff       	callq  e6d <v2r>
    3a26:	8b 00                	mov    (%rax),%eax
    3a28:	85 c0                	test   %eax,%eax
    3a2a:	0f 95 c0             	setne  %al
    3a2d:	0f b6 c0             	movzbl %al,%eax
    3a30:	f7 d8                	neg    %eax
    3a32:	89 c3                	mov    %eax,%ebx
    3a34:	48 8b 05 4d b9 60 00 	mov    0x60b94d(%rip),%rax        # 60f388 <f_boot>
    3a3b:	48 83 c0 04          	add    $0x4,%rax
    3a3f:	89 c2                	mov    %eax,%edx
    3a41:	48 8b 05 40 b9 60 00 	mov    0x60b940(%rip),%rax        # 60f388 <f_boot>
    3a48:	29 c2                	sub    %eax,%edx
    3a4a:	89 d0                	mov    %edx,%eax
    3a4c:	48 63 d0             	movslq %eax,%rdx
    3a4f:	48 8d 05 8a b6 20 00 	lea    0x20b68a(%rip),%rax        # 20f0e0 <mem>
    3a56:	48 01 d0             	add    %rdx,%rax
    3a59:	8b 00                	mov    (%rax),%eax
    3a5b:	89 c7                	mov    %eax,%edi
    3a5d:	e8 0b d4 ff ff       	callq  e6d <v2r>
    3a62:	89 da                	mov    %ebx,%edx
    3a64:	89 10                	mov    %edx,(%rax)
    3a66:	e9 de 69 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0LT:	/*0<*/   CELL(sp)=-((INT32)CELL(sp)<0);break;
    3a6b:	48 8b 05 16 b9 60 00 	mov    0x60b916(%rip),%rax        # 60f388 <f_boot>
    3a72:	48 83 c0 04          	add    $0x4,%rax
    3a76:	89 c2                	mov    %eax,%edx
    3a78:	48 8b 05 09 b9 60 00 	mov    0x60b909(%rip),%rax        # 60f388 <f_boot>
    3a7f:	29 c2                	sub    %eax,%edx
    3a81:	89 d0                	mov    %edx,%eax
    3a83:	48 63 d0             	movslq %eax,%rdx
    3a86:	48 8d 05 53 b6 20 00 	lea    0x20b653(%rip),%rax        # 20f0e0 <mem>
    3a8d:	48 01 d0             	add    %rdx,%rax
    3a90:	8b 00                	mov    (%rax),%eax
    3a92:	89 c7                	mov    %eax,%edi
    3a94:	e8 d4 d3 ff ff       	callq  e6d <v2r>
    3a99:	8b 00                	mov    (%rax),%eax
    3a9b:	c1 e8 1f             	shr    $0x1f,%eax
    3a9e:	0f b6 c0             	movzbl %al,%eax
    3aa1:	f7 d8                	neg    %eax
    3aa3:	89 c3                	mov    %eax,%ebx
    3aa5:	48 8b 05 dc b8 60 00 	mov    0x60b8dc(%rip),%rax        # 60f388 <f_boot>
    3aac:	48 83 c0 04          	add    $0x4,%rax
    3ab0:	89 c2                	mov    %eax,%edx
    3ab2:	48 8b 05 cf b8 60 00 	mov    0x60b8cf(%rip),%rax        # 60f388 <f_boot>
    3ab9:	29 c2                	sub    %eax,%edx
    3abb:	89 d0                	mov    %edx,%eax
    3abd:	48 63 d0             	movslq %eax,%rdx
    3ac0:	48 8d 05 19 b6 20 00 	lea    0x20b619(%rip),%rax        # 20f0e0 <mem>
    3ac7:	48 01 d0             	add    %rdx,%rax
    3aca:	8b 00                	mov    (%rax),%eax
    3acc:	89 c7                	mov    %eax,%edi
    3ace:	e8 9a d3 ff ff       	callq  e6d <v2r>
    3ad3:	89 da                	mov    %ebx,%edx
    3ad5:	89 10                	mov    %edx,(%rax)
    3ad7:	e9 6d 69 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0GT:	/*0>*/   CELL(sp)=-((INT32)CELL(sp)>0);break;
    3adc:	48 8b 05 a5 b8 60 00 	mov    0x60b8a5(%rip),%rax        # 60f388 <f_boot>
    3ae3:	48 83 c0 04          	add    $0x4,%rax
    3ae7:	89 c2                	mov    %eax,%edx
    3ae9:	48 8b 05 98 b8 60 00 	mov    0x60b898(%rip),%rax        # 60f388 <f_boot>
    3af0:	29 c2                	sub    %eax,%edx
    3af2:	89 d0                	mov    %edx,%eax
    3af4:	48 63 d0             	movslq %eax,%rdx
    3af7:	48 8d 05 e2 b5 20 00 	lea    0x20b5e2(%rip),%rax        # 20f0e0 <mem>
    3afe:	48 01 d0             	add    %rdx,%rax
    3b01:	8b 00                	mov    (%rax),%eax
    3b03:	89 c7                	mov    %eax,%edi
    3b05:	e8 63 d3 ff ff       	callq  e6d <v2r>
    3b0a:	8b 00                	mov    (%rax),%eax
    3b0c:	85 c0                	test   %eax,%eax
    3b0e:	0f 9f c0             	setg   %al
    3b11:	0f b6 c0             	movzbl %al,%eax
    3b14:	f7 d8                	neg    %eax
    3b16:	89 c3                	mov    %eax,%ebx
    3b18:	48 8b 05 69 b8 60 00 	mov    0x60b869(%rip),%rax        # 60f388 <f_boot>
    3b1f:	48 83 c0 04          	add    $0x4,%rax
    3b23:	89 c2                	mov    %eax,%edx
    3b25:	48 8b 05 5c b8 60 00 	mov    0x60b85c(%rip),%rax        # 60f388 <f_boot>
    3b2c:	29 c2                	sub    %eax,%edx
    3b2e:	89 d0                	mov    %edx,%eax
    3b30:	48 63 d0             	movslq %eax,%rdx
    3b33:	48 8d 05 a6 b5 20 00 	lea    0x20b5a6(%rip),%rax        # 20f0e0 <mem>
    3b3a:	48 01 d0             	add    %rdx,%rax
    3b3d:	8b 00                	mov    (%rax),%eax
    3b3f:	89 c7                	mov    %eax,%edi
    3b41:	e8 27 d3 ff ff       	callq  e6d <v2r>
    3b46:	89 da                	mov    %ebx,%edx
    3b48:	89 10                	mov    %edx,(%rax)
    3b4a:	e9 fa 68 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_equ:	/*=*/  	 CELL(sp+4)=-(CELL(sp)==CELL(sp+4));sp+=4;break;
    3b4f:	48 8b 05 32 b8 60 00 	mov    0x60b832(%rip),%rax        # 60f388 <f_boot>
    3b56:	48 83 c0 04          	add    $0x4,%rax
    3b5a:	89 c2                	mov    %eax,%edx
    3b5c:	48 8b 05 25 b8 60 00 	mov    0x60b825(%rip),%rax        # 60f388 <f_boot>
    3b63:	29 c2                	sub    %eax,%edx
    3b65:	89 d0                	mov    %edx,%eax
    3b67:	48 63 d0             	movslq %eax,%rdx
    3b6a:	48 8d 05 6f b5 20 00 	lea    0x20b56f(%rip),%rax        # 20f0e0 <mem>
    3b71:	48 01 d0             	add    %rdx,%rax
    3b74:	8b 00                	mov    (%rax),%eax
    3b76:	89 c7                	mov    %eax,%edi
    3b78:	e8 f0 d2 ff ff       	callq  e6d <v2r>
    3b7d:	8b 18                	mov    (%rax),%ebx
    3b7f:	48 8b 05 02 b8 60 00 	mov    0x60b802(%rip),%rax        # 60f388 <f_boot>
    3b86:	48 83 c0 04          	add    $0x4,%rax
    3b8a:	89 c2                	mov    %eax,%edx
    3b8c:	48 8b 05 f5 b7 60 00 	mov    0x60b7f5(%rip),%rax        # 60f388 <f_boot>
    3b93:	29 c2                	sub    %eax,%edx
    3b95:	89 d0                	mov    %edx,%eax
    3b97:	48 63 d0             	movslq %eax,%rdx
    3b9a:	48 8d 05 3f b5 20 00 	lea    0x20b53f(%rip),%rax        # 20f0e0 <mem>
    3ba1:	48 01 d0             	add    %rdx,%rax
    3ba4:	8b 00                	mov    (%rax),%eax
    3ba6:	83 c0 04             	add    $0x4,%eax
    3ba9:	89 c7                	mov    %eax,%edi
    3bab:	e8 bd d2 ff ff       	callq  e6d <v2r>
    3bb0:	8b 00                	mov    (%rax),%eax
    3bb2:	39 c3                	cmp    %eax,%ebx
    3bb4:	0f 94 c0             	sete   %al
    3bb7:	0f b6 c0             	movzbl %al,%eax
    3bba:	f7 d8                	neg    %eax
    3bbc:	89 c3                	mov    %eax,%ebx
    3bbe:	48 8b 05 c3 b7 60 00 	mov    0x60b7c3(%rip),%rax        # 60f388 <f_boot>
    3bc5:	48 83 c0 04          	add    $0x4,%rax
    3bc9:	89 c2                	mov    %eax,%edx
    3bcb:	48 8b 05 b6 b7 60 00 	mov    0x60b7b6(%rip),%rax        # 60f388 <f_boot>
    3bd2:	29 c2                	sub    %eax,%edx
    3bd4:	89 d0                	mov    %edx,%eax
    3bd6:	48 63 d0             	movslq %eax,%rdx
    3bd9:	48 8d 05 00 b5 20 00 	lea    0x20b500(%rip),%rax        # 20f0e0 <mem>
    3be0:	48 01 d0             	add    %rdx,%rax
    3be3:	8b 00                	mov    (%rax),%eax
    3be5:	83 c0 04             	add    $0x4,%eax
    3be8:	89 c7                	mov    %eax,%edi
    3bea:	e8 7e d2 ff ff       	callq  e6d <v2r>
    3bef:	89 da                	mov    %ebx,%edx
    3bf1:	89 10                	mov    %edx,(%rax)
    3bf3:	48 8b 05 8e b7 60 00 	mov    0x60b78e(%rip),%rax        # 60f388 <f_boot>
    3bfa:	48 83 c0 04          	add    $0x4,%rax
    3bfe:	89 c2                	mov    %eax,%edx
    3c00:	48 8b 05 81 b7 60 00 	mov    0x60b781(%rip),%rax        # 60f388 <f_boot>
    3c07:	29 c2                	sub    %eax,%edx
    3c09:	89 d0                	mov    %edx,%eax
    3c0b:	48 63 d0             	movslq %eax,%rdx
    3c0e:	48 8d 05 cb b4 20 00 	lea    0x20b4cb(%rip),%rax        # 20f0e0 <mem>
    3c15:	48 01 d0             	add    %rdx,%rax
    3c18:	8b 10                	mov    (%rax),%edx
    3c1a:	48 8b 05 67 b7 60 00 	mov    0x60b767(%rip),%rax        # 60f388 <f_boot>
    3c21:	48 83 c0 04          	add    $0x4,%rax
    3c25:	89 c1                	mov    %eax,%ecx
    3c27:	48 8b 05 5a b7 60 00 	mov    0x60b75a(%rip),%rax        # 60f388 <f_boot>
    3c2e:	29 c1                	sub    %eax,%ecx
    3c30:	89 c8                	mov    %ecx,%eax
    3c32:	48 63 c8             	movslq %eax,%rcx
    3c35:	48 8d 05 a4 b4 20 00 	lea    0x20b4a4(%rip),%rax        # 20f0e0 <mem>
    3c3c:	48 01 c8             	add    %rcx,%rax
    3c3f:	83 c2 04             	add    $0x4,%edx
    3c42:	89 10                	mov    %edx,(%rax)
    3c44:	e9 00 68 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_nequ:	/*=*/  	 CELL(sp+4)=-(CELL(sp)!=CELL(sp+4));sp+=4;break;
    3c49:	48 8b 05 38 b7 60 00 	mov    0x60b738(%rip),%rax        # 60f388 <f_boot>
    3c50:	48 83 c0 04          	add    $0x4,%rax
    3c54:	89 c2                	mov    %eax,%edx
    3c56:	48 8b 05 2b b7 60 00 	mov    0x60b72b(%rip),%rax        # 60f388 <f_boot>
    3c5d:	29 c2                	sub    %eax,%edx
    3c5f:	89 d0                	mov    %edx,%eax
    3c61:	48 63 d0             	movslq %eax,%rdx
    3c64:	48 8d 05 75 b4 20 00 	lea    0x20b475(%rip),%rax        # 20f0e0 <mem>
    3c6b:	48 01 d0             	add    %rdx,%rax
    3c6e:	8b 00                	mov    (%rax),%eax
    3c70:	89 c7                	mov    %eax,%edi
    3c72:	e8 f6 d1 ff ff       	callq  e6d <v2r>
    3c77:	8b 18                	mov    (%rax),%ebx
    3c79:	48 8b 05 08 b7 60 00 	mov    0x60b708(%rip),%rax        # 60f388 <f_boot>
    3c80:	48 83 c0 04          	add    $0x4,%rax
    3c84:	89 c2                	mov    %eax,%edx
    3c86:	48 8b 05 fb b6 60 00 	mov    0x60b6fb(%rip),%rax        # 60f388 <f_boot>
    3c8d:	29 c2                	sub    %eax,%edx
    3c8f:	89 d0                	mov    %edx,%eax
    3c91:	48 63 d0             	movslq %eax,%rdx
    3c94:	48 8d 05 45 b4 20 00 	lea    0x20b445(%rip),%rax        # 20f0e0 <mem>
    3c9b:	48 01 d0             	add    %rdx,%rax
    3c9e:	8b 00                	mov    (%rax),%eax
    3ca0:	83 c0 04             	add    $0x4,%eax
    3ca3:	89 c7                	mov    %eax,%edi
    3ca5:	e8 c3 d1 ff ff       	callq  e6d <v2r>
    3caa:	8b 00                	mov    (%rax),%eax
    3cac:	39 c3                	cmp    %eax,%ebx
    3cae:	0f 95 c0             	setne  %al
    3cb1:	0f b6 c0             	movzbl %al,%eax
    3cb4:	f7 d8                	neg    %eax
    3cb6:	89 c3                	mov    %eax,%ebx
    3cb8:	48 8b 05 c9 b6 60 00 	mov    0x60b6c9(%rip),%rax        # 60f388 <f_boot>
    3cbf:	48 83 c0 04          	add    $0x4,%rax
    3cc3:	89 c2                	mov    %eax,%edx
    3cc5:	48 8b 05 bc b6 60 00 	mov    0x60b6bc(%rip),%rax        # 60f388 <f_boot>
    3ccc:	29 c2                	sub    %eax,%edx
    3cce:	89 d0                	mov    %edx,%eax
    3cd0:	48 63 d0             	movslq %eax,%rdx
    3cd3:	48 8d 05 06 b4 20 00 	lea    0x20b406(%rip),%rax        # 20f0e0 <mem>
    3cda:	48 01 d0             	add    %rdx,%rax
    3cdd:	8b 00                	mov    (%rax),%eax
    3cdf:	83 c0 04             	add    $0x4,%eax
    3ce2:	89 c7                	mov    %eax,%edi
    3ce4:	e8 84 d1 ff ff       	callq  e6d <v2r>
    3ce9:	89 da                	mov    %ebx,%edx
    3ceb:	89 10                	mov    %edx,(%rax)
    3ced:	48 8b 05 94 b6 60 00 	mov    0x60b694(%rip),%rax        # 60f388 <f_boot>
    3cf4:	48 83 c0 04          	add    $0x4,%rax
    3cf8:	89 c2                	mov    %eax,%edx
    3cfa:	48 8b 05 87 b6 60 00 	mov    0x60b687(%rip),%rax        # 60f388 <f_boot>
    3d01:	29 c2                	sub    %eax,%edx
    3d03:	89 d0                	mov    %edx,%eax
    3d05:	48 63 d0             	movslq %eax,%rdx
    3d08:	48 8d 05 d1 b3 20 00 	lea    0x20b3d1(%rip),%rax        # 20f0e0 <mem>
    3d0f:	48 01 d0             	add    %rdx,%rax
    3d12:	8b 10                	mov    (%rax),%edx
    3d14:	48 8b 05 6d b6 60 00 	mov    0x60b66d(%rip),%rax        # 60f388 <f_boot>
    3d1b:	48 83 c0 04          	add    $0x4,%rax
    3d1f:	89 c1                	mov    %eax,%ecx
    3d21:	48 8b 05 60 b6 60 00 	mov    0x60b660(%rip),%rax        # 60f388 <f_boot>
    3d28:	29 c1                	sub    %eax,%ecx
    3d2a:	89 c8                	mov    %ecx,%eax
    3d2c:	48 63 c8             	movslq %eax,%rcx
    3d2f:	48 8d 05 aa b3 20 00 	lea    0x20b3aa(%rip),%rax        # 20f0e0 <mem>
    3d36:	48 01 c8             	add    %rcx,%rax
    3d39:	83 c2 04             	add    $0x4,%edx
    3d3c:	89 10                	mov    %edx,(%rax)
    3d3e:	e9 06 67 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_negate:	/*negate*/ CELL(sp)=-CELL(sp);break;
    3d43:	48 8b 05 3e b6 60 00 	mov    0x60b63e(%rip),%rax        # 60f388 <f_boot>
    3d4a:	48 83 c0 04          	add    $0x4,%rax
    3d4e:	89 c2                	mov    %eax,%edx
    3d50:	48 8b 05 31 b6 60 00 	mov    0x60b631(%rip),%rax        # 60f388 <f_boot>
    3d57:	29 c2                	sub    %eax,%edx
    3d59:	89 d0                	mov    %edx,%eax
    3d5b:	48 63 d0             	movslq %eax,%rdx
    3d5e:	48 8d 05 7b b3 20 00 	lea    0x20b37b(%rip),%rax        # 20f0e0 <mem>
    3d65:	48 01 d0             	add    %rdx,%rax
    3d68:	8b 00                	mov    (%rax),%eax
    3d6a:	89 c7                	mov    %eax,%edi
    3d6c:	e8 fc d0 ff ff       	callq  e6d <v2r>
    3d71:	8b 18                	mov    (%rax),%ebx
    3d73:	48 8b 05 0e b6 60 00 	mov    0x60b60e(%rip),%rax        # 60f388 <f_boot>
    3d7a:	48 83 c0 04          	add    $0x4,%rax
    3d7e:	89 c2                	mov    %eax,%edx
    3d80:	48 8b 05 01 b6 60 00 	mov    0x60b601(%rip),%rax        # 60f388 <f_boot>
    3d87:	29 c2                	sub    %eax,%edx
    3d89:	89 d0                	mov    %edx,%eax
    3d8b:	48 63 d0             	movslq %eax,%rdx
    3d8e:	48 8d 05 4b b3 20 00 	lea    0x20b34b(%rip),%rax        # 20f0e0 <mem>
    3d95:	48 01 d0             	add    %rdx,%rax
    3d98:	8b 00                	mov    (%rax),%eax
    3d9a:	89 c7                	mov    %eax,%edi
    3d9c:	e8 cc d0 ff ff       	callq  e6d <v2r>
    3da1:	48 89 c2             	mov    %rax,%rdx
    3da4:	89 d8                	mov    %ebx,%eax
    3da6:	f7 d8                	neg    %eax
    3da8:	89 02                	mov    %eax,(%rdx)
    3daa:	e9 9a 66 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_invert:	/*invert*/ CELL(sp)=~CELL(sp);break;
    3daf:	48 8b 05 d2 b5 60 00 	mov    0x60b5d2(%rip),%rax        # 60f388 <f_boot>
    3db6:	48 83 c0 04          	add    $0x4,%rax
    3dba:	89 c2                	mov    %eax,%edx
    3dbc:	48 8b 05 c5 b5 60 00 	mov    0x60b5c5(%rip),%rax        # 60f388 <f_boot>
    3dc3:	29 c2                	sub    %eax,%edx
    3dc5:	89 d0                	mov    %edx,%eax
    3dc7:	48 63 d0             	movslq %eax,%rdx
    3dca:	48 8d 05 0f b3 20 00 	lea    0x20b30f(%rip),%rax        # 20f0e0 <mem>
    3dd1:	48 01 d0             	add    %rdx,%rax
    3dd4:	8b 00                	mov    (%rax),%eax
    3dd6:	89 c7                	mov    %eax,%edi
    3dd8:	e8 90 d0 ff ff       	callq  e6d <v2r>
    3ddd:	8b 18                	mov    (%rax),%ebx
    3ddf:	48 8b 05 a2 b5 60 00 	mov    0x60b5a2(%rip),%rax        # 60f388 <f_boot>
    3de6:	48 83 c0 04          	add    $0x4,%rax
    3dea:	89 c2                	mov    %eax,%edx
    3dec:	48 8b 05 95 b5 60 00 	mov    0x60b595(%rip),%rax        # 60f388 <f_boot>
    3df3:	29 c2                	sub    %eax,%edx
    3df5:	89 d0                	mov    %edx,%eax
    3df7:	48 63 d0             	movslq %eax,%rdx
    3dfa:	48 8d 05 df b2 20 00 	lea    0x20b2df(%rip),%rax        # 20f0e0 <mem>
    3e01:	48 01 d0             	add    %rdx,%rax
    3e04:	8b 00                	mov    (%rax),%eax
    3e06:	89 c7                	mov    %eax,%edi
    3e08:	e8 60 d0 ff ff       	callq  e6d <v2r>
    3e0d:	48 89 c2             	mov    %rax,%rdx
    3e10:	89 d8                	mov    %ebx,%eax
    3e12:	f7 d0                	not    %eax
    3e14:	89 02                	mov    %eax,(%rdx)
    3e16:	e9 2e 66 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_ummul:	/* um* */ umul(&CELL(sp),&CELL(sp+4));break;
    3e1b:	48 8b 05 66 b5 60 00 	mov    0x60b566(%rip),%rax        # 60f388 <f_boot>
    3e22:	48 83 c0 04          	add    $0x4,%rax
    3e26:	89 c2                	mov    %eax,%edx
    3e28:	48 8b 05 59 b5 60 00 	mov    0x60b559(%rip),%rax        # 60f388 <f_boot>
    3e2f:	29 c2                	sub    %eax,%edx
    3e31:	89 d0                	mov    %edx,%eax
    3e33:	48 63 d0             	movslq %eax,%rdx
    3e36:	48 8d 05 a3 b2 20 00 	lea    0x20b2a3(%rip),%rax        # 20f0e0 <mem>
    3e3d:	48 01 d0             	add    %rdx,%rax
    3e40:	8b 00                	mov    (%rax),%eax
    3e42:	83 c0 04             	add    $0x4,%eax
    3e45:	89 c7                	mov    %eax,%edi
    3e47:	e8 21 d0 ff ff       	callq  e6d <v2r>
    3e4c:	48 89 c3             	mov    %rax,%rbx
    3e4f:	48 8b 05 32 b5 60 00 	mov    0x60b532(%rip),%rax        # 60f388 <f_boot>
    3e56:	48 83 c0 04          	add    $0x4,%rax
    3e5a:	89 c2                	mov    %eax,%edx
    3e5c:	48 8b 05 25 b5 60 00 	mov    0x60b525(%rip),%rax        # 60f388 <f_boot>
    3e63:	29 c2                	sub    %eax,%edx
    3e65:	89 d0                	mov    %edx,%eax
    3e67:	48 63 d0             	movslq %eax,%rdx
    3e6a:	48 8d 05 6f b2 20 00 	lea    0x20b26f(%rip),%rax        # 20f0e0 <mem>
    3e71:	48 01 d0             	add    %rdx,%rax
    3e74:	8b 00                	mov    (%rax),%eax
    3e76:	89 c7                	mov    %eax,%edi
    3e78:	e8 f0 cf ff ff       	callq  e6d <v2r>
    3e7d:	48 89 de             	mov    %rbx,%rsi
    3e80:	48 89 c7             	mov    %rax,%rdi
    3e83:	e8 70 d0 ff ff       	callq  ef8 <umul>
    3e88:	e9 bc 65 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Cload:	/* C@ */  CELL(sp)=BYTE(CELL(sp));break;
    3e8d:	48 8b 05 f4 b4 60 00 	mov    0x60b4f4(%rip),%rax        # 60f388 <f_boot>
    3e94:	48 83 c0 04          	add    $0x4,%rax
    3e98:	89 c2                	mov    %eax,%edx
    3e9a:	48 8b 05 e7 b4 60 00 	mov    0x60b4e7(%rip),%rax        # 60f388 <f_boot>
    3ea1:	29 c2                	sub    %eax,%edx
    3ea3:	89 d0                	mov    %edx,%eax
    3ea5:	48 63 d0             	movslq %eax,%rdx
    3ea8:	48 8d 05 31 b2 20 00 	lea    0x20b231(%rip),%rax        # 20f0e0 <mem>
    3eaf:	48 01 d0             	add    %rdx,%rax
    3eb2:	8b 00                	mov    (%rax),%eax
    3eb4:	89 c7                	mov    %eax,%edi
    3eb6:	e8 b2 cf ff ff       	callq  e6d <v2r>
    3ebb:	8b 00                	mov    (%rax),%eax
    3ebd:	89 c7                	mov    %eax,%edi
    3ebf:	e8 a9 cf ff ff       	callq  e6d <v2r>
    3ec4:	0f b6 18             	movzbl (%rax),%ebx
    3ec7:	48 8b 05 ba b4 60 00 	mov    0x60b4ba(%rip),%rax        # 60f388 <f_boot>
    3ece:	48 83 c0 04          	add    $0x4,%rax
    3ed2:	89 c2                	mov    %eax,%edx
    3ed4:	48 8b 05 ad b4 60 00 	mov    0x60b4ad(%rip),%rax        # 60f388 <f_boot>
    3edb:	29 c2                	sub    %eax,%edx
    3edd:	89 d0                	mov    %edx,%eax
    3edf:	48 63 d0             	movslq %eax,%rdx
    3ee2:	48 8d 05 f7 b1 20 00 	lea    0x20b1f7(%rip),%rax        # 20f0e0 <mem>
    3ee9:	48 01 d0             	add    %rdx,%rax
    3eec:	8b 00                	mov    (%rax),%eax
    3eee:	89 c7                	mov    %eax,%edi
    3ef0:	e8 78 cf ff ff       	callq  e6d <v2r>
    3ef5:	48 89 c2             	mov    %rax,%rdx
    3ef8:	0f b6 c3             	movzbl %bl,%eax
    3efb:	89 02                	mov    %eax,(%rdx)
    3efd:	e9 47 65 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Wload: /* W@ */  CELL(sp)=WCELL(CELL(sp));break;
    3f02:	48 8b 05 7f b4 60 00 	mov    0x60b47f(%rip),%rax        # 60f388 <f_boot>
    3f09:	48 83 c0 04          	add    $0x4,%rax
    3f0d:	89 c2                	mov    %eax,%edx
    3f0f:	48 8b 05 72 b4 60 00 	mov    0x60b472(%rip),%rax        # 60f388 <f_boot>
    3f16:	29 c2                	sub    %eax,%edx
    3f18:	89 d0                	mov    %edx,%eax
    3f1a:	48 63 d0             	movslq %eax,%rdx
    3f1d:	48 8d 05 bc b1 20 00 	lea    0x20b1bc(%rip),%rax        # 20f0e0 <mem>
    3f24:	48 01 d0             	add    %rdx,%rax
    3f27:	8b 00                	mov    (%rax),%eax
    3f29:	89 c7                	mov    %eax,%edi
    3f2b:	e8 3d cf ff ff       	callq  e6d <v2r>
    3f30:	8b 00                	mov    (%rax),%eax
    3f32:	89 c7                	mov    %eax,%edi
    3f34:	e8 34 cf ff ff       	callq  e6d <v2r>
    3f39:	0f b7 18             	movzwl (%rax),%ebx
    3f3c:	48 8b 05 45 b4 60 00 	mov    0x60b445(%rip),%rax        # 60f388 <f_boot>
    3f43:	48 83 c0 04          	add    $0x4,%rax
    3f47:	89 c2                	mov    %eax,%edx
    3f49:	48 8b 05 38 b4 60 00 	mov    0x60b438(%rip),%rax        # 60f388 <f_boot>
    3f50:	29 c2                	sub    %eax,%edx
    3f52:	89 d0                	mov    %edx,%eax
    3f54:	48 63 d0             	movslq %eax,%rdx
    3f57:	48 8d 05 82 b1 20 00 	lea    0x20b182(%rip),%rax        # 20f0e0 <mem>
    3f5e:	48 01 d0             	add    %rdx,%rax
    3f61:	8b 00                	mov    (%rax),%eax
    3f63:	89 c7                	mov    %eax,%edi
    3f65:	e8 03 cf ff ff       	callq  e6d <v2r>
    3f6a:	48 89 c2             	mov    %rax,%rdx
    3f6d:	0f b7 c3             	movzwl %bx,%eax
    3f70:	89 02                	mov    %eax,(%rdx)
    3f72:	e9 d2 64 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_load:	/* @ */   CELL(sp)=CELL(CELL(sp));break;
    3f77:	48 8b 05 0a b4 60 00 	mov    0x60b40a(%rip),%rax        # 60f388 <f_boot>
    3f7e:	48 83 c0 04          	add    $0x4,%rax
    3f82:	89 c2                	mov    %eax,%edx
    3f84:	48 8b 05 fd b3 60 00 	mov    0x60b3fd(%rip),%rax        # 60f388 <f_boot>
    3f8b:	29 c2                	sub    %eax,%edx
    3f8d:	89 d0                	mov    %edx,%eax
    3f8f:	48 63 d0             	movslq %eax,%rdx
    3f92:	48 8d 05 47 b1 20 00 	lea    0x20b147(%rip),%rax        # 20f0e0 <mem>
    3f99:	48 01 d0             	add    %rdx,%rax
    3f9c:	8b 00                	mov    (%rax),%eax
    3f9e:	89 c7                	mov    %eax,%edi
    3fa0:	e8 c8 ce ff ff       	callq  e6d <v2r>
    3fa5:	8b 00                	mov    (%rax),%eax
    3fa7:	89 c7                	mov    %eax,%edi
    3fa9:	e8 bf ce ff ff       	callq  e6d <v2r>
    3fae:	48 89 c3             	mov    %rax,%rbx
    3fb1:	48 8b 05 d0 b3 60 00 	mov    0x60b3d0(%rip),%rax        # 60f388 <f_boot>
    3fb8:	48 83 c0 04          	add    $0x4,%rax
    3fbc:	89 c2                	mov    %eax,%edx
    3fbe:	48 8b 05 c3 b3 60 00 	mov    0x60b3c3(%rip),%rax        # 60f388 <f_boot>
    3fc5:	29 c2                	sub    %eax,%edx
    3fc7:	89 d0                	mov    %edx,%eax
    3fc9:	48 63 d0             	movslq %eax,%rdx
    3fcc:	48 8d 05 0d b1 20 00 	lea    0x20b10d(%rip),%rax        # 20f0e0 <mem>
    3fd3:	48 01 d0             	add    %rdx,%rax
    3fd6:	8b 00                	mov    (%rax),%eax
    3fd8:	89 c7                	mov    %eax,%edi
    3fda:	e8 8e ce ff ff       	callq  e6d <v2r>
    3fdf:	48 89 c2             	mov    %rax,%rdx
    3fe2:	8b 03                	mov    (%rbx),%eax
    3fe4:	89 02                	mov    %eax,(%rdx)
    3fe6:	e9 5e 64 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_1add:	/* 1+ */   CELL(sp)++;break;
    3feb:	48 8b 05 96 b3 60 00 	mov    0x60b396(%rip),%rax        # 60f388 <f_boot>
    3ff2:	48 83 c0 04          	add    $0x4,%rax
    3ff6:	89 c2                	mov    %eax,%edx
    3ff8:	48 8b 05 89 b3 60 00 	mov    0x60b389(%rip),%rax        # 60f388 <f_boot>
    3fff:	29 c2                	sub    %eax,%edx
    4001:	89 d0                	mov    %edx,%eax
    4003:	48 63 d0             	movslq %eax,%rdx
    4006:	48 8d 05 d3 b0 20 00 	lea    0x20b0d3(%rip),%rax        # 20f0e0 <mem>
    400d:	48 01 d0             	add    %rdx,%rax
    4010:	8b 00                	mov    (%rax),%eax
    4012:	89 c7                	mov    %eax,%edi
    4014:	e8 54 ce ff ff       	callq  e6d <v2r>
    4019:	8b 10                	mov    (%rax),%edx
    401b:	83 c2 01             	add    $0x1,%edx
    401e:	89 10                	mov    %edx,(%rax)
    4020:	e9 24 64 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2add:	/* 2+ */   CELL(sp)+=2;break;
    4025:	48 8b 05 5c b3 60 00 	mov    0x60b35c(%rip),%rax        # 60f388 <f_boot>
    402c:	48 83 c0 04          	add    $0x4,%rax
    4030:	89 c2                	mov    %eax,%edx
    4032:	48 8b 05 4f b3 60 00 	mov    0x60b34f(%rip),%rax        # 60f388 <f_boot>
    4039:	29 c2                	sub    %eax,%edx
    403b:	89 d0                	mov    %edx,%eax
    403d:	48 63 d0             	movslq %eax,%rdx
    4040:	48 8d 05 99 b0 20 00 	lea    0x20b099(%rip),%rax        # 20f0e0 <mem>
    4047:	48 01 d0             	add    %rdx,%rax
    404a:	8b 00                	mov    (%rax),%eax
    404c:	89 c7                	mov    %eax,%edi
    404e:	e8 1a ce ff ff       	callq  e6d <v2r>
    4053:	8b 10                	mov    (%rax),%edx
    4055:	83 c2 02             	add    $0x2,%edx
    4058:	89 10                	mov    %edx,(%rax)
    405a:	e9 ea 63 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_1sub:	/* 1- */   CELL(sp)--;break;
    405f:	48 8b 05 22 b3 60 00 	mov    0x60b322(%rip),%rax        # 60f388 <f_boot>
    4066:	48 83 c0 04          	add    $0x4,%rax
    406a:	89 c2                	mov    %eax,%edx
    406c:	48 8b 05 15 b3 60 00 	mov    0x60b315(%rip),%rax        # 60f388 <f_boot>
    4073:	29 c2                	sub    %eax,%edx
    4075:	89 d0                	mov    %edx,%eax
    4077:	48 63 d0             	movslq %eax,%rdx
    407a:	48 8d 05 5f b0 20 00 	lea    0x20b05f(%rip),%rax        # 20f0e0 <mem>
    4081:	48 01 d0             	add    %rdx,%rax
    4084:	8b 00                	mov    (%rax),%eax
    4086:	89 c7                	mov    %eax,%edi
    4088:	e8 e0 cd ff ff       	callq  e6d <v2r>
    408d:	8b 10                	mov    (%rax),%edx
    408f:	83 ea 01             	sub    $0x1,%edx
    4092:	89 10                	mov    %edx,(%rax)
    4094:	e9 b0 63 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2sub:	/* 2+ */   CELL(sp)-=2;break;
    4099:	48 8b 05 e8 b2 60 00 	mov    0x60b2e8(%rip),%rax        # 60f388 <f_boot>
    40a0:	48 83 c0 04          	add    $0x4,%rax
    40a4:	89 c2                	mov    %eax,%edx
    40a6:	48 8b 05 db b2 60 00 	mov    0x60b2db(%rip),%rax        # 60f388 <f_boot>
    40ad:	29 c2                	sub    %eax,%edx
    40af:	89 d0                	mov    %edx,%eax
    40b1:	48 63 d0             	movslq %eax,%rdx
    40b4:	48 8d 05 25 b0 20 00 	lea    0x20b025(%rip),%rax        # 20f0e0 <mem>
    40bb:	48 01 d0             	add    %rdx,%rax
    40be:	8b 00                	mov    (%rax),%eax
    40c0:	89 c7                	mov    %eax,%edi
    40c2:	e8 a6 cd ff ff       	callq  e6d <v2r>
    40c7:	8b 10                	mov    (%rax),%edx
    40c9:	83 ea 02             	sub    $0x2,%edx
    40cc:	89 10                	mov    %edx,(%rax)
    40ce:	e9 76 63 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2mul:	/* 2* */   CELL(sp)*=2;break;
    40d3:	48 8b 05 ae b2 60 00 	mov    0x60b2ae(%rip),%rax        # 60f388 <f_boot>
    40da:	48 83 c0 04          	add    $0x4,%rax
    40de:	89 c2                	mov    %eax,%edx
    40e0:	48 8b 05 a1 b2 60 00 	mov    0x60b2a1(%rip),%rax        # 60f388 <f_boot>
    40e7:	29 c2                	sub    %eax,%edx
    40e9:	89 d0                	mov    %edx,%eax
    40eb:	48 63 d0             	movslq %eax,%rdx
    40ee:	48 8d 05 eb af 20 00 	lea    0x20afeb(%rip),%rax        # 20f0e0 <mem>
    40f5:	48 01 d0             	add    %rdx,%rax
    40f8:	8b 00                	mov    (%rax),%eax
    40fa:	89 c7                	mov    %eax,%edi
    40fc:	e8 6c cd ff ff       	callq  e6d <v2r>
    4101:	8b 10                	mov    (%rax),%edx
    4103:	01 d2                	add    %edx,%edx
    4105:	89 10                	mov    %edx,(%rax)
    4107:	e9 3d 63 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2div:	/* 2/ */   CELL(sp)=(INT32)CELL(sp)/2;break;
    410c:	48 8b 05 75 b2 60 00 	mov    0x60b275(%rip),%rax        # 60f388 <f_boot>
    4113:	48 83 c0 04          	add    $0x4,%rax
    4117:	89 c2                	mov    %eax,%edx
    4119:	48 8b 05 68 b2 60 00 	mov    0x60b268(%rip),%rax        # 60f388 <f_boot>
    4120:	29 c2                	sub    %eax,%edx
    4122:	89 d0                	mov    %edx,%eax
    4124:	48 63 d0             	movslq %eax,%rdx
    4127:	48 8d 05 b2 af 20 00 	lea    0x20afb2(%rip),%rax        # 20f0e0 <mem>
    412e:	48 01 d0             	add    %rdx,%rax
    4131:	8b 00                	mov    (%rax),%eax
    4133:	89 c7                	mov    %eax,%edi
    4135:	e8 33 cd ff ff       	callq  e6d <v2r>
    413a:	8b 00                	mov    (%rax),%eax
    413c:	89 c2                	mov    %eax,%edx
    413e:	c1 ea 1f             	shr    $0x1f,%edx
    4141:	01 d0                	add    %edx,%eax
    4143:	d1 f8                	sar    %eax
    4145:	89 c3                	mov    %eax,%ebx
    4147:	48 8b 05 3a b2 60 00 	mov    0x60b23a(%rip),%rax        # 60f388 <f_boot>
    414e:	48 83 c0 04          	add    $0x4,%rax
    4152:	89 c2                	mov    %eax,%edx
    4154:	48 8b 05 2d b2 60 00 	mov    0x60b22d(%rip),%rax        # 60f388 <f_boot>
    415b:	29 c2                	sub    %eax,%edx
    415d:	89 d0                	mov    %edx,%eax
    415f:	48 63 d0             	movslq %eax,%rdx
    4162:	48 8d 05 77 af 20 00 	lea    0x20af77(%rip),%rax        # 20f0e0 <mem>
    4169:	48 01 d0             	add    %rdx,%rax
    416c:	8b 00                	mov    (%rax),%eax
    416e:	89 c7                	mov    %eax,%edi
    4170:	e8 f8 cc ff ff       	callq  e6d <v2r>
    4175:	89 da                	mov    %ebx,%edx
    4177:	89 10                	mov    %edx,(%rax)
    4179:	e9 cb 62 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_u2div:	/* 2/ */   CELL(sp)/=2;break;
    417e:	48 8b 05 03 b2 60 00 	mov    0x60b203(%rip),%rax        # 60f388 <f_boot>
    4185:	48 83 c0 04          	add    $0x4,%rax
    4189:	89 c2                	mov    %eax,%edx
    418b:	48 8b 05 f6 b1 60 00 	mov    0x60b1f6(%rip),%rax        # 60f388 <f_boot>
    4192:	29 c2                	sub    %eax,%edx
    4194:	89 d0                	mov    %edx,%eax
    4196:	48 63 d0             	movslq %eax,%rdx
    4199:	48 8d 05 40 af 20 00 	lea    0x20af40(%rip),%rax        # 20f0e0 <mem>
    41a0:	48 01 d0             	add    %rdx,%rax
    41a3:	8b 00                	mov    (%rax),%eax
    41a5:	89 c7                	mov    %eax,%edi
    41a7:	e8 c1 cc ff ff       	callq  e6d <v2r>
    41ac:	8b 10                	mov    (%rax),%edx
    41ae:	d1 ea                	shr    %edx
    41b0:	89 10                	mov    %edx,(%rax)
    41b2:	e9 92 62 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_add:	/* + */   CELL(sp+4)=CELL(sp)+CELL(sp+4);sp+=4;break;
    41b7:	48 8b 05 ca b1 60 00 	mov    0x60b1ca(%rip),%rax        # 60f388 <f_boot>
    41be:	48 83 c0 04          	add    $0x4,%rax
    41c2:	89 c2                	mov    %eax,%edx
    41c4:	48 8b 05 bd b1 60 00 	mov    0x60b1bd(%rip),%rax        # 60f388 <f_boot>
    41cb:	29 c2                	sub    %eax,%edx
    41cd:	89 d0                	mov    %edx,%eax
    41cf:	48 63 d0             	movslq %eax,%rdx
    41d2:	48 8d 05 07 af 20 00 	lea    0x20af07(%rip),%rax        # 20f0e0 <mem>
    41d9:	48 01 d0             	add    %rdx,%rax
    41dc:	8b 00                	mov    (%rax),%eax
    41de:	89 c7                	mov    %eax,%edi
    41e0:	e8 88 cc ff ff       	callq  e6d <v2r>
    41e5:	44 8b 20             	mov    (%rax),%r12d
    41e8:	48 8b 05 99 b1 60 00 	mov    0x60b199(%rip),%rax        # 60f388 <f_boot>
    41ef:	48 83 c0 04          	add    $0x4,%rax
    41f3:	89 c2                	mov    %eax,%edx
    41f5:	48 8b 05 8c b1 60 00 	mov    0x60b18c(%rip),%rax        # 60f388 <f_boot>
    41fc:	29 c2                	sub    %eax,%edx
    41fe:	89 d0                	mov    %edx,%eax
    4200:	48 63 d0             	movslq %eax,%rdx
    4203:	48 8d 05 d6 ae 20 00 	lea    0x20aed6(%rip),%rax        # 20f0e0 <mem>
    420a:	48 01 d0             	add    %rdx,%rax
    420d:	8b 00                	mov    (%rax),%eax
    420f:	83 c0 04             	add    $0x4,%eax
    4212:	89 c7                	mov    %eax,%edi
    4214:	e8 54 cc ff ff       	callq  e6d <v2r>
    4219:	8b 18                	mov    (%rax),%ebx
    421b:	48 8b 05 66 b1 60 00 	mov    0x60b166(%rip),%rax        # 60f388 <f_boot>
    4222:	48 83 c0 04          	add    $0x4,%rax
    4226:	89 c2                	mov    %eax,%edx
    4228:	48 8b 05 59 b1 60 00 	mov    0x60b159(%rip),%rax        # 60f388 <f_boot>
    422f:	29 c2                	sub    %eax,%edx
    4231:	89 d0                	mov    %edx,%eax
    4233:	48 63 d0             	movslq %eax,%rdx
    4236:	48 8d 05 a3 ae 20 00 	lea    0x20aea3(%rip),%rax        # 20f0e0 <mem>
    423d:	48 01 d0             	add    %rdx,%rax
    4240:	8b 00                	mov    (%rax),%eax
    4242:	83 c0 04             	add    $0x4,%eax
    4245:	89 c7                	mov    %eax,%edi
    4247:	e8 21 cc ff ff       	callq  e6d <v2r>
    424c:	48 89 c2             	mov    %rax,%rdx
    424f:	41 8d 04 1c          	lea    (%r12,%rbx,1),%eax
    4253:	89 02                	mov    %eax,(%rdx)
    4255:	48 8b 05 2c b1 60 00 	mov    0x60b12c(%rip),%rax        # 60f388 <f_boot>
    425c:	48 83 c0 04          	add    $0x4,%rax
    4260:	89 c2                	mov    %eax,%edx
    4262:	48 8b 05 1f b1 60 00 	mov    0x60b11f(%rip),%rax        # 60f388 <f_boot>
    4269:	29 c2                	sub    %eax,%edx
    426b:	89 d0                	mov    %edx,%eax
    426d:	48 63 d0             	movslq %eax,%rdx
    4270:	48 8d 05 69 ae 20 00 	lea    0x20ae69(%rip),%rax        # 20f0e0 <mem>
    4277:	48 01 d0             	add    %rdx,%rax
    427a:	8b 10                	mov    (%rax),%edx
    427c:	48 8b 05 05 b1 60 00 	mov    0x60b105(%rip),%rax        # 60f388 <f_boot>
    4283:	48 83 c0 04          	add    $0x4,%rax
    4287:	89 c1                	mov    %eax,%ecx
    4289:	48 8b 05 f8 b0 60 00 	mov    0x60b0f8(%rip),%rax        # 60f388 <f_boot>
    4290:	29 c1                	sub    %eax,%ecx
    4292:	89 c8                	mov    %ecx,%eax
    4294:	48 63 c8             	movslq %eax,%rcx
    4297:	48 8d 05 42 ae 20 00 	lea    0x20ae42(%rip),%rax        # 20f0e0 <mem>
    429e:	48 01 c8             	add    %rcx,%rax
    42a1:	83 c2 04             	add    $0x4,%edx
    42a4:	89 10                	mov    %edx,(%rax)
    42a6:	e9 9e 61 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_sub:	/* - */   CELL(sp+4)-=CELL(sp);sp+=4;break;
    42ab:	48 8b 05 d6 b0 60 00 	mov    0x60b0d6(%rip),%rax        # 60f388 <f_boot>
    42b2:	48 83 c0 04          	add    $0x4,%rax
    42b6:	89 c2                	mov    %eax,%edx
    42b8:	48 8b 05 c9 b0 60 00 	mov    0x60b0c9(%rip),%rax        # 60f388 <f_boot>
    42bf:	29 c2                	sub    %eax,%edx
    42c1:	89 d0                	mov    %edx,%eax
    42c3:	48 63 d0             	movslq %eax,%rdx
    42c6:	48 8d 05 13 ae 20 00 	lea    0x20ae13(%rip),%rax        # 20f0e0 <mem>
    42cd:	48 01 d0             	add    %rdx,%rax
    42d0:	8b 00                	mov    (%rax),%eax
    42d2:	89 c7                	mov    %eax,%edi
    42d4:	e8 94 cb ff ff       	callq  e6d <v2r>
    42d9:	8b 18                	mov    (%rax),%ebx
    42db:	48 8b 05 a6 b0 60 00 	mov    0x60b0a6(%rip),%rax        # 60f388 <f_boot>
    42e2:	48 83 c0 04          	add    $0x4,%rax
    42e6:	89 c2                	mov    %eax,%edx
    42e8:	48 8b 05 99 b0 60 00 	mov    0x60b099(%rip),%rax        # 60f388 <f_boot>
    42ef:	29 c2                	sub    %eax,%edx
    42f1:	89 d0                	mov    %edx,%eax
    42f3:	48 63 d0             	movslq %eax,%rdx
    42f6:	48 8d 05 e3 ad 20 00 	lea    0x20ade3(%rip),%rax        # 20f0e0 <mem>
    42fd:	48 01 d0             	add    %rdx,%rax
    4300:	8b 00                	mov    (%rax),%eax
    4302:	83 c0 04             	add    $0x4,%eax
    4305:	89 c7                	mov    %eax,%edi
    4307:	e8 61 cb ff ff       	callq  e6d <v2r>
    430c:	8b 10                	mov    (%rax),%edx
    430e:	29 da                	sub    %ebx,%edx
    4310:	89 10                	mov    %edx,(%rax)
    4312:	48 8b 05 6f b0 60 00 	mov    0x60b06f(%rip),%rax        # 60f388 <f_boot>
    4319:	48 83 c0 04          	add    $0x4,%rax
    431d:	89 c2                	mov    %eax,%edx
    431f:	48 8b 05 62 b0 60 00 	mov    0x60b062(%rip),%rax        # 60f388 <f_boot>
    4326:	29 c2                	sub    %eax,%edx
    4328:	89 d0                	mov    %edx,%eax
    432a:	48 63 d0             	movslq %eax,%rdx
    432d:	48 8d 05 ac ad 20 00 	lea    0x20adac(%rip),%rax        # 20f0e0 <mem>
    4334:	48 01 d0             	add    %rdx,%rax
    4337:	8b 10                	mov    (%rax),%edx
    4339:	48 8b 05 48 b0 60 00 	mov    0x60b048(%rip),%rax        # 60f388 <f_boot>
    4340:	48 83 c0 04          	add    $0x4,%rax
    4344:	89 c1                	mov    %eax,%ecx
    4346:	48 8b 05 3b b0 60 00 	mov    0x60b03b(%rip),%rax        # 60f388 <f_boot>
    434d:	29 c1                	sub    %eax,%ecx
    434f:	89 c8                	mov    %ecx,%eax
    4351:	48 63 c8             	movslq %eax,%rcx
    4354:	48 8d 05 85 ad 20 00 	lea    0x20ad85(%rip),%rax        # 20f0e0 <mem>
    435b:	48 01 c8             	add    %rcx,%rax
    435e:	83 c2 04             	add    $0x4,%edx
    4361:	89 10                	mov    %edx,(%rax)
    4363:	e9 e1 60 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_mul:	/* * */   CELL(sp+4)=(INT32)CELL(sp)*(INT32)CELL(sp+4);sp+=4;break;
    4368:	48 8b 05 19 b0 60 00 	mov    0x60b019(%rip),%rax        # 60f388 <f_boot>
    436f:	48 83 c0 04          	add    $0x4,%rax
    4373:	89 c2                	mov    %eax,%edx
    4375:	48 8b 05 0c b0 60 00 	mov    0x60b00c(%rip),%rax        # 60f388 <f_boot>
    437c:	29 c2                	sub    %eax,%edx
    437e:	89 d0                	mov    %edx,%eax
    4380:	48 63 d0             	movslq %eax,%rdx
    4383:	48 8d 05 56 ad 20 00 	lea    0x20ad56(%rip),%rax        # 20f0e0 <mem>
    438a:	48 01 d0             	add    %rdx,%rax
    438d:	8b 00                	mov    (%rax),%eax
    438f:	89 c7                	mov    %eax,%edi
    4391:	e8 d7 ca ff ff       	callq  e6d <v2r>
    4396:	8b 00                	mov    (%rax),%eax
    4398:	89 c3                	mov    %eax,%ebx
    439a:	48 8b 05 e7 af 60 00 	mov    0x60afe7(%rip),%rax        # 60f388 <f_boot>
    43a1:	48 83 c0 04          	add    $0x4,%rax
    43a5:	89 c2                	mov    %eax,%edx
    43a7:	48 8b 05 da af 60 00 	mov    0x60afda(%rip),%rax        # 60f388 <f_boot>
    43ae:	29 c2                	sub    %eax,%edx
    43b0:	89 d0                	mov    %edx,%eax
    43b2:	48 63 d0             	movslq %eax,%rdx
    43b5:	48 8d 05 24 ad 20 00 	lea    0x20ad24(%rip),%rax        # 20f0e0 <mem>
    43bc:	48 01 d0             	add    %rdx,%rax
    43bf:	8b 00                	mov    (%rax),%eax
    43c1:	83 c0 04             	add    $0x4,%eax
    43c4:	89 c7                	mov    %eax,%edi
    43c6:	e8 a2 ca ff ff       	callq  e6d <v2r>
    43cb:	8b 00                	mov    (%rax),%eax
    43cd:	0f af d8             	imul   %eax,%ebx
    43d0:	48 8b 05 b1 af 60 00 	mov    0x60afb1(%rip),%rax        # 60f388 <f_boot>
    43d7:	48 83 c0 04          	add    $0x4,%rax
    43db:	89 c2                	mov    %eax,%edx
    43dd:	48 8b 05 a4 af 60 00 	mov    0x60afa4(%rip),%rax        # 60f388 <f_boot>
    43e4:	29 c2                	sub    %eax,%edx
    43e6:	89 d0                	mov    %edx,%eax
    43e8:	48 63 d0             	movslq %eax,%rdx
    43eb:	48 8d 05 ee ac 20 00 	lea    0x20acee(%rip),%rax        # 20f0e0 <mem>
    43f2:	48 01 d0             	add    %rdx,%rax
    43f5:	8b 00                	mov    (%rax),%eax
    43f7:	83 c0 04             	add    $0x4,%eax
    43fa:	89 c7                	mov    %eax,%edi
    43fc:	e8 6c ca ff ff       	callq  e6d <v2r>
    4401:	89 da                	mov    %ebx,%edx
    4403:	89 10                	mov    %edx,(%rax)
    4405:	48 8b 05 7c af 60 00 	mov    0x60af7c(%rip),%rax        # 60f388 <f_boot>
    440c:	48 83 c0 04          	add    $0x4,%rax
    4410:	89 c2                	mov    %eax,%edx
    4412:	48 8b 05 6f af 60 00 	mov    0x60af6f(%rip),%rax        # 60f388 <f_boot>
    4419:	29 c2                	sub    %eax,%edx
    441b:	89 d0                	mov    %edx,%eax
    441d:	48 63 d0             	movslq %eax,%rdx
    4420:	48 8d 05 b9 ac 20 00 	lea    0x20acb9(%rip),%rax        # 20f0e0 <mem>
    4427:	48 01 d0             	add    %rdx,%rax
    442a:	8b 10                	mov    (%rax),%edx
    442c:	48 8b 05 55 af 60 00 	mov    0x60af55(%rip),%rax        # 60f388 <f_boot>
    4433:	48 83 c0 04          	add    $0x4,%rax
    4437:	89 c1                	mov    %eax,%ecx
    4439:	48 8b 05 48 af 60 00 	mov    0x60af48(%rip),%rax        # 60f388 <f_boot>
    4440:	29 c1                	sub    %eax,%ecx
    4442:	89 c8                	mov    %ecx,%eax
    4444:	48 63 c8             	movslq %eax,%rcx
    4447:	48 8d 05 92 ac 20 00 	lea    0x20ac92(%rip),%rax        # 20f0e0 <mem>
    444e:	48 01 c8             	add    %rcx,%rax
    4451:	83 c2 04             	add    $0x4,%edx
    4454:	89 10                	mov    %edx,(%rax)
    4456:	e9 ee 5f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_div:	/* / */   if(CELL(sp))
    445b:	48 8b 05 26 af 60 00 	mov    0x60af26(%rip),%rax        # 60f388 <f_boot>
    4462:	48 83 c0 04          	add    $0x4,%rax
    4466:	89 c2                	mov    %eax,%edx
    4468:	48 8b 05 19 af 60 00 	mov    0x60af19(%rip),%rax        # 60f388 <f_boot>
    446f:	29 c2                	sub    %eax,%edx
    4471:	89 d0                	mov    %edx,%eax
    4473:	48 63 d0             	movslq %eax,%rdx
    4476:	48 8d 05 63 ac 20 00 	lea    0x20ac63(%rip),%rax        # 20f0e0 <mem>
    447d:	48 01 d0             	add    %rdx,%rax
    4480:	8b 00                	mov    (%rax),%eax
    4482:	89 c7                	mov    %eax,%edi
    4484:	e8 e4 c9 ff ff       	callq  e6d <v2r>
    4489:	8b 00                	mov    (%rax),%eax
    448b:	85 c0                	test   %eax,%eax
    448d:	0f 84 f9 00 00 00    	je     458c <virtual_machine+0x11b4>
     	 	 	 { CELL(sp+4)=(INT32)CELL(sp+4)/(INT32)CELL(sp);sp+=4;break;
    4493:	48 8b 05 ee ae 60 00 	mov    0x60aeee(%rip),%rax        # 60f388 <f_boot>
    449a:	48 83 c0 04          	add    $0x4,%rax
    449e:	89 c2                	mov    %eax,%edx
    44a0:	48 8b 05 e1 ae 60 00 	mov    0x60aee1(%rip),%rax        # 60f388 <f_boot>
    44a7:	29 c2                	sub    %eax,%edx
    44a9:	89 d0                	mov    %edx,%eax
    44ab:	48 63 d0             	movslq %eax,%rdx
    44ae:	48 8d 05 2b ac 20 00 	lea    0x20ac2b(%rip),%rax        # 20f0e0 <mem>
    44b5:	48 01 d0             	add    %rdx,%rax
    44b8:	8b 00                	mov    (%rax),%eax
    44ba:	83 c0 04             	add    $0x4,%eax
    44bd:	89 c7                	mov    %eax,%edi
    44bf:	e8 a9 c9 ff ff       	callq  e6d <v2r>
    44c4:	8b 00                	mov    (%rax),%eax
    44c6:	89 c3                	mov    %eax,%ebx
    44c8:	48 8b 05 b9 ae 60 00 	mov    0x60aeb9(%rip),%rax        # 60f388 <f_boot>
    44cf:	48 83 c0 04          	add    $0x4,%rax
    44d3:	89 c2                	mov    %eax,%edx
    44d5:	48 8b 05 ac ae 60 00 	mov    0x60aeac(%rip),%rax        # 60f388 <f_boot>
    44dc:	29 c2                	sub    %eax,%edx
    44de:	89 d0                	mov    %edx,%eax
    44e0:	48 63 d0             	movslq %eax,%rdx
    44e3:	48 8d 05 f6 ab 20 00 	lea    0x20abf6(%rip),%rax        # 20f0e0 <mem>
    44ea:	48 01 d0             	add    %rdx,%rax
    44ed:	8b 00                	mov    (%rax),%eax
    44ef:	89 c7                	mov    %eax,%edi
    44f1:	e8 77 c9 ff ff       	callq  e6d <v2r>
    44f6:	8b 00                	mov    (%rax),%eax
    44f8:	89 c6                	mov    %eax,%esi
    44fa:	89 d8                	mov    %ebx,%eax
    44fc:	99                   	cltd   
    44fd:	f7 fe                	idiv   %esi
    44ff:	89 c3                	mov    %eax,%ebx
    4501:	48 8b 05 80 ae 60 00 	mov    0x60ae80(%rip),%rax        # 60f388 <f_boot>
    4508:	48 83 c0 04          	add    $0x4,%rax
    450c:	89 c2                	mov    %eax,%edx
    450e:	48 8b 05 73 ae 60 00 	mov    0x60ae73(%rip),%rax        # 60f388 <f_boot>
    4515:	29 c2                	sub    %eax,%edx
    4517:	89 d0                	mov    %edx,%eax
    4519:	48 63 d0             	movslq %eax,%rdx
    451c:	48 8d 05 bd ab 20 00 	lea    0x20abbd(%rip),%rax        # 20f0e0 <mem>
    4523:	48 01 d0             	add    %rdx,%rax
    4526:	8b 00                	mov    (%rax),%eax
    4528:	83 c0 04             	add    $0x4,%eax
    452b:	89 c7                	mov    %eax,%edi
    452d:	e8 3b c9 ff ff       	callq  e6d <v2r>
    4532:	89 da                	mov    %ebx,%edx
    4534:	89 10                	mov    %edx,(%rax)
    4536:	48 8b 05 4b ae 60 00 	mov    0x60ae4b(%rip),%rax        # 60f388 <f_boot>
    453d:	48 83 c0 04          	add    $0x4,%rax
    4541:	89 c2                	mov    %eax,%edx
    4543:	48 8b 05 3e ae 60 00 	mov    0x60ae3e(%rip),%rax        # 60f388 <f_boot>
    454a:	29 c2                	sub    %eax,%edx
    454c:	89 d0                	mov    %edx,%eax
    454e:	48 63 d0             	movslq %eax,%rdx
    4551:	48 8d 05 88 ab 20 00 	lea    0x20ab88(%rip),%rax        # 20f0e0 <mem>
    4558:	48 01 d0             	add    %rdx,%rax
    455b:	8b 10                	mov    (%rax),%edx
    455d:	48 8b 05 24 ae 60 00 	mov    0x60ae24(%rip),%rax        # 60f388 <f_boot>
    4564:	48 83 c0 04          	add    $0x4,%rax
    4568:	89 c1                	mov    %eax,%ecx
    456a:	48 8b 05 17 ae 60 00 	mov    0x60ae17(%rip),%rax        # 60f388 <f_boot>
    4571:	29 c1                	sub    %eax,%ecx
    4573:	89 c8                	mov    %ecx,%eax
    4575:	48 63 c8             	movslq %eax,%rcx
    4578:	48 8d 05 61 ab 20 00 	lea    0x20ab61(%rip),%rax        # 20f0e0 <mem>
    457f:	48 01 c8             	add    %rcx,%rax
    4582:	83 c2 04             	add    $0x4,%edx
    4585:	89 10                	mov    %edx,(%rax)
    4587:	e9 bd 5e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     	 	 	 } CELL(sp+4)=(__u32)-1; sp+=4;break;
    458c:	48 8b 05 f5 ad 60 00 	mov    0x60adf5(%rip),%rax        # 60f388 <f_boot>
    4593:	48 83 c0 04          	add    $0x4,%rax
    4597:	89 c2                	mov    %eax,%edx
    4599:	48 8b 05 e8 ad 60 00 	mov    0x60ade8(%rip),%rax        # 60f388 <f_boot>
    45a0:	29 c2                	sub    %eax,%edx
    45a2:	89 d0                	mov    %edx,%eax
    45a4:	48 63 d0             	movslq %eax,%rdx
    45a7:	48 8d 05 32 ab 20 00 	lea    0x20ab32(%rip),%rax        # 20f0e0 <mem>
    45ae:	48 01 d0             	add    %rdx,%rax
    45b1:	8b 00                	mov    (%rax),%eax
    45b3:	83 c0 04             	add    $0x4,%eax
    45b6:	89 c7                	mov    %eax,%edi
    45b8:	e8 b0 c8 ff ff       	callq  e6d <v2r>
    45bd:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
    45c3:	48 8b 05 be ad 60 00 	mov    0x60adbe(%rip),%rax        # 60f388 <f_boot>
    45ca:	48 83 c0 04          	add    $0x4,%rax
    45ce:	89 c2                	mov    %eax,%edx
    45d0:	48 8b 05 b1 ad 60 00 	mov    0x60adb1(%rip),%rax        # 60f388 <f_boot>
    45d7:	29 c2                	sub    %eax,%edx
    45d9:	89 d0                	mov    %edx,%eax
    45db:	48 63 d0             	movslq %eax,%rdx
    45de:	48 8d 05 fb aa 20 00 	lea    0x20aafb(%rip),%rax        # 20f0e0 <mem>
    45e5:	48 01 d0             	add    %rdx,%rax
    45e8:	8b 10                	mov    (%rax),%edx
    45ea:	48 8b 05 97 ad 60 00 	mov    0x60ad97(%rip),%rax        # 60f388 <f_boot>
    45f1:	48 83 c0 04          	add    $0x4,%rax
    45f5:	89 c1                	mov    %eax,%ecx
    45f7:	48 8b 05 8a ad 60 00 	mov    0x60ad8a(%rip),%rax        # 60f388 <f_boot>
    45fe:	29 c1                	sub    %eax,%ecx
    4600:	89 c8                	mov    %ecx,%eax
    4602:	48 63 c8             	movslq %eax,%rcx
    4605:	48 8d 05 d4 aa 20 00 	lea    0x20aad4(%rip),%rax        # 20f0e0 <mem>
    460c:	48 01 c8             	add    %rcx,%rax
    460f:	83 c2 04             	add    $0x4,%edx
    4612:	89 10                	mov    %edx,(%rax)
    4614:	e9 30 5e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_mod:	/* mod */ if(CELL(sp))
    4619:	48 8b 05 68 ad 60 00 	mov    0x60ad68(%rip),%rax        # 60f388 <f_boot>
    4620:	48 83 c0 04          	add    $0x4,%rax
    4624:	89 c2                	mov    %eax,%edx
    4626:	48 8b 05 5b ad 60 00 	mov    0x60ad5b(%rip),%rax        # 60f388 <f_boot>
    462d:	29 c2                	sub    %eax,%edx
    462f:	89 d0                	mov    %edx,%eax
    4631:	48 63 d0             	movslq %eax,%rdx
    4634:	48 8d 05 a5 aa 20 00 	lea    0x20aaa5(%rip),%rax        # 20f0e0 <mem>
    463b:	48 01 d0             	add    %rdx,%rax
    463e:	8b 00                	mov    (%rax),%eax
    4640:	89 c7                	mov    %eax,%edi
    4642:	e8 26 c8 ff ff       	callq  e6d <v2r>
    4647:	8b 00                	mov    (%rax),%eax
    4649:	85 c0                	test   %eax,%eax
    464b:	0f 84 f9 00 00 00    	je     474a <virtual_machine+0x1372>
	 	 { CELL(sp+4)=(INT32)CELL(sp+4)%(INT32)CELL(sp);sp+=4;break;
    4651:	48 8b 05 30 ad 60 00 	mov    0x60ad30(%rip),%rax        # 60f388 <f_boot>
    4658:	48 83 c0 04          	add    $0x4,%rax
    465c:	89 c2                	mov    %eax,%edx
    465e:	48 8b 05 23 ad 60 00 	mov    0x60ad23(%rip),%rax        # 60f388 <f_boot>
    4665:	29 c2                	sub    %eax,%edx
    4667:	89 d0                	mov    %edx,%eax
    4669:	48 63 d0             	movslq %eax,%rdx
    466c:	48 8d 05 6d aa 20 00 	lea    0x20aa6d(%rip),%rax        # 20f0e0 <mem>
    4673:	48 01 d0             	add    %rdx,%rax
    4676:	8b 00                	mov    (%rax),%eax
    4678:	83 c0 04             	add    $0x4,%eax
    467b:	89 c7                	mov    %eax,%edi
    467d:	e8 eb c7 ff ff       	callq  e6d <v2r>
    4682:	8b 00                	mov    (%rax),%eax
    4684:	89 c3                	mov    %eax,%ebx
    4686:	48 8b 05 fb ac 60 00 	mov    0x60acfb(%rip),%rax        # 60f388 <f_boot>
    468d:	48 83 c0 04          	add    $0x4,%rax
    4691:	89 c2                	mov    %eax,%edx
    4693:	48 8b 05 ee ac 60 00 	mov    0x60acee(%rip),%rax        # 60f388 <f_boot>
    469a:	29 c2                	sub    %eax,%edx
    469c:	89 d0                	mov    %edx,%eax
    469e:	48 63 d0             	movslq %eax,%rdx
    46a1:	48 8d 05 38 aa 20 00 	lea    0x20aa38(%rip),%rax        # 20f0e0 <mem>
    46a8:	48 01 d0             	add    %rdx,%rax
    46ab:	8b 00                	mov    (%rax),%eax
    46ad:	89 c7                	mov    %eax,%edi
    46af:	e8 b9 c7 ff ff       	callq  e6d <v2r>
    46b4:	8b 00                	mov    (%rax),%eax
    46b6:	89 c1                	mov    %eax,%ecx
    46b8:	89 d8                	mov    %ebx,%eax
    46ba:	99                   	cltd   
    46bb:	f7 f9                	idiv   %ecx
    46bd:	89 d3                	mov    %edx,%ebx
    46bf:	48 8b 05 c2 ac 60 00 	mov    0x60acc2(%rip),%rax        # 60f388 <f_boot>
    46c6:	48 83 c0 04          	add    $0x4,%rax
    46ca:	89 c2                	mov    %eax,%edx
    46cc:	48 8b 05 b5 ac 60 00 	mov    0x60acb5(%rip),%rax        # 60f388 <f_boot>
    46d3:	29 c2                	sub    %eax,%edx
    46d5:	89 d0                	mov    %edx,%eax
    46d7:	48 63 d0             	movslq %eax,%rdx
    46da:	48 8d 05 ff a9 20 00 	lea    0x20a9ff(%rip),%rax        # 20f0e0 <mem>
    46e1:	48 01 d0             	add    %rdx,%rax
    46e4:	8b 00                	mov    (%rax),%eax
    46e6:	83 c0 04             	add    $0x4,%eax
    46e9:	89 c7                	mov    %eax,%edi
    46eb:	e8 7d c7 ff ff       	callq  e6d <v2r>
    46f0:	89 da                	mov    %ebx,%edx
    46f2:	89 10                	mov    %edx,(%rax)
    46f4:	48 8b 05 8d ac 60 00 	mov    0x60ac8d(%rip),%rax        # 60f388 <f_boot>
    46fb:	48 83 c0 04          	add    $0x4,%rax
    46ff:	89 c2                	mov    %eax,%edx
    4701:	48 8b 05 80 ac 60 00 	mov    0x60ac80(%rip),%rax        # 60f388 <f_boot>
    4708:	29 c2                	sub    %eax,%edx
    470a:	89 d0                	mov    %edx,%eax
    470c:	48 63 d0             	movslq %eax,%rdx
    470f:	48 8d 05 ca a9 20 00 	lea    0x20a9ca(%rip),%rax        # 20f0e0 <mem>
    4716:	48 01 d0             	add    %rdx,%rax
    4719:	8b 10                	mov    (%rax),%edx
    471b:	48 8b 05 66 ac 60 00 	mov    0x60ac66(%rip),%rax        # 60f388 <f_boot>
    4722:	48 83 c0 04          	add    $0x4,%rax
    4726:	89 c1                	mov    %eax,%ecx
    4728:	48 8b 05 59 ac 60 00 	mov    0x60ac59(%rip),%rax        # 60f388 <f_boot>
    472f:	29 c1                	sub    %eax,%ecx
    4731:	89 c8                	mov    %ecx,%eax
    4733:	48 63 c8             	movslq %eax,%rcx
    4736:	48 8d 05 a3 a9 20 00 	lea    0x20a9a3(%rip),%rax        # 20f0e0 <mem>
    473d:	48 01 c8             	add    %rcx,%rax
    4740:	83 c2 04             	add    $0x4,%edx
    4743:	89 10                	mov    %edx,(%rax)
    4745:	e9 ff 5c 00 00       	jmpq   a449 <virtual_machine+0x7071>
	 	 } CELL(sp+4)=0; sp+=4;break;
    474a:	48 8b 05 37 ac 60 00 	mov    0x60ac37(%rip),%rax        # 60f388 <f_boot>
    4751:	48 83 c0 04          	add    $0x4,%rax
    4755:	89 c2                	mov    %eax,%edx
    4757:	48 8b 05 2a ac 60 00 	mov    0x60ac2a(%rip),%rax        # 60f388 <f_boot>
    475e:	29 c2                	sub    %eax,%edx
    4760:	89 d0                	mov    %edx,%eax
    4762:	48 63 d0             	movslq %eax,%rdx
    4765:	48 8d 05 74 a9 20 00 	lea    0x20a974(%rip),%rax        # 20f0e0 <mem>
    476c:	48 01 d0             	add    %rdx,%rax
    476f:	8b 00                	mov    (%rax),%eax
    4771:	83 c0 04             	add    $0x4,%eax
    4774:	89 c7                	mov    %eax,%edi
    4776:	e8 f2 c6 ff ff       	callq  e6d <v2r>
    477b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    4781:	48 8b 05 00 ac 60 00 	mov    0x60ac00(%rip),%rax        # 60f388 <f_boot>
    4788:	48 83 c0 04          	add    $0x4,%rax
    478c:	89 c2                	mov    %eax,%edx
    478e:	48 8b 05 f3 ab 60 00 	mov    0x60abf3(%rip),%rax        # 60f388 <f_boot>
    4795:	29 c2                	sub    %eax,%edx
    4797:	89 d0                	mov    %edx,%eax
    4799:	48 63 d0             	movslq %eax,%rdx
    479c:	48 8d 05 3d a9 20 00 	lea    0x20a93d(%rip),%rax        # 20f0e0 <mem>
    47a3:	48 01 d0             	add    %rdx,%rax
    47a6:	8b 10                	mov    (%rax),%edx
    47a8:	48 8b 05 d9 ab 60 00 	mov    0x60abd9(%rip),%rax        # 60f388 <f_boot>
    47af:	48 83 c0 04          	add    $0x4,%rax
    47b3:	89 c1                	mov    %eax,%ecx
    47b5:	48 8b 05 cc ab 60 00 	mov    0x60abcc(%rip),%rax        # 60f388 <f_boot>
    47bc:	29 c1                	sub    %eax,%ecx
    47be:	89 c8                	mov    %ecx,%eax
    47c0:	48 63 c8             	movslq %eax,%rcx
    47c3:	48 8d 05 16 a9 20 00 	lea    0x20a916(%rip),%rax        # 20f0e0 <mem>
    47ca:	48 01 c8             	add    %rcx,%rax
    47cd:	83 c2 04             	add    $0x4,%edx
    47d0:	89 10                	mov    %edx,(%rax)
    47d2:	e9 72 5c 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_celldiv:	/* cell/ */ CELL(sp)>>=2;break;
    47d7:	48 8b 05 aa ab 60 00 	mov    0x60abaa(%rip),%rax        # 60f388 <f_boot>
    47de:	48 83 c0 04          	add    $0x4,%rax
    47e2:	89 c2                	mov    %eax,%edx
    47e4:	48 8b 05 9d ab 60 00 	mov    0x60ab9d(%rip),%rax        # 60f388 <f_boot>
    47eb:	29 c2                	sub    %eax,%edx
    47ed:	89 d0                	mov    %edx,%eax
    47ef:	48 63 d0             	movslq %eax,%rdx
    47f2:	48 8d 05 e7 a8 20 00 	lea    0x20a8e7(%rip),%rax        # 20f0e0 <mem>
    47f9:	48 01 d0             	add    %rdx,%rax
    47fc:	8b 00                	mov    (%rax),%eax
    47fe:	89 c7                	mov    %eax,%edi
    4800:	e8 68 c6 ff ff       	callq  e6d <v2r>
    4805:	8b 10                	mov    (%rax),%edx
    4807:	c1 ea 02             	shr    $0x2,%edx
    480a:	89 10                	mov    %edx,(%rax)
    480c:	e9 38 5c 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cells:	/* cells */ CELL(sp)<<=2;break;
    4811:	48 8b 05 70 ab 60 00 	mov    0x60ab70(%rip),%rax        # 60f388 <f_boot>
    4818:	48 83 c0 04          	add    $0x4,%rax
    481c:	89 c2                	mov    %eax,%edx
    481e:	48 8b 05 63 ab 60 00 	mov    0x60ab63(%rip),%rax        # 60f388 <f_boot>
    4825:	29 c2                	sub    %eax,%edx
    4827:	89 d0                	mov    %edx,%eax
    4829:	48 63 d0             	movslq %eax,%rdx
    482c:	48 8d 05 ad a8 20 00 	lea    0x20a8ad(%rip),%rax        # 20f0e0 <mem>
    4833:	48 01 d0             	add    %rdx,%rax
    4836:	8b 00                	mov    (%rax),%eax
    4838:	89 c7                	mov    %eax,%edi
    483a:	e8 2e c6 ff ff       	callq  e6d <v2r>
    483f:	8b 10                	mov    (%rax),%edx
    4841:	c1 e2 02             	shl    $0x2,%edx
    4844:	89 10                	mov    %edx,(%rax)
    4846:	e9 fe 5b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cellp:	/* cells */ CELL(sp)+=4;break;
    484b:	48 8b 05 36 ab 60 00 	mov    0x60ab36(%rip),%rax        # 60f388 <f_boot>
    4852:	48 83 c0 04          	add    $0x4,%rax
    4856:	89 c2                	mov    %eax,%edx
    4858:	48 8b 05 29 ab 60 00 	mov    0x60ab29(%rip),%rax        # 60f388 <f_boot>
    485f:	29 c2                	sub    %eax,%edx
    4861:	89 d0                	mov    %edx,%eax
    4863:	48 63 d0             	movslq %eax,%rdx
    4866:	48 8d 05 73 a8 20 00 	lea    0x20a873(%rip),%rax        # 20f0e0 <mem>
    486d:	48 01 d0             	add    %rdx,%rax
    4870:	8b 00                	mov    (%rax),%eax
    4872:	89 c7                	mov    %eax,%edi
    4874:	e8 f4 c5 ff ff       	callq  e6d <v2r>
    4879:	8b 10                	mov    (%rax),%edx
    487b:	83 c2 04             	add    $0x4,%edx
    487e:	89 10                	mov    %edx,(%rax)
    4880:	e9 c4 5b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cellm:	/* cells */ CELL(sp)-=4;break;
    4885:	48 8b 05 fc aa 60 00 	mov    0x60aafc(%rip),%rax        # 60f388 <f_boot>
    488c:	48 83 c0 04          	add    $0x4,%rax
    4890:	89 c2                	mov    %eax,%edx
    4892:	48 8b 05 ef aa 60 00 	mov    0x60aaef(%rip),%rax        # 60f388 <f_boot>
    4899:	29 c2                	sub    %eax,%edx
    489b:	89 d0                	mov    %edx,%eax
    489d:	48 63 d0             	movslq %eax,%rdx
    48a0:	48 8d 05 39 a8 20 00 	lea    0x20a839(%rip),%rax        # 20f0e0 <mem>
    48a7:	48 01 d0             	add    %rdx,%rax
    48aa:	8b 00                	mov    (%rax),%eax
    48ac:	89 c7                	mov    %eax,%edi
    48ae:	e8 ba c5 ff ff       	callq  e6d <v2r>
    48b3:	8b 10                	mov    (%rax),%edx
    48b5:	83 ea 04             	sub    $0x4,%edx
    48b8:	89 10                	mov    %edx,(%rax)
    48ba:	e9 8a 5b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_and:	/* and */ CELL(sp+4)=CELL(sp)&CELL(sp+4);sp+=4;break;
    48bf:	48 8b 05 c2 aa 60 00 	mov    0x60aac2(%rip),%rax        # 60f388 <f_boot>
    48c6:	48 83 c0 04          	add    $0x4,%rax
    48ca:	89 c2                	mov    %eax,%edx
    48cc:	48 8b 05 b5 aa 60 00 	mov    0x60aab5(%rip),%rax        # 60f388 <f_boot>
    48d3:	29 c2                	sub    %eax,%edx
    48d5:	89 d0                	mov    %edx,%eax
    48d7:	48 63 d0             	movslq %eax,%rdx
    48da:	48 8d 05 ff a7 20 00 	lea    0x20a7ff(%rip),%rax        # 20f0e0 <mem>
    48e1:	48 01 d0             	add    %rdx,%rax
    48e4:	8b 00                	mov    (%rax),%eax
    48e6:	89 c7                	mov    %eax,%edi
    48e8:	e8 80 c5 ff ff       	callq  e6d <v2r>
    48ed:	44 8b 20             	mov    (%rax),%r12d
    48f0:	48 8b 05 91 aa 60 00 	mov    0x60aa91(%rip),%rax        # 60f388 <f_boot>
    48f7:	48 83 c0 04          	add    $0x4,%rax
    48fb:	89 c2                	mov    %eax,%edx
    48fd:	48 8b 05 84 aa 60 00 	mov    0x60aa84(%rip),%rax        # 60f388 <f_boot>
    4904:	29 c2                	sub    %eax,%edx
    4906:	89 d0                	mov    %edx,%eax
    4908:	48 63 d0             	movslq %eax,%rdx
    490b:	48 8d 05 ce a7 20 00 	lea    0x20a7ce(%rip),%rax        # 20f0e0 <mem>
    4912:	48 01 d0             	add    %rdx,%rax
    4915:	8b 00                	mov    (%rax),%eax
    4917:	83 c0 04             	add    $0x4,%eax
    491a:	89 c7                	mov    %eax,%edi
    491c:	e8 4c c5 ff ff       	callq  e6d <v2r>
    4921:	8b 18                	mov    (%rax),%ebx
    4923:	48 8b 05 5e aa 60 00 	mov    0x60aa5e(%rip),%rax        # 60f388 <f_boot>
    492a:	48 83 c0 04          	add    $0x4,%rax
    492e:	89 c2                	mov    %eax,%edx
    4930:	48 8b 05 51 aa 60 00 	mov    0x60aa51(%rip),%rax        # 60f388 <f_boot>
    4937:	29 c2                	sub    %eax,%edx
    4939:	89 d0                	mov    %edx,%eax
    493b:	48 63 d0             	movslq %eax,%rdx
    493e:	48 8d 05 9b a7 20 00 	lea    0x20a79b(%rip),%rax        # 20f0e0 <mem>
    4945:	48 01 d0             	add    %rdx,%rax
    4948:	8b 00                	mov    (%rax),%eax
    494a:	83 c0 04             	add    $0x4,%eax
    494d:	89 c7                	mov    %eax,%edi
    494f:	e8 19 c5 ff ff       	callq  e6d <v2r>
    4954:	48 89 c2             	mov    %rax,%rdx
    4957:	44 89 e0             	mov    %r12d,%eax
    495a:	21 d8                	and    %ebx,%eax
    495c:	89 02                	mov    %eax,(%rdx)
    495e:	48 8b 05 23 aa 60 00 	mov    0x60aa23(%rip),%rax        # 60f388 <f_boot>
    4965:	48 83 c0 04          	add    $0x4,%rax
    4969:	89 c2                	mov    %eax,%edx
    496b:	48 8b 05 16 aa 60 00 	mov    0x60aa16(%rip),%rax        # 60f388 <f_boot>
    4972:	29 c2                	sub    %eax,%edx
    4974:	89 d0                	mov    %edx,%eax
    4976:	48 63 d0             	movslq %eax,%rdx
    4979:	48 8d 05 60 a7 20 00 	lea    0x20a760(%rip),%rax        # 20f0e0 <mem>
    4980:	48 01 d0             	add    %rdx,%rax
    4983:	8b 10                	mov    (%rax),%edx
    4985:	48 8b 05 fc a9 60 00 	mov    0x60a9fc(%rip),%rax        # 60f388 <f_boot>
    498c:	48 83 c0 04          	add    $0x4,%rax
    4990:	89 c1                	mov    %eax,%ecx
    4992:	48 8b 05 ef a9 60 00 	mov    0x60a9ef(%rip),%rax        # 60f388 <f_boot>
    4999:	29 c1                	sub    %eax,%ecx
    499b:	89 c8                	mov    %ecx,%eax
    499d:	48 63 c8             	movslq %eax,%rcx
    49a0:	48 8d 05 39 a7 20 00 	lea    0x20a739(%rip),%rax        # 20f0e0 <mem>
    49a7:	48 01 c8             	add    %rcx,%rax
    49aa:	83 c2 04             	add    $0x4,%edx
    49ad:	89 10                	mov    %edx,(%rax)
    49af:	e9 95 5a 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_or:	/* or  */ CELL(sp+4)=CELL(sp)|CELL(sp+4);sp+=4;break;
    49b4:	48 8b 05 cd a9 60 00 	mov    0x60a9cd(%rip),%rax        # 60f388 <f_boot>
    49bb:	48 83 c0 04          	add    $0x4,%rax
    49bf:	89 c2                	mov    %eax,%edx
    49c1:	48 8b 05 c0 a9 60 00 	mov    0x60a9c0(%rip),%rax        # 60f388 <f_boot>
    49c8:	29 c2                	sub    %eax,%edx
    49ca:	89 d0                	mov    %edx,%eax
    49cc:	48 63 d0             	movslq %eax,%rdx
    49cf:	48 8d 05 0a a7 20 00 	lea    0x20a70a(%rip),%rax        # 20f0e0 <mem>
    49d6:	48 01 d0             	add    %rdx,%rax
    49d9:	8b 00                	mov    (%rax),%eax
    49db:	89 c7                	mov    %eax,%edi
    49dd:	e8 8b c4 ff ff       	callq  e6d <v2r>
    49e2:	44 8b 20             	mov    (%rax),%r12d
    49e5:	48 8b 05 9c a9 60 00 	mov    0x60a99c(%rip),%rax        # 60f388 <f_boot>
    49ec:	48 83 c0 04          	add    $0x4,%rax
    49f0:	89 c2                	mov    %eax,%edx
    49f2:	48 8b 05 8f a9 60 00 	mov    0x60a98f(%rip),%rax        # 60f388 <f_boot>
    49f9:	29 c2                	sub    %eax,%edx
    49fb:	89 d0                	mov    %edx,%eax
    49fd:	48 63 d0             	movslq %eax,%rdx
    4a00:	48 8d 05 d9 a6 20 00 	lea    0x20a6d9(%rip),%rax        # 20f0e0 <mem>
    4a07:	48 01 d0             	add    %rdx,%rax
    4a0a:	8b 00                	mov    (%rax),%eax
    4a0c:	83 c0 04             	add    $0x4,%eax
    4a0f:	89 c7                	mov    %eax,%edi
    4a11:	e8 57 c4 ff ff       	callq  e6d <v2r>
    4a16:	8b 18                	mov    (%rax),%ebx
    4a18:	48 8b 05 69 a9 60 00 	mov    0x60a969(%rip),%rax        # 60f388 <f_boot>
    4a1f:	48 83 c0 04          	add    $0x4,%rax
    4a23:	89 c2                	mov    %eax,%edx
    4a25:	48 8b 05 5c a9 60 00 	mov    0x60a95c(%rip),%rax        # 60f388 <f_boot>
    4a2c:	29 c2                	sub    %eax,%edx
    4a2e:	89 d0                	mov    %edx,%eax
    4a30:	48 63 d0             	movslq %eax,%rdx
    4a33:	48 8d 05 a6 a6 20 00 	lea    0x20a6a6(%rip),%rax        # 20f0e0 <mem>
    4a3a:	48 01 d0             	add    %rdx,%rax
    4a3d:	8b 00                	mov    (%rax),%eax
    4a3f:	83 c0 04             	add    $0x4,%eax
    4a42:	89 c7                	mov    %eax,%edi
    4a44:	e8 24 c4 ff ff       	callq  e6d <v2r>
    4a49:	48 89 c2             	mov    %rax,%rdx
    4a4c:	44 89 e0             	mov    %r12d,%eax
    4a4f:	09 d8                	or     %ebx,%eax
    4a51:	89 02                	mov    %eax,(%rdx)
    4a53:	48 8b 05 2e a9 60 00 	mov    0x60a92e(%rip),%rax        # 60f388 <f_boot>
    4a5a:	48 83 c0 04          	add    $0x4,%rax
    4a5e:	89 c2                	mov    %eax,%edx
    4a60:	48 8b 05 21 a9 60 00 	mov    0x60a921(%rip),%rax        # 60f388 <f_boot>
    4a67:	29 c2                	sub    %eax,%edx
    4a69:	89 d0                	mov    %edx,%eax
    4a6b:	48 63 d0             	movslq %eax,%rdx
    4a6e:	48 8d 05 6b a6 20 00 	lea    0x20a66b(%rip),%rax        # 20f0e0 <mem>
    4a75:	48 01 d0             	add    %rdx,%rax
    4a78:	8b 10                	mov    (%rax),%edx
    4a7a:	48 8b 05 07 a9 60 00 	mov    0x60a907(%rip),%rax        # 60f388 <f_boot>
    4a81:	48 83 c0 04          	add    $0x4,%rax
    4a85:	89 c1                	mov    %eax,%ecx
    4a87:	48 8b 05 fa a8 60 00 	mov    0x60a8fa(%rip),%rax        # 60f388 <f_boot>
    4a8e:	29 c1                	sub    %eax,%ecx
    4a90:	89 c8                	mov    %ecx,%eax
    4a92:	48 63 c8             	movslq %eax,%rcx
    4a95:	48 8d 05 44 a6 20 00 	lea    0x20a644(%rip),%rax        # 20f0e0 <mem>
    4a9c:	48 01 c8             	add    %rcx,%rax
    4a9f:	83 c2 04             	add    $0x4,%edx
    4aa2:	89 10                	mov    %edx,(%rax)
    4aa4:	e9 a0 59 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_xor:	/* xor */ CELL(sp+4)=CELL(sp)^CELL(sp+4);sp+=4;break;
    4aa9:	48 8b 05 d8 a8 60 00 	mov    0x60a8d8(%rip),%rax        # 60f388 <f_boot>
    4ab0:	48 83 c0 04          	add    $0x4,%rax
    4ab4:	89 c2                	mov    %eax,%edx
    4ab6:	48 8b 05 cb a8 60 00 	mov    0x60a8cb(%rip),%rax        # 60f388 <f_boot>
    4abd:	29 c2                	sub    %eax,%edx
    4abf:	89 d0                	mov    %edx,%eax
    4ac1:	48 63 d0             	movslq %eax,%rdx
    4ac4:	48 8d 05 15 a6 20 00 	lea    0x20a615(%rip),%rax        # 20f0e0 <mem>
    4acb:	48 01 d0             	add    %rdx,%rax
    4ace:	8b 00                	mov    (%rax),%eax
    4ad0:	89 c7                	mov    %eax,%edi
    4ad2:	e8 96 c3 ff ff       	callq  e6d <v2r>
    4ad7:	44 8b 20             	mov    (%rax),%r12d
    4ada:	48 8b 05 a7 a8 60 00 	mov    0x60a8a7(%rip),%rax        # 60f388 <f_boot>
    4ae1:	48 83 c0 04          	add    $0x4,%rax
    4ae5:	89 c2                	mov    %eax,%edx
    4ae7:	48 8b 05 9a a8 60 00 	mov    0x60a89a(%rip),%rax        # 60f388 <f_boot>
    4aee:	29 c2                	sub    %eax,%edx
    4af0:	89 d0                	mov    %edx,%eax
    4af2:	48 63 d0             	movslq %eax,%rdx
    4af5:	48 8d 05 e4 a5 20 00 	lea    0x20a5e4(%rip),%rax        # 20f0e0 <mem>
    4afc:	48 01 d0             	add    %rdx,%rax
    4aff:	8b 00                	mov    (%rax),%eax
    4b01:	83 c0 04             	add    $0x4,%eax
    4b04:	89 c7                	mov    %eax,%edi
    4b06:	e8 62 c3 ff ff       	callq  e6d <v2r>
    4b0b:	8b 18                	mov    (%rax),%ebx
    4b0d:	48 8b 05 74 a8 60 00 	mov    0x60a874(%rip),%rax        # 60f388 <f_boot>
    4b14:	48 83 c0 04          	add    $0x4,%rax
    4b18:	89 c2                	mov    %eax,%edx
    4b1a:	48 8b 05 67 a8 60 00 	mov    0x60a867(%rip),%rax        # 60f388 <f_boot>
    4b21:	29 c2                	sub    %eax,%edx
    4b23:	89 d0                	mov    %edx,%eax
    4b25:	48 63 d0             	movslq %eax,%rdx
    4b28:	48 8d 05 b1 a5 20 00 	lea    0x20a5b1(%rip),%rax        # 20f0e0 <mem>
    4b2f:	48 01 d0             	add    %rdx,%rax
    4b32:	8b 00                	mov    (%rax),%eax
    4b34:	83 c0 04             	add    $0x4,%eax
    4b37:	89 c7                	mov    %eax,%edi
    4b39:	e8 2f c3 ff ff       	callq  e6d <v2r>
    4b3e:	48 89 c2             	mov    %rax,%rdx
    4b41:	44 89 e0             	mov    %r12d,%eax
    4b44:	31 d8                	xor    %ebx,%eax
    4b46:	89 02                	mov    %eax,(%rdx)
    4b48:	48 8b 05 39 a8 60 00 	mov    0x60a839(%rip),%rax        # 60f388 <f_boot>
    4b4f:	48 83 c0 04          	add    $0x4,%rax
    4b53:	89 c2                	mov    %eax,%edx
    4b55:	48 8b 05 2c a8 60 00 	mov    0x60a82c(%rip),%rax        # 60f388 <f_boot>
    4b5c:	29 c2                	sub    %eax,%edx
    4b5e:	89 d0                	mov    %edx,%eax
    4b60:	48 63 d0             	movslq %eax,%rdx
    4b63:	48 8d 05 76 a5 20 00 	lea    0x20a576(%rip),%rax        # 20f0e0 <mem>
    4b6a:	48 01 d0             	add    %rdx,%rax
    4b6d:	8b 10                	mov    (%rax),%edx
    4b6f:	48 8b 05 12 a8 60 00 	mov    0x60a812(%rip),%rax        # 60f388 <f_boot>
    4b76:	48 83 c0 04          	add    $0x4,%rax
    4b7a:	89 c1                	mov    %eax,%ecx
    4b7c:	48 8b 05 05 a8 60 00 	mov    0x60a805(%rip),%rax        # 60f388 <f_boot>
    4b83:	29 c1                	sub    %eax,%ecx
    4b85:	89 c8                	mov    %ecx,%eax
    4b87:	48 63 c8             	movslq %eax,%rcx
    4b8a:	48 8d 05 4f a5 20 00 	lea    0x20a54f(%rip),%rax        # 20f0e0 <mem>
    4b91:	48 01 c8             	add    %rcx,%rax
    4b94:	83 c2 04             	add    $0x4,%edx
    4b97:	89 10                	mov    %edx,(%rax)
    4b99:	e9 ab 58 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_uLT:	/* u<  */ CELL(sp+4)=-(CELL(sp+4)<CELL(sp));sp+=4;break;
    4b9e:	48 8b 05 e3 a7 60 00 	mov    0x60a7e3(%rip),%rax        # 60f388 <f_boot>
    4ba5:	48 83 c0 04          	add    $0x4,%rax
    4ba9:	89 c2                	mov    %eax,%edx
    4bab:	48 8b 05 d6 a7 60 00 	mov    0x60a7d6(%rip),%rax        # 60f388 <f_boot>
    4bb2:	29 c2                	sub    %eax,%edx
    4bb4:	89 d0                	mov    %edx,%eax
    4bb6:	48 63 d0             	movslq %eax,%rdx
    4bb9:	48 8d 05 20 a5 20 00 	lea    0x20a520(%rip),%rax        # 20f0e0 <mem>
    4bc0:	48 01 d0             	add    %rdx,%rax
    4bc3:	8b 00                	mov    (%rax),%eax
    4bc5:	83 c0 04             	add    $0x4,%eax
    4bc8:	89 c7                	mov    %eax,%edi
    4bca:	e8 9e c2 ff ff       	callq  e6d <v2r>
    4bcf:	8b 18                	mov    (%rax),%ebx
    4bd1:	48 8b 05 b0 a7 60 00 	mov    0x60a7b0(%rip),%rax        # 60f388 <f_boot>
    4bd8:	48 83 c0 04          	add    $0x4,%rax
    4bdc:	89 c2                	mov    %eax,%edx
    4bde:	48 8b 05 a3 a7 60 00 	mov    0x60a7a3(%rip),%rax        # 60f388 <f_boot>
    4be5:	29 c2                	sub    %eax,%edx
    4be7:	89 d0                	mov    %edx,%eax
    4be9:	48 63 d0             	movslq %eax,%rdx
    4bec:	48 8d 05 ed a4 20 00 	lea    0x20a4ed(%rip),%rax        # 20f0e0 <mem>
    4bf3:	48 01 d0             	add    %rdx,%rax
    4bf6:	8b 00                	mov    (%rax),%eax
    4bf8:	89 c7                	mov    %eax,%edi
    4bfa:	e8 6e c2 ff ff       	callq  e6d <v2r>
    4bff:	8b 00                	mov    (%rax),%eax
    4c01:	39 c3                	cmp    %eax,%ebx
    4c03:	0f 92 c0             	setb   %al
    4c06:	0f b6 c0             	movzbl %al,%eax
    4c09:	f7 d8                	neg    %eax
    4c0b:	89 c3                	mov    %eax,%ebx
    4c0d:	48 8b 05 74 a7 60 00 	mov    0x60a774(%rip),%rax        # 60f388 <f_boot>
    4c14:	48 83 c0 04          	add    $0x4,%rax
    4c18:	89 c2                	mov    %eax,%edx
    4c1a:	48 8b 05 67 a7 60 00 	mov    0x60a767(%rip),%rax        # 60f388 <f_boot>
    4c21:	29 c2                	sub    %eax,%edx
    4c23:	89 d0                	mov    %edx,%eax
    4c25:	48 63 d0             	movslq %eax,%rdx
    4c28:	48 8d 05 b1 a4 20 00 	lea    0x20a4b1(%rip),%rax        # 20f0e0 <mem>
    4c2f:	48 01 d0             	add    %rdx,%rax
    4c32:	8b 00                	mov    (%rax),%eax
    4c34:	83 c0 04             	add    $0x4,%eax
    4c37:	89 c7                	mov    %eax,%edi
    4c39:	e8 2f c2 ff ff       	callq  e6d <v2r>
    4c3e:	89 da                	mov    %ebx,%edx
    4c40:	89 10                	mov    %edx,(%rax)
    4c42:	48 8b 05 3f a7 60 00 	mov    0x60a73f(%rip),%rax        # 60f388 <f_boot>
    4c49:	48 83 c0 04          	add    $0x4,%rax
    4c4d:	89 c2                	mov    %eax,%edx
    4c4f:	48 8b 05 32 a7 60 00 	mov    0x60a732(%rip),%rax        # 60f388 <f_boot>
    4c56:	29 c2                	sub    %eax,%edx
    4c58:	89 d0                	mov    %edx,%eax
    4c5a:	48 63 d0             	movslq %eax,%rdx
    4c5d:	48 8d 05 7c a4 20 00 	lea    0x20a47c(%rip),%rax        # 20f0e0 <mem>
    4c64:	48 01 d0             	add    %rdx,%rax
    4c67:	8b 10                	mov    (%rax),%edx
    4c69:	48 8b 05 18 a7 60 00 	mov    0x60a718(%rip),%rax        # 60f388 <f_boot>
    4c70:	48 83 c0 04          	add    $0x4,%rax
    4c74:	89 c1                	mov    %eax,%ecx
    4c76:	48 8b 05 0b a7 60 00 	mov    0x60a70b(%rip),%rax        # 60f388 <f_boot>
    4c7d:	29 c1                	sub    %eax,%ecx
    4c7f:	89 c8                	mov    %ecx,%eax
    4c81:	48 63 c8             	movslq %eax,%rcx
    4c84:	48 8d 05 55 a4 20 00 	lea    0x20a455(%rip),%rax        # 20f0e0 <mem>
    4c8b:	48 01 c8             	add    %rcx,%rax
    4c8e:	83 c2 04             	add    $0x4,%edx
    4c91:	89 10                	mov    %edx,(%rax)
    4c93:	e9 b1 57 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_LT:	/* <   */ CELL(sp+4)=-((INT32)CELL(sp+4)<(INT32)CELL(sp));sp+=4;break;
    4c98:	48 8b 05 e9 a6 60 00 	mov    0x60a6e9(%rip),%rax        # 60f388 <f_boot>
    4c9f:	48 83 c0 04          	add    $0x4,%rax
    4ca3:	89 c2                	mov    %eax,%edx
    4ca5:	48 8b 05 dc a6 60 00 	mov    0x60a6dc(%rip),%rax        # 60f388 <f_boot>
    4cac:	29 c2                	sub    %eax,%edx
    4cae:	89 d0                	mov    %edx,%eax
    4cb0:	48 63 d0             	movslq %eax,%rdx
    4cb3:	48 8d 05 26 a4 20 00 	lea    0x20a426(%rip),%rax        # 20f0e0 <mem>
    4cba:	48 01 d0             	add    %rdx,%rax
    4cbd:	8b 00                	mov    (%rax),%eax
    4cbf:	83 c0 04             	add    $0x4,%eax
    4cc2:	89 c7                	mov    %eax,%edi
    4cc4:	e8 a4 c1 ff ff       	callq  e6d <v2r>
    4cc9:	8b 00                	mov    (%rax),%eax
    4ccb:	89 c3                	mov    %eax,%ebx
    4ccd:	48 8b 05 b4 a6 60 00 	mov    0x60a6b4(%rip),%rax        # 60f388 <f_boot>
    4cd4:	48 83 c0 04          	add    $0x4,%rax
    4cd8:	89 c2                	mov    %eax,%edx
    4cda:	48 8b 05 a7 a6 60 00 	mov    0x60a6a7(%rip),%rax        # 60f388 <f_boot>
    4ce1:	29 c2                	sub    %eax,%edx
    4ce3:	89 d0                	mov    %edx,%eax
    4ce5:	48 63 d0             	movslq %eax,%rdx
    4ce8:	48 8d 05 f1 a3 20 00 	lea    0x20a3f1(%rip),%rax        # 20f0e0 <mem>
    4cef:	48 01 d0             	add    %rdx,%rax
    4cf2:	8b 00                	mov    (%rax),%eax
    4cf4:	89 c7                	mov    %eax,%edi
    4cf6:	e8 72 c1 ff ff       	callq  e6d <v2r>
    4cfb:	8b 00                	mov    (%rax),%eax
    4cfd:	39 c3                	cmp    %eax,%ebx
    4cff:	0f 9c c0             	setl   %al
    4d02:	0f b6 c0             	movzbl %al,%eax
    4d05:	f7 d8                	neg    %eax
    4d07:	89 c3                	mov    %eax,%ebx
    4d09:	48 8b 05 78 a6 60 00 	mov    0x60a678(%rip),%rax        # 60f388 <f_boot>
    4d10:	48 83 c0 04          	add    $0x4,%rax
    4d14:	89 c2                	mov    %eax,%edx
    4d16:	48 8b 05 6b a6 60 00 	mov    0x60a66b(%rip),%rax        # 60f388 <f_boot>
    4d1d:	29 c2                	sub    %eax,%edx
    4d1f:	89 d0                	mov    %edx,%eax
    4d21:	48 63 d0             	movslq %eax,%rdx
    4d24:	48 8d 05 b5 a3 20 00 	lea    0x20a3b5(%rip),%rax        # 20f0e0 <mem>
    4d2b:	48 01 d0             	add    %rdx,%rax
    4d2e:	8b 00                	mov    (%rax),%eax
    4d30:	83 c0 04             	add    $0x4,%eax
    4d33:	89 c7                	mov    %eax,%edi
    4d35:	e8 33 c1 ff ff       	callq  e6d <v2r>
    4d3a:	89 da                	mov    %ebx,%edx
    4d3c:	89 10                	mov    %edx,(%rax)
    4d3e:	48 8b 05 43 a6 60 00 	mov    0x60a643(%rip),%rax        # 60f388 <f_boot>
    4d45:	48 83 c0 04          	add    $0x4,%rax
    4d49:	89 c2                	mov    %eax,%edx
    4d4b:	48 8b 05 36 a6 60 00 	mov    0x60a636(%rip),%rax        # 60f388 <f_boot>
    4d52:	29 c2                	sub    %eax,%edx
    4d54:	89 d0                	mov    %edx,%eax
    4d56:	48 63 d0             	movslq %eax,%rdx
    4d59:	48 8d 05 80 a3 20 00 	lea    0x20a380(%rip),%rax        # 20f0e0 <mem>
    4d60:	48 01 d0             	add    %rdx,%rax
    4d63:	8b 10                	mov    (%rax),%edx
    4d65:	48 8b 05 1c a6 60 00 	mov    0x60a61c(%rip),%rax        # 60f388 <f_boot>
    4d6c:	48 83 c0 04          	add    $0x4,%rax
    4d70:	89 c1                	mov    %eax,%ecx
    4d72:	48 8b 05 0f a6 60 00 	mov    0x60a60f(%rip),%rax        # 60f388 <f_boot>
    4d79:	29 c1                	sub    %eax,%ecx
    4d7b:	89 c8                	mov    %ecx,%eax
    4d7d:	48 63 c8             	movslq %eax,%rcx
    4d80:	48 8d 05 59 a3 20 00 	lea    0x20a359(%rip),%rax        # 20f0e0 <mem>
    4d87:	48 01 c8             	add    %rcx,%rax
    4d8a:	83 c2 04             	add    $0x4,%edx
    4d8d:	89 10                	mov    %edx,(%rax)
    4d8f:	e9 b5 56 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_uGT:	/* u>  */ CELL(sp+4)=-(CELL(sp+4)>CELL(sp));sp+=4;break;
    4d94:	48 8b 05 ed a5 60 00 	mov    0x60a5ed(%rip),%rax        # 60f388 <f_boot>
    4d9b:	48 83 c0 04          	add    $0x4,%rax
    4d9f:	89 c2                	mov    %eax,%edx
    4da1:	48 8b 05 e0 a5 60 00 	mov    0x60a5e0(%rip),%rax        # 60f388 <f_boot>
    4da8:	29 c2                	sub    %eax,%edx
    4daa:	89 d0                	mov    %edx,%eax
    4dac:	48 63 d0             	movslq %eax,%rdx
    4daf:	48 8d 05 2a a3 20 00 	lea    0x20a32a(%rip),%rax        # 20f0e0 <mem>
    4db6:	48 01 d0             	add    %rdx,%rax
    4db9:	8b 00                	mov    (%rax),%eax
    4dbb:	83 c0 04             	add    $0x4,%eax
    4dbe:	89 c7                	mov    %eax,%edi
    4dc0:	e8 a8 c0 ff ff       	callq  e6d <v2r>
    4dc5:	8b 18                	mov    (%rax),%ebx
    4dc7:	48 8b 05 ba a5 60 00 	mov    0x60a5ba(%rip),%rax        # 60f388 <f_boot>
    4dce:	48 83 c0 04          	add    $0x4,%rax
    4dd2:	89 c2                	mov    %eax,%edx
    4dd4:	48 8b 05 ad a5 60 00 	mov    0x60a5ad(%rip),%rax        # 60f388 <f_boot>
    4ddb:	29 c2                	sub    %eax,%edx
    4ddd:	89 d0                	mov    %edx,%eax
    4ddf:	48 63 d0             	movslq %eax,%rdx
    4de2:	48 8d 05 f7 a2 20 00 	lea    0x20a2f7(%rip),%rax        # 20f0e0 <mem>
    4de9:	48 01 d0             	add    %rdx,%rax
    4dec:	8b 00                	mov    (%rax),%eax
    4dee:	89 c7                	mov    %eax,%edi
    4df0:	e8 78 c0 ff ff       	callq  e6d <v2r>
    4df5:	8b 00                	mov    (%rax),%eax
    4df7:	39 c3                	cmp    %eax,%ebx
    4df9:	0f 97 c0             	seta   %al
    4dfc:	0f b6 c0             	movzbl %al,%eax
    4dff:	f7 d8                	neg    %eax
    4e01:	89 c3                	mov    %eax,%ebx
    4e03:	48 8b 05 7e a5 60 00 	mov    0x60a57e(%rip),%rax        # 60f388 <f_boot>
    4e0a:	48 83 c0 04          	add    $0x4,%rax
    4e0e:	89 c2                	mov    %eax,%edx
    4e10:	48 8b 05 71 a5 60 00 	mov    0x60a571(%rip),%rax        # 60f388 <f_boot>
    4e17:	29 c2                	sub    %eax,%edx
    4e19:	89 d0                	mov    %edx,%eax
    4e1b:	48 63 d0             	movslq %eax,%rdx
    4e1e:	48 8d 05 bb a2 20 00 	lea    0x20a2bb(%rip),%rax        # 20f0e0 <mem>
    4e25:	48 01 d0             	add    %rdx,%rax
    4e28:	8b 00                	mov    (%rax),%eax
    4e2a:	83 c0 04             	add    $0x4,%eax
    4e2d:	89 c7                	mov    %eax,%edi
    4e2f:	e8 39 c0 ff ff       	callq  e6d <v2r>
    4e34:	89 da                	mov    %ebx,%edx
    4e36:	89 10                	mov    %edx,(%rax)
    4e38:	48 8b 05 49 a5 60 00 	mov    0x60a549(%rip),%rax        # 60f388 <f_boot>
    4e3f:	48 83 c0 04          	add    $0x4,%rax
    4e43:	89 c2                	mov    %eax,%edx
    4e45:	48 8b 05 3c a5 60 00 	mov    0x60a53c(%rip),%rax        # 60f388 <f_boot>
    4e4c:	29 c2                	sub    %eax,%edx
    4e4e:	89 d0                	mov    %edx,%eax
    4e50:	48 63 d0             	movslq %eax,%rdx
    4e53:	48 8d 05 86 a2 20 00 	lea    0x20a286(%rip),%rax        # 20f0e0 <mem>
    4e5a:	48 01 d0             	add    %rdx,%rax
    4e5d:	8b 10                	mov    (%rax),%edx
    4e5f:	48 8b 05 22 a5 60 00 	mov    0x60a522(%rip),%rax        # 60f388 <f_boot>
    4e66:	48 83 c0 04          	add    $0x4,%rax
    4e6a:	89 c1                	mov    %eax,%ecx
    4e6c:	48 8b 05 15 a5 60 00 	mov    0x60a515(%rip),%rax        # 60f388 <f_boot>
    4e73:	29 c1                	sub    %eax,%ecx
    4e75:	89 c8                	mov    %ecx,%eax
    4e77:	48 63 c8             	movslq %eax,%rcx
    4e7a:	48 8d 05 5f a2 20 00 	lea    0x20a25f(%rip),%rax        # 20f0e0 <mem>
    4e81:	48 01 c8             	add    %rcx,%rax
    4e84:	83 c2 04             	add    $0x4,%edx
    4e87:	89 10                	mov    %edx,(%rax)
    4e89:	e9 bb 55 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_GT:	/* >  */ CELL(sp+4)=-((INT32)CELL(sp+4)>(INT32)CELL(sp));sp+=4;break;
    4e8e:	48 8b 05 f3 a4 60 00 	mov    0x60a4f3(%rip),%rax        # 60f388 <f_boot>
    4e95:	48 83 c0 04          	add    $0x4,%rax
    4e99:	89 c2                	mov    %eax,%edx
    4e9b:	48 8b 05 e6 a4 60 00 	mov    0x60a4e6(%rip),%rax        # 60f388 <f_boot>
    4ea2:	29 c2                	sub    %eax,%edx
    4ea4:	89 d0                	mov    %edx,%eax
    4ea6:	48 63 d0             	movslq %eax,%rdx
    4ea9:	48 8d 05 30 a2 20 00 	lea    0x20a230(%rip),%rax        # 20f0e0 <mem>
    4eb0:	48 01 d0             	add    %rdx,%rax
    4eb3:	8b 00                	mov    (%rax),%eax
    4eb5:	83 c0 04             	add    $0x4,%eax
    4eb8:	89 c7                	mov    %eax,%edi
    4eba:	e8 ae bf ff ff       	callq  e6d <v2r>
    4ebf:	8b 00                	mov    (%rax),%eax
    4ec1:	89 c3                	mov    %eax,%ebx
    4ec3:	48 8b 05 be a4 60 00 	mov    0x60a4be(%rip),%rax        # 60f388 <f_boot>
    4eca:	48 83 c0 04          	add    $0x4,%rax
    4ece:	89 c2                	mov    %eax,%edx
    4ed0:	48 8b 05 b1 a4 60 00 	mov    0x60a4b1(%rip),%rax        # 60f388 <f_boot>
    4ed7:	29 c2                	sub    %eax,%edx
    4ed9:	89 d0                	mov    %edx,%eax
    4edb:	48 63 d0             	movslq %eax,%rdx
    4ede:	48 8d 05 fb a1 20 00 	lea    0x20a1fb(%rip),%rax        # 20f0e0 <mem>
    4ee5:	48 01 d0             	add    %rdx,%rax
    4ee8:	8b 00                	mov    (%rax),%eax
    4eea:	89 c7                	mov    %eax,%edi
    4eec:	e8 7c bf ff ff       	callq  e6d <v2r>
    4ef1:	8b 00                	mov    (%rax),%eax
    4ef3:	39 c3                	cmp    %eax,%ebx
    4ef5:	0f 9f c0             	setg   %al
    4ef8:	0f b6 c0             	movzbl %al,%eax
    4efb:	f7 d8                	neg    %eax
    4efd:	89 c3                	mov    %eax,%ebx
    4eff:	48 8b 05 82 a4 60 00 	mov    0x60a482(%rip),%rax        # 60f388 <f_boot>
    4f06:	48 83 c0 04          	add    $0x4,%rax
    4f0a:	89 c2                	mov    %eax,%edx
    4f0c:	48 8b 05 75 a4 60 00 	mov    0x60a475(%rip),%rax        # 60f388 <f_boot>
    4f13:	29 c2                	sub    %eax,%edx
    4f15:	89 d0                	mov    %edx,%eax
    4f17:	48 63 d0             	movslq %eax,%rdx
    4f1a:	48 8d 05 bf a1 20 00 	lea    0x20a1bf(%rip),%rax        # 20f0e0 <mem>
    4f21:	48 01 d0             	add    %rdx,%rax
    4f24:	8b 00                	mov    (%rax),%eax
    4f26:	83 c0 04             	add    $0x4,%eax
    4f29:	89 c7                	mov    %eax,%edi
    4f2b:	e8 3d bf ff ff       	callq  e6d <v2r>
    4f30:	89 da                	mov    %ebx,%edx
    4f32:	89 10                	mov    %edx,(%rax)
    4f34:	48 8b 05 4d a4 60 00 	mov    0x60a44d(%rip),%rax        # 60f388 <f_boot>
    4f3b:	48 83 c0 04          	add    $0x4,%rax
    4f3f:	89 c2                	mov    %eax,%edx
    4f41:	48 8b 05 40 a4 60 00 	mov    0x60a440(%rip),%rax        # 60f388 <f_boot>
    4f48:	29 c2                	sub    %eax,%edx
    4f4a:	89 d0                	mov    %edx,%eax
    4f4c:	48 63 d0             	movslq %eax,%rdx
    4f4f:	48 8d 05 8a a1 20 00 	lea    0x20a18a(%rip),%rax        # 20f0e0 <mem>
    4f56:	48 01 d0             	add    %rdx,%rax
    4f59:	8b 10                	mov    (%rax),%edx
    4f5b:	48 8b 05 26 a4 60 00 	mov    0x60a426(%rip),%rax        # 60f388 <f_boot>
    4f62:	48 83 c0 04          	add    $0x4,%rax
    4f66:	89 c1                	mov    %eax,%ecx
    4f68:	48 8b 05 19 a4 60 00 	mov    0x60a419(%rip),%rax        # 60f388 <f_boot>
    4f6f:	29 c1                	sub    %eax,%ecx
    4f71:	89 c8                	mov    %ecx,%eax
    4f73:	48 63 c8             	movslq %eax,%rcx
    4f76:	48 8d 05 63 a1 20 00 	lea    0x20a163(%rip),%rax        # 20f0e0 <mem>
    4f7d:	48 01 c8             	add    %rcx,%rax
    4f80:	83 c2 04             	add    $0x4,%edx
    4f83:	89 10                	mov    %edx,(%rax)
    4f85:	e9 bf 54 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_umin:	/* umin */ CELL(sp+4)=MIN(CELL(sp+4),CELL(sp));sp+=4;break;
    4f8a:	48 8b 05 f7 a3 60 00 	mov    0x60a3f7(%rip),%rax        # 60f388 <f_boot>
    4f91:	48 83 c0 04          	add    $0x4,%rax
    4f95:	89 c2                	mov    %eax,%edx
    4f97:	48 8b 05 ea a3 60 00 	mov    0x60a3ea(%rip),%rax        # 60f388 <f_boot>
    4f9e:	29 c2                	sub    %eax,%edx
    4fa0:	89 d0                	mov    %edx,%eax
    4fa2:	48 63 d0             	movslq %eax,%rdx
    4fa5:	48 8d 05 34 a1 20 00 	lea    0x20a134(%rip),%rax        # 20f0e0 <mem>
    4fac:	48 01 d0             	add    %rdx,%rax
    4faf:	8b 00                	mov    (%rax),%eax
    4fb1:	83 c0 04             	add    $0x4,%eax
    4fb4:	89 c7                	mov    %eax,%edi
    4fb6:	e8 b2 be ff ff       	callq  e6d <v2r>
    4fbb:	8b 18                	mov    (%rax),%ebx
    4fbd:	48 8b 05 c4 a3 60 00 	mov    0x60a3c4(%rip),%rax        # 60f388 <f_boot>
    4fc4:	48 83 c0 04          	add    $0x4,%rax
    4fc8:	89 c2                	mov    %eax,%edx
    4fca:	48 8b 05 b7 a3 60 00 	mov    0x60a3b7(%rip),%rax        # 60f388 <f_boot>
    4fd1:	29 c2                	sub    %eax,%edx
    4fd3:	89 d0                	mov    %edx,%eax
    4fd5:	48 63 d0             	movslq %eax,%rdx
    4fd8:	48 8d 05 01 a1 20 00 	lea    0x20a101(%rip),%rax        # 20f0e0 <mem>
    4fdf:	48 01 d0             	add    %rdx,%rax
    4fe2:	8b 00                	mov    (%rax),%eax
    4fe4:	89 c7                	mov    %eax,%edi
    4fe6:	e8 82 be ff ff       	callq  e6d <v2r>
    4feb:	8b 00                	mov    (%rax),%eax
    4fed:	39 c3                	cmp    %eax,%ebx
    4fef:	73 35                	jae    5026 <virtual_machine+0x1c4e>
    4ff1:	48 8b 05 90 a3 60 00 	mov    0x60a390(%rip),%rax        # 60f388 <f_boot>
    4ff8:	48 83 c0 04          	add    $0x4,%rax
    4ffc:	89 c2                	mov    %eax,%edx
    4ffe:	48 8b 05 83 a3 60 00 	mov    0x60a383(%rip),%rax        # 60f388 <f_boot>
    5005:	29 c2                	sub    %eax,%edx
    5007:	89 d0                	mov    %edx,%eax
    5009:	48 63 d0             	movslq %eax,%rdx
    500c:	48 8d 05 cd a0 20 00 	lea    0x20a0cd(%rip),%rax        # 20f0e0 <mem>
    5013:	48 01 d0             	add    %rdx,%rax
    5016:	8b 00                	mov    (%rax),%eax
    5018:	83 c0 04             	add    $0x4,%eax
    501b:	89 c7                	mov    %eax,%edi
    501d:	e8 4b be ff ff       	callq  e6d <v2r>
    5022:	8b 18                	mov    (%rax),%ebx
    5024:	eb 30                	jmp    5056 <virtual_machine+0x1c7e>
    5026:	48 8b 05 5b a3 60 00 	mov    0x60a35b(%rip),%rax        # 60f388 <f_boot>
    502d:	48 83 c0 04          	add    $0x4,%rax
    5031:	89 c2                	mov    %eax,%edx
    5033:	48 8b 05 4e a3 60 00 	mov    0x60a34e(%rip),%rax        # 60f388 <f_boot>
    503a:	29 c2                	sub    %eax,%edx
    503c:	89 d0                	mov    %edx,%eax
    503e:	48 63 d0             	movslq %eax,%rdx
    5041:	48 8d 05 98 a0 20 00 	lea    0x20a098(%rip),%rax        # 20f0e0 <mem>
    5048:	48 01 d0             	add    %rdx,%rax
    504b:	8b 00                	mov    (%rax),%eax
    504d:	89 c7                	mov    %eax,%edi
    504f:	e8 19 be ff ff       	callq  e6d <v2r>
    5054:	8b 18                	mov    (%rax),%ebx
    5056:	48 8b 05 2b a3 60 00 	mov    0x60a32b(%rip),%rax        # 60f388 <f_boot>
    505d:	48 83 c0 04          	add    $0x4,%rax
    5061:	89 c2                	mov    %eax,%edx
    5063:	48 8b 05 1e a3 60 00 	mov    0x60a31e(%rip),%rax        # 60f388 <f_boot>
    506a:	29 c2                	sub    %eax,%edx
    506c:	89 d0                	mov    %edx,%eax
    506e:	48 63 d0             	movslq %eax,%rdx
    5071:	48 8d 05 68 a0 20 00 	lea    0x20a068(%rip),%rax        # 20f0e0 <mem>
    5078:	48 01 d0             	add    %rdx,%rax
    507b:	8b 00                	mov    (%rax),%eax
    507d:	83 c0 04             	add    $0x4,%eax
    5080:	89 c7                	mov    %eax,%edi
    5082:	e8 e6 bd ff ff       	callq  e6d <v2r>
    5087:	89 18                	mov    %ebx,(%rax)
    5089:	48 8b 05 f8 a2 60 00 	mov    0x60a2f8(%rip),%rax        # 60f388 <f_boot>
    5090:	48 83 c0 04          	add    $0x4,%rax
    5094:	89 c2                	mov    %eax,%edx
    5096:	48 8b 05 eb a2 60 00 	mov    0x60a2eb(%rip),%rax        # 60f388 <f_boot>
    509d:	29 c2                	sub    %eax,%edx
    509f:	89 d0                	mov    %edx,%eax
    50a1:	48 63 d0             	movslq %eax,%rdx
    50a4:	48 8d 05 35 a0 20 00 	lea    0x20a035(%rip),%rax        # 20f0e0 <mem>
    50ab:	48 01 d0             	add    %rdx,%rax
    50ae:	8b 10                	mov    (%rax),%edx
    50b0:	48 8b 05 d1 a2 60 00 	mov    0x60a2d1(%rip),%rax        # 60f388 <f_boot>
    50b7:	48 83 c0 04          	add    $0x4,%rax
    50bb:	89 c1                	mov    %eax,%ecx
    50bd:	48 8b 05 c4 a2 60 00 	mov    0x60a2c4(%rip),%rax        # 60f388 <f_boot>
    50c4:	29 c1                	sub    %eax,%ecx
    50c6:	89 c8                	mov    %ecx,%eax
    50c8:	48 63 c8             	movslq %eax,%rcx
    50cb:	48 8d 05 0e a0 20 00 	lea    0x20a00e(%rip),%rax        # 20f0e0 <mem>
    50d2:	48 01 c8             	add    %rcx,%rax
    50d5:	83 c2 04             	add    $0x4,%edx
    50d8:	89 10                	mov    %edx,(%rax)
    50da:	e9 6a 53 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_umax:	/* umax */ CELL(sp+4)=MAX(CELL(sp+4),CELL(sp));sp+=4;break;
    50df:	48 8b 05 a2 a2 60 00 	mov    0x60a2a2(%rip),%rax        # 60f388 <f_boot>
    50e6:	48 83 c0 04          	add    $0x4,%rax
    50ea:	89 c2                	mov    %eax,%edx
    50ec:	48 8b 05 95 a2 60 00 	mov    0x60a295(%rip),%rax        # 60f388 <f_boot>
    50f3:	29 c2                	sub    %eax,%edx
    50f5:	89 d0                	mov    %edx,%eax
    50f7:	48 63 d0             	movslq %eax,%rdx
    50fa:	48 8d 05 df 9f 20 00 	lea    0x209fdf(%rip),%rax        # 20f0e0 <mem>
    5101:	48 01 d0             	add    %rdx,%rax
    5104:	8b 00                	mov    (%rax),%eax
    5106:	83 c0 04             	add    $0x4,%eax
    5109:	89 c7                	mov    %eax,%edi
    510b:	e8 5d bd ff ff       	callq  e6d <v2r>
    5110:	8b 18                	mov    (%rax),%ebx
    5112:	48 8b 05 6f a2 60 00 	mov    0x60a26f(%rip),%rax        # 60f388 <f_boot>
    5119:	48 83 c0 04          	add    $0x4,%rax
    511d:	89 c2                	mov    %eax,%edx
    511f:	48 8b 05 62 a2 60 00 	mov    0x60a262(%rip),%rax        # 60f388 <f_boot>
    5126:	29 c2                	sub    %eax,%edx
    5128:	89 d0                	mov    %edx,%eax
    512a:	48 63 d0             	movslq %eax,%rdx
    512d:	48 8d 05 ac 9f 20 00 	lea    0x209fac(%rip),%rax        # 20f0e0 <mem>
    5134:	48 01 d0             	add    %rdx,%rax
    5137:	8b 00                	mov    (%rax),%eax
    5139:	89 c7                	mov    %eax,%edi
    513b:	e8 2d bd ff ff       	callq  e6d <v2r>
    5140:	8b 00                	mov    (%rax),%eax
    5142:	39 c3                	cmp    %eax,%ebx
    5144:	76 35                	jbe    517b <virtual_machine+0x1da3>
    5146:	48 8b 05 3b a2 60 00 	mov    0x60a23b(%rip),%rax        # 60f388 <f_boot>
    514d:	48 83 c0 04          	add    $0x4,%rax
    5151:	89 c2                	mov    %eax,%edx
    5153:	48 8b 05 2e a2 60 00 	mov    0x60a22e(%rip),%rax        # 60f388 <f_boot>
    515a:	29 c2                	sub    %eax,%edx
    515c:	89 d0                	mov    %edx,%eax
    515e:	48 63 d0             	movslq %eax,%rdx
    5161:	48 8d 05 78 9f 20 00 	lea    0x209f78(%rip),%rax        # 20f0e0 <mem>
    5168:	48 01 d0             	add    %rdx,%rax
    516b:	8b 00                	mov    (%rax),%eax
    516d:	83 c0 04             	add    $0x4,%eax
    5170:	89 c7                	mov    %eax,%edi
    5172:	e8 f6 bc ff ff       	callq  e6d <v2r>
    5177:	8b 18                	mov    (%rax),%ebx
    5179:	eb 30                	jmp    51ab <virtual_machine+0x1dd3>
    517b:	48 8b 05 06 a2 60 00 	mov    0x60a206(%rip),%rax        # 60f388 <f_boot>
    5182:	48 83 c0 04          	add    $0x4,%rax
    5186:	89 c2                	mov    %eax,%edx
    5188:	48 8b 05 f9 a1 60 00 	mov    0x60a1f9(%rip),%rax        # 60f388 <f_boot>
    518f:	29 c2                	sub    %eax,%edx
    5191:	89 d0                	mov    %edx,%eax
    5193:	48 63 d0             	movslq %eax,%rdx
    5196:	48 8d 05 43 9f 20 00 	lea    0x209f43(%rip),%rax        # 20f0e0 <mem>
    519d:	48 01 d0             	add    %rdx,%rax
    51a0:	8b 00                	mov    (%rax),%eax
    51a2:	89 c7                	mov    %eax,%edi
    51a4:	e8 c4 bc ff ff       	callq  e6d <v2r>
    51a9:	8b 18                	mov    (%rax),%ebx
    51ab:	48 8b 05 d6 a1 60 00 	mov    0x60a1d6(%rip),%rax        # 60f388 <f_boot>
    51b2:	48 83 c0 04          	add    $0x4,%rax
    51b6:	89 c2                	mov    %eax,%edx
    51b8:	48 8b 05 c9 a1 60 00 	mov    0x60a1c9(%rip),%rax        # 60f388 <f_boot>
    51bf:	29 c2                	sub    %eax,%edx
    51c1:	89 d0                	mov    %edx,%eax
    51c3:	48 63 d0             	movslq %eax,%rdx
    51c6:	48 8d 05 13 9f 20 00 	lea    0x209f13(%rip),%rax        # 20f0e0 <mem>
    51cd:	48 01 d0             	add    %rdx,%rax
    51d0:	8b 00                	mov    (%rax),%eax
    51d2:	83 c0 04             	add    $0x4,%eax
    51d5:	89 c7                	mov    %eax,%edi
    51d7:	e8 91 bc ff ff       	callq  e6d <v2r>
    51dc:	89 18                	mov    %ebx,(%rax)
    51de:	48 8b 05 a3 a1 60 00 	mov    0x60a1a3(%rip),%rax        # 60f388 <f_boot>
    51e5:	48 83 c0 04          	add    $0x4,%rax
    51e9:	89 c2                	mov    %eax,%edx
    51eb:	48 8b 05 96 a1 60 00 	mov    0x60a196(%rip),%rax        # 60f388 <f_boot>
    51f2:	29 c2                	sub    %eax,%edx
    51f4:	89 d0                	mov    %edx,%eax
    51f6:	48 63 d0             	movslq %eax,%rdx
    51f9:	48 8d 05 e0 9e 20 00 	lea    0x209ee0(%rip),%rax        # 20f0e0 <mem>
    5200:	48 01 d0             	add    %rdx,%rax
    5203:	8b 10                	mov    (%rax),%edx
    5205:	48 8b 05 7c a1 60 00 	mov    0x60a17c(%rip),%rax        # 60f388 <f_boot>
    520c:	48 83 c0 04          	add    $0x4,%rax
    5210:	89 c1                	mov    %eax,%ecx
    5212:	48 8b 05 6f a1 60 00 	mov    0x60a16f(%rip),%rax        # 60f388 <f_boot>
    5219:	29 c1                	sub    %eax,%ecx
    521b:	89 c8                	mov    %ecx,%eax
    521d:	48 63 c8             	movslq %eax,%rcx
    5220:	48 8d 05 b9 9e 20 00 	lea    0x209eb9(%rip),%rax        # 20f0e0 <mem>
    5227:	48 01 c8             	add    %rcx,%rax
    522a:	83 c2 04             	add    $0x4,%edx
    522d:	89 10                	mov    %edx,(%rax)
    522f:	e9 15 52 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_min:	/* min */ CELL(sp+4)=MIN((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
    5234:	48 8b 05 4d a1 60 00 	mov    0x60a14d(%rip),%rax        # 60f388 <f_boot>
    523b:	48 83 c0 04          	add    $0x4,%rax
    523f:	89 c2                	mov    %eax,%edx
    5241:	48 8b 05 40 a1 60 00 	mov    0x60a140(%rip),%rax        # 60f388 <f_boot>
    5248:	29 c2                	sub    %eax,%edx
    524a:	89 d0                	mov    %edx,%eax
    524c:	48 63 d0             	movslq %eax,%rdx
    524f:	48 8d 05 8a 9e 20 00 	lea    0x209e8a(%rip),%rax        # 20f0e0 <mem>
    5256:	48 01 d0             	add    %rdx,%rax
    5259:	8b 00                	mov    (%rax),%eax
    525b:	83 c0 04             	add    $0x4,%eax
    525e:	89 c7                	mov    %eax,%edi
    5260:	e8 08 bc ff ff       	callq  e6d <v2r>
    5265:	8b 00                	mov    (%rax),%eax
    5267:	89 c3                	mov    %eax,%ebx
    5269:	48 8b 05 18 a1 60 00 	mov    0x60a118(%rip),%rax        # 60f388 <f_boot>
    5270:	48 83 c0 04          	add    $0x4,%rax
    5274:	89 c2                	mov    %eax,%edx
    5276:	48 8b 05 0b a1 60 00 	mov    0x60a10b(%rip),%rax        # 60f388 <f_boot>
    527d:	29 c2                	sub    %eax,%edx
    527f:	89 d0                	mov    %edx,%eax
    5281:	48 63 d0             	movslq %eax,%rdx
    5284:	48 8d 05 55 9e 20 00 	lea    0x209e55(%rip),%rax        # 20f0e0 <mem>
    528b:	48 01 d0             	add    %rdx,%rax
    528e:	8b 00                	mov    (%rax),%eax
    5290:	89 c7                	mov    %eax,%edi
    5292:	e8 d6 bb ff ff       	callq  e6d <v2r>
    5297:	8b 00                	mov    (%rax),%eax
    5299:	39 c3                	cmp    %eax,%ebx
    529b:	7d 35                	jge    52d2 <virtual_machine+0x1efa>
    529d:	48 8b 05 e4 a0 60 00 	mov    0x60a0e4(%rip),%rax        # 60f388 <f_boot>
    52a4:	48 83 c0 04          	add    $0x4,%rax
    52a8:	89 c2                	mov    %eax,%edx
    52aa:	48 8b 05 d7 a0 60 00 	mov    0x60a0d7(%rip),%rax        # 60f388 <f_boot>
    52b1:	29 c2                	sub    %eax,%edx
    52b3:	89 d0                	mov    %edx,%eax
    52b5:	48 63 d0             	movslq %eax,%rdx
    52b8:	48 8d 05 21 9e 20 00 	lea    0x209e21(%rip),%rax        # 20f0e0 <mem>
    52bf:	48 01 d0             	add    %rdx,%rax
    52c2:	8b 00                	mov    (%rax),%eax
    52c4:	83 c0 04             	add    $0x4,%eax
    52c7:	89 c7                	mov    %eax,%edi
    52c9:	e8 9f bb ff ff       	callq  e6d <v2r>
    52ce:	8b 18                	mov    (%rax),%ebx
    52d0:	eb 30                	jmp    5302 <virtual_machine+0x1f2a>
    52d2:	48 8b 05 af a0 60 00 	mov    0x60a0af(%rip),%rax        # 60f388 <f_boot>
    52d9:	48 83 c0 04          	add    $0x4,%rax
    52dd:	89 c2                	mov    %eax,%edx
    52df:	48 8b 05 a2 a0 60 00 	mov    0x60a0a2(%rip),%rax        # 60f388 <f_boot>
    52e6:	29 c2                	sub    %eax,%edx
    52e8:	89 d0                	mov    %edx,%eax
    52ea:	48 63 d0             	movslq %eax,%rdx
    52ed:	48 8d 05 ec 9d 20 00 	lea    0x209dec(%rip),%rax        # 20f0e0 <mem>
    52f4:	48 01 d0             	add    %rdx,%rax
    52f7:	8b 00                	mov    (%rax),%eax
    52f9:	89 c7                	mov    %eax,%edi
    52fb:	e8 6d bb ff ff       	callq  e6d <v2r>
    5300:	8b 18                	mov    (%rax),%ebx
    5302:	48 8b 05 7f a0 60 00 	mov    0x60a07f(%rip),%rax        # 60f388 <f_boot>
    5309:	48 83 c0 04          	add    $0x4,%rax
    530d:	89 c2                	mov    %eax,%edx
    530f:	48 8b 05 72 a0 60 00 	mov    0x60a072(%rip),%rax        # 60f388 <f_boot>
    5316:	29 c2                	sub    %eax,%edx
    5318:	89 d0                	mov    %edx,%eax
    531a:	48 63 d0             	movslq %eax,%rdx
    531d:	48 8d 05 bc 9d 20 00 	lea    0x209dbc(%rip),%rax        # 20f0e0 <mem>
    5324:	48 01 d0             	add    %rdx,%rax
    5327:	8b 00                	mov    (%rax),%eax
    5329:	83 c0 04             	add    $0x4,%eax
    532c:	89 c7                	mov    %eax,%edi
    532e:	e8 3a bb ff ff       	callq  e6d <v2r>
    5333:	89 18                	mov    %ebx,(%rax)
    5335:	48 8b 05 4c a0 60 00 	mov    0x60a04c(%rip),%rax        # 60f388 <f_boot>
    533c:	48 83 c0 04          	add    $0x4,%rax
    5340:	89 c2                	mov    %eax,%edx
    5342:	48 8b 05 3f a0 60 00 	mov    0x60a03f(%rip),%rax        # 60f388 <f_boot>
    5349:	29 c2                	sub    %eax,%edx
    534b:	89 d0                	mov    %edx,%eax
    534d:	48 63 d0             	movslq %eax,%rdx
    5350:	48 8d 05 89 9d 20 00 	lea    0x209d89(%rip),%rax        # 20f0e0 <mem>
    5357:	48 01 d0             	add    %rdx,%rax
    535a:	8b 10                	mov    (%rax),%edx
    535c:	48 8b 05 25 a0 60 00 	mov    0x60a025(%rip),%rax        # 60f388 <f_boot>
    5363:	48 83 c0 04          	add    $0x4,%rax
    5367:	89 c1                	mov    %eax,%ecx
    5369:	48 8b 05 18 a0 60 00 	mov    0x60a018(%rip),%rax        # 60f388 <f_boot>
    5370:	29 c1                	sub    %eax,%ecx
    5372:	89 c8                	mov    %ecx,%eax
    5374:	48 63 c8             	movslq %eax,%rcx
    5377:	48 8d 05 62 9d 20 00 	lea    0x209d62(%rip),%rax        # 20f0e0 <mem>
    537e:	48 01 c8             	add    %rcx,%rax
    5381:	83 c2 04             	add    $0x4,%edx
    5384:	89 10                	mov    %edx,(%rax)
    5386:	e9 be 50 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_max:	/* max */ CELL(sp+4)=MAX((INT32)CELL(sp+4),(INT32)CELL(sp));sp+=4;break;
    538b:	48 8b 05 f6 9f 60 00 	mov    0x609ff6(%rip),%rax        # 60f388 <f_boot>
    5392:	48 83 c0 04          	add    $0x4,%rax
    5396:	89 c2                	mov    %eax,%edx
    5398:	48 8b 05 e9 9f 60 00 	mov    0x609fe9(%rip),%rax        # 60f388 <f_boot>
    539f:	29 c2                	sub    %eax,%edx
    53a1:	89 d0                	mov    %edx,%eax
    53a3:	48 63 d0             	movslq %eax,%rdx
    53a6:	48 8d 05 33 9d 20 00 	lea    0x209d33(%rip),%rax        # 20f0e0 <mem>
    53ad:	48 01 d0             	add    %rdx,%rax
    53b0:	8b 00                	mov    (%rax),%eax
    53b2:	83 c0 04             	add    $0x4,%eax
    53b5:	89 c7                	mov    %eax,%edi
    53b7:	e8 b1 ba ff ff       	callq  e6d <v2r>
    53bc:	8b 00                	mov    (%rax),%eax
    53be:	89 c3                	mov    %eax,%ebx
    53c0:	48 8b 05 c1 9f 60 00 	mov    0x609fc1(%rip),%rax        # 60f388 <f_boot>
    53c7:	48 83 c0 04          	add    $0x4,%rax
    53cb:	89 c2                	mov    %eax,%edx
    53cd:	48 8b 05 b4 9f 60 00 	mov    0x609fb4(%rip),%rax        # 60f388 <f_boot>
    53d4:	29 c2                	sub    %eax,%edx
    53d6:	89 d0                	mov    %edx,%eax
    53d8:	48 63 d0             	movslq %eax,%rdx
    53db:	48 8d 05 fe 9c 20 00 	lea    0x209cfe(%rip),%rax        # 20f0e0 <mem>
    53e2:	48 01 d0             	add    %rdx,%rax
    53e5:	8b 00                	mov    (%rax),%eax
    53e7:	89 c7                	mov    %eax,%edi
    53e9:	e8 7f ba ff ff       	callq  e6d <v2r>
    53ee:	8b 00                	mov    (%rax),%eax
    53f0:	39 c3                	cmp    %eax,%ebx
    53f2:	7e 35                	jle    5429 <virtual_machine+0x2051>
    53f4:	48 8b 05 8d 9f 60 00 	mov    0x609f8d(%rip),%rax        # 60f388 <f_boot>
    53fb:	48 83 c0 04          	add    $0x4,%rax
    53ff:	89 c2                	mov    %eax,%edx
    5401:	48 8b 05 80 9f 60 00 	mov    0x609f80(%rip),%rax        # 60f388 <f_boot>
    5408:	29 c2                	sub    %eax,%edx
    540a:	89 d0                	mov    %edx,%eax
    540c:	48 63 d0             	movslq %eax,%rdx
    540f:	48 8d 05 ca 9c 20 00 	lea    0x209cca(%rip),%rax        # 20f0e0 <mem>
    5416:	48 01 d0             	add    %rdx,%rax
    5419:	8b 00                	mov    (%rax),%eax
    541b:	83 c0 04             	add    $0x4,%eax
    541e:	89 c7                	mov    %eax,%edi
    5420:	e8 48 ba ff ff       	callq  e6d <v2r>
    5425:	8b 18                	mov    (%rax),%ebx
    5427:	eb 30                	jmp    5459 <virtual_machine+0x2081>
    5429:	48 8b 05 58 9f 60 00 	mov    0x609f58(%rip),%rax        # 60f388 <f_boot>
    5430:	48 83 c0 04          	add    $0x4,%rax
    5434:	89 c2                	mov    %eax,%edx
    5436:	48 8b 05 4b 9f 60 00 	mov    0x609f4b(%rip),%rax        # 60f388 <f_boot>
    543d:	29 c2                	sub    %eax,%edx
    543f:	89 d0                	mov    %edx,%eax
    5441:	48 63 d0             	movslq %eax,%rdx
    5444:	48 8d 05 95 9c 20 00 	lea    0x209c95(%rip),%rax        # 20f0e0 <mem>
    544b:	48 01 d0             	add    %rdx,%rax
    544e:	8b 00                	mov    (%rax),%eax
    5450:	89 c7                	mov    %eax,%edi
    5452:	e8 16 ba ff ff       	callq  e6d <v2r>
    5457:	8b 18                	mov    (%rax),%ebx
    5459:	48 8b 05 28 9f 60 00 	mov    0x609f28(%rip),%rax        # 60f388 <f_boot>
    5460:	48 83 c0 04          	add    $0x4,%rax
    5464:	89 c2                	mov    %eax,%edx
    5466:	48 8b 05 1b 9f 60 00 	mov    0x609f1b(%rip),%rax        # 60f388 <f_boot>
    546d:	29 c2                	sub    %eax,%edx
    546f:	89 d0                	mov    %edx,%eax
    5471:	48 63 d0             	movslq %eax,%rdx
    5474:	48 8d 05 65 9c 20 00 	lea    0x209c65(%rip),%rax        # 20f0e0 <mem>
    547b:	48 01 d0             	add    %rdx,%rax
    547e:	8b 00                	mov    (%rax),%eax
    5480:	83 c0 04             	add    $0x4,%eax
    5483:	89 c7                	mov    %eax,%edi
    5485:	e8 e3 b9 ff ff       	callq  e6d <v2r>
    548a:	89 18                	mov    %ebx,(%rax)
    548c:	48 8b 05 f5 9e 60 00 	mov    0x609ef5(%rip),%rax        # 60f388 <f_boot>
    5493:	48 83 c0 04          	add    $0x4,%rax
    5497:	89 c2                	mov    %eax,%edx
    5499:	48 8b 05 e8 9e 60 00 	mov    0x609ee8(%rip),%rax        # 60f388 <f_boot>
    54a0:	29 c2                	sub    %eax,%edx
    54a2:	89 d0                	mov    %edx,%eax
    54a4:	48 63 d0             	movslq %eax,%rdx
    54a7:	48 8d 05 32 9c 20 00 	lea    0x209c32(%rip),%rax        # 20f0e0 <mem>
    54ae:	48 01 d0             	add    %rdx,%rax
    54b1:	8b 10                	mov    (%rax),%edx
    54b3:	48 8b 05 ce 9e 60 00 	mov    0x609ece(%rip),%rax        # 60f388 <f_boot>
    54ba:	48 83 c0 04          	add    $0x4,%rax
    54be:	89 c1                	mov    %eax,%ecx
    54c0:	48 8b 05 c1 9e 60 00 	mov    0x609ec1(%rip),%rax        # 60f388 <f_boot>
    54c7:	29 c1                	sub    %eax,%ecx
    54c9:	89 c8                	mov    %ecx,%eax
    54cb:	48 63 c8             	movslq %eax,%rcx
    54ce:	48 8d 05 0b 9c 20 00 	lea    0x209c0b(%rip),%rax        # 20f0e0 <mem>
    54d5:	48 01 c8             	add    %rcx,%rax
    54d8:	83 c2 04             	add    $0x4,%edx
    54db:	89 10                	mov    %edx,(%rax)
    54dd:	e9 67 4f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_lshift:/*lshift*/CELL(sp+4)<<=CELL(sp);sp+=4;break;
    54e2:	48 8b 05 9f 9e 60 00 	mov    0x609e9f(%rip),%rax        # 60f388 <f_boot>
    54e9:	48 83 c0 04          	add    $0x4,%rax
    54ed:	89 c2                	mov    %eax,%edx
    54ef:	48 8b 05 92 9e 60 00 	mov    0x609e92(%rip),%rax        # 60f388 <f_boot>
    54f6:	29 c2                	sub    %eax,%edx
    54f8:	89 d0                	mov    %edx,%eax
    54fa:	48 63 d0             	movslq %eax,%rdx
    54fd:	48 8d 05 dc 9b 20 00 	lea    0x209bdc(%rip),%rax        # 20f0e0 <mem>
    5504:	48 01 d0             	add    %rdx,%rax
    5507:	8b 00                	mov    (%rax),%eax
    5509:	89 c7                	mov    %eax,%edi
    550b:	e8 5d b9 ff ff       	callq  e6d <v2r>
    5510:	8b 18                	mov    (%rax),%ebx
    5512:	48 8b 05 6f 9e 60 00 	mov    0x609e6f(%rip),%rax        # 60f388 <f_boot>
    5519:	48 83 c0 04          	add    $0x4,%rax
    551d:	89 c2                	mov    %eax,%edx
    551f:	48 8b 05 62 9e 60 00 	mov    0x609e62(%rip),%rax        # 60f388 <f_boot>
    5526:	29 c2                	sub    %eax,%edx
    5528:	89 d0                	mov    %edx,%eax
    552a:	48 63 d0             	movslq %eax,%rdx
    552d:	48 8d 05 ac 9b 20 00 	lea    0x209bac(%rip),%rax        # 20f0e0 <mem>
    5534:	48 01 d0             	add    %rdx,%rax
    5537:	8b 00                	mov    (%rax),%eax
    5539:	83 c0 04             	add    $0x4,%eax
    553c:	89 c7                	mov    %eax,%edi
    553e:	e8 2a b9 ff ff       	callq  e6d <v2r>
    5543:	8b 10                	mov    (%rax),%edx
    5545:	89 d9                	mov    %ebx,%ecx
    5547:	d3 e2                	shl    %cl,%edx
    5549:	89 10                	mov    %edx,(%rax)
    554b:	48 8b 05 36 9e 60 00 	mov    0x609e36(%rip),%rax        # 60f388 <f_boot>
    5552:	48 83 c0 04          	add    $0x4,%rax
    5556:	89 c2                	mov    %eax,%edx
    5558:	48 8b 05 29 9e 60 00 	mov    0x609e29(%rip),%rax        # 60f388 <f_boot>
    555f:	29 c2                	sub    %eax,%edx
    5561:	89 d0                	mov    %edx,%eax
    5563:	48 63 d0             	movslq %eax,%rdx
    5566:	48 8d 05 73 9b 20 00 	lea    0x209b73(%rip),%rax        # 20f0e0 <mem>
    556d:	48 01 d0             	add    %rdx,%rax
    5570:	8b 10                	mov    (%rax),%edx
    5572:	48 8b 05 0f 9e 60 00 	mov    0x609e0f(%rip),%rax        # 60f388 <f_boot>
    5579:	48 83 c0 04          	add    $0x4,%rax
    557d:	89 c1                	mov    %eax,%ecx
    557f:	48 8b 05 02 9e 60 00 	mov    0x609e02(%rip),%rax        # 60f388 <f_boot>
    5586:	29 c1                	sub    %eax,%ecx
    5588:	89 c8                	mov    %ecx,%eax
    558a:	48 63 c8             	movslq %eax,%rcx
    558d:	48 8d 05 4c 9b 20 00 	lea    0x209b4c(%rip),%rax        # 20f0e0 <mem>
    5594:	48 01 c8             	add    %rcx,%rax
    5597:	83 c2 04             	add    $0x4,%edx
    559a:	89 10                	mov    %edx,(%rax)
    559c:	e9 a8 4e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rshift:/*rshift*/CELL(sp+4)>>=CELL(sp);sp+=4;break;
    55a1:	48 8b 05 e0 9d 60 00 	mov    0x609de0(%rip),%rax        # 60f388 <f_boot>
    55a8:	48 83 c0 04          	add    $0x4,%rax
    55ac:	89 c2                	mov    %eax,%edx
    55ae:	48 8b 05 d3 9d 60 00 	mov    0x609dd3(%rip),%rax        # 60f388 <f_boot>
    55b5:	29 c2                	sub    %eax,%edx
    55b7:	89 d0                	mov    %edx,%eax
    55b9:	48 63 d0             	movslq %eax,%rdx
    55bc:	48 8d 05 1d 9b 20 00 	lea    0x209b1d(%rip),%rax        # 20f0e0 <mem>
    55c3:	48 01 d0             	add    %rdx,%rax
    55c6:	8b 00                	mov    (%rax),%eax
    55c8:	89 c7                	mov    %eax,%edi
    55ca:	e8 9e b8 ff ff       	callq  e6d <v2r>
    55cf:	8b 18                	mov    (%rax),%ebx
    55d1:	48 8b 05 b0 9d 60 00 	mov    0x609db0(%rip),%rax        # 60f388 <f_boot>
    55d8:	48 83 c0 04          	add    $0x4,%rax
    55dc:	89 c2                	mov    %eax,%edx
    55de:	48 8b 05 a3 9d 60 00 	mov    0x609da3(%rip),%rax        # 60f388 <f_boot>
    55e5:	29 c2                	sub    %eax,%edx
    55e7:	89 d0                	mov    %edx,%eax
    55e9:	48 63 d0             	movslq %eax,%rdx
    55ec:	48 8d 05 ed 9a 20 00 	lea    0x209aed(%rip),%rax        # 20f0e0 <mem>
    55f3:	48 01 d0             	add    %rdx,%rax
    55f6:	8b 00                	mov    (%rax),%eax
    55f8:	83 c0 04             	add    $0x4,%eax
    55fb:	89 c7                	mov    %eax,%edi
    55fd:	e8 6b b8 ff ff       	callq  e6d <v2r>
    5602:	8b 10                	mov    (%rax),%edx
    5604:	89 d9                	mov    %ebx,%ecx
    5606:	d3 ea                	shr    %cl,%edx
    5608:	89 10                	mov    %edx,(%rax)
    560a:	48 8b 05 77 9d 60 00 	mov    0x609d77(%rip),%rax        # 60f388 <f_boot>
    5611:	48 83 c0 04          	add    $0x4,%rax
    5615:	89 c2                	mov    %eax,%edx
    5617:	48 8b 05 6a 9d 60 00 	mov    0x609d6a(%rip),%rax        # 60f388 <f_boot>
    561e:	29 c2                	sub    %eax,%edx
    5620:	89 d0                	mov    %edx,%eax
    5622:	48 63 d0             	movslq %eax,%rdx
    5625:	48 8d 05 b4 9a 20 00 	lea    0x209ab4(%rip),%rax        # 20f0e0 <mem>
    562c:	48 01 d0             	add    %rdx,%rax
    562f:	8b 10                	mov    (%rax),%edx
    5631:	48 8b 05 50 9d 60 00 	mov    0x609d50(%rip),%rax        # 60f388 <f_boot>
    5638:	48 83 c0 04          	add    $0x4,%rax
    563c:	89 c1                	mov    %eax,%ecx
    563e:	48 8b 05 43 9d 60 00 	mov    0x609d43(%rip),%rax        # 60f388 <f_boot>
    5645:	29 c1                	sub    %eax,%ecx
    5647:	89 c8                	mov    %ecx,%eax
    5649:	48 63 c8             	movslq %eax,%rcx
    564c:	48 8d 05 8d 9a 20 00 	lea    0x209a8d(%rip),%rax        # 20f0e0 <mem>
    5653:	48 01 c8             	add    %rcx,%rax
    5656:	83 c2 04             	add    $0x4,%edx
    5659:	89 10                	mov    %edx,(%rax)
    565b:	e9 e9 4d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_umSmod:/*um/mod*/if(CELL(sp)<=CELL(sp+4)) { /*overflow */
    5660:	48 8b 05 21 9d 60 00 	mov    0x609d21(%rip),%rax        # 60f388 <f_boot>
    5667:	48 83 c0 04          	add    $0x4,%rax
    566b:	89 c2                	mov    %eax,%edx
    566d:	48 8b 05 14 9d 60 00 	mov    0x609d14(%rip),%rax        # 60f388 <f_boot>
    5674:	29 c2                	sub    %eax,%edx
    5676:	89 d0                	mov    %edx,%eax
    5678:	48 63 d0             	movslq %eax,%rdx
    567b:	48 8d 05 5e 9a 20 00 	lea    0x209a5e(%rip),%rax        # 20f0e0 <mem>
    5682:	48 01 d0             	add    %rdx,%rax
    5685:	8b 00                	mov    (%rax),%eax
    5687:	89 c7                	mov    %eax,%edi
    5689:	e8 df b7 ff ff       	callq  e6d <v2r>
    568e:	8b 18                	mov    (%rax),%ebx
    5690:	48 8b 05 f1 9c 60 00 	mov    0x609cf1(%rip),%rax        # 60f388 <f_boot>
    5697:	48 83 c0 04          	add    $0x4,%rax
    569b:	89 c2                	mov    %eax,%edx
    569d:	48 8b 05 e4 9c 60 00 	mov    0x609ce4(%rip),%rax        # 60f388 <f_boot>
    56a4:	29 c2                	sub    %eax,%edx
    56a6:	89 d0                	mov    %edx,%eax
    56a8:	48 63 d0             	movslq %eax,%rdx
    56ab:	48 8d 05 2e 9a 20 00 	lea    0x209a2e(%rip),%rax        # 20f0e0 <mem>
    56b2:	48 01 d0             	add    %rdx,%rax
    56b5:	8b 00                	mov    (%rax),%eax
    56b7:	83 c0 04             	add    $0x4,%eax
    56ba:	89 c7                	mov    %eax,%edi
    56bc:	e8 ac b7 ff ff       	callq  e6d <v2r>
    56c1:	8b 00                	mov    (%rax),%eax
    56c3:	39 c3                	cmp    %eax,%ebx
    56c5:	0f 87 c1 00 00 00    	ja     578c <virtual_machine+0x23b4>
//                         interrupt=overflow;  goto doint;
    	 	 	 	 sp+=4;CELL(sp)=(__u32)-1;CELL(sp+4)=(__u32)-1; break;
    56cb:	48 8b 05 b6 9c 60 00 	mov    0x609cb6(%rip),%rax        # 60f388 <f_boot>
    56d2:	48 83 c0 04          	add    $0x4,%rax
    56d6:	89 c2                	mov    %eax,%edx
    56d8:	48 8b 05 a9 9c 60 00 	mov    0x609ca9(%rip),%rax        # 60f388 <f_boot>
    56df:	29 c2                	sub    %eax,%edx
    56e1:	89 d0                	mov    %edx,%eax
    56e3:	48 63 d0             	movslq %eax,%rdx
    56e6:	48 8d 05 f3 99 20 00 	lea    0x2099f3(%rip),%rax        # 20f0e0 <mem>
    56ed:	48 01 d0             	add    %rdx,%rax
    56f0:	8b 10                	mov    (%rax),%edx
    56f2:	48 8b 05 8f 9c 60 00 	mov    0x609c8f(%rip),%rax        # 60f388 <f_boot>
    56f9:	48 83 c0 04          	add    $0x4,%rax
    56fd:	89 c1                	mov    %eax,%ecx
    56ff:	48 8b 05 82 9c 60 00 	mov    0x609c82(%rip),%rax        # 60f388 <f_boot>
    5706:	29 c1                	sub    %eax,%ecx
    5708:	89 c8                	mov    %ecx,%eax
    570a:	48 63 c8             	movslq %eax,%rcx
    570d:	48 8d 05 cc 99 20 00 	lea    0x2099cc(%rip),%rax        # 20f0e0 <mem>
    5714:	48 01 c8             	add    %rcx,%rax
    5717:	83 c2 04             	add    $0x4,%edx
    571a:	89 10                	mov    %edx,(%rax)
    571c:	48 8b 05 65 9c 60 00 	mov    0x609c65(%rip),%rax        # 60f388 <f_boot>
    5723:	48 83 c0 04          	add    $0x4,%rax
    5727:	89 c2                	mov    %eax,%edx
    5729:	48 8b 05 58 9c 60 00 	mov    0x609c58(%rip),%rax        # 60f388 <f_boot>
    5730:	29 c2                	sub    %eax,%edx
    5732:	89 d0                	mov    %edx,%eax
    5734:	48 63 d0             	movslq %eax,%rdx
    5737:	48 8d 05 a2 99 20 00 	lea    0x2099a2(%rip),%rax        # 20f0e0 <mem>
    573e:	48 01 d0             	add    %rdx,%rax
    5741:	8b 00                	mov    (%rax),%eax
    5743:	89 c7                	mov    %eax,%edi
    5745:	e8 23 b7 ff ff       	callq  e6d <v2r>
    574a:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
    5750:	48 8b 05 31 9c 60 00 	mov    0x609c31(%rip),%rax        # 60f388 <f_boot>
    5757:	48 83 c0 04          	add    $0x4,%rax
    575b:	89 c2                	mov    %eax,%edx
    575d:	48 8b 05 24 9c 60 00 	mov    0x609c24(%rip),%rax        # 60f388 <f_boot>
    5764:	29 c2                	sub    %eax,%edx
    5766:	89 d0                	mov    %edx,%eax
    5768:	48 63 d0             	movslq %eax,%rdx
    576b:	48 8d 05 6e 99 20 00 	lea    0x20996e(%rip),%rax        # 20f0e0 <mem>
    5772:	48 01 d0             	add    %rdx,%rax
    5775:	8b 00                	mov    (%rax),%eax
    5777:	83 c0 04             	add    $0x4,%eax
    577a:	89 c7                	mov    %eax,%edi
    577c:	e8 ec b6 ff ff       	callq  e6d <v2r>
    5781:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
    5787:	e9 bd 4c 00 00       	jmpq   a449 <virtual_machine+0x7071>
                       }
                        udiv(&CELL(sp),&CELL(sp+4),&CELL(sp+8));
    578c:	48 8b 05 f5 9b 60 00 	mov    0x609bf5(%rip),%rax        # 60f388 <f_boot>
    5793:	48 83 c0 04          	add    $0x4,%rax
    5797:	89 c2                	mov    %eax,%edx
    5799:	48 8b 05 e8 9b 60 00 	mov    0x609be8(%rip),%rax        # 60f388 <f_boot>
    57a0:	29 c2                	sub    %eax,%edx
    57a2:	89 d0                	mov    %edx,%eax
    57a4:	48 63 d0             	movslq %eax,%rdx
    57a7:	48 8d 05 32 99 20 00 	lea    0x209932(%rip),%rax        # 20f0e0 <mem>
    57ae:	48 01 d0             	add    %rdx,%rax
    57b1:	8b 00                	mov    (%rax),%eax
    57b3:	83 c0 08             	add    $0x8,%eax
    57b6:	89 c7                	mov    %eax,%edi
    57b8:	e8 b0 b6 ff ff       	callq  e6d <v2r>
    57bd:	49 89 c4             	mov    %rax,%r12
    57c0:	48 8b 05 c1 9b 60 00 	mov    0x609bc1(%rip),%rax        # 60f388 <f_boot>
    57c7:	48 83 c0 04          	add    $0x4,%rax
    57cb:	89 c2                	mov    %eax,%edx
    57cd:	48 8b 05 b4 9b 60 00 	mov    0x609bb4(%rip),%rax        # 60f388 <f_boot>
    57d4:	29 c2                	sub    %eax,%edx
    57d6:	89 d0                	mov    %edx,%eax
    57d8:	48 63 d0             	movslq %eax,%rdx
    57db:	48 8d 05 fe 98 20 00 	lea    0x2098fe(%rip),%rax        # 20f0e0 <mem>
    57e2:	48 01 d0             	add    %rdx,%rax
    57e5:	8b 00                	mov    (%rax),%eax
    57e7:	83 c0 04             	add    $0x4,%eax
    57ea:	89 c7                	mov    %eax,%edi
    57ec:	e8 7c b6 ff ff       	callq  e6d <v2r>
    57f1:	48 89 c3             	mov    %rax,%rbx
    57f4:	48 8b 05 8d 9b 60 00 	mov    0x609b8d(%rip),%rax        # 60f388 <f_boot>
    57fb:	48 83 c0 04          	add    $0x4,%rax
    57ff:	89 c2                	mov    %eax,%edx
    5801:	48 8b 05 80 9b 60 00 	mov    0x609b80(%rip),%rax        # 60f388 <f_boot>
    5808:	29 c2                	sub    %eax,%edx
    580a:	89 d0                	mov    %edx,%eax
    580c:	48 63 d0             	movslq %eax,%rdx
    580f:	48 8d 05 ca 98 20 00 	lea    0x2098ca(%rip),%rax        # 20f0e0 <mem>
    5816:	48 01 d0             	add    %rdx,%rax
    5819:	8b 00                	mov    (%rax),%eax
    581b:	89 c7                	mov    %eax,%edi
    581d:	e8 4b b6 ff ff       	callq  e6d <v2r>
    5822:	4c 89 e2             	mov    %r12,%rdx
    5825:	48 89 de             	mov    %rbx,%rsi
    5828:	48 89 c7             	mov    %rax,%rdi
    582b:	e8 cd b7 ff ff       	callq  ffd <udiv>
                        sp+=4;
    5830:	48 8b 05 51 9b 60 00 	mov    0x609b51(%rip),%rax        # 60f388 <f_boot>
    5837:	48 83 c0 04          	add    $0x4,%rax
    583b:	89 c2                	mov    %eax,%edx
    583d:	48 8b 05 44 9b 60 00 	mov    0x609b44(%rip),%rax        # 60f388 <f_boot>
    5844:	29 c2                	sub    %eax,%edx
    5846:	89 d0                	mov    %edx,%eax
    5848:	48 63 d0             	movslq %eax,%rdx
    584b:	48 8d 05 8e 98 20 00 	lea    0x20988e(%rip),%rax        # 20f0e0 <mem>
    5852:	48 01 d0             	add    %rdx,%rax
    5855:	8b 10                	mov    (%rax),%edx
    5857:	48 8b 05 2a 9b 60 00 	mov    0x609b2a(%rip),%rax        # 60f388 <f_boot>
    585e:	48 83 c0 04          	add    $0x4,%rax
    5862:	89 c1                	mov    %eax,%ecx
    5864:	48 8b 05 1d 9b 60 00 	mov    0x609b1d(%rip),%rax        # 60f388 <f_boot>
    586b:	29 c1                	sub    %eax,%ecx
    586d:	89 c8                	mov    %ecx,%eax
    586f:	48 63 c8             	movslq %eax,%rcx
    5872:	48 8d 05 67 98 20 00 	lea    0x209867(%rip),%rax        # 20f0e0 <mem>
    5879:	48 01 c8             	add    %rcx,%rax
    587c:	83 c2 04             	add    $0x4,%edx
    587f:	89 10                	mov    %edx,(%rax)
                       break;
    5881:	e9 c3 4b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_addcy:	/* +cy */ { __u32 sum; if(CELL(sp)) { /* carry in */
    5886:	48 8b 05 fb 9a 60 00 	mov    0x609afb(%rip),%rax        # 60f388 <f_boot>
    588d:	48 83 c0 04          	add    $0x4,%rax
    5891:	89 c2                	mov    %eax,%edx
    5893:	48 8b 05 ee 9a 60 00 	mov    0x609aee(%rip),%rax        # 60f388 <f_boot>
    589a:	29 c2                	sub    %eax,%edx
    589c:	89 d0                	mov    %edx,%eax
    589e:	48 63 d0             	movslq %eax,%rdx
    58a1:	48 8d 05 38 98 20 00 	lea    0x209838(%rip),%rax        # 20f0e0 <mem>
    58a8:	48 01 d0             	add    %rdx,%rax
    58ab:	8b 00                	mov    (%rax),%eax
    58ad:	89 c7                	mov    %eax,%edi
    58af:	e8 b9 b5 ff ff       	callq  e6d <v2r>
    58b4:	8b 00                	mov    (%rax),%eax
    58b6:	85 c0                	test   %eax,%eax
    58b8:	0f 84 72 01 00 00    	je     5a30 <virtual_machine+0x2658>
                          sum=CELL(sp+8)+CELL(sp+4)+1;
    58be:	48 8b 05 c3 9a 60 00 	mov    0x609ac3(%rip),%rax        # 60f388 <f_boot>
    58c5:	48 83 c0 04          	add    $0x4,%rax
    58c9:	89 c2                	mov    %eax,%edx
    58cb:	48 8b 05 b6 9a 60 00 	mov    0x609ab6(%rip),%rax        # 60f388 <f_boot>
    58d2:	29 c2                	sub    %eax,%edx
    58d4:	89 d0                	mov    %edx,%eax
    58d6:	48 63 d0             	movslq %eax,%rdx
    58d9:	48 8d 05 00 98 20 00 	lea    0x209800(%rip),%rax        # 20f0e0 <mem>
    58e0:	48 01 d0             	add    %rdx,%rax
    58e3:	8b 00                	mov    (%rax),%eax
    58e5:	83 c0 08             	add    $0x8,%eax
    58e8:	89 c7                	mov    %eax,%edi
    58ea:	e8 7e b5 ff ff       	callq  e6d <v2r>
    58ef:	8b 18                	mov    (%rax),%ebx
    58f1:	48 8b 05 90 9a 60 00 	mov    0x609a90(%rip),%rax        # 60f388 <f_boot>
    58f8:	48 83 c0 04          	add    $0x4,%rax
    58fc:	89 c2                	mov    %eax,%edx
    58fe:	48 8b 05 83 9a 60 00 	mov    0x609a83(%rip),%rax        # 60f388 <f_boot>
    5905:	29 c2                	sub    %eax,%edx
    5907:	89 d0                	mov    %edx,%eax
    5909:	48 63 d0             	movslq %eax,%rdx
    590c:	48 8d 05 cd 97 20 00 	lea    0x2097cd(%rip),%rax        # 20f0e0 <mem>
    5913:	48 01 d0             	add    %rdx,%rax
    5916:	8b 00                	mov    (%rax),%eax
    5918:	83 c0 04             	add    $0x4,%eax
    591b:	89 c7                	mov    %eax,%edi
    591d:	e8 4b b5 ff ff       	callq  e6d <v2r>
    5922:	8b 00                	mov    (%rax),%eax
    5924:	01 d8                	add    %ebx,%eax
    5926:	83 c0 01             	add    $0x1,%eax
    5929:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
                          sp+=4;
    592f:	48 8b 05 52 9a 60 00 	mov    0x609a52(%rip),%rax        # 60f388 <f_boot>
    5936:	48 83 c0 04          	add    $0x4,%rax
    593a:	89 c2                	mov    %eax,%edx
    593c:	48 8b 05 45 9a 60 00 	mov    0x609a45(%rip),%rax        # 60f388 <f_boot>
    5943:	29 c2                	sub    %eax,%edx
    5945:	89 d0                	mov    %edx,%eax
    5947:	48 63 d0             	movslq %eax,%rdx
    594a:	48 8d 05 8f 97 20 00 	lea    0x20978f(%rip),%rax        # 20f0e0 <mem>
    5951:	48 01 d0             	add    %rdx,%rax
    5954:	8b 10                	mov    (%rax),%edx
    5956:	48 8b 05 2b 9a 60 00 	mov    0x609a2b(%rip),%rax        # 60f388 <f_boot>
    595d:	48 83 c0 04          	add    $0x4,%rax
    5961:	89 c1                	mov    %eax,%ecx
    5963:	48 8b 05 1e 9a 60 00 	mov    0x609a1e(%rip),%rax        # 60f388 <f_boot>
    596a:	29 c1                	sub    %eax,%ecx
    596c:	89 c8                	mov    %ecx,%eax
    596e:	48 63 c8             	movslq %eax,%rcx
    5971:	48 8d 05 68 97 20 00 	lea    0x209768(%rip),%rax        # 20f0e0 <mem>
    5978:	48 01 c8             	add    %rcx,%rax
    597b:	83 c2 04             	add    $0x4,%edx
    597e:	89 10                	mov    %edx,(%rax)
                          CELL(sp)=(sum<=CELL(sp));
    5980:	48 8b 05 01 9a 60 00 	mov    0x609a01(%rip),%rax        # 60f388 <f_boot>
    5987:	48 83 c0 04          	add    $0x4,%rax
    598b:	89 c2                	mov    %eax,%edx
    598d:	48 8b 05 f4 99 60 00 	mov    0x6099f4(%rip),%rax        # 60f388 <f_boot>
    5994:	29 c2                	sub    %eax,%edx
    5996:	89 d0                	mov    %edx,%eax
    5998:	48 63 d0             	movslq %eax,%rdx
    599b:	48 8d 05 3e 97 20 00 	lea    0x20973e(%rip),%rax        # 20f0e0 <mem>
    59a2:	48 01 d0             	add    %rdx,%rax
    59a5:	8b 00                	mov    (%rax),%eax
    59a7:	89 c7                	mov    %eax,%edi
    59a9:	e8 bf b4 ff ff       	callq  e6d <v2r>
    59ae:	8b 00                	mov    (%rax),%eax
    59b0:	39 85 b4 fe ff ff    	cmp    %eax,-0x14c(%rbp)
    59b6:	0f 96 c3             	setbe  %bl
    59b9:	48 8b 05 c8 99 60 00 	mov    0x6099c8(%rip),%rax        # 60f388 <f_boot>
    59c0:	48 83 c0 04          	add    $0x4,%rax
    59c4:	89 c2                	mov    %eax,%edx
    59c6:	48 8b 05 bb 99 60 00 	mov    0x6099bb(%rip),%rax        # 60f388 <f_boot>
    59cd:	29 c2                	sub    %eax,%edx
    59cf:	89 d0                	mov    %edx,%eax
    59d1:	48 63 d0             	movslq %eax,%rdx
    59d4:	48 8d 05 05 97 20 00 	lea    0x209705(%rip),%rax        # 20f0e0 <mem>
    59db:	48 01 d0             	add    %rdx,%rax
    59de:	8b 00                	mov    (%rax),%eax
    59e0:	89 c7                	mov    %eax,%edi
    59e2:	e8 86 b4 ff ff       	callq  e6d <v2r>
    59e7:	48 89 c2             	mov    %rax,%rdx
    59ea:	0f b6 c3             	movzbl %bl,%eax
    59ed:	89 02                	mov    %eax,(%rdx)
                          CELL(sp+4)=sum;
    59ef:	48 8b 05 92 99 60 00 	mov    0x609992(%rip),%rax        # 60f388 <f_boot>
    59f6:	48 83 c0 04          	add    $0x4,%rax
    59fa:	89 c2                	mov    %eax,%edx
    59fc:	48 8b 05 85 99 60 00 	mov    0x609985(%rip),%rax        # 60f388 <f_boot>
    5a03:	29 c2                	sub    %eax,%edx
    5a05:	89 d0                	mov    %edx,%eax
    5a07:	48 63 d0             	movslq %eax,%rdx
    5a0a:	48 8d 05 cf 96 20 00 	lea    0x2096cf(%rip),%rax        # 20f0e0 <mem>
    5a11:	48 01 d0             	add    %rdx,%rax
    5a14:	8b 00                	mov    (%rax),%eax
    5a16:	83 c0 04             	add    $0x4,%eax
    5a19:	89 c7                	mov    %eax,%edi
    5a1b:	e8 4d b4 ff ff       	callq  e6d <v2r>
    5a20:	48 89 c2             	mov    %rax,%rdx
    5a23:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    5a29:	89 02                	mov    %eax,(%rdx)
                          sum=CELL(sp+8)+CELL(sp+4);
                          sp+=4;
                          CELL(sp)=(sum<CELL(sp));
                          CELL(sp+4)=sum;
                         }
                       }break;
    5a2b:	e9 19 4a 00 00       	jmpq   a449 <virtual_machine+0x7071>
                          sum=CELL(sp+8)+CELL(sp+4);
    5a30:	48 8b 05 51 99 60 00 	mov    0x609951(%rip),%rax        # 60f388 <f_boot>
    5a37:	48 83 c0 04          	add    $0x4,%rax
    5a3b:	89 c2                	mov    %eax,%edx
    5a3d:	48 8b 05 44 99 60 00 	mov    0x609944(%rip),%rax        # 60f388 <f_boot>
    5a44:	29 c2                	sub    %eax,%edx
    5a46:	89 d0                	mov    %edx,%eax
    5a48:	48 63 d0             	movslq %eax,%rdx
    5a4b:	48 8d 05 8e 96 20 00 	lea    0x20968e(%rip),%rax        # 20f0e0 <mem>
    5a52:	48 01 d0             	add    %rdx,%rax
    5a55:	8b 00                	mov    (%rax),%eax
    5a57:	83 c0 08             	add    $0x8,%eax
    5a5a:	89 c7                	mov    %eax,%edi
    5a5c:	e8 0c b4 ff ff       	callq  e6d <v2r>
    5a61:	8b 18                	mov    (%rax),%ebx
    5a63:	48 8b 05 1e 99 60 00 	mov    0x60991e(%rip),%rax        # 60f388 <f_boot>
    5a6a:	48 83 c0 04          	add    $0x4,%rax
    5a6e:	89 c2                	mov    %eax,%edx
    5a70:	48 8b 05 11 99 60 00 	mov    0x609911(%rip),%rax        # 60f388 <f_boot>
    5a77:	29 c2                	sub    %eax,%edx
    5a79:	89 d0                	mov    %edx,%eax
    5a7b:	48 63 d0             	movslq %eax,%rdx
    5a7e:	48 8d 05 5b 96 20 00 	lea    0x20965b(%rip),%rax        # 20f0e0 <mem>
    5a85:	48 01 d0             	add    %rdx,%rax
    5a88:	8b 00                	mov    (%rax),%eax
    5a8a:	83 c0 04             	add    $0x4,%eax
    5a8d:	89 c7                	mov    %eax,%edi
    5a8f:	e8 d9 b3 ff ff       	callq  e6d <v2r>
    5a94:	8b 00                	mov    (%rax),%eax
    5a96:	01 d8                	add    %ebx,%eax
    5a98:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
                          sp+=4;
    5a9e:	48 8b 05 e3 98 60 00 	mov    0x6098e3(%rip),%rax        # 60f388 <f_boot>
    5aa5:	48 83 c0 04          	add    $0x4,%rax
    5aa9:	89 c2                	mov    %eax,%edx
    5aab:	48 8b 05 d6 98 60 00 	mov    0x6098d6(%rip),%rax        # 60f388 <f_boot>
    5ab2:	29 c2                	sub    %eax,%edx
    5ab4:	89 d0                	mov    %edx,%eax
    5ab6:	48 63 d0             	movslq %eax,%rdx
    5ab9:	48 8d 05 20 96 20 00 	lea    0x209620(%rip),%rax        # 20f0e0 <mem>
    5ac0:	48 01 d0             	add    %rdx,%rax
    5ac3:	8b 10                	mov    (%rax),%edx
    5ac5:	48 8b 05 bc 98 60 00 	mov    0x6098bc(%rip),%rax        # 60f388 <f_boot>
    5acc:	48 83 c0 04          	add    $0x4,%rax
    5ad0:	89 c1                	mov    %eax,%ecx
    5ad2:	48 8b 05 af 98 60 00 	mov    0x6098af(%rip),%rax        # 60f388 <f_boot>
    5ad9:	29 c1                	sub    %eax,%ecx
    5adb:	89 c8                	mov    %ecx,%eax
    5add:	48 63 c8             	movslq %eax,%rcx
    5ae0:	48 8d 05 f9 95 20 00 	lea    0x2095f9(%rip),%rax        # 20f0e0 <mem>
    5ae7:	48 01 c8             	add    %rcx,%rax
    5aea:	83 c2 04             	add    $0x4,%edx
    5aed:	89 10                	mov    %edx,(%rax)
                          CELL(sp)=(sum<CELL(sp));
    5aef:	48 8b 05 92 98 60 00 	mov    0x609892(%rip),%rax        # 60f388 <f_boot>
    5af6:	48 83 c0 04          	add    $0x4,%rax
    5afa:	89 c2                	mov    %eax,%edx
    5afc:	48 8b 05 85 98 60 00 	mov    0x609885(%rip),%rax        # 60f388 <f_boot>
    5b03:	29 c2                	sub    %eax,%edx
    5b05:	89 d0                	mov    %edx,%eax
    5b07:	48 63 d0             	movslq %eax,%rdx
    5b0a:	48 8d 05 cf 95 20 00 	lea    0x2095cf(%rip),%rax        # 20f0e0 <mem>
    5b11:	48 01 d0             	add    %rdx,%rax
    5b14:	8b 00                	mov    (%rax),%eax
    5b16:	89 c7                	mov    %eax,%edi
    5b18:	e8 50 b3 ff ff       	callq  e6d <v2r>
    5b1d:	8b 00                	mov    (%rax),%eax
    5b1f:	39 85 b4 fe ff ff    	cmp    %eax,-0x14c(%rbp)
    5b25:	0f 92 c3             	setb   %bl
    5b28:	48 8b 05 59 98 60 00 	mov    0x609859(%rip),%rax        # 60f388 <f_boot>
    5b2f:	48 83 c0 04          	add    $0x4,%rax
    5b33:	89 c2                	mov    %eax,%edx
    5b35:	48 8b 05 4c 98 60 00 	mov    0x60984c(%rip),%rax        # 60f388 <f_boot>
    5b3c:	29 c2                	sub    %eax,%edx
    5b3e:	89 d0                	mov    %edx,%eax
    5b40:	48 63 d0             	movslq %eax,%rdx
    5b43:	48 8d 05 96 95 20 00 	lea    0x209596(%rip),%rax        # 20f0e0 <mem>
    5b4a:	48 01 d0             	add    %rdx,%rax
    5b4d:	8b 00                	mov    (%rax),%eax
    5b4f:	89 c7                	mov    %eax,%edi
    5b51:	e8 17 b3 ff ff       	callq  e6d <v2r>
    5b56:	48 89 c2             	mov    %rax,%rdx
    5b59:	0f b6 c3             	movzbl %bl,%eax
    5b5c:	89 02                	mov    %eax,(%rdx)
                          CELL(sp+4)=sum;
    5b5e:	48 8b 05 23 98 60 00 	mov    0x609823(%rip),%rax        # 60f388 <f_boot>
    5b65:	48 83 c0 04          	add    $0x4,%rax
    5b69:	89 c2                	mov    %eax,%edx
    5b6b:	48 8b 05 16 98 60 00 	mov    0x609816(%rip),%rax        # 60f388 <f_boot>
    5b72:	29 c2                	sub    %eax,%edx
    5b74:	89 d0                	mov    %edx,%eax
    5b76:	48 63 d0             	movslq %eax,%rdx
    5b79:	48 8d 05 60 95 20 00 	lea    0x209560(%rip),%rax        # 20f0e0 <mem>
    5b80:	48 01 d0             	add    %rdx,%rax
    5b83:	8b 00                	mov    (%rax),%eax
    5b85:	83 c0 04             	add    $0x4,%eax
    5b88:	89 c7                	mov    %eax,%edi
    5b8a:	e8 de b2 ff ff       	callq  e6d <v2r>
    5b8f:	48 89 c2             	mov    %rax,%rdx
    5b92:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
    5b98:	89 02                	mov    %eax,(%rdx)
                       }break;
    5b9a:	e9 aa 48 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Dadd:	/* d+ */
     	 	 	 { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
    5b9f:	48 8b 05 e2 97 60 00 	mov    0x6097e2(%rip),%rax        # 60f388 <f_boot>
    5ba6:	48 83 c0 04          	add    $0x4,%rax
    5baa:	89 c2                	mov    %eax,%edx
    5bac:	48 8b 05 d5 97 60 00 	mov    0x6097d5(%rip),%rax        # 60f388 <f_boot>
    5bb3:	29 c2                	sub    %eax,%edx
    5bb5:	89 d0                	mov    %edx,%eax
    5bb7:	48 63 d0             	movslq %eax,%rdx
    5bba:	48 8d 05 1f 95 20 00 	lea    0x20951f(%rip),%rax        # 20f0e0 <mem>
    5bc1:	48 01 d0             	add    %rdx,%rax
    5bc4:	8b 00                	mov    (%rax),%eax
    5bc6:	89 c7                	mov    %eax,%edi
    5bc8:	e8 a0 b2 ff ff       	callq  e6d <v2r>
    5bcd:	8b 00                	mov    (%rax),%eax
    5bcf:	89 c0                	mov    %eax,%eax
    5bd1:	48 c1 e0 20          	shl    $0x20,%rax
    5bd5:	48 89 c3             	mov    %rax,%rbx
    5bd8:	48 8b 05 a9 97 60 00 	mov    0x6097a9(%rip),%rax        # 60f388 <f_boot>
    5bdf:	48 83 c0 04          	add    $0x4,%rax
    5be3:	89 c2                	mov    %eax,%edx
    5be5:	48 8b 05 9c 97 60 00 	mov    0x60979c(%rip),%rax        # 60f388 <f_boot>
    5bec:	29 c2                	sub    %eax,%edx
    5bee:	89 d0                	mov    %edx,%eax
    5bf0:	48 63 d0             	movslq %eax,%rdx
    5bf3:	48 8d 05 e6 94 20 00 	lea    0x2094e6(%rip),%rax        # 20f0e0 <mem>
    5bfa:	48 01 d0             	add    %rdx,%rax
    5bfd:	8b 00                	mov    (%rax),%eax
    5bff:	83 c0 04             	add    $0x4,%eax
    5c02:	89 c7                	mov    %eax,%edi
    5c04:	e8 64 b2 ff ff       	callq  e6d <v2r>
    5c09:	8b 00                	mov    (%rax),%eax
    5c0b:	89 c0                	mov    %eax,%eax
    5c0d:	48 01 c3             	add    %rax,%rbx
     	 	 		 ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
    5c10:	48 8b 05 71 97 60 00 	mov    0x609771(%rip),%rax        # 60f388 <f_boot>
    5c17:	48 83 c0 04          	add    $0x4,%rax
    5c1b:	89 c2                	mov    %eax,%edx
    5c1d:	48 8b 05 64 97 60 00 	mov    0x609764(%rip),%rax        # 60f388 <f_boot>
    5c24:	29 c2                	sub    %eax,%edx
    5c26:	89 d0                	mov    %edx,%eax
    5c28:	48 63 d0             	movslq %eax,%rdx
    5c2b:	48 8d 05 ae 94 20 00 	lea    0x2094ae(%rip),%rax        # 20f0e0 <mem>
    5c32:	48 01 d0             	add    %rdx,%rax
    5c35:	8b 00                	mov    (%rax),%eax
    5c37:	83 c0 08             	add    $0x8,%eax
    5c3a:	89 c7                	mov    %eax,%edi
    5c3c:	e8 2c b2 ff ff       	callq  e6d <v2r>
    5c41:	8b 00                	mov    (%rax),%eax
    5c43:	89 c0                	mov    %eax,%eax
    5c45:	48 c1 e0 20          	shl    $0x20,%rax
     	 	 	 { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
    5c49:	48 01 c3             	add    %rax,%rbx
     	 	 		 ((__u64)CELL(sp+8)<<32) + (__u64)CELL(sp+12);
    5c4c:	48 8b 05 35 97 60 00 	mov    0x609735(%rip),%rax        # 60f388 <f_boot>
    5c53:	48 83 c0 04          	add    $0x4,%rax
    5c57:	89 c2                	mov    %eax,%edx
    5c59:	48 8b 05 28 97 60 00 	mov    0x609728(%rip),%rax        # 60f388 <f_boot>
    5c60:	29 c2                	sub    %eax,%edx
    5c62:	89 d0                	mov    %edx,%eax
    5c64:	48 63 d0             	movslq %eax,%rdx
    5c67:	48 8d 05 72 94 20 00 	lea    0x209472(%rip),%rax        # 20f0e0 <mem>
    5c6e:	48 01 d0             	add    %rdx,%rax
    5c71:	8b 00                	mov    (%rax),%eax
    5c73:	83 c0 0c             	add    $0xc,%eax
    5c76:	89 c7                	mov    %eax,%edi
    5c78:	e8 f0 b1 ff ff       	callq  e6d <v2r>
    5c7d:	8b 00                	mov    (%rax),%eax
    5c7f:	89 c0                	mov    %eax,%eax
     	 	 	 { __u64 sum= ((__u64)CELL(sp)<<32) + (__u64)CELL(sp+4) +
    5c81:	48 01 d8             	add    %rbx,%rax
    5c84:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
                 CELL(sp+8)=sum>>32;
    5c8b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    5c92:	48 c1 e8 20          	shr    $0x20,%rax
    5c96:	48 89 c3             	mov    %rax,%rbx
    5c99:	48 8b 05 e8 96 60 00 	mov    0x6096e8(%rip),%rax        # 60f388 <f_boot>
    5ca0:	48 83 c0 04          	add    $0x4,%rax
    5ca4:	89 c2                	mov    %eax,%edx
    5ca6:	48 8b 05 db 96 60 00 	mov    0x6096db(%rip),%rax        # 60f388 <f_boot>
    5cad:	29 c2                	sub    %eax,%edx
    5caf:	89 d0                	mov    %edx,%eax
    5cb1:	48 63 d0             	movslq %eax,%rdx
    5cb4:	48 8d 05 25 94 20 00 	lea    0x209425(%rip),%rax        # 20f0e0 <mem>
    5cbb:	48 01 d0             	add    %rdx,%rax
    5cbe:	8b 00                	mov    (%rax),%eax
    5cc0:	83 c0 08             	add    $0x8,%eax
    5cc3:	89 c7                	mov    %eax,%edi
    5cc5:	e8 a3 b1 ff ff       	callq  e6d <v2r>
    5cca:	89 da                	mov    %ebx,%edx
    5ccc:	89 10                	mov    %edx,(%rax)
                 CELL(sp+12)=sum; sp+=8;break;
    5cce:	48 8b 05 b3 96 60 00 	mov    0x6096b3(%rip),%rax        # 60f388 <f_boot>
    5cd5:	48 83 c0 04          	add    $0x4,%rax
    5cd9:	89 c2                	mov    %eax,%edx
    5cdb:	48 8b 05 a6 96 60 00 	mov    0x6096a6(%rip),%rax        # 60f388 <f_boot>
    5ce2:	29 c2                	sub    %eax,%edx
    5ce4:	89 d0                	mov    %edx,%eax
    5ce6:	48 63 d0             	movslq %eax,%rdx
    5ce9:	48 8d 05 f0 93 20 00 	lea    0x2093f0(%rip),%rax        # 20f0e0 <mem>
    5cf0:	48 01 d0             	add    %rdx,%rax
    5cf3:	8b 00                	mov    (%rax),%eax
    5cf5:	83 c0 0c             	add    $0xc,%eax
    5cf8:	89 c7                	mov    %eax,%edi
    5cfa:	e8 6e b1 ff ff       	callq  e6d <v2r>
    5cff:	48 89 c2             	mov    %rax,%rdx
    5d02:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    5d09:	89 02                	mov    %eax,(%rdx)
    5d0b:	48 8b 05 76 96 60 00 	mov    0x609676(%rip),%rax        # 60f388 <f_boot>
    5d12:	48 83 c0 04          	add    $0x4,%rax
    5d16:	89 c2                	mov    %eax,%edx
    5d18:	48 8b 05 69 96 60 00 	mov    0x609669(%rip),%rax        # 60f388 <f_boot>
    5d1f:	29 c2                	sub    %eax,%edx
    5d21:	89 d0                	mov    %edx,%eax
    5d23:	48 63 d0             	movslq %eax,%rdx
    5d26:	48 8d 05 b3 93 20 00 	lea    0x2093b3(%rip),%rax        # 20f0e0 <mem>
    5d2d:	48 01 d0             	add    %rdx,%rax
    5d30:	8b 10                	mov    (%rax),%edx
    5d32:	48 8b 05 4f 96 60 00 	mov    0x60964f(%rip),%rax        # 60f388 <f_boot>
    5d39:	48 83 c0 04          	add    $0x4,%rax
    5d3d:	89 c1                	mov    %eax,%ecx
    5d3f:	48 8b 05 42 96 60 00 	mov    0x609642(%rip),%rax        # 60f388 <f_boot>
    5d46:	29 c1                	sub    %eax,%ecx
    5d48:	89 c8                	mov    %ecx,%eax
    5d4a:	48 63 c8             	movslq %eax,%rcx
    5d4d:	48 8d 05 8c 93 20 00 	lea    0x20938c(%rip),%rax        # 20f0e0 <mem>
    5d54:	48 01 c8             	add    %rcx,%rax
    5d57:	83 c2 08             	add    $0x8,%edx
    5d5a:	89 10                	mov    %edx,(%rax)
    5d5c:	e9 e8 46 00 00       	jmpq   a449 <virtual_machine+0x7071>
     	 	 	 }
     case sw_scan1:/*scan1*/ if(CELL(sp)){ /* scan from right */
    5d61:	48 8b 05 20 96 60 00 	mov    0x609620(%rip),%rax        # 60f388 <f_boot>
    5d68:	48 83 c0 04          	add    $0x4,%rax
    5d6c:	89 c2                	mov    %eax,%edx
    5d6e:	48 8b 05 13 96 60 00 	mov    0x609613(%rip),%rax        # 60f388 <f_boot>
    5d75:	29 c2                	sub    %eax,%edx
    5d77:	89 d0                	mov    %edx,%eax
    5d79:	48 63 d0             	movslq %eax,%rdx
    5d7c:	48 8d 05 5d 93 20 00 	lea    0x20935d(%rip),%rax        # 20f0e0 <mem>
    5d83:	48 01 d0             	add    %rdx,%rax
    5d86:	8b 00                	mov    (%rax),%eax
    5d88:	89 c7                	mov    %eax,%edi
    5d8a:	e8 de b0 ff ff       	callq  e6d <v2r>
    5d8f:	8b 00                	mov    (%rax),%eax
    5d91:	85 c0                	test   %eax,%eax
    5d93:	0f 84 9a 00 00 00    	je     5e33 <virtual_machine+0x2a5b>
                         t=0;while(!(CELL(sp+4)&1) && t<32) {
    5d99:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
    5da0:	00 00 00 
    5da3:	eb 3e                	jmp    5de3 <virtual_machine+0x2a0b>
                          CELL(sp+4)>>=1;t++;
    5da5:	48 8b 05 dc 95 60 00 	mov    0x6095dc(%rip),%rax        # 60f388 <f_boot>
    5dac:	48 83 c0 04          	add    $0x4,%rax
    5db0:	89 c2                	mov    %eax,%edx
    5db2:	48 8b 05 cf 95 60 00 	mov    0x6095cf(%rip),%rax        # 60f388 <f_boot>
    5db9:	29 c2                	sub    %eax,%edx
    5dbb:	89 d0                	mov    %edx,%eax
    5dbd:	48 63 d0             	movslq %eax,%rdx
    5dc0:	48 8d 05 19 93 20 00 	lea    0x209319(%rip),%rax        # 20f0e0 <mem>
    5dc7:	48 01 d0             	add    %rdx,%rax
    5dca:	8b 00                	mov    (%rax),%eax
    5dcc:	83 c0 04             	add    $0x4,%eax
    5dcf:	89 c7                	mov    %eax,%edi
    5dd1:	e8 97 b0 ff ff       	callq  e6d <v2r>
    5dd6:	8b 10                	mov    (%rax),%edx
    5dd8:	d1 ea                	shr    %edx
    5dda:	89 10                	mov    %edx,(%rax)
    5ddc:	83 85 64 fe ff ff 01 	addl   $0x1,-0x19c(%rbp)
                         t=0;while(!(CELL(sp+4)&1) && t<32) {
    5de3:	48 8b 05 9e 95 60 00 	mov    0x60959e(%rip),%rax        # 60f388 <f_boot>
    5dea:	48 83 c0 04          	add    $0x4,%rax
    5dee:	89 c2                	mov    %eax,%edx
    5df0:	48 8b 05 91 95 60 00 	mov    0x609591(%rip),%rax        # 60f388 <f_boot>
    5df7:	29 c2                	sub    %eax,%edx
    5df9:	89 d0                	mov    %edx,%eax
    5dfb:	48 63 d0             	movslq %eax,%rdx
    5dfe:	48 8d 05 db 92 20 00 	lea    0x2092db(%rip),%rax        # 20f0e0 <mem>
    5e05:	48 01 d0             	add    %rdx,%rax
    5e08:	8b 00                	mov    (%rax),%eax
    5e0a:	83 c0 04             	add    $0x4,%eax
    5e0d:	89 c7                	mov    %eax,%edi
    5e0f:	e8 59 b0 ff ff       	callq  e6d <v2r>
    5e14:	8b 00                	mov    (%rax),%eax
    5e16:	83 e0 01             	and    $0x1,%eax
    5e19:	85 c0                	test   %eax,%eax
    5e1b:	0f 85 9c 00 00 00    	jne    5ebd <virtual_machine+0x2ae5>
    5e21:	83 bd 64 fe ff ff 1f 	cmpl   $0x1f,-0x19c(%rbp)
    5e28:	0f 86 77 ff ff ff    	jbe    5da5 <virtual_machine+0x29cd>
    5e2e:	e9 8a 00 00 00       	jmpq   5ebd <virtual_machine+0x2ae5>
                         }
                       } else {
                         t=0;while(!(CELL(sp+4)&0x80000000) && t<32) {
    5e33:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
    5e3a:	00 00 00 
    5e3d:	eb 3e                	jmp    5e7d <virtual_machine+0x2aa5>
                          CELL(sp+4)<<=1;t++;
    5e3f:	48 8b 05 42 95 60 00 	mov    0x609542(%rip),%rax        # 60f388 <f_boot>
    5e46:	48 83 c0 04          	add    $0x4,%rax
    5e4a:	89 c2                	mov    %eax,%edx
    5e4c:	48 8b 05 35 95 60 00 	mov    0x609535(%rip),%rax        # 60f388 <f_boot>
    5e53:	29 c2                	sub    %eax,%edx
    5e55:	89 d0                	mov    %edx,%eax
    5e57:	48 63 d0             	movslq %eax,%rdx
    5e5a:	48 8d 05 7f 92 20 00 	lea    0x20927f(%rip),%rax        # 20f0e0 <mem>
    5e61:	48 01 d0             	add    %rdx,%rax
    5e64:	8b 00                	mov    (%rax),%eax
    5e66:	83 c0 04             	add    $0x4,%eax
    5e69:	89 c7                	mov    %eax,%edi
    5e6b:	e8 fd af ff ff       	callq  e6d <v2r>
    5e70:	8b 10                	mov    (%rax),%edx
    5e72:	01 d2                	add    %edx,%edx
    5e74:	89 10                	mov    %edx,(%rax)
    5e76:	83 85 64 fe ff ff 01 	addl   $0x1,-0x19c(%rbp)
                         t=0;while(!(CELL(sp+4)&0x80000000) && t<32) {
    5e7d:	48 8b 05 04 95 60 00 	mov    0x609504(%rip),%rax        # 60f388 <f_boot>
    5e84:	48 83 c0 04          	add    $0x4,%rax
    5e88:	89 c2                	mov    %eax,%edx
    5e8a:	48 8b 05 f7 94 60 00 	mov    0x6094f7(%rip),%rax        # 60f388 <f_boot>
    5e91:	29 c2                	sub    %eax,%edx
    5e93:	89 d0                	mov    %edx,%eax
    5e95:	48 63 d0             	movslq %eax,%rdx
    5e98:	48 8d 05 41 92 20 00 	lea    0x209241(%rip),%rax        # 20f0e0 <mem>
    5e9f:	48 01 d0             	add    %rdx,%rax
    5ea2:	8b 00                	mov    (%rax),%eax
    5ea4:	83 c0 04             	add    $0x4,%eax
    5ea7:	89 c7                	mov    %eax,%edi
    5ea9:	e8 bf af ff ff       	callq  e6d <v2r>
    5eae:	8b 00                	mov    (%rax),%eax
    5eb0:	85 c0                	test   %eax,%eax
    5eb2:	78 09                	js     5ebd <virtual_machine+0x2ae5>
    5eb4:	83 bd 64 fe ff ff 1f 	cmpl   $0x1f,-0x19c(%rbp)
    5ebb:	76 82                	jbe    5e3f <virtual_machine+0x2a67>
                         }
                       }sp+=4;CELL(sp)=t;break;
    5ebd:	48 8b 05 c4 94 60 00 	mov    0x6094c4(%rip),%rax        # 60f388 <f_boot>
    5ec4:	48 83 c0 04          	add    $0x4,%rax
    5ec8:	89 c2                	mov    %eax,%edx
    5eca:	48 8b 05 b7 94 60 00 	mov    0x6094b7(%rip),%rax        # 60f388 <f_boot>
    5ed1:	29 c2                	sub    %eax,%edx
    5ed3:	89 d0                	mov    %edx,%eax
    5ed5:	48 63 d0             	movslq %eax,%rdx
    5ed8:	48 8d 05 01 92 20 00 	lea    0x209201(%rip),%rax        # 20f0e0 <mem>
    5edf:	48 01 d0             	add    %rdx,%rax
    5ee2:	8b 10                	mov    (%rax),%edx
    5ee4:	48 8b 05 9d 94 60 00 	mov    0x60949d(%rip),%rax        # 60f388 <f_boot>
    5eeb:	48 83 c0 04          	add    $0x4,%rax
    5eef:	89 c1                	mov    %eax,%ecx
    5ef1:	48 8b 05 90 94 60 00 	mov    0x609490(%rip),%rax        # 60f388 <f_boot>
    5ef8:	29 c1                	sub    %eax,%ecx
    5efa:	89 c8                	mov    %ecx,%eax
    5efc:	48 63 c8             	movslq %eax,%rcx
    5eff:	48 8d 05 da 91 20 00 	lea    0x2091da(%rip),%rax        # 20f0e0 <mem>
    5f06:	48 01 c8             	add    %rcx,%rax
    5f09:	83 c2 04             	add    $0x4,%edx
    5f0c:	89 10                	mov    %edx,(%rax)
    5f0e:	48 8b 05 73 94 60 00 	mov    0x609473(%rip),%rax        # 60f388 <f_boot>
    5f15:	48 83 c0 04          	add    $0x4,%rax
    5f19:	89 c2                	mov    %eax,%edx
    5f1b:	48 8b 05 66 94 60 00 	mov    0x609466(%rip),%rax        # 60f388 <f_boot>
    5f22:	29 c2                	sub    %eax,%edx
    5f24:	89 d0                	mov    %edx,%eax
    5f26:	48 63 d0             	movslq %eax,%rdx
    5f29:	48 8d 05 b0 91 20 00 	lea    0x2091b0(%rip),%rax        # 20f0e0 <mem>
    5f30:	48 01 d0             	add    %rdx,%rax
    5f33:	8b 00                	mov    (%rax),%eax
    5f35:	89 c7                	mov    %eax,%edi
    5f37:	e8 31 af ff ff       	callq  e6d <v2r>
    5f3c:	48 89 c2             	mov    %rax,%rdx
    5f3f:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    5f45:	89 02                	mov    %eax,(%rdx)
    5f47:	e9 fd 44 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_drop:/* drop */ sp+=4;break;
    5f4c:	48 8b 05 35 94 60 00 	mov    0x609435(%rip),%rax        # 60f388 <f_boot>
    5f53:	48 83 c0 04          	add    $0x4,%rax
    5f57:	89 c2                	mov    %eax,%edx
    5f59:	48 8b 05 28 94 60 00 	mov    0x609428(%rip),%rax        # 60f388 <f_boot>
    5f60:	29 c2                	sub    %eax,%edx
    5f62:	89 d0                	mov    %edx,%eax
    5f64:	48 63 d0             	movslq %eax,%rdx
    5f67:	48 8d 05 72 91 20 00 	lea    0x209172(%rip),%rax        # 20f0e0 <mem>
    5f6e:	48 01 d0             	add    %rdx,%rax
    5f71:	8b 10                	mov    (%rax),%edx
    5f73:	48 8b 05 0e 94 60 00 	mov    0x60940e(%rip),%rax        # 60f388 <f_boot>
    5f7a:	48 83 c0 04          	add    $0x4,%rax
    5f7e:	89 c1                	mov    %eax,%ecx
    5f80:	48 8b 05 01 94 60 00 	mov    0x609401(%rip),%rax        # 60f388 <f_boot>
    5f87:	29 c1                	sub    %eax,%ecx
    5f89:	89 c8                	mov    %ecx,%eax
    5f8b:	48 63 c8             	movslq %eax,%rcx
    5f8e:	48 8d 05 4b 91 20 00 	lea    0x20914b(%rip),%rax        # 20f0e0 <mem>
    5f95:	48 01 c8             	add    %rcx,%rax
    5f98:	83 c2 04             	add    $0x4,%edx
    5f9b:	89 10                	mov    %edx,(%rax)
    5f9d:	e9 a7 44 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2drop:/* drop */ sp+=8;break;
    5fa2:	48 8b 05 df 93 60 00 	mov    0x6093df(%rip),%rax        # 60f388 <f_boot>
    5fa9:	48 83 c0 04          	add    $0x4,%rax
    5fad:	89 c2                	mov    %eax,%edx
    5faf:	48 8b 05 d2 93 60 00 	mov    0x6093d2(%rip),%rax        # 60f388 <f_boot>
    5fb6:	29 c2                	sub    %eax,%edx
    5fb8:	89 d0                	mov    %edx,%eax
    5fba:	48 63 d0             	movslq %eax,%rdx
    5fbd:	48 8d 05 1c 91 20 00 	lea    0x20911c(%rip),%rax        # 20f0e0 <mem>
    5fc4:	48 01 d0             	add    %rdx,%rax
    5fc7:	8b 10                	mov    (%rax),%edx
    5fc9:	48 8b 05 b8 93 60 00 	mov    0x6093b8(%rip),%rax        # 60f388 <f_boot>
    5fd0:	48 83 c0 04          	add    $0x4,%rax
    5fd4:	89 c1                	mov    %eax,%ecx
    5fd6:	48 8b 05 ab 93 60 00 	mov    0x6093ab(%rip),%rax        # 60f388 <f_boot>
    5fdd:	29 c1                	sub    %eax,%ecx
    5fdf:	89 c8                	mov    %ecx,%eax
    5fe1:	48 63 c8             	movslq %eax,%rcx
    5fe4:	48 8d 05 f5 90 20 00 	lea    0x2090f5(%rip),%rax        # 20f0e0 <mem>
    5feb:	48 01 c8             	add    %rcx,%rax
    5fee:	83 c2 08             	add    $0x8,%edx
    5ff1:	89 10                	mov    %edx,(%rax)
    5ff3:	e9 51 44 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_on:/* 0! */   CELL(CELL(sp))=(__u32)-1;sp+=4;break;
    5ff8:	48 8b 05 89 93 60 00 	mov    0x609389(%rip),%rax        # 60f388 <f_boot>
    5fff:	48 83 c0 04          	add    $0x4,%rax
    6003:	89 c2                	mov    %eax,%edx
    6005:	48 8b 05 7c 93 60 00 	mov    0x60937c(%rip),%rax        # 60f388 <f_boot>
    600c:	29 c2                	sub    %eax,%edx
    600e:	89 d0                	mov    %edx,%eax
    6010:	48 63 d0             	movslq %eax,%rdx
    6013:	48 8d 05 c6 90 20 00 	lea    0x2090c6(%rip),%rax        # 20f0e0 <mem>
    601a:	48 01 d0             	add    %rdx,%rax
    601d:	8b 00                	mov    (%rax),%eax
    601f:	89 c7                	mov    %eax,%edi
    6021:	e8 47 ae ff ff       	callq  e6d <v2r>
    6026:	8b 00                	mov    (%rax),%eax
    6028:	89 c7                	mov    %eax,%edi
    602a:	e8 3e ae ff ff       	callq  e6d <v2r>
    602f:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
    6035:	48 8b 05 4c 93 60 00 	mov    0x60934c(%rip),%rax        # 60f388 <f_boot>
    603c:	48 83 c0 04          	add    $0x4,%rax
    6040:	89 c2                	mov    %eax,%edx
    6042:	48 8b 05 3f 93 60 00 	mov    0x60933f(%rip),%rax        # 60f388 <f_boot>
    6049:	29 c2                	sub    %eax,%edx
    604b:	89 d0                	mov    %edx,%eax
    604d:	48 63 d0             	movslq %eax,%rdx
    6050:	48 8d 05 89 90 20 00 	lea    0x209089(%rip),%rax        # 20f0e0 <mem>
    6057:	48 01 d0             	add    %rdx,%rax
    605a:	8b 10                	mov    (%rax),%edx
    605c:	48 8b 05 25 93 60 00 	mov    0x609325(%rip),%rax        # 60f388 <f_boot>
    6063:	48 83 c0 04          	add    $0x4,%rax
    6067:	89 c1                	mov    %eax,%ecx
    6069:	48 8b 05 18 93 60 00 	mov    0x609318(%rip),%rax        # 60f388 <f_boot>
    6070:	29 c1                	sub    %eax,%ecx
    6072:	89 c8                	mov    %ecx,%eax
    6074:	48 63 c8             	movslq %eax,%rcx
    6077:	48 8d 05 62 90 20 00 	lea    0x209062(%rip),%rax        # 20f0e0 <mem>
    607e:	48 01 c8             	add    %rcx,%rax
    6081:	83 c2 04             	add    $0x4,%edx
    6084:	89 10                	mov    %edx,(%rax)
    6086:	e9 be 43 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0ST:/* 0! */  CELL(CELL(sp))=0;sp+=4;break;
    608b:	48 8b 05 f6 92 60 00 	mov    0x6092f6(%rip),%rax        # 60f388 <f_boot>
    6092:	48 83 c0 04          	add    $0x4,%rax
    6096:	89 c2                	mov    %eax,%edx
    6098:	48 8b 05 e9 92 60 00 	mov    0x6092e9(%rip),%rax        # 60f388 <f_boot>
    609f:	29 c2                	sub    %eax,%edx
    60a1:	89 d0                	mov    %edx,%eax
    60a3:	48 63 d0             	movslq %eax,%rdx
    60a6:	48 8d 05 33 90 20 00 	lea    0x209033(%rip),%rax        # 20f0e0 <mem>
    60ad:	48 01 d0             	add    %rdx,%rax
    60b0:	8b 00                	mov    (%rax),%eax
    60b2:	89 c7                	mov    %eax,%edi
    60b4:	e8 b4 ad ff ff       	callq  e6d <v2r>
    60b9:	8b 00                	mov    (%rax),%eax
    60bb:	89 c7                	mov    %eax,%edi
    60bd:	e8 ab ad ff ff       	callq  e6d <v2r>
    60c2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    60c8:	48 8b 05 b9 92 60 00 	mov    0x6092b9(%rip),%rax        # 60f388 <f_boot>
    60cf:	48 83 c0 04          	add    $0x4,%rax
    60d3:	89 c2                	mov    %eax,%edx
    60d5:	48 8b 05 ac 92 60 00 	mov    0x6092ac(%rip),%rax        # 60f388 <f_boot>
    60dc:	29 c2                	sub    %eax,%edx
    60de:	89 d0                	mov    %edx,%eax
    60e0:	48 63 d0             	movslq %eax,%rdx
    60e3:	48 8d 05 f6 8f 20 00 	lea    0x208ff6(%rip),%rax        # 20f0e0 <mem>
    60ea:	48 01 d0             	add    %rdx,%rax
    60ed:	8b 10                	mov    (%rax),%edx
    60ef:	48 8b 05 92 92 60 00 	mov    0x609292(%rip),%rax        # 60f388 <f_boot>
    60f6:	48 83 c0 04          	add    $0x4,%rax
    60fa:	89 c1                	mov    %eax,%ecx
    60fc:	48 8b 05 85 92 60 00 	mov    0x609285(%rip),%rax        # 60f388 <f_boot>
    6103:	29 c1                	sub    %eax,%ecx
    6105:	89 c8                	mov    %ecx,%eax
    6107:	48 63 c8             	movslq %eax,%rcx
    610a:	48 8d 05 cf 8f 20 00 	lea    0x208fcf(%rip),%rax        # 20f0e0 <mem>
    6111:	48 01 c8             	add    %rcx,%rax
    6114:	83 c2 04             	add    $0x4,%edx
    6117:	89 10                	mov    %edx,(%rax)
    6119:	e9 2b 43 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_ST: /*  ! */  CELL(CELL(sp))=CELL(sp+4);sp+=8;break;
    611e:	48 8b 05 63 92 60 00 	mov    0x609263(%rip),%rax        # 60f388 <f_boot>
    6125:	48 83 c0 04          	add    $0x4,%rax
    6129:	89 c2                	mov    %eax,%edx
    612b:	48 8b 05 56 92 60 00 	mov    0x609256(%rip),%rax        # 60f388 <f_boot>
    6132:	29 c2                	sub    %eax,%edx
    6134:	89 d0                	mov    %edx,%eax
    6136:	48 63 d0             	movslq %eax,%rdx
    6139:	48 8d 05 a0 8f 20 00 	lea    0x208fa0(%rip),%rax        # 20f0e0 <mem>
    6140:	48 01 d0             	add    %rdx,%rax
    6143:	8b 00                	mov    (%rax),%eax
    6145:	83 c0 04             	add    $0x4,%eax
    6148:	89 c7                	mov    %eax,%edi
    614a:	e8 1e ad ff ff       	callq  e6d <v2r>
    614f:	48 89 c3             	mov    %rax,%rbx
    6152:	48 8b 05 2f 92 60 00 	mov    0x60922f(%rip),%rax        # 60f388 <f_boot>
    6159:	48 83 c0 04          	add    $0x4,%rax
    615d:	89 c2                	mov    %eax,%edx
    615f:	48 8b 05 22 92 60 00 	mov    0x609222(%rip),%rax        # 60f388 <f_boot>
    6166:	29 c2                	sub    %eax,%edx
    6168:	89 d0                	mov    %edx,%eax
    616a:	48 63 d0             	movslq %eax,%rdx
    616d:	48 8d 05 6c 8f 20 00 	lea    0x208f6c(%rip),%rax        # 20f0e0 <mem>
    6174:	48 01 d0             	add    %rdx,%rax
    6177:	8b 00                	mov    (%rax),%eax
    6179:	89 c7                	mov    %eax,%edi
    617b:	e8 ed ac ff ff       	callq  e6d <v2r>
    6180:	8b 00                	mov    (%rax),%eax
    6182:	89 c7                	mov    %eax,%edi
    6184:	e8 e4 ac ff ff       	callq  e6d <v2r>
    6189:	48 89 c2             	mov    %rax,%rdx
    618c:	8b 03                	mov    (%rbx),%eax
    618e:	89 02                	mov    %eax,(%rdx)
    6190:	48 8b 05 f1 91 60 00 	mov    0x6091f1(%rip),%rax        # 60f388 <f_boot>
    6197:	48 83 c0 04          	add    $0x4,%rax
    619b:	89 c2                	mov    %eax,%edx
    619d:	48 8b 05 e4 91 60 00 	mov    0x6091e4(%rip),%rax        # 60f388 <f_boot>
    61a4:	29 c2                	sub    %eax,%edx
    61a6:	89 d0                	mov    %edx,%eax
    61a8:	48 63 d0             	movslq %eax,%rdx
    61ab:	48 8d 05 2e 8f 20 00 	lea    0x208f2e(%rip),%rax        # 20f0e0 <mem>
    61b2:	48 01 d0             	add    %rdx,%rax
    61b5:	8b 10                	mov    (%rax),%edx
    61b7:	48 8b 05 ca 91 60 00 	mov    0x6091ca(%rip),%rax        # 60f388 <f_boot>
    61be:	48 83 c0 04          	add    $0x4,%rax
    61c2:	89 c1                	mov    %eax,%ecx
    61c4:	48 8b 05 bd 91 60 00 	mov    0x6091bd(%rip),%rax        # 60f388 <f_boot>
    61cb:	29 c1                	sub    %eax,%ecx
    61cd:	89 c8                	mov    %ecx,%eax
    61cf:	48 63 c8             	movslq %eax,%rcx
    61d2:	48 8d 05 07 8f 20 00 	lea    0x208f07(%rip),%rax        # 20f0e0 <mem>
    61d9:	48 01 c8             	add    %rcx,%rax
    61dc:	83 c2 08             	add    $0x8,%edx
    61df:	89 10                	mov    %edx,(%rax)
    61e1:	e9 63 42 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_addST: /*  +! */  CELL(CELL(sp))+=CELL(sp+4);sp+=8;break;
    61e6:	48 8b 05 9b 91 60 00 	mov    0x60919b(%rip),%rax        # 60f388 <f_boot>
    61ed:	48 83 c0 04          	add    $0x4,%rax
    61f1:	89 c2                	mov    %eax,%edx
    61f3:	48 8b 05 8e 91 60 00 	mov    0x60918e(%rip),%rax        # 60f388 <f_boot>
    61fa:	29 c2                	sub    %eax,%edx
    61fc:	89 d0                	mov    %edx,%eax
    61fe:	48 63 d0             	movslq %eax,%rdx
    6201:	48 8d 05 d8 8e 20 00 	lea    0x208ed8(%rip),%rax        # 20f0e0 <mem>
    6208:	48 01 d0             	add    %rdx,%rax
    620b:	8b 00                	mov    (%rax),%eax
    620d:	83 c0 04             	add    $0x4,%eax
    6210:	89 c7                	mov    %eax,%edi
    6212:	e8 56 ac ff ff       	callq  e6d <v2r>
    6217:	8b 18                	mov    (%rax),%ebx
    6219:	48 8b 05 68 91 60 00 	mov    0x609168(%rip),%rax        # 60f388 <f_boot>
    6220:	48 83 c0 04          	add    $0x4,%rax
    6224:	89 c2                	mov    %eax,%edx
    6226:	48 8b 05 5b 91 60 00 	mov    0x60915b(%rip),%rax        # 60f388 <f_boot>
    622d:	29 c2                	sub    %eax,%edx
    622f:	89 d0                	mov    %edx,%eax
    6231:	48 63 d0             	movslq %eax,%rdx
    6234:	48 8d 05 a5 8e 20 00 	lea    0x208ea5(%rip),%rax        # 20f0e0 <mem>
    623b:	48 01 d0             	add    %rdx,%rax
    623e:	8b 00                	mov    (%rax),%eax
    6240:	89 c7                	mov    %eax,%edi
    6242:	e8 26 ac ff ff       	callq  e6d <v2r>
    6247:	8b 00                	mov    (%rax),%eax
    6249:	89 c7                	mov    %eax,%edi
    624b:	e8 1d ac ff ff       	callq  e6d <v2r>
    6250:	8b 10                	mov    (%rax),%edx
    6252:	01 da                	add    %ebx,%edx
    6254:	89 10                	mov    %edx,(%rax)
    6256:	48 8b 05 2b 91 60 00 	mov    0x60912b(%rip),%rax        # 60f388 <f_boot>
    625d:	48 83 c0 04          	add    $0x4,%rax
    6261:	89 c2                	mov    %eax,%edx
    6263:	48 8b 05 1e 91 60 00 	mov    0x60911e(%rip),%rax        # 60f388 <f_boot>
    626a:	29 c2                	sub    %eax,%edx
    626c:	89 d0                	mov    %edx,%eax
    626e:	48 63 d0             	movslq %eax,%rdx
    6271:	48 8d 05 68 8e 20 00 	lea    0x208e68(%rip),%rax        # 20f0e0 <mem>
    6278:	48 01 d0             	add    %rdx,%rax
    627b:	8b 10                	mov    (%rax),%edx
    627d:	48 8b 05 04 91 60 00 	mov    0x609104(%rip),%rax        # 60f388 <f_boot>
    6284:	48 83 c0 04          	add    $0x4,%rax
    6288:	89 c1                	mov    %eax,%ecx
    628a:	48 8b 05 f7 90 60 00 	mov    0x6090f7(%rip),%rax        # 60f388 <f_boot>
    6291:	29 c1                	sub    %eax,%ecx
    6293:	89 c8                	mov    %ecx,%eax
    6295:	48 63 c8             	movslq %eax,%rcx
    6298:	48 8d 05 41 8e 20 00 	lea    0x208e41(%rip),%rax        # 20f0e0 <mem>
    629f:	48 01 c8             	add    %rcx,%rax
    62a2:	83 c2 08             	add    $0x8,%edx
    62a5:	89 10                	mov    %edx,(%rax)
    62a7:	e9 9d 41 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cST:/* C! */  BYTE(CELL(sp))=CELL(sp+4);sp+=8;break;
    62ac:	48 8b 05 d5 90 60 00 	mov    0x6090d5(%rip),%rax        # 60f388 <f_boot>
    62b3:	48 83 c0 04          	add    $0x4,%rax
    62b7:	89 c2                	mov    %eax,%edx
    62b9:	48 8b 05 c8 90 60 00 	mov    0x6090c8(%rip),%rax        # 60f388 <f_boot>
    62c0:	29 c2                	sub    %eax,%edx
    62c2:	89 d0                	mov    %edx,%eax
    62c4:	48 63 d0             	movslq %eax,%rdx
    62c7:	48 8d 05 12 8e 20 00 	lea    0x208e12(%rip),%rax        # 20f0e0 <mem>
    62ce:	48 01 d0             	add    %rdx,%rax
    62d1:	8b 00                	mov    (%rax),%eax
    62d3:	83 c0 04             	add    $0x4,%eax
    62d6:	89 c7                	mov    %eax,%edi
    62d8:	e8 90 ab ff ff       	callq  e6d <v2r>
    62dd:	8b 18                	mov    (%rax),%ebx
    62df:	48 8b 05 a2 90 60 00 	mov    0x6090a2(%rip),%rax        # 60f388 <f_boot>
    62e6:	48 83 c0 04          	add    $0x4,%rax
    62ea:	89 c2                	mov    %eax,%edx
    62ec:	48 8b 05 95 90 60 00 	mov    0x609095(%rip),%rax        # 60f388 <f_boot>
    62f3:	29 c2                	sub    %eax,%edx
    62f5:	89 d0                	mov    %edx,%eax
    62f7:	48 63 d0             	movslq %eax,%rdx
    62fa:	48 8d 05 df 8d 20 00 	lea    0x208ddf(%rip),%rax        # 20f0e0 <mem>
    6301:	48 01 d0             	add    %rdx,%rax
    6304:	8b 00                	mov    (%rax),%eax
    6306:	89 c7                	mov    %eax,%edi
    6308:	e8 60 ab ff ff       	callq  e6d <v2r>
    630d:	8b 00                	mov    (%rax),%eax
    630f:	89 c7                	mov    %eax,%edi
    6311:	e8 57 ab ff ff       	callq  e6d <v2r>
    6316:	89 da                	mov    %ebx,%edx
    6318:	88 10                	mov    %dl,(%rax)
    631a:	48 8b 05 67 90 60 00 	mov    0x609067(%rip),%rax        # 60f388 <f_boot>
    6321:	48 83 c0 04          	add    $0x4,%rax
    6325:	89 c2                	mov    %eax,%edx
    6327:	48 8b 05 5a 90 60 00 	mov    0x60905a(%rip),%rax        # 60f388 <f_boot>
    632e:	29 c2                	sub    %eax,%edx
    6330:	89 d0                	mov    %edx,%eax
    6332:	48 63 d0             	movslq %eax,%rdx
    6335:	48 8d 05 a4 8d 20 00 	lea    0x208da4(%rip),%rax        # 20f0e0 <mem>
    633c:	48 01 d0             	add    %rdx,%rax
    633f:	8b 10                	mov    (%rax),%edx
    6341:	48 8b 05 40 90 60 00 	mov    0x609040(%rip),%rax        # 60f388 <f_boot>
    6348:	48 83 c0 04          	add    $0x4,%rax
    634c:	89 c1                	mov    %eax,%ecx
    634e:	48 8b 05 33 90 60 00 	mov    0x609033(%rip),%rax        # 60f388 <f_boot>
    6355:	29 c1                	sub    %eax,%ecx
    6357:	89 c8                	mov    %ecx,%eax
    6359:	48 63 c8             	movslq %eax,%rcx
    635c:	48 8d 05 7d 8d 20 00 	lea    0x208d7d(%rip),%rax        # 20f0e0 <mem>
    6363:	48 01 c8             	add    %rcx,%rax
    6366:	83 c2 08             	add    $0x8,%edx
    6369:	89 10                	mov    %edx,(%rax)
    636b:	e9 d9 40 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_wST:/* W! */  WCELL(CELL(sp))=CELL(sp+4);sp+=8;break;
    6370:	48 8b 05 11 90 60 00 	mov    0x609011(%rip),%rax        # 60f388 <f_boot>
    6377:	48 83 c0 04          	add    $0x4,%rax
    637b:	89 c2                	mov    %eax,%edx
    637d:	48 8b 05 04 90 60 00 	mov    0x609004(%rip),%rax        # 60f388 <f_boot>
    6384:	29 c2                	sub    %eax,%edx
    6386:	89 d0                	mov    %edx,%eax
    6388:	48 63 d0             	movslq %eax,%rdx
    638b:	48 8d 05 4e 8d 20 00 	lea    0x208d4e(%rip),%rax        # 20f0e0 <mem>
    6392:	48 01 d0             	add    %rdx,%rax
    6395:	8b 00                	mov    (%rax),%eax
    6397:	83 c0 04             	add    $0x4,%eax
    639a:	89 c7                	mov    %eax,%edi
    639c:	e8 cc aa ff ff       	callq  e6d <v2r>
    63a1:	8b 18                	mov    (%rax),%ebx
    63a3:	48 8b 05 de 8f 60 00 	mov    0x608fde(%rip),%rax        # 60f388 <f_boot>
    63aa:	48 83 c0 04          	add    $0x4,%rax
    63ae:	89 c2                	mov    %eax,%edx
    63b0:	48 8b 05 d1 8f 60 00 	mov    0x608fd1(%rip),%rax        # 60f388 <f_boot>
    63b7:	29 c2                	sub    %eax,%edx
    63b9:	89 d0                	mov    %edx,%eax
    63bb:	48 63 d0             	movslq %eax,%rdx
    63be:	48 8d 05 1b 8d 20 00 	lea    0x208d1b(%rip),%rax        # 20f0e0 <mem>
    63c5:	48 01 d0             	add    %rdx,%rax
    63c8:	8b 00                	mov    (%rax),%eax
    63ca:	89 c7                	mov    %eax,%edi
    63cc:	e8 9c aa ff ff       	callq  e6d <v2r>
    63d1:	8b 00                	mov    (%rax),%eax
    63d3:	89 c7                	mov    %eax,%edi
    63d5:	e8 93 aa ff ff       	callq  e6d <v2r>
    63da:	89 da                	mov    %ebx,%edx
    63dc:	66 89 10             	mov    %dx,(%rax)
    63df:	48 8b 05 a2 8f 60 00 	mov    0x608fa2(%rip),%rax        # 60f388 <f_boot>
    63e6:	48 83 c0 04          	add    $0x4,%rax
    63ea:	89 c2                	mov    %eax,%edx
    63ec:	48 8b 05 95 8f 60 00 	mov    0x608f95(%rip),%rax        # 60f388 <f_boot>
    63f3:	29 c2                	sub    %eax,%edx
    63f5:	89 d0                	mov    %edx,%eax
    63f7:	48 63 d0             	movslq %eax,%rdx
    63fa:	48 8d 05 df 8c 20 00 	lea    0x208cdf(%rip),%rax        # 20f0e0 <mem>
    6401:	48 01 d0             	add    %rdx,%rax
    6404:	8b 10                	mov    (%rax),%edx
    6406:	48 8b 05 7b 8f 60 00 	mov    0x608f7b(%rip),%rax        # 60f388 <f_boot>
    640d:	48 83 c0 04          	add    $0x4,%rax
    6411:	89 c1                	mov    %eax,%ecx
    6413:	48 8b 05 6e 8f 60 00 	mov    0x608f6e(%rip),%rax        # 60f388 <f_boot>
    641a:	29 c1                	sub    %eax,%ecx
    641c:	89 c8                	mov    %ecx,%eax
    641e:	48 63 c8             	movslq %eax,%rcx
    6421:	48 8d 05 b8 8c 20 00 	lea    0x208cb8(%rip),%rax        # 20f0e0 <mem>
    6428:	48 01 c8             	add    %rcx,%rax
    642b:	83 c2 08             	add    $0x8,%edx
    642e:	89 10                	mov    %edx,(%rax)
    6430:	e9 14 40 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2ST:/* 2! */    DCELL(CELL(sp))=DCELL(sp+4);sp+=12;break;
    6435:	48 8b 05 4c 8f 60 00 	mov    0x608f4c(%rip),%rax        # 60f388 <f_boot>
    643c:	48 83 c0 04          	add    $0x4,%rax
    6440:	89 c2                	mov    %eax,%edx
    6442:	48 8b 05 3f 8f 60 00 	mov    0x608f3f(%rip),%rax        # 60f388 <f_boot>
    6449:	29 c2                	sub    %eax,%edx
    644b:	89 d0                	mov    %edx,%eax
    644d:	48 63 d0             	movslq %eax,%rdx
    6450:	48 8d 05 89 8c 20 00 	lea    0x208c89(%rip),%rax        # 20f0e0 <mem>
    6457:	48 01 d0             	add    %rdx,%rax
    645a:	8b 00                	mov    (%rax),%eax
    645c:	83 c0 04             	add    $0x4,%eax
    645f:	89 c7                	mov    %eax,%edi
    6461:	e8 07 aa ff ff       	callq  e6d <v2r>
    6466:	48 89 c3             	mov    %rax,%rbx
    6469:	48 8b 05 18 8f 60 00 	mov    0x608f18(%rip),%rax        # 60f388 <f_boot>
    6470:	48 83 c0 04          	add    $0x4,%rax
    6474:	89 c2                	mov    %eax,%edx
    6476:	48 8b 05 0b 8f 60 00 	mov    0x608f0b(%rip),%rax        # 60f388 <f_boot>
    647d:	29 c2                	sub    %eax,%edx
    647f:	89 d0                	mov    %edx,%eax
    6481:	48 63 d0             	movslq %eax,%rdx
    6484:	48 8d 05 55 8c 20 00 	lea    0x208c55(%rip),%rax        # 20f0e0 <mem>
    648b:	48 01 d0             	add    %rdx,%rax
    648e:	8b 00                	mov    (%rax),%eax
    6490:	89 c7                	mov    %eax,%edi
    6492:	e8 d6 a9 ff ff       	callq  e6d <v2r>
    6497:	8b 00                	mov    (%rax),%eax
    6499:	89 c7                	mov    %eax,%edi
    649b:	e8 cd a9 ff ff       	callq  e6d <v2r>
    64a0:	48 89 c2             	mov    %rax,%rdx
    64a3:	48 8b 03             	mov    (%rbx),%rax
    64a6:	48 89 02             	mov    %rax,(%rdx)
    64a9:	48 8b 05 d8 8e 60 00 	mov    0x608ed8(%rip),%rax        # 60f388 <f_boot>
    64b0:	48 83 c0 04          	add    $0x4,%rax
    64b4:	89 c2                	mov    %eax,%edx
    64b6:	48 8b 05 cb 8e 60 00 	mov    0x608ecb(%rip),%rax        # 60f388 <f_boot>
    64bd:	29 c2                	sub    %eax,%edx
    64bf:	89 d0                	mov    %edx,%eax
    64c1:	48 63 d0             	movslq %eax,%rdx
    64c4:	48 8d 05 15 8c 20 00 	lea    0x208c15(%rip),%rax        # 20f0e0 <mem>
    64cb:	48 01 d0             	add    %rdx,%rax
    64ce:	8b 10                	mov    (%rax),%edx
    64d0:	48 8b 05 b1 8e 60 00 	mov    0x608eb1(%rip),%rax        # 60f388 <f_boot>
    64d7:	48 83 c0 04          	add    $0x4,%rax
    64db:	89 c1                	mov    %eax,%ecx
    64dd:	48 8b 05 a4 8e 60 00 	mov    0x608ea4(%rip),%rax        # 60f388 <f_boot>
    64e4:	29 c1                	sub    %eax,%ecx
    64e6:	89 c8                	mov    %ecx,%eax
    64e8:	48 63 c8             	movslq %eax,%rcx
    64eb:	48 8d 05 ee 8b 20 00 	lea    0x208bee(%rip),%rax        # 20f0e0 <mem>
    64f2:	48 01 c8             	add    %rcx,%rax
    64f5:	83 c2 0c             	add    $0xc,%edx
    64f8:	89 10                	mov    %edx,(%rax)
    64fa:	e9 4a 3f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2load:/* 2@ */ sp-=4; DCELL(sp)=DCELL(CELL(sp+4));break;
    64ff:	48 8b 05 82 8e 60 00 	mov    0x608e82(%rip),%rax        # 60f388 <f_boot>
    6506:	48 83 c0 04          	add    $0x4,%rax
    650a:	89 c2                	mov    %eax,%edx
    650c:	48 8b 05 75 8e 60 00 	mov    0x608e75(%rip),%rax        # 60f388 <f_boot>
    6513:	29 c2                	sub    %eax,%edx
    6515:	89 d0                	mov    %edx,%eax
    6517:	48 63 d0             	movslq %eax,%rdx
    651a:	48 8d 05 bf 8b 20 00 	lea    0x208bbf(%rip),%rax        # 20f0e0 <mem>
    6521:	48 01 d0             	add    %rdx,%rax
    6524:	8b 10                	mov    (%rax),%edx
    6526:	48 8b 05 5b 8e 60 00 	mov    0x608e5b(%rip),%rax        # 60f388 <f_boot>
    652d:	48 83 c0 04          	add    $0x4,%rax
    6531:	89 c1                	mov    %eax,%ecx
    6533:	48 8b 05 4e 8e 60 00 	mov    0x608e4e(%rip),%rax        # 60f388 <f_boot>
    653a:	29 c1                	sub    %eax,%ecx
    653c:	89 c8                	mov    %ecx,%eax
    653e:	48 63 c8             	movslq %eax,%rcx
    6541:	48 8d 05 98 8b 20 00 	lea    0x208b98(%rip),%rax        # 20f0e0 <mem>
    6548:	48 01 c8             	add    %rcx,%rax
    654b:	83 ea 04             	sub    $0x4,%edx
    654e:	89 10                	mov    %edx,(%rax)
    6550:	48 8b 05 31 8e 60 00 	mov    0x608e31(%rip),%rax        # 60f388 <f_boot>
    6557:	48 83 c0 04          	add    $0x4,%rax
    655b:	89 c2                	mov    %eax,%edx
    655d:	48 8b 05 24 8e 60 00 	mov    0x608e24(%rip),%rax        # 60f388 <f_boot>
    6564:	29 c2                	sub    %eax,%edx
    6566:	89 d0                	mov    %edx,%eax
    6568:	48 63 d0             	movslq %eax,%rdx
    656b:	48 8d 05 6e 8b 20 00 	lea    0x208b6e(%rip),%rax        # 20f0e0 <mem>
    6572:	48 01 d0             	add    %rdx,%rax
    6575:	8b 00                	mov    (%rax),%eax
    6577:	83 c0 04             	add    $0x4,%eax
    657a:	89 c7                	mov    %eax,%edi
    657c:	e8 ec a8 ff ff       	callq  e6d <v2r>
    6581:	8b 00                	mov    (%rax),%eax
    6583:	89 c7                	mov    %eax,%edi
    6585:	e8 e3 a8 ff ff       	callq  e6d <v2r>
    658a:	48 89 c3             	mov    %rax,%rbx
    658d:	48 8b 05 f4 8d 60 00 	mov    0x608df4(%rip),%rax        # 60f388 <f_boot>
    6594:	48 83 c0 04          	add    $0x4,%rax
    6598:	89 c2                	mov    %eax,%edx
    659a:	48 8b 05 e7 8d 60 00 	mov    0x608de7(%rip),%rax        # 60f388 <f_boot>
    65a1:	29 c2                	sub    %eax,%edx
    65a3:	89 d0                	mov    %edx,%eax
    65a5:	48 63 d0             	movslq %eax,%rdx
    65a8:	48 8d 05 31 8b 20 00 	lea    0x208b31(%rip),%rax        # 20f0e0 <mem>
    65af:	48 01 d0             	add    %rdx,%rax
    65b2:	8b 00                	mov    (%rax),%eax
    65b4:	89 c7                	mov    %eax,%edi
    65b6:	e8 b2 a8 ff ff       	callq  e6d <v2r>
    65bb:	48 89 c2             	mov    %rax,%rdx
    65be:	48 8b 03             	mov    (%rbx),%rax
    65c1:	48 89 02             	mov    %rax,(%rdx)
    65c4:	e9 80 3e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2swap:/* 2swap */    dtmp=DCELL(sp);
    65c9:	48 8b 05 b8 8d 60 00 	mov    0x608db8(%rip),%rax        # 60f388 <f_boot>
    65d0:	48 83 c0 04          	add    $0x4,%rax
    65d4:	89 c2                	mov    %eax,%edx
    65d6:	48 8b 05 ab 8d 60 00 	mov    0x608dab(%rip),%rax        # 60f388 <f_boot>
    65dd:	29 c2                	sub    %eax,%edx
    65df:	89 d0                	mov    %edx,%eax
    65e1:	48 63 d0             	movslq %eax,%rdx
    65e4:	48 8d 05 f5 8a 20 00 	lea    0x208af5(%rip),%rax        # 20f0e0 <mem>
    65eb:	48 01 d0             	add    %rdx,%rax
    65ee:	8b 00                	mov    (%rax),%eax
    65f0:	89 c7                	mov    %eax,%edi
    65f2:	e8 76 a8 ff ff       	callq  e6d <v2r>
    65f7:	48 8b 00             	mov    (%rax),%rax
    65fa:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
			 DCELL(sp)=DCELL(sp+8);
    6601:	48 8b 05 80 8d 60 00 	mov    0x608d80(%rip),%rax        # 60f388 <f_boot>
    6608:	48 83 c0 04          	add    $0x4,%rax
    660c:	89 c2                	mov    %eax,%edx
    660e:	48 8b 05 73 8d 60 00 	mov    0x608d73(%rip),%rax        # 60f388 <f_boot>
    6615:	29 c2                	sub    %eax,%edx
    6617:	89 d0                	mov    %edx,%eax
    6619:	48 63 d0             	movslq %eax,%rdx
    661c:	48 8d 05 bd 8a 20 00 	lea    0x208abd(%rip),%rax        # 20f0e0 <mem>
    6623:	48 01 d0             	add    %rdx,%rax
    6626:	8b 00                	mov    (%rax),%eax
    6628:	83 c0 08             	add    $0x8,%eax
    662b:	89 c7                	mov    %eax,%edi
    662d:	e8 3b a8 ff ff       	callq  e6d <v2r>
    6632:	48 89 c3             	mov    %rax,%rbx
    6635:	48 8b 05 4c 8d 60 00 	mov    0x608d4c(%rip),%rax        # 60f388 <f_boot>
    663c:	48 83 c0 04          	add    $0x4,%rax
    6640:	89 c2                	mov    %eax,%edx
    6642:	48 8b 05 3f 8d 60 00 	mov    0x608d3f(%rip),%rax        # 60f388 <f_boot>
    6649:	29 c2                	sub    %eax,%edx
    664b:	89 d0                	mov    %edx,%eax
    664d:	48 63 d0             	movslq %eax,%rdx
    6650:	48 8d 05 89 8a 20 00 	lea    0x208a89(%rip),%rax        # 20f0e0 <mem>
    6657:	48 01 d0             	add    %rdx,%rax
    665a:	8b 00                	mov    (%rax),%eax
    665c:	89 c7                	mov    %eax,%edi
    665e:	e8 0a a8 ff ff       	callq  e6d <v2r>
    6663:	48 89 c2             	mov    %rax,%rdx
    6666:	48 8b 03             	mov    (%rbx),%rax
    6669:	48 89 02             	mov    %rax,(%rdx)
			 DCELL(sp+8)=dtmp;break;
    666c:	48 8b 05 15 8d 60 00 	mov    0x608d15(%rip),%rax        # 60f388 <f_boot>
    6673:	48 83 c0 04          	add    $0x4,%rax
    6677:	89 c2                	mov    %eax,%edx
    6679:	48 8b 05 08 8d 60 00 	mov    0x608d08(%rip),%rax        # 60f388 <f_boot>
    6680:	29 c2                	sub    %eax,%edx
    6682:	89 d0                	mov    %edx,%eax
    6684:	48 63 d0             	movslq %eax,%rdx
    6687:	48 8d 05 52 8a 20 00 	lea    0x208a52(%rip),%rax        # 20f0e0 <mem>
    668e:	48 01 d0             	add    %rdx,%rax
    6691:	8b 00                	mov    (%rax),%eax
    6693:	83 c0 08             	add    $0x8,%eax
    6696:	89 c7                	mov    %eax,%edi
    6698:	e8 d0 a7 ff ff       	callq  e6d <v2r>
    669d:	48 89 c2             	mov    %rax,%rdx
    66a0:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    66a7:	48 89 02             	mov    %rax,(%rdx)
    66aa:	e9 9a 3d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cSTa:/* c!a  */ t=CELL(sp);BYTE(t)=CELL(sp+4);sp+=4;
    66af:	48 8b 05 d2 8c 60 00 	mov    0x608cd2(%rip),%rax        # 60f388 <f_boot>
    66b6:	48 83 c0 04          	add    $0x4,%rax
    66ba:	89 c2                	mov    %eax,%edx
    66bc:	48 8b 05 c5 8c 60 00 	mov    0x608cc5(%rip),%rax        # 60f388 <f_boot>
    66c3:	29 c2                	sub    %eax,%edx
    66c5:	89 d0                	mov    %edx,%eax
    66c7:	48 63 d0             	movslq %eax,%rdx
    66ca:	48 8d 05 0f 8a 20 00 	lea    0x208a0f(%rip),%rax        # 20f0e0 <mem>
    66d1:	48 01 d0             	add    %rdx,%rax
    66d4:	8b 00                	mov    (%rax),%eax
    66d6:	89 c7                	mov    %eax,%edi
    66d8:	e8 90 a7 ff ff       	callq  e6d <v2r>
    66dd:	8b 00                	mov    (%rax),%eax
    66df:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    66e5:	48 8b 05 9c 8c 60 00 	mov    0x608c9c(%rip),%rax        # 60f388 <f_boot>
    66ec:	48 83 c0 04          	add    $0x4,%rax
    66f0:	89 c2                	mov    %eax,%edx
    66f2:	48 8b 05 8f 8c 60 00 	mov    0x608c8f(%rip),%rax        # 60f388 <f_boot>
    66f9:	29 c2                	sub    %eax,%edx
    66fb:	89 d0                	mov    %edx,%eax
    66fd:	48 63 d0             	movslq %eax,%rdx
    6700:	48 8d 05 d9 89 20 00 	lea    0x2089d9(%rip),%rax        # 20f0e0 <mem>
    6707:	48 01 d0             	add    %rdx,%rax
    670a:	8b 00                	mov    (%rax),%eax
    670c:	83 c0 04             	add    $0x4,%eax
    670f:	89 c7                	mov    %eax,%edi
    6711:	e8 57 a7 ff ff       	callq  e6d <v2r>
    6716:	8b 18                	mov    (%rax),%ebx
    6718:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    671e:	89 c7                	mov    %eax,%edi
    6720:	e8 48 a7 ff ff       	callq  e6d <v2r>
    6725:	89 da                	mov    %ebx,%edx
    6727:	88 10                	mov    %dl,(%rax)
    6729:	48 8b 05 58 8c 60 00 	mov    0x608c58(%rip),%rax        # 60f388 <f_boot>
    6730:	48 83 c0 04          	add    $0x4,%rax
    6734:	89 c2                	mov    %eax,%edx
    6736:	48 8b 05 4b 8c 60 00 	mov    0x608c4b(%rip),%rax        # 60f388 <f_boot>
    673d:	29 c2                	sub    %eax,%edx
    673f:	89 d0                	mov    %edx,%eax
    6741:	48 63 d0             	movslq %eax,%rdx
    6744:	48 8d 05 95 89 20 00 	lea    0x208995(%rip),%rax        # 20f0e0 <mem>
    674b:	48 01 d0             	add    %rdx,%rax
    674e:	8b 10                	mov    (%rax),%edx
    6750:	48 8b 05 31 8c 60 00 	mov    0x608c31(%rip),%rax        # 60f388 <f_boot>
    6757:	48 83 c0 04          	add    $0x4,%rax
    675b:	89 c1                	mov    %eax,%ecx
    675d:	48 8b 05 24 8c 60 00 	mov    0x608c24(%rip),%rax        # 60f388 <f_boot>
    6764:	29 c1                	sub    %eax,%ecx
    6766:	89 c8                	mov    %ecx,%eax
    6768:	48 63 c8             	movslq %eax,%rcx
    676b:	48 8d 05 6e 89 20 00 	lea    0x20896e(%rip),%rax        # 20f0e0 <mem>
    6772:	48 01 c8             	add    %rcx,%rax
    6775:	83 c2 04             	add    $0x4,%edx
    6778:	89 10                	mov    %edx,(%rax)
                        CELL(sp)=t;break;
    677a:	48 8b 05 07 8c 60 00 	mov    0x608c07(%rip),%rax        # 60f388 <f_boot>
    6781:	48 83 c0 04          	add    $0x4,%rax
    6785:	89 c2                	mov    %eax,%edx
    6787:	48 8b 05 fa 8b 60 00 	mov    0x608bfa(%rip),%rax        # 60f388 <f_boot>
    678e:	29 c2                	sub    %eax,%edx
    6790:	89 d0                	mov    %edx,%eax
    6792:	48 63 d0             	movslq %eax,%rdx
    6795:	48 8d 05 44 89 20 00 	lea    0x208944(%rip),%rax        # 20f0e0 <mem>
    679c:	48 01 d0             	add    %rdx,%rax
    679f:	8b 00                	mov    (%rax),%eax
    67a1:	89 c7                	mov    %eax,%edi
    67a3:	e8 c5 a6 ff ff       	callq  e6d <v2r>
    67a8:	48 89 c2             	mov    %rax,%rdx
    67ab:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    67b1:	89 02                	mov    %eax,(%rdx)
    67b3:	e9 91 3c 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_VFMAdr:/* VFMADR */        sp-=4;
    67b8:	48 8b 05 c9 8b 60 00 	mov    0x608bc9(%rip),%rax        # 60f388 <f_boot>
    67bf:	48 83 c0 04          	add    $0x4,%rax
    67c3:	89 c2                	mov    %eax,%edx
    67c5:	48 8b 05 bc 8b 60 00 	mov    0x608bbc(%rip),%rax        # 60f388 <f_boot>
    67cc:	29 c2                	sub    %eax,%edx
    67ce:	89 d0                	mov    %edx,%eax
    67d0:	48 63 d0             	movslq %eax,%rdx
    67d3:	48 8d 05 06 89 20 00 	lea    0x208906(%rip),%rax        # 20f0e0 <mem>
    67da:	48 01 d0             	add    %rdx,%rax
    67dd:	8b 10                	mov    (%rax),%edx
    67df:	48 8b 05 a2 8b 60 00 	mov    0x608ba2(%rip),%rax        # 60f388 <f_boot>
    67e6:	48 83 c0 04          	add    $0x4,%rax
    67ea:	89 c1                	mov    %eax,%ecx
    67ec:	48 8b 05 95 8b 60 00 	mov    0x608b95(%rip),%rax        # 60f388 <f_boot>
    67f3:	29 c1                	sub    %eax,%ecx
    67f5:	89 c8                	mov    %ecx,%eax
    67f7:	48 63 c8             	movslq %eax,%rcx
    67fa:	48 8d 05 df 88 20 00 	lea    0x2088df(%rip),%rax        # 20f0e0 <mem>
    6801:	48 01 c8             	add    %rcx,%rax
    6804:	83 ea 04             	sub    $0x4,%edx
    6807:	89 10                	mov    %edx,(%rax)
     CELL(sp)= (__u32)&mem; break;
    6809:	48 8d 1d d0 88 20 00 	lea    0x2088d0(%rip),%rbx        # 20f0e0 <mem>
    6810:	48 8b 05 71 8b 60 00 	mov    0x608b71(%rip),%rax        # 60f388 <f_boot>
    6817:	48 83 c0 04          	add    $0x4,%rax
    681b:	89 c2                	mov    %eax,%edx
    681d:	48 8b 05 64 8b 60 00 	mov    0x608b64(%rip),%rax        # 60f388 <f_boot>
    6824:	29 c2                	sub    %eax,%edx
    6826:	89 d0                	mov    %edx,%eax
    6828:	48 63 d0             	movslq %eax,%rdx
    682b:	48 8d 05 ae 88 20 00 	lea    0x2088ae(%rip),%rax        # 20f0e0 <mem>
    6832:	48 01 d0             	add    %rdx,%rax
    6835:	8b 00                	mov    (%rax),%eax
    6837:	89 c7                	mov    %eax,%edi
    6839:	e8 2f a6 ff ff       	callq  e6d <v2r>
    683e:	89 da                	mov    %ebx,%edx
    6840:	89 10                	mov    %edx,(%rax)
    6842:	e9 02 3c 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_PLoad: 	/* P@ */
    	 tmp=CELL(sp);
    6847:	48 8b 05 3a 8b 60 00 	mov    0x608b3a(%rip),%rax        # 60f388 <f_boot>
    684e:	48 83 c0 04          	add    $0x4,%rax
    6852:	89 c2                	mov    %eax,%edx
    6854:	48 8b 05 2d 8b 60 00 	mov    0x608b2d(%rip),%rax        # 60f388 <f_boot>
    685b:	29 c2                	sub    %eax,%edx
    685d:	89 d0                	mov    %edx,%eax
    685f:	48 63 d0             	movslq %eax,%rdx
    6862:	48 8d 05 77 88 20 00 	lea    0x208877(%rip),%rax        # 20f0e0 <mem>
    6869:	48 01 d0             	add    %rdx,%rax
    686c:	8b 00                	mov    (%rax),%eax
    686e:	89 c7                	mov    %eax,%edi
    6870:	e8 f8 a5 ff ff       	callq  e6d <v2r>
    6875:	8b 00                	mov    (%rax),%eax
    6877:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
    	 CELL(sp)=  *(__u32*)tmp; break;
    687d:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
    6883:	48 89 c3             	mov    %rax,%rbx
    6886:	48 8b 05 fb 8a 60 00 	mov    0x608afb(%rip),%rax        # 60f388 <f_boot>
    688d:	48 83 c0 04          	add    $0x4,%rax
    6891:	89 c2                	mov    %eax,%edx
    6893:	48 8b 05 ee 8a 60 00 	mov    0x608aee(%rip),%rax        # 60f388 <f_boot>
    689a:	29 c2                	sub    %eax,%edx
    689c:	89 d0                	mov    %edx,%eax
    689e:	48 63 d0             	movslq %eax,%rdx
    68a1:	48 8d 05 38 88 20 00 	lea    0x208838(%rip),%rax        # 20f0e0 <mem>
    68a8:	48 01 d0             	add    %rdx,%rax
    68ab:	8b 00                	mov    (%rax),%eax
    68ad:	89 c7                	mov    %eax,%edi
    68af:	e8 b9 a5 ff ff       	callq  e6d <v2r>
    68b4:	48 89 c2             	mov    %rax,%rdx
    68b7:	8b 03                	mov    (%rbx),%eax
    68b9:	89 02                	mov    %eax,(%rdx)
    68bb:	e9 89 3b 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_PST: /*  P! */
    	 *(__u32*)(CELL(sp))=CELL(sp+4);
    68c0:	48 8b 05 c1 8a 60 00 	mov    0x608ac1(%rip),%rax        # 60f388 <f_boot>
    68c7:	48 83 c0 04          	add    $0x4,%rax
    68cb:	89 c2                	mov    %eax,%edx
    68cd:	48 8b 05 b4 8a 60 00 	mov    0x608ab4(%rip),%rax        # 60f388 <f_boot>
    68d4:	29 c2                	sub    %eax,%edx
    68d6:	89 d0                	mov    %edx,%eax
    68d8:	48 63 d0             	movslq %eax,%rdx
    68db:	48 8d 05 fe 87 20 00 	lea    0x2087fe(%rip),%rax        # 20f0e0 <mem>
    68e2:	48 01 d0             	add    %rdx,%rax
    68e5:	8b 00                	mov    (%rax),%eax
    68e7:	83 c0 04             	add    $0x4,%eax
    68ea:	89 c7                	mov    %eax,%edi
    68ec:	e8 7c a5 ff ff       	callq  e6d <v2r>
    68f1:	48 89 c3             	mov    %rax,%rbx
    68f4:	48 8b 05 8d 8a 60 00 	mov    0x608a8d(%rip),%rax        # 60f388 <f_boot>
    68fb:	48 83 c0 04          	add    $0x4,%rax
    68ff:	89 c2                	mov    %eax,%edx
    6901:	48 8b 05 80 8a 60 00 	mov    0x608a80(%rip),%rax        # 60f388 <f_boot>
    6908:	29 c2                	sub    %eax,%edx
    690a:	89 d0                	mov    %edx,%eax
    690c:	48 63 d0             	movslq %eax,%rdx
    690f:	48 8d 05 ca 87 20 00 	lea    0x2087ca(%rip),%rax        # 20f0e0 <mem>
    6916:	48 01 d0             	add    %rdx,%rax
    6919:	8b 00                	mov    (%rax),%eax
    691b:	89 c7                	mov    %eax,%edi
    691d:	e8 4b a5 ff ff       	callq  e6d <v2r>
    6922:	8b 00                	mov    (%rax),%eax
    6924:	89 c0                	mov    %eax,%eax
    6926:	48 89 c2             	mov    %rax,%rdx
    6929:	8b 03                	mov    (%rbx),%eax
    692b:	89 02                	mov    %eax,(%rdx)
    	 sp+=8;break;
    692d:	48 8b 05 54 8a 60 00 	mov    0x608a54(%rip),%rax        # 60f388 <f_boot>
    6934:	48 83 c0 04          	add    $0x4,%rax
    6938:	89 c2                	mov    %eax,%edx
    693a:	48 8b 05 47 8a 60 00 	mov    0x608a47(%rip),%rax        # 60f388 <f_boot>
    6941:	29 c2                	sub    %eax,%edx
    6943:	89 d0                	mov    %edx,%eax
    6945:	48 63 d0             	movslq %eax,%rdx
    6948:	48 8d 05 91 87 20 00 	lea    0x208791(%rip),%rax        # 20f0e0 <mem>
    694f:	48 01 d0             	add    %rdx,%rax
    6952:	8b 10                	mov    (%rax),%edx
    6954:	48 8b 05 2d 8a 60 00 	mov    0x608a2d(%rip),%rax        # 60f388 <f_boot>
    695b:	48 83 c0 04          	add    $0x4,%rax
    695f:	89 c1                	mov    %eax,%ecx
    6961:	48 8b 05 20 8a 60 00 	mov    0x608a20(%rip),%rax        # 60f388 <f_boot>
    6968:	29 c1                	sub    %eax,%ecx
    696a:	89 c8                	mov    %ecx,%eax
    696c:	48 63 c8             	movslq %eax,%rcx
    696f:	48 8d 05 6a 87 20 00 	lea    0x20876a(%rip),%rax        # 20f0e0 <mem>
    6976:	48 01 c8             	add    %rcx,%rax
    6979:	83 c2 08             	add    $0x8,%edx
    697c:	89 10                	mov    %edx,(%rax)
    697e:	e9 c6 3a 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_CPLoad: 	/* P!@ */
    	 tmp=CELL(sp);
    6983:	48 8b 05 fe 89 60 00 	mov    0x6089fe(%rip),%rax        # 60f388 <f_boot>
    698a:	48 83 c0 04          	add    $0x4,%rax
    698e:	89 c2                	mov    %eax,%edx
    6990:	48 8b 05 f1 89 60 00 	mov    0x6089f1(%rip),%rax        # 60f388 <f_boot>
    6997:	29 c2                	sub    %eax,%edx
    6999:	89 d0                	mov    %edx,%eax
    699b:	48 63 d0             	movslq %eax,%rdx
    699e:	48 8d 05 3b 87 20 00 	lea    0x20873b(%rip),%rax        # 20f0e0 <mem>
    69a5:	48 01 d0             	add    %rdx,%rax
    69a8:	8b 00                	mov    (%rax),%eax
    69aa:	89 c7                	mov    %eax,%edi
    69ac:	e8 bc a4 ff ff       	callq  e6d <v2r>
    69b1:	8b 00                	mov    (%rax),%eax
    69b3:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
    	 CELL(sp)= (__u32) *(__u8*)tmp; break;
    69b9:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
    69bf:	0f b6 18             	movzbl (%rax),%ebx
    69c2:	48 8b 05 bf 89 60 00 	mov    0x6089bf(%rip),%rax        # 60f388 <f_boot>
    69c9:	48 83 c0 04          	add    $0x4,%rax
    69cd:	89 c2                	mov    %eax,%edx
    69cf:	48 8b 05 b2 89 60 00 	mov    0x6089b2(%rip),%rax        # 60f388 <f_boot>
    69d6:	29 c2                	sub    %eax,%edx
    69d8:	89 d0                	mov    %edx,%eax
    69da:	48 63 d0             	movslq %eax,%rdx
    69dd:	48 8d 05 fc 86 20 00 	lea    0x2086fc(%rip),%rax        # 20f0e0 <mem>
    69e4:	48 01 d0             	add    %rdx,%rax
    69e7:	8b 00                	mov    (%rax),%eax
    69e9:	89 c7                	mov    %eax,%edi
    69eb:	e8 7d a4 ff ff       	callq  e6d <v2r>
    69f0:	48 89 c2             	mov    %rax,%rdx
    69f3:	0f b6 c3             	movzbl %bl,%eax
    69f6:	89 02                	mov    %eax,(%rdx)
    69f8:	e9 4c 3a 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_PDump: 	/* pdump */
     {
#if 1
	 __u8 * BB ;  char  buffer[111]; int len;
     BB= (__u8*)  CELL(sp+4);
    69fd:	48 8b 05 84 89 60 00 	mov    0x608984(%rip),%rax        # 60f388 <f_boot>
    6a04:	48 83 c0 04          	add    $0x4,%rax
    6a08:	89 c2                	mov    %eax,%edx
    6a0a:	48 8b 05 77 89 60 00 	mov    0x608977(%rip),%rax        # 60f388 <f_boot>
    6a11:	29 c2                	sub    %eax,%edx
    6a13:	89 d0                	mov    %edx,%eax
    6a15:	48 63 d0             	movslq %eax,%rdx
    6a18:	48 8d 05 c1 86 20 00 	lea    0x2086c1(%rip),%rax        # 20f0e0 <mem>
    6a1f:	48 01 d0             	add    %rdx,%rax
    6a22:	8b 00                	mov    (%rax),%eax
    6a24:	83 c0 04             	add    $0x4,%eax
    6a27:	89 c7                	mov    %eax,%edi
    6a29:	e8 3f a4 ff ff       	callq  e6d <v2r>
    6a2e:	8b 00                	mov    (%rax),%eax
    6a30:	89 c0                	mov    %eax,%eax
    6a32:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
     len=CELL(sp);
    6a39:	48 8b 05 48 89 60 00 	mov    0x608948(%rip),%rax        # 60f388 <f_boot>
    6a40:	48 83 c0 04          	add    $0x4,%rax
    6a44:	89 c2                	mov    %eax,%edx
    6a46:	48 8b 05 3b 89 60 00 	mov    0x60893b(%rip),%rax        # 60f388 <f_boot>
    6a4d:	29 c2                	sub    %eax,%edx
    6a4f:	89 d0                	mov    %edx,%eax
    6a51:	48 63 d0             	movslq %eax,%rdx
    6a54:	48 8d 05 85 86 20 00 	lea    0x208685(%rip),%rax        # 20f0e0 <mem>
    6a5b:	48 01 d0             	add    %rdx,%rax
    6a5e:	8b 00                	mov    (%rax),%eax
    6a60:	89 c7                	mov    %eax,%edi
    6a62:	e8 06 a4 ff ff       	callq  e6d <v2r>
    6a67:	8b 00                	mov    (%rax),%eax
    6a69:	89 85 70 fe ff ff    	mov    %eax,-0x190(%rbp)
    	 while(len>0)
    6a6f:	e9 e8 02 00 00       	jmpq   6d5c <virtual_machine+0x3984>
    	 {
         sprintf (buffer,
     "%X\t%2X %2X %2X %2X %2X %2X %2X %2X  %2X %2X %2X %2X %2X %2X %2X %2X | ",
        		 &BB[0],
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6a74:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6a7b:	48 83 c0 0f          	add    $0xf,%rax
    6a7f:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6a82:	0f b6 f0             	movzbl %al,%esi
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6a85:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6a8c:	48 83 c0 0e          	add    $0xe,%rax
    6a90:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6a93:	0f b6 f8             	movzbl %al,%edi
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6a96:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6a9d:	48 83 c0 0d          	add    $0xd,%rax
    6aa1:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6aa4:	44 0f b6 c8          	movzbl %al,%r9d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6aa8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6aaf:	48 83 c0 0c          	add    $0xc,%rax
    6ab3:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6ab6:	0f b6 c0             	movzbl %al,%eax
    6ab9:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%rbp)
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6abf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6ac6:	48 83 c0 0b          	add    $0xb,%rax
    6aca:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6acd:	0f b6 d8             	movzbl %al,%ebx
    6ad0:	89 9d 48 fe ff ff    	mov    %ebx,-0x1b8(%rbp)
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6ad6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6add:	48 83 c0 0a          	add    $0xa,%rax
    6ae1:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6ae4:	0f b6 c8             	movzbl %al,%ecx
    6ae7:	89 8d 44 fe ff ff    	mov    %ecx,-0x1bc(%rbp)
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6aed:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6af4:	48 83 c0 09          	add    $0x9,%rax
    6af8:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6afb:	44 0f b6 f8          	movzbl %al,%r15d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6aff:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b06:	48 83 c0 08          	add    $0x8,%rax
    6b0a:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b0d:	44 0f b6 f0          	movzbl %al,%r14d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b11:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b18:	48 83 c0 07          	add    $0x7,%rax
    6b1c:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b1f:	44 0f b6 e8          	movzbl %al,%r13d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b23:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b2a:	48 83 c0 06          	add    $0x6,%rax
    6b2e:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b31:	44 0f b6 e0          	movzbl %al,%r12d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b35:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b3c:	48 83 c0 05          	add    $0x5,%rax
    6b40:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b43:	0f b6 d8             	movzbl %al,%ebx
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b46:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b4d:	48 83 c0 04          	add    $0x4,%rax
    6b51:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b54:	44 0f b6 d8          	movzbl %al,%r11d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b58:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b5f:	48 83 c0 03          	add    $0x3,%rax
    6b63:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b66:	44 0f b6 d0          	movzbl %al,%r10d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b6a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b71:	48 83 c0 02          	add    $0x2,%rax
    6b75:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b78:	0f b6 d0             	movzbl %al,%edx
    6b7b:	89 95 40 fe ff ff    	mov    %edx,-0x1c0(%rbp)
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b81:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b88:	48 83 c0 01          	add    $0x1,%rax
    6b8c:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b8f:	44 0f b6 c0          	movzbl %al,%r8d
	 BB[0], BB[1], BB[2], BB[3],  BB[4], BB[5], BB[6], BB[7],	 BB[8], BB[9], BB[10], BB[11], BB[12], BB[13], BB[14], BB[15]	  );
    6b93:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6b9a:	0f b6 00             	movzbl (%rax),%eax
         sprintf (buffer,
    6b9d:	0f b6 c8             	movzbl %al,%ecx
    6ba0:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
    6ba7:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    6bae:	48 83 ec 08          	sub    $0x8,%rsp
    6bb2:	56                   	push   %rsi
    6bb3:	57                   	push   %rdi
    6bb4:	41 51                	push   %r9
    6bb6:	8b b5 4c fe ff ff    	mov    -0x1b4(%rbp),%esi
    6bbc:	56                   	push   %rsi
    6bbd:	8b b5 48 fe ff ff    	mov    -0x1b8(%rbp),%esi
    6bc3:	56                   	push   %rsi
    6bc4:	8b b5 44 fe ff ff    	mov    -0x1bc(%rbp),%esi
    6bca:	56                   	push   %rsi
    6bcb:	41 57                	push   %r15
    6bcd:	41 56                	push   %r14
    6bcf:	41 55                	push   %r13
    6bd1:	41 54                	push   %r12
    6bd3:	53                   	push   %rbx
    6bd4:	41 53                	push   %r11
    6bd6:	41 52                	push   %r10
    6bd8:	44 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%r9d
    6bdf:	48 8d 35 fa 68 00 00 	lea    0x68fa(%rip),%rsi        # d4e0 <_IO_stdin_used+0x20>
    6be6:	48 89 c7             	mov    %rax,%rdi
    6be9:	b8 00 00 00 00       	mov    $0x0,%eax
    6bee:	e8 ed a0 ff ff       	callq  ce0 <sprintf@plt>
    6bf3:	48 83 c4 70          	add    $0x70,%rsp
         for (t = 0; buffer[t] != 0; t ++); t--;
    6bf7:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
    6bfe:	00 00 00 
    6c01:	eb 07                	jmp    6c0a <virtual_machine+0x3832>
    6c03:	83 85 64 fe ff ff 01 	addl   $0x1,-0x19c(%rbp)
    6c0a:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    6c10:	0f b6 84 05 e0 fe ff 	movzbl -0x120(%rbp,%rax,1),%eax
    6c17:	ff 
    6c18:	84 c0                	test   %al,%al
    6c1a:	75 e7                	jne    6c03 <virtual_machine+0x382b>
    6c1c:	83 ad 64 fe ff ff 01 	subl   $0x1,-0x19c(%rbp)
    	ttwrite(CELL(OUTPUT),buffer, t  );
    6c23:	8b 9d 64 fe ff ff    	mov    -0x19c(%rbp),%ebx
    6c29:	48 8b 05 58 87 60 00 	mov    0x608758(%rip),%rax        # 60f388 <f_boot>
    6c30:	48 05 78 01 00 00    	add    $0x178,%rax
    6c36:	89 c2                	mov    %eax,%edx
    6c38:	48 8b 05 49 87 60 00 	mov    0x608749(%rip),%rax        # 60f388 <f_boot>
    6c3f:	29 c2                	sub    %eax,%edx
    6c41:	89 d0                	mov    %edx,%eax
    6c43:	89 c7                	mov    %eax,%edi
    6c45:	e8 23 a2 ff ff       	callq  e6d <v2r>
    6c4a:	8b 00                	mov    (%rax),%eax
    6c4c:	89 c1                	mov    %eax,%ecx
    6c4e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    6c55:	48 89 da             	mov    %rbx,%rdx
    6c58:	48 89 c6             	mov    %rax,%rsi
    6c5b:	89 cf                	mov    %ecx,%edi
    6c5d:	e8 53 65 00 00       	callq  d1b5 <ttwrite>
        for (t = 0; t<16; t ++)
    6c62:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
    6c69:	00 00 00 
    6c6c:	e9 99 00 00 00       	jmpq   6d0a <virtual_machine+0x3932>
        	{  if(  BB[t]<' ')      ttwrite(CELL(OUTPUT),".", 1  );
    6c71:	8b 95 64 fe ff ff    	mov    -0x19c(%rbp),%edx
    6c77:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6c7e:	48 01 d0             	add    %rdx,%rax
    6c81:	0f b6 00             	movzbl (%rax),%eax
    6c84:	3c 1f                	cmp    $0x1f,%al
    6c86:	77 38                	ja     6cc0 <virtual_machine+0x38e8>
    6c88:	48 8b 05 f9 86 60 00 	mov    0x6086f9(%rip),%rax        # 60f388 <f_boot>
    6c8f:	48 05 78 01 00 00    	add    $0x178,%rax
    6c95:	89 c2                	mov    %eax,%edx
    6c97:	48 8b 05 ea 86 60 00 	mov    0x6086ea(%rip),%rax        # 60f388 <f_boot>
    6c9e:	29 c2                	sub    %eax,%edx
    6ca0:	89 d0                	mov    %edx,%eax
    6ca2:	89 c7                	mov    %eax,%edi
    6ca4:	e8 c4 a1 ff ff       	callq  e6d <v2r>
    6ca9:	8b 00                	mov    (%rax),%eax
    6cab:	ba 01 00 00 00       	mov    $0x1,%edx
    6cb0:	48 8d 35 70 68 00 00 	lea    0x6870(%rip),%rsi        # d527 <_IO_stdin_used+0x67>
    6cb7:	89 c7                	mov    %eax,%edi
    6cb9:	e8 f7 64 00 00       	callq  d1b5 <ttwrite>
    6cbe:	eb 43                	jmp    6d03 <virtual_machine+0x392b>
        	else  ttwrite(CELL(OUTPUT),&BB[t], 1  );
    6cc0:	8b 95 64 fe ff ff    	mov    -0x19c(%rbp),%edx
    6cc6:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    6ccd:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    6cd1:	48 8b 05 b0 86 60 00 	mov    0x6086b0(%rip),%rax        # 60f388 <f_boot>
    6cd8:	48 05 78 01 00 00    	add    $0x178,%rax
    6cde:	89 c2                	mov    %eax,%edx
    6ce0:	48 8b 05 a1 86 60 00 	mov    0x6086a1(%rip),%rax        # 60f388 <f_boot>
    6ce7:	29 c2                	sub    %eax,%edx
    6ce9:	89 d0                	mov    %edx,%eax
    6ceb:	89 c7                	mov    %eax,%edi
    6ced:	e8 7b a1 ff ff       	callq  e6d <v2r>
    6cf2:	8b 00                	mov    (%rax),%eax
    6cf4:	ba 01 00 00 00       	mov    $0x1,%edx
    6cf9:	48 89 de             	mov    %rbx,%rsi
    6cfc:	89 c7                	mov    %eax,%edi
    6cfe:	e8 b2 64 00 00       	callq  d1b5 <ttwrite>
        for (t = 0; t<16; t ++)
    6d03:	83 85 64 fe ff ff 01 	addl   $0x1,-0x19c(%rbp)
    6d0a:	83 bd 64 fe ff ff 0f 	cmpl   $0xf,-0x19c(%rbp)
    6d11:	0f 86 5a ff ff ff    	jbe    6c71 <virtual_machine+0x3899>
        	}  ttwrite(CELL(OUTPUT),"\n", 1  );
    6d17:	48 8b 05 6a 86 60 00 	mov    0x60866a(%rip),%rax        # 60f388 <f_boot>
    6d1e:	48 05 78 01 00 00    	add    $0x178,%rax
    6d24:	89 c2                	mov    %eax,%edx
    6d26:	48 8b 05 5b 86 60 00 	mov    0x60865b(%rip),%rax        # 60f388 <f_boot>
    6d2d:	29 c2                	sub    %eax,%edx
    6d2f:	89 d0                	mov    %edx,%eax
    6d31:	89 c7                	mov    %eax,%edi
    6d33:	e8 35 a1 ff ff       	callq  e6d <v2r>
    6d38:	8b 00                	mov    (%rax),%eax
    6d3a:	ba 01 00 00 00       	mov    $0x1,%edx
    6d3f:	48 8d 35 e3 67 00 00 	lea    0x67e3(%rip),%rsi        # d529 <_IO_stdin_used+0x69>
    6d46:	89 c7                	mov    %eax,%edi
    6d48:	e8 68 64 00 00       	callq  d1b5 <ttwrite>


    	 len-=16;    	 BB+=16;
    6d4d:	83 ad 70 fe ff ff 10 	subl   $0x10,-0x190(%rbp)
    6d54:	48 83 85 b8 fe ff ff 	addq   $0x10,-0x148(%rbp)
    6d5b:	10 
    	 while(len>0)
    6d5c:	83 bd 70 fe ff ff 00 	cmpl   $0x0,-0x190(%rbp)
    6d63:	0f 8f 0b fd ff ff    	jg     6a74 <virtual_machine+0x369c>
         }    	 sp+=8;
    6d69:	48 8b 05 18 86 60 00 	mov    0x608618(%rip),%rax        # 60f388 <f_boot>
    6d70:	48 83 c0 04          	add    $0x4,%rax
    6d74:	89 c2                	mov    %eax,%edx
    6d76:	48 8b 05 0b 86 60 00 	mov    0x60860b(%rip),%rax        # 60f388 <f_boot>
    6d7d:	29 c2                	sub    %eax,%edx
    6d7f:	89 d0                	mov    %edx,%eax
    6d81:	48 63 d0             	movslq %eax,%rdx
    6d84:	48 8d 05 55 83 20 00 	lea    0x208355(%rip),%rax        # 20f0e0 <mem>
    6d8b:	48 01 d0             	add    %rdx,%rax
    6d8e:	8b 10                	mov    (%rax),%edx
    6d90:	48 8b 05 f1 85 60 00 	mov    0x6085f1(%rip),%rax        # 60f388 <f_boot>
    6d97:	48 83 c0 04          	add    $0x4,%rax
    6d9b:	89 c1                	mov    %eax,%ecx
    6d9d:	48 8b 05 e4 85 60 00 	mov    0x6085e4(%rip),%rax        # 60f388 <f_boot>
    6da4:	29 c1                	sub    %eax,%ecx
    6da6:	89 c8                	mov    %ecx,%eax
    6da8:	48 63 c8             	movslq %eax,%rcx
    6dab:	48 8d 05 2e 83 20 00 	lea    0x20832e(%rip),%rax        # 20f0e0 <mem>
    6db2:	48 01 c8             	add    %rcx,%rax
    6db5:	83 c2 08             	add    $0x8,%edx
    6db8:	89 10                	mov    %edx,(%rax)
#endif
     }    	 break;
    6dba:	e9 8a 36 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_qdup:/* dup  */  if(CELL(sp)==0)break;
    6dbf:	48 8b 05 c2 85 60 00 	mov    0x6085c2(%rip),%rax        # 60f388 <f_boot>
    6dc6:	48 83 c0 04          	add    $0x4,%rax
    6dca:	89 c2                	mov    %eax,%edx
    6dcc:	48 8b 05 b5 85 60 00 	mov    0x6085b5(%rip),%rax        # 60f388 <f_boot>
    6dd3:	29 c2                	sub    %eax,%edx
    6dd5:	89 d0                	mov    %edx,%eax
    6dd7:	48 63 d0             	movslq %eax,%rdx
    6dda:	48 8d 05 ff 82 20 00 	lea    0x2082ff(%rip),%rax        # 20f0e0 <mem>
    6de1:	48 01 d0             	add    %rdx,%rax
    6de4:	8b 00                	mov    (%rax),%eax
    6de6:	89 c7                	mov    %eax,%edi
    6de8:	e8 80 a0 ff ff       	callq  e6d <v2r>
    6ded:	8b 00                	mov    (%rax),%eax
    6def:	85 c0                	test   %eax,%eax
    6df1:	0f 84 4b 36 00 00    	je     a442 <virtual_machine+0x706a>
     case sw_dup:/* dup  */ sp-=4;CELL(sp)=CELL(sp+4);break;
    6df7:	48 8b 05 8a 85 60 00 	mov    0x60858a(%rip),%rax        # 60f388 <f_boot>
    6dfe:	48 83 c0 04          	add    $0x4,%rax
    6e02:	89 c2                	mov    %eax,%edx
    6e04:	48 8b 05 7d 85 60 00 	mov    0x60857d(%rip),%rax        # 60f388 <f_boot>
    6e0b:	29 c2                	sub    %eax,%edx
    6e0d:	89 d0                	mov    %edx,%eax
    6e0f:	48 63 d0             	movslq %eax,%rdx
    6e12:	48 8d 05 c7 82 20 00 	lea    0x2082c7(%rip),%rax        # 20f0e0 <mem>
    6e19:	48 01 d0             	add    %rdx,%rax
    6e1c:	8b 10                	mov    (%rax),%edx
    6e1e:	48 8b 05 63 85 60 00 	mov    0x608563(%rip),%rax        # 60f388 <f_boot>
    6e25:	48 83 c0 04          	add    $0x4,%rax
    6e29:	89 c1                	mov    %eax,%ecx
    6e2b:	48 8b 05 56 85 60 00 	mov    0x608556(%rip),%rax        # 60f388 <f_boot>
    6e32:	29 c1                	sub    %eax,%ecx
    6e34:	89 c8                	mov    %ecx,%eax
    6e36:	48 63 c8             	movslq %eax,%rcx
    6e39:	48 8d 05 a0 82 20 00 	lea    0x2082a0(%rip),%rax        # 20f0e0 <mem>
    6e40:	48 01 c8             	add    %rcx,%rax
    6e43:	83 ea 04             	sub    $0x4,%edx
    6e46:	89 10                	mov    %edx,(%rax)
    6e48:	48 8b 05 39 85 60 00 	mov    0x608539(%rip),%rax        # 60f388 <f_boot>
    6e4f:	48 83 c0 04          	add    $0x4,%rax
    6e53:	89 c2                	mov    %eax,%edx
    6e55:	48 8b 05 2c 85 60 00 	mov    0x60852c(%rip),%rax        # 60f388 <f_boot>
    6e5c:	29 c2                	sub    %eax,%edx
    6e5e:	89 d0                	mov    %edx,%eax
    6e60:	48 63 d0             	movslq %eax,%rdx
    6e63:	48 8d 05 76 82 20 00 	lea    0x208276(%rip),%rax        # 20f0e0 <mem>
    6e6a:	48 01 d0             	add    %rdx,%rax
    6e6d:	8b 00                	mov    (%rax),%eax
    6e6f:	83 c0 04             	add    $0x4,%eax
    6e72:	89 c7                	mov    %eax,%edi
    6e74:	e8 f4 9f ff ff       	callq  e6d <v2r>
    6e79:	48 89 c3             	mov    %rax,%rbx
    6e7c:	48 8b 05 05 85 60 00 	mov    0x608505(%rip),%rax        # 60f388 <f_boot>
    6e83:	48 83 c0 04          	add    $0x4,%rax
    6e87:	89 c2                	mov    %eax,%edx
    6e89:	48 8b 05 f8 84 60 00 	mov    0x6084f8(%rip),%rax        # 60f388 <f_boot>
    6e90:	29 c2                	sub    %eax,%edx
    6e92:	89 d0                	mov    %edx,%eax
    6e94:	48 63 d0             	movslq %eax,%rdx
    6e97:	48 8d 05 42 82 20 00 	lea    0x208242(%rip),%rax        # 20f0e0 <mem>
    6e9e:	48 01 d0             	add    %rdx,%rax
    6ea1:	8b 00                	mov    (%rax),%eax
    6ea3:	89 c7                	mov    %eax,%edi
    6ea5:	e8 c3 9f ff ff       	callq  e6d <v2r>
    6eaa:	48 89 c2             	mov    %rax,%rdx
    6ead:	8b 03                	mov    (%rbx),%eax
    6eaf:	89 02                	mov    %eax,(%rdx)
    6eb1:	e9 93 35 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2dup:/* 2dup */ sp-=4;CELL(sp)=CELL(sp+8);
    6eb6:	48 8b 05 cb 84 60 00 	mov    0x6084cb(%rip),%rax        # 60f388 <f_boot>
    6ebd:	48 83 c0 04          	add    $0x4,%rax
    6ec1:	89 c2                	mov    %eax,%edx
    6ec3:	48 8b 05 be 84 60 00 	mov    0x6084be(%rip),%rax        # 60f388 <f_boot>
    6eca:	29 c2                	sub    %eax,%edx
    6ecc:	89 d0                	mov    %edx,%eax
    6ece:	48 63 d0             	movslq %eax,%rdx
    6ed1:	48 8d 05 08 82 20 00 	lea    0x208208(%rip),%rax        # 20f0e0 <mem>
    6ed8:	48 01 d0             	add    %rdx,%rax
    6edb:	8b 10                	mov    (%rax),%edx
    6edd:	48 8b 05 a4 84 60 00 	mov    0x6084a4(%rip),%rax        # 60f388 <f_boot>
    6ee4:	48 83 c0 04          	add    $0x4,%rax
    6ee8:	89 c1                	mov    %eax,%ecx
    6eea:	48 8b 05 97 84 60 00 	mov    0x608497(%rip),%rax        # 60f388 <f_boot>
    6ef1:	29 c1                	sub    %eax,%ecx
    6ef3:	89 c8                	mov    %ecx,%eax
    6ef5:	48 63 c8             	movslq %eax,%rcx
    6ef8:	48 8d 05 e1 81 20 00 	lea    0x2081e1(%rip),%rax        # 20f0e0 <mem>
    6eff:	48 01 c8             	add    %rcx,%rax
    6f02:	83 ea 04             	sub    $0x4,%edx
    6f05:	89 10                	mov    %edx,(%rax)
    6f07:	48 8b 05 7a 84 60 00 	mov    0x60847a(%rip),%rax        # 60f388 <f_boot>
    6f0e:	48 83 c0 04          	add    $0x4,%rax
    6f12:	89 c2                	mov    %eax,%edx
    6f14:	48 8b 05 6d 84 60 00 	mov    0x60846d(%rip),%rax        # 60f388 <f_boot>
    6f1b:	29 c2                	sub    %eax,%edx
    6f1d:	89 d0                	mov    %edx,%eax
    6f1f:	48 63 d0             	movslq %eax,%rdx
    6f22:	48 8d 05 b7 81 20 00 	lea    0x2081b7(%rip),%rax        # 20f0e0 <mem>
    6f29:	48 01 d0             	add    %rdx,%rax
    6f2c:	8b 00                	mov    (%rax),%eax
    6f2e:	83 c0 08             	add    $0x8,%eax
    6f31:	89 c7                	mov    %eax,%edi
    6f33:	e8 35 9f ff ff       	callq  e6d <v2r>
    6f38:	48 89 c3             	mov    %rax,%rbx
    6f3b:	48 8b 05 46 84 60 00 	mov    0x608446(%rip),%rax        # 60f388 <f_boot>
    6f42:	48 83 c0 04          	add    $0x4,%rax
    6f46:	89 c2                	mov    %eax,%edx
    6f48:	48 8b 05 39 84 60 00 	mov    0x608439(%rip),%rax        # 60f388 <f_boot>
    6f4f:	29 c2                	sub    %eax,%edx
    6f51:	89 d0                	mov    %edx,%eax
    6f53:	48 63 d0             	movslq %eax,%rdx
    6f56:	48 8d 05 83 81 20 00 	lea    0x208183(%rip),%rax        # 20f0e0 <mem>
    6f5d:	48 01 d0             	add    %rdx,%rax
    6f60:	8b 00                	mov    (%rax),%eax
    6f62:	89 c7                	mov    %eax,%edi
    6f64:	e8 04 9f ff ff       	callq  e6d <v2r>
    6f69:	48 89 c2             	mov    %rax,%rdx
    6f6c:	8b 03                	mov    (%rbx),%eax
    6f6e:	89 02                	mov    %eax,(%rdx)
     case sw_over:/* over */ sp-=4;CELL(sp)=CELL(sp+8);break;
    6f70:	48 8b 05 11 84 60 00 	mov    0x608411(%rip),%rax        # 60f388 <f_boot>
    6f77:	48 83 c0 04          	add    $0x4,%rax
    6f7b:	89 c2                	mov    %eax,%edx
    6f7d:	48 8b 05 04 84 60 00 	mov    0x608404(%rip),%rax        # 60f388 <f_boot>
    6f84:	29 c2                	sub    %eax,%edx
    6f86:	89 d0                	mov    %edx,%eax
    6f88:	48 63 d0             	movslq %eax,%rdx
    6f8b:	48 8d 05 4e 81 20 00 	lea    0x20814e(%rip),%rax        # 20f0e0 <mem>
    6f92:	48 01 d0             	add    %rdx,%rax
    6f95:	8b 10                	mov    (%rax),%edx
    6f97:	48 8b 05 ea 83 60 00 	mov    0x6083ea(%rip),%rax        # 60f388 <f_boot>
    6f9e:	48 83 c0 04          	add    $0x4,%rax
    6fa2:	89 c1                	mov    %eax,%ecx
    6fa4:	48 8b 05 dd 83 60 00 	mov    0x6083dd(%rip),%rax        # 60f388 <f_boot>
    6fab:	29 c1                	sub    %eax,%ecx
    6fad:	89 c8                	mov    %ecx,%eax
    6faf:	48 63 c8             	movslq %eax,%rcx
    6fb2:	48 8d 05 27 81 20 00 	lea    0x208127(%rip),%rax        # 20f0e0 <mem>
    6fb9:	48 01 c8             	add    %rcx,%rax
    6fbc:	83 ea 04             	sub    $0x4,%edx
    6fbf:	89 10                	mov    %edx,(%rax)
    6fc1:	48 8b 05 c0 83 60 00 	mov    0x6083c0(%rip),%rax        # 60f388 <f_boot>
    6fc8:	48 83 c0 04          	add    $0x4,%rax
    6fcc:	89 c2                	mov    %eax,%edx
    6fce:	48 8b 05 b3 83 60 00 	mov    0x6083b3(%rip),%rax        # 60f388 <f_boot>
    6fd5:	29 c2                	sub    %eax,%edx
    6fd7:	89 d0                	mov    %edx,%eax
    6fd9:	48 63 d0             	movslq %eax,%rdx
    6fdc:	48 8d 05 fd 80 20 00 	lea    0x2080fd(%rip),%rax        # 20f0e0 <mem>
    6fe3:	48 01 d0             	add    %rdx,%rax
    6fe6:	8b 00                	mov    (%rax),%eax
    6fe8:	83 c0 08             	add    $0x8,%eax
    6feb:	89 c7                	mov    %eax,%edi
    6fed:	e8 7b 9e ff ff       	callq  e6d <v2r>
    6ff2:	48 89 c3             	mov    %rax,%rbx
    6ff5:	48 8b 05 8c 83 60 00 	mov    0x60838c(%rip),%rax        # 60f388 <f_boot>
    6ffc:	48 83 c0 04          	add    $0x4,%rax
    7000:	89 c2                	mov    %eax,%edx
    7002:	48 8b 05 7f 83 60 00 	mov    0x60837f(%rip),%rax        # 60f388 <f_boot>
    7009:	29 c2                	sub    %eax,%edx
    700b:	89 d0                	mov    %edx,%eax
    700d:	48 63 d0             	movslq %eax,%rdx
    7010:	48 8d 05 c9 80 20 00 	lea    0x2080c9(%rip),%rax        # 20f0e0 <mem>
    7017:	48 01 d0             	add    %rdx,%rax
    701a:	8b 00                	mov    (%rax),%eax
    701c:	89 c7                	mov    %eax,%edi
    701e:	e8 4a 9e ff ff       	callq  e6d <v2r>
    7023:	48 89 c2             	mov    %rax,%rdx
    7026:	8b 03                	mov    (%rbx),%eax
    7028:	89 02                	mov    %eax,(%rdx)
    702a:	e9 1a 34 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_2over:/* 2over */	sp-=4;CELL(sp)=CELL(sp+16);
    702f:	48 8b 05 52 83 60 00 	mov    0x608352(%rip),%rax        # 60f388 <f_boot>
    7036:	48 83 c0 04          	add    $0x4,%rax
    703a:	89 c2                	mov    %eax,%edx
    703c:	48 8b 05 45 83 60 00 	mov    0x608345(%rip),%rax        # 60f388 <f_boot>
    7043:	29 c2                	sub    %eax,%edx
    7045:	89 d0                	mov    %edx,%eax
    7047:	48 63 d0             	movslq %eax,%rdx
    704a:	48 8d 05 8f 80 20 00 	lea    0x20808f(%rip),%rax        # 20f0e0 <mem>
    7051:	48 01 d0             	add    %rdx,%rax
    7054:	8b 10                	mov    (%rax),%edx
    7056:	48 8b 05 2b 83 60 00 	mov    0x60832b(%rip),%rax        # 60f388 <f_boot>
    705d:	48 83 c0 04          	add    $0x4,%rax
    7061:	89 c1                	mov    %eax,%ecx
    7063:	48 8b 05 1e 83 60 00 	mov    0x60831e(%rip),%rax        # 60f388 <f_boot>
    706a:	29 c1                	sub    %eax,%ecx
    706c:	89 c8                	mov    %ecx,%eax
    706e:	48 63 c8             	movslq %eax,%rcx
    7071:	48 8d 05 68 80 20 00 	lea    0x208068(%rip),%rax        # 20f0e0 <mem>
    7078:	48 01 c8             	add    %rcx,%rax
    707b:	83 ea 04             	sub    $0x4,%edx
    707e:	89 10                	mov    %edx,(%rax)
    7080:	48 8b 05 01 83 60 00 	mov    0x608301(%rip),%rax        # 60f388 <f_boot>
    7087:	48 83 c0 04          	add    $0x4,%rax
    708b:	89 c2                	mov    %eax,%edx
    708d:	48 8b 05 f4 82 60 00 	mov    0x6082f4(%rip),%rax        # 60f388 <f_boot>
    7094:	29 c2                	sub    %eax,%edx
    7096:	89 d0                	mov    %edx,%eax
    7098:	48 63 d0             	movslq %eax,%rdx
    709b:	48 8d 05 3e 80 20 00 	lea    0x20803e(%rip),%rax        # 20f0e0 <mem>
    70a2:	48 01 d0             	add    %rdx,%rax
    70a5:	8b 00                	mov    (%rax),%eax
    70a7:	83 c0 10             	add    $0x10,%eax
    70aa:	89 c7                	mov    %eax,%edi
    70ac:	e8 bc 9d ff ff       	callq  e6d <v2r>
    70b1:	48 89 c3             	mov    %rax,%rbx
    70b4:	48 8b 05 cd 82 60 00 	mov    0x6082cd(%rip),%rax        # 60f388 <f_boot>
    70bb:	48 83 c0 04          	add    $0x4,%rax
    70bf:	89 c2                	mov    %eax,%edx
    70c1:	48 8b 05 c0 82 60 00 	mov    0x6082c0(%rip),%rax        # 60f388 <f_boot>
    70c8:	29 c2                	sub    %eax,%edx
    70ca:	89 d0                	mov    %edx,%eax
    70cc:	48 63 d0             	movslq %eax,%rdx
    70cf:	48 8d 05 0a 80 20 00 	lea    0x20800a(%rip),%rax        # 20f0e0 <mem>
    70d6:	48 01 d0             	add    %rdx,%rax
    70d9:	8b 00                	mov    (%rax),%eax
    70db:	89 c7                	mov    %eax,%edi
    70dd:	e8 8b 9d ff ff       	callq  e6d <v2r>
    70e2:	48 89 c2             	mov    %rax,%rdx
    70e5:	8b 03                	mov    (%rbx),%eax
    70e7:	89 02                	mov    %eax,(%rdx)
				sp-=4;CELL(sp)=CELL(sp+16);break;
    70e9:	48 8b 05 98 82 60 00 	mov    0x608298(%rip),%rax        # 60f388 <f_boot>
    70f0:	48 83 c0 04          	add    $0x4,%rax
    70f4:	89 c2                	mov    %eax,%edx
    70f6:	48 8b 05 8b 82 60 00 	mov    0x60828b(%rip),%rax        # 60f388 <f_boot>
    70fd:	29 c2                	sub    %eax,%edx
    70ff:	89 d0                	mov    %edx,%eax
    7101:	48 63 d0             	movslq %eax,%rdx
    7104:	48 8d 05 d5 7f 20 00 	lea    0x207fd5(%rip),%rax        # 20f0e0 <mem>
    710b:	48 01 d0             	add    %rdx,%rax
    710e:	8b 10                	mov    (%rax),%edx
    7110:	48 8b 05 71 82 60 00 	mov    0x608271(%rip),%rax        # 60f388 <f_boot>
    7117:	48 83 c0 04          	add    $0x4,%rax
    711b:	89 c1                	mov    %eax,%ecx
    711d:	48 8b 05 64 82 60 00 	mov    0x608264(%rip),%rax        # 60f388 <f_boot>
    7124:	29 c1                	sub    %eax,%ecx
    7126:	89 c8                	mov    %ecx,%eax
    7128:	48 63 c8             	movslq %eax,%rcx
    712b:	48 8d 05 ae 7f 20 00 	lea    0x207fae(%rip),%rax        # 20f0e0 <mem>
    7132:	48 01 c8             	add    %rcx,%rax
    7135:	83 ea 04             	sub    $0x4,%edx
    7138:	89 10                	mov    %edx,(%rax)
    713a:	48 8b 05 47 82 60 00 	mov    0x608247(%rip),%rax        # 60f388 <f_boot>
    7141:	48 83 c0 04          	add    $0x4,%rax
    7145:	89 c2                	mov    %eax,%edx
    7147:	48 8b 05 3a 82 60 00 	mov    0x60823a(%rip),%rax        # 60f388 <f_boot>
    714e:	29 c2                	sub    %eax,%edx
    7150:	89 d0                	mov    %edx,%eax
    7152:	48 63 d0             	movslq %eax,%rdx
    7155:	48 8d 05 84 7f 20 00 	lea    0x207f84(%rip),%rax        # 20f0e0 <mem>
    715c:	48 01 d0             	add    %rdx,%rax
    715f:	8b 00                	mov    (%rax),%eax
    7161:	83 c0 10             	add    $0x10,%eax
    7164:	89 c7                	mov    %eax,%edi
    7166:	e8 02 9d ff ff       	callq  e6d <v2r>
    716b:	48 89 c3             	mov    %rax,%rbx
    716e:	48 8b 05 13 82 60 00 	mov    0x608213(%rip),%rax        # 60f388 <f_boot>
    7175:	48 83 c0 04          	add    $0x4,%rax
    7179:	89 c2                	mov    %eax,%edx
    717b:	48 8b 05 06 82 60 00 	mov    0x608206(%rip),%rax        # 60f388 <f_boot>
    7182:	29 c2                	sub    %eax,%edx
    7184:	89 d0                	mov    %edx,%eax
    7186:	48 63 d0             	movslq %eax,%rdx
    7189:	48 8d 05 50 7f 20 00 	lea    0x207f50(%rip),%rax        # 20f0e0 <mem>
    7190:	48 01 d0             	add    %rdx,%rax
    7193:	8b 00                	mov    (%rax),%eax
    7195:	89 c7                	mov    %eax,%edi
    7197:	e8 d1 9c ff ff       	callq  e6d <v2r>
    719c:	48 89 c2             	mov    %rax,%rdx
    719f:	8b 03                	mov    (%rbx),%eax
    71a1:	89 02                	mov    %eax,(%rdx)
    71a3:	e9 a1 32 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_rload:	/* r@   */   sp-=4;CELL(sp)=CELL(rp);break;
    71a8:	48 8b 05 d9 81 60 00 	mov    0x6081d9(%rip),%rax        # 60f388 <f_boot>
    71af:	48 83 c0 04          	add    $0x4,%rax
    71b3:	89 c2                	mov    %eax,%edx
    71b5:	48 8b 05 cc 81 60 00 	mov    0x6081cc(%rip),%rax        # 60f388 <f_boot>
    71bc:	29 c2                	sub    %eax,%edx
    71be:	89 d0                	mov    %edx,%eax
    71c0:	48 63 d0             	movslq %eax,%rdx
    71c3:	48 8d 05 16 7f 20 00 	lea    0x207f16(%rip),%rax        # 20f0e0 <mem>
    71ca:	48 01 d0             	add    %rdx,%rax
    71cd:	8b 10                	mov    (%rax),%edx
    71cf:	48 8b 05 b2 81 60 00 	mov    0x6081b2(%rip),%rax        # 60f388 <f_boot>
    71d6:	48 83 c0 04          	add    $0x4,%rax
    71da:	89 c1                	mov    %eax,%ecx
    71dc:	48 8b 05 a5 81 60 00 	mov    0x6081a5(%rip),%rax        # 60f388 <f_boot>
    71e3:	29 c1                	sub    %eax,%ecx
    71e5:	89 c8                	mov    %ecx,%eax
    71e7:	48 63 c8             	movslq %eax,%rcx
    71ea:	48 8d 05 ef 7e 20 00 	lea    0x207eef(%rip),%rax        # 20f0e0 <mem>
    71f1:	48 01 c8             	add    %rcx,%rax
    71f4:	83 ea 04             	sub    $0x4,%edx
    71f7:	89 10                	mov    %edx,(%rax)
    71f9:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    71ff:	89 c7                	mov    %eax,%edi
    7201:	e8 67 9c ff ff       	callq  e6d <v2r>
    7206:	48 89 c3             	mov    %rax,%rbx
    7209:	48 8b 05 78 81 60 00 	mov    0x608178(%rip),%rax        # 60f388 <f_boot>
    7210:	48 83 c0 04          	add    $0x4,%rax
    7214:	89 c2                	mov    %eax,%edx
    7216:	48 8b 05 6b 81 60 00 	mov    0x60816b(%rip),%rax        # 60f388 <f_boot>
    721d:	29 c2                	sub    %eax,%edx
    721f:	89 d0                	mov    %edx,%eax
    7221:	48 63 d0             	movslq %eax,%rdx
    7224:	48 8d 05 b5 7e 20 00 	lea    0x207eb5(%rip),%rax        # 20f0e0 <mem>
    722b:	48 01 d0             	add    %rdx,%rax
    722e:	8b 00                	mov    (%rax),%eax
    7230:	89 c7                	mov    %eax,%edi
    7232:	e8 36 9c ff ff       	callq  e6d <v2r>
    7237:	48 89 c2             	mov    %rax,%rdx
    723a:	8b 03                	mov    (%rbx),%eax
    723c:	89 02                	mov    %eax,(%rdx)
    723e:	e9 06 32 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rGT:	/* r>   */   sp-=4;CELL(sp)=CELL(rp);
    7243:	48 8b 05 3e 81 60 00 	mov    0x60813e(%rip),%rax        # 60f388 <f_boot>
    724a:	48 83 c0 04          	add    $0x4,%rax
    724e:	89 c2                	mov    %eax,%edx
    7250:	48 8b 05 31 81 60 00 	mov    0x608131(%rip),%rax        # 60f388 <f_boot>
    7257:	29 c2                	sub    %eax,%edx
    7259:	89 d0                	mov    %edx,%eax
    725b:	48 63 d0             	movslq %eax,%rdx
    725e:	48 8d 05 7b 7e 20 00 	lea    0x207e7b(%rip),%rax        # 20f0e0 <mem>
    7265:	48 01 d0             	add    %rdx,%rax
    7268:	8b 10                	mov    (%rax),%edx
    726a:	48 8b 05 17 81 60 00 	mov    0x608117(%rip),%rax        # 60f388 <f_boot>
    7271:	48 83 c0 04          	add    $0x4,%rax
    7275:	89 c1                	mov    %eax,%ecx
    7277:	48 8b 05 0a 81 60 00 	mov    0x60810a(%rip),%rax        # 60f388 <f_boot>
    727e:	29 c1                	sub    %eax,%ecx
    7280:	89 c8                	mov    %ecx,%eax
    7282:	48 63 c8             	movslq %eax,%rcx
    7285:	48 8d 05 54 7e 20 00 	lea    0x207e54(%rip),%rax        # 20f0e0 <mem>
    728c:	48 01 c8             	add    %rcx,%rax
    728f:	83 ea 04             	sub    $0x4,%edx
    7292:	89 10                	mov    %edx,(%rax)
    7294:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    729a:	89 c7                	mov    %eax,%edi
    729c:	e8 cc 9b ff ff       	callq  e6d <v2r>
    72a1:	48 89 c3             	mov    %rax,%rbx
    72a4:	48 8b 05 dd 80 60 00 	mov    0x6080dd(%rip),%rax        # 60f388 <f_boot>
    72ab:	48 83 c0 04          	add    $0x4,%rax
    72af:	89 c2                	mov    %eax,%edx
    72b1:	48 8b 05 d0 80 60 00 	mov    0x6080d0(%rip),%rax        # 60f388 <f_boot>
    72b8:	29 c2                	sub    %eax,%edx
    72ba:	89 d0                	mov    %edx,%eax
    72bc:	48 63 d0             	movslq %eax,%rdx
    72bf:	48 8d 05 1a 7e 20 00 	lea    0x207e1a(%rip),%rax        # 20f0e0 <mem>
    72c6:	48 01 d0             	add    %rdx,%rax
    72c9:	8b 00                	mov    (%rax),%eax
    72cb:	89 c7                	mov    %eax,%edi
    72cd:	e8 9b 9b ff ff       	callq  e6d <v2r>
    72d2:	48 89 c2             	mov    %rax,%rdx
    72d5:	8b 03                	mov    (%rbx),%eax
    72d7:	89 02                	mov    %eax,(%rdx)
     case sw_rdrop:	/* rdrop */  rp+=4;break;
    72d9:	83 85 5c fe ff ff 04 	addl   $0x4,-0x1a4(%rbp)
    72e0:	e9 64 31 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_dupGTr:	/* dup>r   */ rp-=4;CELL(rp)=CELL(sp);break;
    72e5:	83 ad 5c fe ff ff 04 	subl   $0x4,-0x1a4(%rbp)
    72ec:	48 8b 05 95 80 60 00 	mov    0x608095(%rip),%rax        # 60f388 <f_boot>
    72f3:	48 83 c0 04          	add    $0x4,%rax
    72f7:	89 c2                	mov    %eax,%edx
    72f9:	48 8b 05 88 80 60 00 	mov    0x608088(%rip),%rax        # 60f388 <f_boot>
    7300:	29 c2                	sub    %eax,%edx
    7302:	89 d0                	mov    %edx,%eax
    7304:	48 63 d0             	movslq %eax,%rdx
    7307:	48 8d 05 d2 7d 20 00 	lea    0x207dd2(%rip),%rax        # 20f0e0 <mem>
    730e:	48 01 d0             	add    %rdx,%rax
    7311:	8b 00                	mov    (%rax),%eax
    7313:	89 c7                	mov    %eax,%edi
    7315:	e8 53 9b ff ff       	callq  e6d <v2r>
    731a:	48 89 c3             	mov    %rax,%rbx
    731d:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7323:	89 c7                	mov    %eax,%edi
    7325:	e8 43 9b ff ff       	callq  e6d <v2r>
    732a:	48 89 c2             	mov    %rax,%rdx
    732d:	8b 03                	mov    (%rbx),%eax
    732f:	89 02                	mov    %eax,(%rdx)
    7331:	e9 13 31 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_GTr:	/* >r   */   rp-=4;CELL(rp)=CELL(sp);sp+=4;break;
    7336:	83 ad 5c fe ff ff 04 	subl   $0x4,-0x1a4(%rbp)
    733d:	48 8b 05 44 80 60 00 	mov    0x608044(%rip),%rax        # 60f388 <f_boot>
    7344:	48 83 c0 04          	add    $0x4,%rax
    7348:	89 c2                	mov    %eax,%edx
    734a:	48 8b 05 37 80 60 00 	mov    0x608037(%rip),%rax        # 60f388 <f_boot>
    7351:	29 c2                	sub    %eax,%edx
    7353:	89 d0                	mov    %edx,%eax
    7355:	48 63 d0             	movslq %eax,%rdx
    7358:	48 8d 05 81 7d 20 00 	lea    0x207d81(%rip),%rax        # 20f0e0 <mem>
    735f:	48 01 d0             	add    %rdx,%rax
    7362:	8b 00                	mov    (%rax),%eax
    7364:	89 c7                	mov    %eax,%edi
    7366:	e8 02 9b ff ff       	callq  e6d <v2r>
    736b:	48 89 c3             	mov    %rax,%rbx
    736e:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7374:	89 c7                	mov    %eax,%edi
    7376:	e8 f2 9a ff ff       	callq  e6d <v2r>
    737b:	48 89 c2             	mov    %rax,%rdx
    737e:	8b 03                	mov    (%rbx),%eax
    7380:	89 02                	mov    %eax,(%rdx)
    7382:	48 8b 05 ff 7f 60 00 	mov    0x607fff(%rip),%rax        # 60f388 <f_boot>
    7389:	48 83 c0 04          	add    $0x4,%rax
    738d:	89 c2                	mov    %eax,%edx
    738f:	48 8b 05 f2 7f 60 00 	mov    0x607ff2(%rip),%rax        # 60f388 <f_boot>
    7396:	29 c2                	sub    %eax,%edx
    7398:	89 d0                	mov    %edx,%eax
    739a:	48 63 d0             	movslq %eax,%rdx
    739d:	48 8d 05 3c 7d 20 00 	lea    0x207d3c(%rip),%rax        # 20f0e0 <mem>
    73a4:	48 01 d0             	add    %rdx,%rax
    73a7:	8b 10                	mov    (%rax),%edx
    73a9:	48 8b 05 d8 7f 60 00 	mov    0x607fd8(%rip),%rax        # 60f388 <f_boot>
    73b0:	48 83 c0 04          	add    $0x4,%rax
    73b4:	89 c1                	mov    %eax,%ecx
    73b6:	48 8b 05 cb 7f 60 00 	mov    0x607fcb(%rip),%rax        # 60f388 <f_boot>
    73bd:	29 c1                	sub    %eax,%ecx
    73bf:	89 c8                	mov    %ecx,%eax
    73c1:	48 63 c8             	movslq %eax,%rcx
    73c4:	48 8d 05 15 7d 20 00 	lea    0x207d15(%rip),%rax        # 20f0e0 <mem>
    73cb:	48 01 c8             	add    %rcx,%rax
    73ce:	83 c2 04             	add    $0x4,%edx
    73d1:	89 10                	mov    %edx,(%rax)
    73d3:	e9 71 30 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2rload:	/* 2r@   */  sp-=8;CELL(sp)=CELL(rp);
    73d8:	48 8b 05 a9 7f 60 00 	mov    0x607fa9(%rip),%rax        # 60f388 <f_boot>
    73df:	48 83 c0 04          	add    $0x4,%rax
    73e3:	89 c2                	mov    %eax,%edx
    73e5:	48 8b 05 9c 7f 60 00 	mov    0x607f9c(%rip),%rax        # 60f388 <f_boot>
    73ec:	29 c2                	sub    %eax,%edx
    73ee:	89 d0                	mov    %edx,%eax
    73f0:	48 63 d0             	movslq %eax,%rdx
    73f3:	48 8d 05 e6 7c 20 00 	lea    0x207ce6(%rip),%rax        # 20f0e0 <mem>
    73fa:	48 01 d0             	add    %rdx,%rax
    73fd:	8b 10                	mov    (%rax),%edx
    73ff:	48 8b 05 82 7f 60 00 	mov    0x607f82(%rip),%rax        # 60f388 <f_boot>
    7406:	48 83 c0 04          	add    $0x4,%rax
    740a:	89 c1                	mov    %eax,%ecx
    740c:	48 8b 05 75 7f 60 00 	mov    0x607f75(%rip),%rax        # 60f388 <f_boot>
    7413:	29 c1                	sub    %eax,%ecx
    7415:	89 c8                	mov    %ecx,%eax
    7417:	48 63 c8             	movslq %eax,%rcx
    741a:	48 8d 05 bf 7c 20 00 	lea    0x207cbf(%rip),%rax        # 20f0e0 <mem>
    7421:	48 01 c8             	add    %rcx,%rax
    7424:	83 ea 08             	sub    $0x8,%edx
    7427:	89 10                	mov    %edx,(%rax)
    7429:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    742f:	89 c7                	mov    %eax,%edi
    7431:	e8 37 9a ff ff       	callq  e6d <v2r>
    7436:	48 89 c3             	mov    %rax,%rbx
    7439:	48 8b 05 48 7f 60 00 	mov    0x607f48(%rip),%rax        # 60f388 <f_boot>
    7440:	48 83 c0 04          	add    $0x4,%rax
    7444:	89 c2                	mov    %eax,%edx
    7446:	48 8b 05 3b 7f 60 00 	mov    0x607f3b(%rip),%rax        # 60f388 <f_boot>
    744d:	29 c2                	sub    %eax,%edx
    744f:	89 d0                	mov    %edx,%eax
    7451:	48 63 d0             	movslq %eax,%rdx
    7454:	48 8d 05 85 7c 20 00 	lea    0x207c85(%rip),%rax        # 20f0e0 <mem>
    745b:	48 01 d0             	add    %rdx,%rax
    745e:	8b 00                	mov    (%rax),%eax
    7460:	89 c7                	mov    %eax,%edi
    7462:	e8 06 9a ff ff       	callq  e6d <v2r>
    7467:	48 89 c2             	mov    %rax,%rdx
    746a:	8b 03                	mov    (%rbx),%eax
    746c:	89 02                	mov    %eax,(%rdx)
		CELL(sp+4)=CELL(rp+4);break;
    746e:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7474:	83 c0 04             	add    $0x4,%eax
    7477:	89 c7                	mov    %eax,%edi
    7479:	e8 ef 99 ff ff       	callq  e6d <v2r>
    747e:	48 89 c3             	mov    %rax,%rbx
    7481:	48 8b 05 00 7f 60 00 	mov    0x607f00(%rip),%rax        # 60f388 <f_boot>
    7488:	48 83 c0 04          	add    $0x4,%rax
    748c:	89 c2                	mov    %eax,%edx
    748e:	48 8b 05 f3 7e 60 00 	mov    0x607ef3(%rip),%rax        # 60f388 <f_boot>
    7495:	29 c2                	sub    %eax,%edx
    7497:	89 d0                	mov    %edx,%eax
    7499:	48 63 d0             	movslq %eax,%rdx
    749c:	48 8d 05 3d 7c 20 00 	lea    0x207c3d(%rip),%rax        # 20f0e0 <mem>
    74a3:	48 01 d0             	add    %rdx,%rax
    74a6:	8b 00                	mov    (%rax),%eax
    74a8:	83 c0 04             	add    $0x4,%eax
    74ab:	89 c7                	mov    %eax,%edi
    74ad:	e8 bb 99 ff ff       	callq  e6d <v2r>
    74b2:	48 89 c2             	mov    %rax,%rdx
    74b5:	8b 03                	mov    (%rbx),%eax
    74b7:	89 02                	mov    %eax,(%rdx)
    74b9:	e9 8b 2f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2rGT:	/* 2r>   */  sp-=8;CELL(sp)=CELL(rp);
    74be:	48 8b 05 c3 7e 60 00 	mov    0x607ec3(%rip),%rax        # 60f388 <f_boot>
    74c5:	48 83 c0 04          	add    $0x4,%rax
    74c9:	89 c2                	mov    %eax,%edx
    74cb:	48 8b 05 b6 7e 60 00 	mov    0x607eb6(%rip),%rax        # 60f388 <f_boot>
    74d2:	29 c2                	sub    %eax,%edx
    74d4:	89 d0                	mov    %edx,%eax
    74d6:	48 63 d0             	movslq %eax,%rdx
    74d9:	48 8d 05 00 7c 20 00 	lea    0x207c00(%rip),%rax        # 20f0e0 <mem>
    74e0:	48 01 d0             	add    %rdx,%rax
    74e3:	8b 10                	mov    (%rax),%edx
    74e5:	48 8b 05 9c 7e 60 00 	mov    0x607e9c(%rip),%rax        # 60f388 <f_boot>
    74ec:	48 83 c0 04          	add    $0x4,%rax
    74f0:	89 c1                	mov    %eax,%ecx
    74f2:	48 8b 05 8f 7e 60 00 	mov    0x607e8f(%rip),%rax        # 60f388 <f_boot>
    74f9:	29 c1                	sub    %eax,%ecx
    74fb:	89 c8                	mov    %ecx,%eax
    74fd:	48 63 c8             	movslq %eax,%rcx
    7500:	48 8d 05 d9 7b 20 00 	lea    0x207bd9(%rip),%rax        # 20f0e0 <mem>
    7507:	48 01 c8             	add    %rcx,%rax
    750a:	83 ea 08             	sub    $0x8,%edx
    750d:	89 10                	mov    %edx,(%rax)
    750f:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7515:	89 c7                	mov    %eax,%edi
    7517:	e8 51 99 ff ff       	callq  e6d <v2r>
    751c:	48 89 c3             	mov    %rax,%rbx
    751f:	48 8b 05 62 7e 60 00 	mov    0x607e62(%rip),%rax        # 60f388 <f_boot>
    7526:	48 83 c0 04          	add    $0x4,%rax
    752a:	89 c2                	mov    %eax,%edx
    752c:	48 8b 05 55 7e 60 00 	mov    0x607e55(%rip),%rax        # 60f388 <f_boot>
    7533:	29 c2                	sub    %eax,%edx
    7535:	89 d0                	mov    %edx,%eax
    7537:	48 63 d0             	movslq %eax,%rdx
    753a:	48 8d 05 9f 7b 20 00 	lea    0x207b9f(%rip),%rax        # 20f0e0 <mem>
    7541:	48 01 d0             	add    %rdx,%rax
    7544:	8b 00                	mov    (%rax),%eax
    7546:	89 c7                	mov    %eax,%edi
    7548:	e8 20 99 ff ff       	callq  e6d <v2r>
    754d:	48 89 c2             	mov    %rax,%rdx
    7550:	8b 03                	mov    (%rbx),%eax
    7552:	89 02                	mov    %eax,(%rdx)
		CELL(sp+4)=CELL(rp+4);
    7554:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    755a:	83 c0 04             	add    $0x4,%eax
    755d:	89 c7                	mov    %eax,%edi
    755f:	e8 09 99 ff ff       	callq  e6d <v2r>
    7564:	48 89 c3             	mov    %rax,%rbx
    7567:	48 8b 05 1a 7e 60 00 	mov    0x607e1a(%rip),%rax        # 60f388 <f_boot>
    756e:	48 83 c0 04          	add    $0x4,%rax
    7572:	89 c2                	mov    %eax,%edx
    7574:	48 8b 05 0d 7e 60 00 	mov    0x607e0d(%rip),%rax        # 60f388 <f_boot>
    757b:	29 c2                	sub    %eax,%edx
    757d:	89 d0                	mov    %edx,%eax
    757f:	48 63 d0             	movslq %eax,%rdx
    7582:	48 8d 05 57 7b 20 00 	lea    0x207b57(%rip),%rax        # 20f0e0 <mem>
    7589:	48 01 d0             	add    %rdx,%rax
    758c:	8b 00                	mov    (%rax),%eax
    758e:	83 c0 04             	add    $0x4,%eax
    7591:	89 c7                	mov    %eax,%edi
    7593:	e8 d5 98 ff ff       	callq  e6d <v2r>
    7598:	48 89 c2             	mov    %rax,%rdx
    759b:	8b 03                	mov    (%rbx),%eax
    759d:	89 02                	mov    %eax,(%rdx)
     case sw_2rdrop:	/* 2rdrop */ rp+=8;break;
    759f:	83 85 5c fe ff ff 08 	addl   $0x8,-0x1a4(%rbp)
    75a6:	e9 9e 2e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_2GTr:	/* 2>r   */  rp-=8;CELL(rp)=CELL(sp);
    75ab:	83 ad 5c fe ff ff 08 	subl   $0x8,-0x1a4(%rbp)
    75b2:	48 8b 05 cf 7d 60 00 	mov    0x607dcf(%rip),%rax        # 60f388 <f_boot>
    75b9:	48 83 c0 04          	add    $0x4,%rax
    75bd:	89 c2                	mov    %eax,%edx
    75bf:	48 8b 05 c2 7d 60 00 	mov    0x607dc2(%rip),%rax        # 60f388 <f_boot>
    75c6:	29 c2                	sub    %eax,%edx
    75c8:	89 d0                	mov    %edx,%eax
    75ca:	48 63 d0             	movslq %eax,%rdx
    75cd:	48 8d 05 0c 7b 20 00 	lea    0x207b0c(%rip),%rax        # 20f0e0 <mem>
    75d4:	48 01 d0             	add    %rdx,%rax
    75d7:	8b 00                	mov    (%rax),%eax
    75d9:	89 c7                	mov    %eax,%edi
    75db:	e8 8d 98 ff ff       	callq  e6d <v2r>
    75e0:	48 89 c3             	mov    %rax,%rbx
    75e3:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    75e9:	89 c7                	mov    %eax,%edi
    75eb:	e8 7d 98 ff ff       	callq  e6d <v2r>
    75f0:	48 89 c2             	mov    %rax,%rdx
    75f3:	8b 03                	mov    (%rbx),%eax
    75f5:	89 02                	mov    %eax,(%rdx)
		CELL(rp+4)=CELL(sp+4);
    75f7:	48 8b 05 8a 7d 60 00 	mov    0x607d8a(%rip),%rax        # 60f388 <f_boot>
    75fe:	48 83 c0 04          	add    $0x4,%rax
    7602:	89 c2                	mov    %eax,%edx
    7604:	48 8b 05 7d 7d 60 00 	mov    0x607d7d(%rip),%rax        # 60f388 <f_boot>
    760b:	29 c2                	sub    %eax,%edx
    760d:	89 d0                	mov    %edx,%eax
    760f:	48 63 d0             	movslq %eax,%rdx
    7612:	48 8d 05 c7 7a 20 00 	lea    0x207ac7(%rip),%rax        # 20f0e0 <mem>
    7619:	48 01 d0             	add    %rdx,%rax
    761c:	8b 00                	mov    (%rax),%eax
    761e:	83 c0 04             	add    $0x4,%eax
    7621:	89 c7                	mov    %eax,%edi
    7623:	e8 45 98 ff ff       	callq  e6d <v2r>
    7628:	48 89 c3             	mov    %rax,%rbx
    762b:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7631:	83 c0 04             	add    $0x4,%eax
    7634:	89 c7                	mov    %eax,%edi
    7636:	e8 32 98 ff ff       	callq  e6d <v2r>
    763b:	48 89 c2             	mov    %rax,%rdx
    763e:	8b 03                	mov    (%rbx),%eax
    7640:	89 02                	mov    %eax,(%rdx)
	sp+=8;break;
    7642:	48 8b 05 3f 7d 60 00 	mov    0x607d3f(%rip),%rax        # 60f388 <f_boot>
    7649:	48 83 c0 04          	add    $0x4,%rax
    764d:	89 c2                	mov    %eax,%edx
    764f:	48 8b 05 32 7d 60 00 	mov    0x607d32(%rip),%rax        # 60f388 <f_boot>
    7656:	29 c2                	sub    %eax,%edx
    7658:	89 d0                	mov    %edx,%eax
    765a:	48 63 d0             	movslq %eax,%rdx
    765d:	48 8d 05 7c 7a 20 00 	lea    0x207a7c(%rip),%rax        # 20f0e0 <mem>
    7664:	48 01 d0             	add    %rdx,%rax
    7667:	8b 10                	mov    (%rax),%edx
    7669:	48 8b 05 18 7d 60 00 	mov    0x607d18(%rip),%rax        # 60f388 <f_boot>
    7670:	48 83 c0 04          	add    $0x4,%rax
    7674:	89 c1                	mov    %eax,%ecx
    7676:	48 8b 05 0b 7d 60 00 	mov    0x607d0b(%rip),%rax        # 60f388 <f_boot>
    767d:	29 c1                	sub    %eax,%ecx
    767f:	89 c8                	mov    %ecx,%eax
    7681:	48 63 c8             	movslq %eax,%rcx
    7684:	48 8d 05 55 7a 20 00 	lea    0x207a55(%rip),%rax        # 20f0e0 <mem>
    768b:	48 01 c8             	add    %rcx,%rax
    768e:	83 c2 08             	add    $0x8,%edx
    7691:	89 10                	mov    %edx,(%rax)
    7693:	e9 b1 2d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_ip:/*ip*/
    	 sp-=4;CELL(sp)=ip;ip+=4;break;
    7698:	48 8b 05 e9 7c 60 00 	mov    0x607ce9(%rip),%rax        # 60f388 <f_boot>
    769f:	48 83 c0 04          	add    $0x4,%rax
    76a3:	89 c2                	mov    %eax,%edx
    76a5:	48 8b 05 dc 7c 60 00 	mov    0x607cdc(%rip),%rax        # 60f388 <f_boot>
    76ac:	29 c2                	sub    %eax,%edx
    76ae:	89 d0                	mov    %edx,%eax
    76b0:	48 63 d0             	movslq %eax,%rdx
    76b3:	48 8d 05 26 7a 20 00 	lea    0x207a26(%rip),%rax        # 20f0e0 <mem>
    76ba:	48 01 d0             	add    %rdx,%rax
    76bd:	8b 10                	mov    (%rax),%edx
    76bf:	48 8b 05 c2 7c 60 00 	mov    0x607cc2(%rip),%rax        # 60f388 <f_boot>
    76c6:	48 83 c0 04          	add    $0x4,%rax
    76ca:	89 c1                	mov    %eax,%ecx
    76cc:	48 8b 05 b5 7c 60 00 	mov    0x607cb5(%rip),%rax        # 60f388 <f_boot>
    76d3:	29 c1                	sub    %eax,%ecx
    76d5:	89 c8                	mov    %ecx,%eax
    76d7:	48 63 c8             	movslq %eax,%rcx
    76da:	48 8d 05 ff 79 20 00 	lea    0x2079ff(%rip),%rax        # 20f0e0 <mem>
    76e1:	48 01 c8             	add    %rcx,%rax
    76e4:	83 ea 04             	sub    $0x4,%edx
    76e7:	89 10                	mov    %edx,(%rax)
    76e9:	48 8b 05 98 7c 60 00 	mov    0x607c98(%rip),%rax        # 60f388 <f_boot>
    76f0:	48 83 c0 04          	add    $0x4,%rax
    76f4:	89 c2                	mov    %eax,%edx
    76f6:	48 8b 05 8b 7c 60 00 	mov    0x607c8b(%rip),%rax        # 60f388 <f_boot>
    76fd:	29 c2                	sub    %eax,%edx
    76ff:	89 d0                	mov    %edx,%eax
    7701:	48 63 d0             	movslq %eax,%rdx
    7704:	48 8d 05 d5 79 20 00 	lea    0x2079d5(%rip),%rax        # 20f0e0 <mem>
    770b:	48 01 d0             	add    %rdx,%rax
    770e:	8b 00                	mov    (%rax),%eax
    7710:	89 c7                	mov    %eax,%edi
    7712:	e8 56 97 ff ff       	callq  e6d <v2r>
    7717:	48 89 c2             	mov    %rax,%rdx
    771a:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    7720:	89 02                	mov    %eax,(%rdx)
    7722:	83 85 60 fe ff ff 04 	addl   $0x4,-0x1a0(%rbp)
    7729:	e9 1b 2d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_lit:/*lit*/
    	 sp-=4;CELL(sp)=CELL(ip);ip+=4;break;
    772e:	48 8b 05 53 7c 60 00 	mov    0x607c53(%rip),%rax        # 60f388 <f_boot>
    7735:	48 83 c0 04          	add    $0x4,%rax
    7739:	89 c2                	mov    %eax,%edx
    773b:	48 8b 05 46 7c 60 00 	mov    0x607c46(%rip),%rax        # 60f388 <f_boot>
    7742:	29 c2                	sub    %eax,%edx
    7744:	89 d0                	mov    %edx,%eax
    7746:	48 63 d0             	movslq %eax,%rdx
    7749:	48 8d 05 90 79 20 00 	lea    0x207990(%rip),%rax        # 20f0e0 <mem>
    7750:	48 01 d0             	add    %rdx,%rax
    7753:	8b 10                	mov    (%rax),%edx
    7755:	48 8b 05 2c 7c 60 00 	mov    0x607c2c(%rip),%rax        # 60f388 <f_boot>
    775c:	48 83 c0 04          	add    $0x4,%rax
    7760:	89 c1                	mov    %eax,%ecx
    7762:	48 8b 05 1f 7c 60 00 	mov    0x607c1f(%rip),%rax        # 60f388 <f_boot>
    7769:	29 c1                	sub    %eax,%ecx
    776b:	89 c8                	mov    %ecx,%eax
    776d:	48 63 c8             	movslq %eax,%rcx
    7770:	48 8d 05 69 79 20 00 	lea    0x207969(%rip),%rax        # 20f0e0 <mem>
    7777:	48 01 c8             	add    %rcx,%rax
    777a:	83 ea 04             	sub    $0x4,%edx
    777d:	89 10                	mov    %edx,(%rax)
    777f:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    7785:	89 c7                	mov    %eax,%edi
    7787:	e8 e1 96 ff ff       	callq  e6d <v2r>
    778c:	48 89 c3             	mov    %rax,%rbx
    778f:	48 8b 05 f2 7b 60 00 	mov    0x607bf2(%rip),%rax        # 60f388 <f_boot>
    7796:	48 83 c0 04          	add    $0x4,%rax
    779a:	89 c2                	mov    %eax,%edx
    779c:	48 8b 05 e5 7b 60 00 	mov    0x607be5(%rip),%rax        # 60f388 <f_boot>
    77a3:	29 c2                	sub    %eax,%edx
    77a5:	89 d0                	mov    %edx,%eax
    77a7:	48 63 d0             	movslq %eax,%rdx
    77aa:	48 8d 05 2f 79 20 00 	lea    0x20792f(%rip),%rax        # 20f0e0 <mem>
    77b1:	48 01 d0             	add    %rdx,%rax
    77b4:	8b 00                	mov    (%rax),%eax
    77b6:	89 c7                	mov    %eax,%edi
    77b8:	e8 b0 96 ff ff       	callq  e6d <v2r>
    77bd:	48 89 c2             	mov    %rax,%rdx
    77c0:	8b 03                	mov    (%rbx),%eax
    77c2:	89 02                	mov    %eax,(%rdx)
    77c4:	83 85 60 fe ff ff 04 	addl   $0x4,-0x1a0(%rbp)
    77cb:	e9 79 2c 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_litcomp:/*lit*/	COM(sw_lit<<1|1);
    77d0:	bf a3 00 00 00       	mov    $0xa3,%edi
    77d5:	e8 dd 98 ff ff       	callq  10b7 <COM>
     case sw_comp:/* , */	COM(CELL(sp));	sp+=4;break;
    77da:	48 8b 05 a7 7b 60 00 	mov    0x607ba7(%rip),%rax        # 60f388 <f_boot>
    77e1:	48 83 c0 04          	add    $0x4,%rax
    77e5:	89 c2                	mov    %eax,%edx
    77e7:	48 8b 05 9a 7b 60 00 	mov    0x607b9a(%rip),%rax        # 60f388 <f_boot>
    77ee:	29 c2                	sub    %eax,%edx
    77f0:	89 d0                	mov    %edx,%eax
    77f2:	48 63 d0             	movslq %eax,%rdx
    77f5:	48 8d 05 e4 78 20 00 	lea    0x2078e4(%rip),%rax        # 20f0e0 <mem>
    77fc:	48 01 d0             	add    %rdx,%rax
    77ff:	8b 00                	mov    (%rax),%eax
    7801:	89 c7                	mov    %eax,%edi
    7803:	e8 65 96 ff ff       	callq  e6d <v2r>
    7808:	8b 00                	mov    (%rax),%eax
    780a:	89 c7                	mov    %eax,%edi
    780c:	e8 a6 98 ff ff       	callq  10b7 <COM>
    7811:	48 8b 05 70 7b 60 00 	mov    0x607b70(%rip),%rax        # 60f388 <f_boot>
    7818:	48 83 c0 04          	add    $0x4,%rax
    781c:	89 c2                	mov    %eax,%edx
    781e:	48 8b 05 63 7b 60 00 	mov    0x607b63(%rip),%rax        # 60f388 <f_boot>
    7825:	29 c2                	sub    %eax,%edx
    7827:	89 d0                	mov    %edx,%eax
    7829:	48 63 d0             	movslq %eax,%rdx
    782c:	48 8d 05 ad 78 20 00 	lea    0x2078ad(%rip),%rax        # 20f0e0 <mem>
    7833:	48 01 d0             	add    %rdx,%rax
    7836:	8b 10                	mov    (%rax),%edx
    7838:	48 8b 05 49 7b 60 00 	mov    0x607b49(%rip),%rax        # 60f388 <f_boot>
    783f:	48 83 c0 04          	add    $0x4,%rax
    7843:	89 c1                	mov    %eax,%ecx
    7845:	48 8b 05 3c 7b 60 00 	mov    0x607b3c(%rip),%rax        # 60f388 <f_boot>
    784c:	29 c1                	sub    %eax,%ecx
    784e:	89 c8                	mov    %ecx,%eax
    7850:	48 63 c8             	movslq %eax,%rcx
    7853:	48 8d 05 86 78 20 00 	lea    0x207886(%rip),%rax        # 20f0e0 <mem>
    785a:	48 01 c8             	add    %rcx,%rax
    785d:	83 c2 04             	add    $0x4,%edx
    7860:	89 10                	mov    %edx,(%rax)
    7862:	e9 e2 2b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Wcomp:/* W, */	WCOM(CELL(sp));	sp+=4;break;
    7867:	48 8b 05 1a 7b 60 00 	mov    0x607b1a(%rip),%rax        # 60f388 <f_boot>
    786e:	48 83 c0 04          	add    $0x4,%rax
    7872:	89 c2                	mov    %eax,%edx
    7874:	48 8b 05 0d 7b 60 00 	mov    0x607b0d(%rip),%rax        # 60f388 <f_boot>
    787b:	29 c2                	sub    %eax,%edx
    787d:	89 d0                	mov    %edx,%eax
    787f:	48 63 d0             	movslq %eax,%rdx
    7882:	48 8d 05 57 78 20 00 	lea    0x207857(%rip),%rax        # 20f0e0 <mem>
    7889:	48 01 d0             	add    %rdx,%rax
    788c:	8b 00                	mov    (%rax),%eax
    788e:	89 c7                	mov    %eax,%edi
    7890:	e8 d8 95 ff ff       	callq  e6d <v2r>
    7895:	8b 00                	mov    (%rax),%eax
    7897:	0f b7 c0             	movzwl %ax,%eax
    789a:	89 c7                	mov    %eax,%edi
    789c:	e8 7e 98 ff ff       	callq  111f <WCOM>
    78a1:	48 8b 05 e0 7a 60 00 	mov    0x607ae0(%rip),%rax        # 60f388 <f_boot>
    78a8:	48 83 c0 04          	add    $0x4,%rax
    78ac:	89 c2                	mov    %eax,%edx
    78ae:	48 8b 05 d3 7a 60 00 	mov    0x607ad3(%rip),%rax        # 60f388 <f_boot>
    78b5:	29 c2                	sub    %eax,%edx
    78b7:	89 d0                	mov    %edx,%eax
    78b9:	48 63 d0             	movslq %eax,%rdx
    78bc:	48 8d 05 1d 78 20 00 	lea    0x20781d(%rip),%rax        # 20f0e0 <mem>
    78c3:	48 01 d0             	add    %rdx,%rax
    78c6:	8b 10                	mov    (%rax),%edx
    78c8:	48 8b 05 b9 7a 60 00 	mov    0x607ab9(%rip),%rax        # 60f388 <f_boot>
    78cf:	48 83 c0 04          	add    $0x4,%rax
    78d3:	89 c1                	mov    %eax,%ecx
    78d5:	48 8b 05 ac 7a 60 00 	mov    0x607aac(%rip),%rax        # 60f388 <f_boot>
    78dc:	29 c1                	sub    %eax,%ecx
    78de:	89 c8                	mov    %ecx,%eax
    78e0:	48 63 c8             	movslq %eax,%rcx
    78e3:	48 8d 05 f6 77 20 00 	lea    0x2077f6(%rip),%rax        # 20f0e0 <mem>
    78ea:	48 01 c8             	add    %rcx,%rax
    78ed:	83 c2 04             	add    $0x4,%edx
    78f0:	89 10                	mov    %edx,(%rax)
    78f2:	e9 52 2b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Ccomp:/* C, */	CCOM(CELL(sp));	sp+=4;break;
    78f7:	48 8b 05 8a 7a 60 00 	mov    0x607a8a(%rip),%rax        # 60f388 <f_boot>
    78fe:	48 83 c0 04          	add    $0x4,%rax
    7902:	89 c2                	mov    %eax,%edx
    7904:	48 8b 05 7d 7a 60 00 	mov    0x607a7d(%rip),%rax        # 60f388 <f_boot>
    790b:	29 c2                	sub    %eax,%edx
    790d:	89 d0                	mov    %edx,%eax
    790f:	48 63 d0             	movslq %eax,%rdx
    7912:	48 8d 05 c7 77 20 00 	lea    0x2077c7(%rip),%rax        # 20f0e0 <mem>
    7919:	48 01 d0             	add    %rdx,%rax
    791c:	8b 00                	mov    (%rax),%eax
    791e:	89 c7                	mov    %eax,%edi
    7920:	e8 48 95 ff ff       	callq  e6d <v2r>
    7925:	8b 00                	mov    (%rax),%eax
    7927:	0f b6 c0             	movzbl %al,%eax
    792a:	89 c7                	mov    %eax,%edi
    792c:	e8 5b 98 ff ff       	callq  118c <CCOM>
    7931:	48 8b 05 50 7a 60 00 	mov    0x607a50(%rip),%rax        # 60f388 <f_boot>
    7938:	48 83 c0 04          	add    $0x4,%rax
    793c:	89 c2                	mov    %eax,%edx
    793e:	48 8b 05 43 7a 60 00 	mov    0x607a43(%rip),%rax        # 60f388 <f_boot>
    7945:	29 c2                	sub    %eax,%edx
    7947:	89 d0                	mov    %edx,%eax
    7949:	48 63 d0             	movslq %eax,%rdx
    794c:	48 8d 05 8d 77 20 00 	lea    0x20778d(%rip),%rax        # 20f0e0 <mem>
    7953:	48 01 d0             	add    %rdx,%rax
    7956:	8b 10                	mov    (%rax),%edx
    7958:	48 8b 05 29 7a 60 00 	mov    0x607a29(%rip),%rax        # 60f388 <f_boot>
    795f:	48 83 c0 04          	add    $0x4,%rax
    7963:	89 c1                	mov    %eax,%ecx
    7965:	48 8b 05 1c 7a 60 00 	mov    0x607a1c(%rip),%rax        # 60f388 <f_boot>
    796c:	29 c1                	sub    %eax,%ecx
    796e:	89 c8                	mov    %ecx,%eax
    7970:	48 63 c8             	movslq %eax,%rcx
    7973:	48 8d 05 66 77 20 00 	lea    0x207766(%rip),%rax        # 20f0e0 <mem>
    797a:	48 01 c8             	add    %rcx,%rax
    797d:	83 c2 04             	add    $0x4,%edx
    7980:	89 10                	mov    %edx,(%rax)
    7982:	e9 c2 2a 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_allot:/* allot */   HERE+=CELL(sp); sp+=4;break;
    7987:	48 8b 05 fa 79 60 00 	mov    0x6079fa(%rip),%rax        # 60f388 <f_boot>
    798e:	48 83 c0 04          	add    $0x4,%rax
    7992:	89 c2                	mov    %eax,%edx
    7994:	48 8b 05 ed 79 60 00 	mov    0x6079ed(%rip),%rax        # 60f388 <f_boot>
    799b:	29 c2                	sub    %eax,%edx
    799d:	89 d0                	mov    %edx,%eax
    799f:	48 63 d0             	movslq %eax,%rdx
    79a2:	48 8d 05 37 77 20 00 	lea    0x207737(%rip),%rax        # 20f0e0 <mem>
    79a9:	48 01 d0             	add    %rdx,%rax
    79ac:	8b 00                	mov    (%rax),%eax
    79ae:	89 c7                	mov    %eax,%edi
    79b0:	e8 b8 94 ff ff       	callq  e6d <v2r>
    79b5:	8b 18                	mov    (%rax),%ebx
    79b7:	48 8b 05 ca 79 60 00 	mov    0x6079ca(%rip),%rax        # 60f388 <f_boot>
    79be:	48 05 20 01 00 00    	add    $0x120,%rax
    79c4:	89 c2                	mov    %eax,%edx
    79c6:	48 8b 05 bb 79 60 00 	mov    0x6079bb(%rip),%rax        # 60f388 <f_boot>
    79cd:	29 c2                	sub    %eax,%edx
    79cf:	89 d0                	mov    %edx,%eax
    79d1:	89 c7                	mov    %eax,%edi
    79d3:	e8 95 94 ff ff       	callq  e6d <v2r>
    79d8:	8b 10                	mov    (%rax),%edx
    79da:	01 da                	add    %ebx,%edx
    79dc:	89 10                	mov    %edx,(%rax)
    79de:	48 8b 05 a3 79 60 00 	mov    0x6079a3(%rip),%rax        # 60f388 <f_boot>
    79e5:	48 83 c0 04          	add    $0x4,%rax
    79e9:	89 c2                	mov    %eax,%edx
    79eb:	48 8b 05 96 79 60 00 	mov    0x607996(%rip),%rax        # 60f388 <f_boot>
    79f2:	29 c2                	sub    %eax,%edx
    79f4:	89 d0                	mov    %edx,%eax
    79f6:	48 63 d0             	movslq %eax,%rdx
    79f9:	48 8d 05 e0 76 20 00 	lea    0x2076e0(%rip),%rax        # 20f0e0 <mem>
    7a00:	48 01 d0             	add    %rdx,%rax
    7a03:	8b 10                	mov    (%rax),%edx
    7a05:	48 8b 05 7c 79 60 00 	mov    0x60797c(%rip),%rax        # 60f388 <f_boot>
    7a0c:	48 83 c0 04          	add    $0x4,%rax
    7a10:	89 c1                	mov    %eax,%ecx
    7a12:	48 8b 05 6f 79 60 00 	mov    0x60796f(%rip),%rax        # 60f388 <f_boot>
    7a19:	29 c1                	sub    %eax,%ecx
    7a1b:	89 c8                	mov    %ecx,%eax
    7a1d:	48 63 c8             	movslq %eax,%rcx
    7a20:	48 8d 05 b9 76 20 00 	lea    0x2076b9(%rip),%rax        # 20f0e0 <mem>
    7a27:	48 01 c8             	add    %rcx,%rax
    7a2a:	83 c2 04             	add    $0x4,%edx
    7a2d:	89 10                	mov    %edx,(%rax)
    7a2f:	e9 15 2a 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_perform:	/* perform */   CELL(sp)=CELL(CELL(sp));
    7a34:	48 8b 05 4d 79 60 00 	mov    0x60794d(%rip),%rax        # 60f388 <f_boot>
    7a3b:	48 83 c0 04          	add    $0x4,%rax
    7a3f:	89 c2                	mov    %eax,%edx
    7a41:	48 8b 05 40 79 60 00 	mov    0x607940(%rip),%rax        # 60f388 <f_boot>
    7a48:	29 c2                	sub    %eax,%edx
    7a4a:	89 d0                	mov    %edx,%eax
    7a4c:	48 63 d0             	movslq %eax,%rdx
    7a4f:	48 8d 05 8a 76 20 00 	lea    0x20768a(%rip),%rax        # 20f0e0 <mem>
    7a56:	48 01 d0             	add    %rdx,%rax
    7a59:	8b 00                	mov    (%rax),%eax
    7a5b:	89 c7                	mov    %eax,%edi
    7a5d:	e8 0b 94 ff ff       	callq  e6d <v2r>
    7a62:	8b 00                	mov    (%rax),%eax
    7a64:	89 c7                	mov    %eax,%edi
    7a66:	e8 02 94 ff ff       	callq  e6d <v2r>
    7a6b:	48 89 c3             	mov    %rax,%rbx
    7a6e:	48 8b 05 13 79 60 00 	mov    0x607913(%rip),%rax        # 60f388 <f_boot>
    7a75:	48 83 c0 04          	add    $0x4,%rax
    7a79:	89 c2                	mov    %eax,%edx
    7a7b:	48 8b 05 06 79 60 00 	mov    0x607906(%rip),%rax        # 60f388 <f_boot>
    7a82:	29 c2                	sub    %eax,%edx
    7a84:	89 d0                	mov    %edx,%eax
    7a86:	48 63 d0             	movslq %eax,%rdx
    7a89:	48 8d 05 50 76 20 00 	lea    0x207650(%rip),%rax        # 20f0e0 <mem>
    7a90:	48 01 d0             	add    %rdx,%rax
    7a93:	8b 00                	mov    (%rax),%eax
    7a95:	89 c7                	mov    %eax,%edi
    7a97:	e8 d1 93 ff ff       	callq  e6d <v2r>
    7a9c:	48 89 c2             	mov    %rax,%rdx
    7a9f:	8b 03                	mov    (%rbx),%eax
    7aa1:	89 02                	mov    %eax,(%rdx)
     case sw_execute:/* execute */
    	 rp-=4;CELL(rp)=ip; ip=CELL(sp); sp+=4;break;
    7aa3:	83 ad 5c fe ff ff 04 	subl   $0x4,-0x1a4(%rbp)
    7aaa:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7ab0:	89 c7                	mov    %eax,%edi
    7ab2:	e8 b6 93 ff ff       	callq  e6d <v2r>
    7ab7:	48 89 c2             	mov    %rax,%rdx
    7aba:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    7ac0:	89 02                	mov    %eax,(%rdx)
    7ac2:	48 8b 05 bf 78 60 00 	mov    0x6078bf(%rip),%rax        # 60f388 <f_boot>
    7ac9:	48 83 c0 04          	add    $0x4,%rax
    7acd:	89 c2                	mov    %eax,%edx
    7acf:	48 8b 05 b2 78 60 00 	mov    0x6078b2(%rip),%rax        # 60f388 <f_boot>
    7ad6:	29 c2                	sub    %eax,%edx
    7ad8:	89 d0                	mov    %edx,%eax
    7ada:	48 63 d0             	movslq %eax,%rdx
    7add:	48 8d 05 fc 75 20 00 	lea    0x2075fc(%rip),%rax        # 20f0e0 <mem>
    7ae4:	48 01 d0             	add    %rdx,%rax
    7ae7:	8b 00                	mov    (%rax),%eax
    7ae9:	89 c7                	mov    %eax,%edi
    7aeb:	e8 7d 93 ff ff       	callq  e6d <v2r>
    7af0:	8b 00                	mov    (%rax),%eax
    7af2:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    7af8:	48 8b 05 89 78 60 00 	mov    0x607889(%rip),%rax        # 60f388 <f_boot>
    7aff:	48 83 c0 04          	add    $0x4,%rax
    7b03:	89 c2                	mov    %eax,%edx
    7b05:	48 8b 05 7c 78 60 00 	mov    0x60787c(%rip),%rax        # 60f388 <f_boot>
    7b0c:	29 c2                	sub    %eax,%edx
    7b0e:	89 d0                	mov    %edx,%eax
    7b10:	48 63 d0             	movslq %eax,%rdx
    7b13:	48 8d 05 c6 75 20 00 	lea    0x2075c6(%rip),%rax        # 20f0e0 <mem>
    7b1a:	48 01 d0             	add    %rdx,%rax
    7b1d:	8b 10                	mov    (%rax),%edx
    7b1f:	48 8b 05 62 78 60 00 	mov    0x607862(%rip),%rax        # 60f388 <f_boot>
    7b26:	48 83 c0 04          	add    $0x4,%rax
    7b2a:	89 c1                	mov    %eax,%ecx
    7b2c:	48 8b 05 55 78 60 00 	mov    0x607855(%rip),%rax        # 60f388 <f_boot>
    7b33:	29 c1                	sub    %eax,%ecx
    7b35:	89 c8                	mov    %ecx,%eax
    7b37:	48 63 c8             	movslq %eax,%rcx
    7b3a:	48 8d 05 9f 75 20 00 	lea    0x20759f(%rip),%rax        # 20f0e0 <mem>
    7b41:	48 01 c8             	add    %rcx,%rax
    7b44:	83 c2 04             	add    $0x4,%edx
    7b47:	89 10                	mov    %edx,(%rax)
    7b49:	e9 fb 28 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_compile:/* compile */
    	 Compile(CELL(sp));
    7b4e:	48 8b 05 33 78 60 00 	mov    0x607833(%rip),%rax        # 60f388 <f_boot>
    7b55:	48 83 c0 04          	add    $0x4,%rax
    7b59:	89 c2                	mov    %eax,%edx
    7b5b:	48 8b 05 26 78 60 00 	mov    0x607826(%rip),%rax        # 60f388 <f_boot>
    7b62:	29 c2                	sub    %eax,%edx
    7b64:	89 d0                	mov    %edx,%eax
    7b66:	48 63 d0             	movslq %eax,%rdx
    7b69:	48 8d 05 70 75 20 00 	lea    0x207570(%rip),%rax        # 20f0e0 <mem>
    7b70:	48 01 d0             	add    %rdx,%rax
    7b73:	8b 00                	mov    (%rax),%eax
    7b75:	89 c7                	mov    %eax,%edi
    7b77:	e8 f1 92 ff ff       	callq  e6d <v2r>
    7b7c:	8b 00                	mov    (%rax),%eax
    7b7e:	89 c7                	mov    %eax,%edi
    7b80:	e8 c4 9b ff ff       	callq  1749 <Compile>
    	 sp+=4;break;
    7b85:	48 8b 05 fc 77 60 00 	mov    0x6077fc(%rip),%rax        # 60f388 <f_boot>
    7b8c:	48 83 c0 04          	add    $0x4,%rax
    7b90:	89 c2                	mov    %eax,%edx
    7b92:	48 8b 05 ef 77 60 00 	mov    0x6077ef(%rip),%rax        # 60f388 <f_boot>
    7b99:	29 c2                	sub    %eax,%edx
    7b9b:	89 d0                	mov    %edx,%eax
    7b9d:	48 63 d0             	movslq %eax,%rdx
    7ba0:	48 8d 05 39 75 20 00 	lea    0x207539(%rip),%rax        # 20f0e0 <mem>
    7ba7:	48 01 d0             	add    %rdx,%rax
    7baa:	8b 10                	mov    (%rax),%edx
    7bac:	48 8b 05 d5 77 60 00 	mov    0x6077d5(%rip),%rax        # 60f388 <f_boot>
    7bb3:	48 83 c0 04          	add    $0x4,%rax
    7bb7:	89 c1                	mov    %eax,%ecx
    7bb9:	48 8b 05 c8 77 60 00 	mov    0x6077c8(%rip),%rax        # 60f388 <f_boot>
    7bc0:	29 c1                	sub    %eax,%ecx
    7bc2:	89 c8                	mov    %ecx,%eax
    7bc4:	48 63 c8             	movslq %eax,%rcx
    7bc7:	48 8d 05 12 75 20 00 	lea    0x207512(%rip),%rax        # 20f0e0 <mem>
    7bce:	48 01 c8             	add    %rcx,%rax
    7bd1:	83 c2 04             	add    $0x4,%edx
    7bd4:	89 10                	mov    %edx,(%rax)
    7bd6:	e9 6e 28 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_immediate:/* immediate */
    	 IMMED();break;
    7bdb:	b8 00 00 00 00       	mov    $0x0,%eax
    7be0:	e8 ed 97 ff ff       	callq  13d2 <IMMED>
    7be5:	e9 5f 28 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_femd:/*return*/  F_END();break;
    7bea:	b8 00 00 00 00       	mov    $0x0,%eax
    7bef:	e8 52 9d ff ff       	callq  1946 <F_END>
    7bf4:	e9 50 28 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_FromName:/*return*/ CELL(sp)=FromName(CELL(sp));break;
    7bf9:	48 8b 05 88 77 60 00 	mov    0x607788(%rip),%rax        # 60f388 <f_boot>
    7c00:	48 83 c0 04          	add    $0x4,%rax
    7c04:	89 c2                	mov    %eax,%edx
    7c06:	48 8b 05 7b 77 60 00 	mov    0x60777b(%rip),%rax        # 60f388 <f_boot>
    7c0d:	29 c2                	sub    %eax,%edx
    7c0f:	89 d0                	mov    %edx,%eax
    7c11:	48 63 d0             	movslq %eax,%rdx
    7c14:	48 8d 05 c5 74 20 00 	lea    0x2074c5(%rip),%rax        # 20f0e0 <mem>
    7c1b:	48 01 d0             	add    %rdx,%rax
    7c1e:	8b 00                	mov    (%rax),%eax
    7c20:	89 c7                	mov    %eax,%edi
    7c22:	e8 46 92 ff ff       	callq  e6d <v2r>
    7c27:	8b 18                	mov    (%rax),%ebx
    7c29:	48 8b 05 58 77 60 00 	mov    0x607758(%rip),%rax        # 60f388 <f_boot>
    7c30:	48 83 c0 04          	add    $0x4,%rax
    7c34:	89 c2                	mov    %eax,%edx
    7c36:	48 8b 05 4b 77 60 00 	mov    0x60774b(%rip),%rax        # 60f388 <f_boot>
    7c3d:	29 c2                	sub    %eax,%edx
    7c3f:	89 d0                	mov    %edx,%eax
    7c41:	48 63 d0             	movslq %eax,%rdx
    7c44:	48 8d 05 95 74 20 00 	lea    0x207495(%rip),%rax        # 20f0e0 <mem>
    7c4b:	48 01 d0             	add    %rdx,%rax
    7c4e:	8b 00                	mov    (%rax),%eax
    7c50:	89 c7                	mov    %eax,%edi
    7c52:	e8 16 92 ff ff       	callq  e6d <v2r>
    7c57:	49 89 c4             	mov    %rax,%r12
    7c5a:	89 df                	mov    %ebx,%edi
    7c5c:	e8 5f ae ff ff       	callq  2ac0 <FromName>
    7c61:	41 89 04 24          	mov    %eax,(%r12)
    7c65:	e9 df 27 00 00       	jmpq   a449 <virtual_machine+0x7071>


     case sw_spload: /* sp@ */ sp-=4;CELL(sp)=sp+4;break;
    7c6a:	48 8b 05 17 77 60 00 	mov    0x607717(%rip),%rax        # 60f388 <f_boot>
    7c71:	48 83 c0 04          	add    $0x4,%rax
    7c75:	89 c2                	mov    %eax,%edx
    7c77:	48 8b 05 0a 77 60 00 	mov    0x60770a(%rip),%rax        # 60f388 <f_boot>
    7c7e:	29 c2                	sub    %eax,%edx
    7c80:	89 d0                	mov    %edx,%eax
    7c82:	48 63 d0             	movslq %eax,%rdx
    7c85:	48 8d 05 54 74 20 00 	lea    0x207454(%rip),%rax        # 20f0e0 <mem>
    7c8c:	48 01 d0             	add    %rdx,%rax
    7c8f:	8b 10                	mov    (%rax),%edx
    7c91:	48 8b 05 f0 76 60 00 	mov    0x6076f0(%rip),%rax        # 60f388 <f_boot>
    7c98:	48 83 c0 04          	add    $0x4,%rax
    7c9c:	89 c1                	mov    %eax,%ecx
    7c9e:	48 8b 05 e3 76 60 00 	mov    0x6076e3(%rip),%rax        # 60f388 <f_boot>
    7ca5:	29 c1                	sub    %eax,%ecx
    7ca7:	89 c8                	mov    %ecx,%eax
    7ca9:	48 63 c8             	movslq %eax,%rcx
    7cac:	48 8d 05 2d 74 20 00 	lea    0x20742d(%rip),%rax        # 20f0e0 <mem>
    7cb3:	48 01 c8             	add    %rcx,%rax
    7cb6:	83 ea 04             	sub    $0x4,%edx
    7cb9:	89 10                	mov    %edx,(%rax)
    7cbb:	48 8b 05 c6 76 60 00 	mov    0x6076c6(%rip),%rax        # 60f388 <f_boot>
    7cc2:	48 83 c0 04          	add    $0x4,%rax
    7cc6:	89 c2                	mov    %eax,%edx
    7cc8:	48 8b 05 b9 76 60 00 	mov    0x6076b9(%rip),%rax        # 60f388 <f_boot>
    7ccf:	29 c2                	sub    %eax,%edx
    7cd1:	89 d0                	mov    %edx,%eax
    7cd3:	48 63 d0             	movslq %eax,%rdx
    7cd6:	48 8d 05 03 74 20 00 	lea    0x207403(%rip),%rax        # 20f0e0 <mem>
    7cdd:	48 01 d0             	add    %rdx,%rax
    7ce0:	8b 18                	mov    (%rax),%ebx
    7ce2:	48 8b 05 9f 76 60 00 	mov    0x60769f(%rip),%rax        # 60f388 <f_boot>
    7ce9:	48 83 c0 04          	add    $0x4,%rax
    7ced:	89 c2                	mov    %eax,%edx
    7cef:	48 8b 05 92 76 60 00 	mov    0x607692(%rip),%rax        # 60f388 <f_boot>
    7cf6:	29 c2                	sub    %eax,%edx
    7cf8:	89 d0                	mov    %edx,%eax
    7cfa:	48 63 d0             	movslq %eax,%rdx
    7cfd:	48 8d 05 dc 73 20 00 	lea    0x2073dc(%rip),%rax        # 20f0e0 <mem>
    7d04:	48 01 d0             	add    %rdx,%rax
    7d07:	8b 00                	mov    (%rax),%eax
    7d09:	89 c7                	mov    %eax,%edi
    7d0b:	e8 5d 91 ff ff       	callq  e6d <v2r>
    7d10:	48 89 c2             	mov    %rax,%rdx
    7d13:	8d 43 04             	lea    0x4(%rbx),%eax
    7d16:	89 02                	mov    %eax,(%rdx)
    7d18:	e9 2c 27 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_spST: /* sp! */ sp=CELL(sp);break;
    7d1d:	48 8b 05 64 76 60 00 	mov    0x607664(%rip),%rax        # 60f388 <f_boot>
    7d24:	48 83 c0 04          	add    $0x4,%rax
    7d28:	89 c2                	mov    %eax,%edx
    7d2a:	48 8b 05 57 76 60 00 	mov    0x607657(%rip),%rax        # 60f388 <f_boot>
    7d31:	29 c2                	sub    %eax,%edx
    7d33:	89 d0                	mov    %edx,%eax
    7d35:	48 63 d0             	movslq %eax,%rdx
    7d38:	48 8d 05 a1 73 20 00 	lea    0x2073a1(%rip),%rax        # 20f0e0 <mem>
    7d3f:	48 01 d0             	add    %rdx,%rax
    7d42:	8b 00                	mov    (%rax),%eax
    7d44:	89 c7                	mov    %eax,%edi
    7d46:	e8 22 91 ff ff       	callq  e6d <v2r>
    7d4b:	48 89 c1             	mov    %rax,%rcx
    7d4e:	48 8b 05 33 76 60 00 	mov    0x607633(%rip),%rax        # 60f388 <f_boot>
    7d55:	48 83 c0 04          	add    $0x4,%rax
    7d59:	89 c2                	mov    %eax,%edx
    7d5b:	48 8b 05 26 76 60 00 	mov    0x607626(%rip),%rax        # 60f388 <f_boot>
    7d62:	29 c2                	sub    %eax,%edx
    7d64:	89 d0                	mov    %edx,%eax
    7d66:	48 63 d0             	movslq %eax,%rdx
    7d69:	48 8d 05 70 73 20 00 	lea    0x207370(%rip),%rax        # 20f0e0 <mem>
    7d70:	48 01 c2             	add    %rax,%rdx
    7d73:	8b 01                	mov    (%rcx),%eax
    7d75:	89 02                	mov    %eax,(%rdx)
    7d77:	e9 cd 26 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rpload: /* rp@ */ sp-=4;CELL(sp)=rp;break;
    7d7c:	48 8b 05 05 76 60 00 	mov    0x607605(%rip),%rax        # 60f388 <f_boot>
    7d83:	48 83 c0 04          	add    $0x4,%rax
    7d87:	89 c2                	mov    %eax,%edx
    7d89:	48 8b 05 f8 75 60 00 	mov    0x6075f8(%rip),%rax        # 60f388 <f_boot>
    7d90:	29 c2                	sub    %eax,%edx
    7d92:	89 d0                	mov    %edx,%eax
    7d94:	48 63 d0             	movslq %eax,%rdx
    7d97:	48 8d 05 42 73 20 00 	lea    0x207342(%rip),%rax        # 20f0e0 <mem>
    7d9e:	48 01 d0             	add    %rdx,%rax
    7da1:	8b 10                	mov    (%rax),%edx
    7da3:	48 8b 05 de 75 60 00 	mov    0x6075de(%rip),%rax        # 60f388 <f_boot>
    7daa:	48 83 c0 04          	add    $0x4,%rax
    7dae:	89 c1                	mov    %eax,%ecx
    7db0:	48 8b 05 d1 75 60 00 	mov    0x6075d1(%rip),%rax        # 60f388 <f_boot>
    7db7:	29 c1                	sub    %eax,%ecx
    7db9:	89 c8                	mov    %ecx,%eax
    7dbb:	48 63 c8             	movslq %eax,%rcx
    7dbe:	48 8d 05 1b 73 20 00 	lea    0x20731b(%rip),%rax        # 20f0e0 <mem>
    7dc5:	48 01 c8             	add    %rcx,%rax
    7dc8:	83 ea 04             	sub    $0x4,%edx
    7dcb:	89 10                	mov    %edx,(%rax)
    7dcd:	48 8b 05 b4 75 60 00 	mov    0x6075b4(%rip),%rax        # 60f388 <f_boot>
    7dd4:	48 83 c0 04          	add    $0x4,%rax
    7dd8:	89 c2                	mov    %eax,%edx
    7dda:	48 8b 05 a7 75 60 00 	mov    0x6075a7(%rip),%rax        # 60f388 <f_boot>
    7de1:	29 c2                	sub    %eax,%edx
    7de3:	89 d0                	mov    %edx,%eax
    7de5:	48 63 d0             	movslq %eax,%rdx
    7de8:	48 8d 05 f1 72 20 00 	lea    0x2072f1(%rip),%rax        # 20f0e0 <mem>
    7def:	48 01 d0             	add    %rdx,%rax
    7df2:	8b 00                	mov    (%rax),%eax
    7df4:	89 c7                	mov    %eax,%edi
    7df6:	e8 72 90 ff ff       	callq  e6d <v2r>
    7dfb:	48 89 c2             	mov    %rax,%rdx
    7dfe:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7e04:	89 02                	mov    %eax,(%rdx)
    7e06:	e9 3e 26 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_rpST: /* rp! */ rp=CELL(sp);sp+=4;break;
    7e0b:	48 8b 05 76 75 60 00 	mov    0x607576(%rip),%rax        # 60f388 <f_boot>
    7e12:	48 83 c0 04          	add    $0x4,%rax
    7e16:	89 c2                	mov    %eax,%edx
    7e18:	48 8b 05 69 75 60 00 	mov    0x607569(%rip),%rax        # 60f388 <f_boot>
    7e1f:	29 c2                	sub    %eax,%edx
    7e21:	89 d0                	mov    %edx,%eax
    7e23:	48 63 d0             	movslq %eax,%rdx
    7e26:	48 8d 05 b3 72 20 00 	lea    0x2072b3(%rip),%rax        # 20f0e0 <mem>
    7e2d:	48 01 d0             	add    %rdx,%rax
    7e30:	8b 00                	mov    (%rax),%eax
    7e32:	89 c7                	mov    %eax,%edi
    7e34:	e8 34 90 ff ff       	callq  e6d <v2r>
    7e39:	8b 00                	mov    (%rax),%eax
    7e3b:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%rbp)
    7e41:	48 8b 05 40 75 60 00 	mov    0x607540(%rip),%rax        # 60f388 <f_boot>
    7e48:	48 83 c0 04          	add    $0x4,%rax
    7e4c:	89 c2                	mov    %eax,%edx
    7e4e:	48 8b 05 33 75 60 00 	mov    0x607533(%rip),%rax        # 60f388 <f_boot>
    7e55:	29 c2                	sub    %eax,%edx
    7e57:	89 d0                	mov    %edx,%eax
    7e59:	48 63 d0             	movslq %eax,%rdx
    7e5c:	48 8d 05 7d 72 20 00 	lea    0x20727d(%rip),%rax        # 20f0e0 <mem>
    7e63:	48 01 d0             	add    %rdx,%rax
    7e66:	8b 10                	mov    (%rax),%edx
    7e68:	48 8b 05 19 75 60 00 	mov    0x607519(%rip),%rax        # 60f388 <f_boot>
    7e6f:	48 83 c0 04          	add    $0x4,%rax
    7e73:	89 c1                	mov    %eax,%ecx
    7e75:	48 8b 05 0c 75 60 00 	mov    0x60750c(%rip),%rax        # 60f388 <f_boot>
    7e7c:	29 c1                	sub    %eax,%ecx
    7e7e:	89 c8                	mov    %ecx,%eax
    7e80:	48 63 c8             	movslq %eax,%rcx
    7e83:	48 8d 05 56 72 20 00 	lea    0x207256(%rip),%rax        # 20f0e0 <mem>
    7e8a:	48 01 c8             	add    %rcx,%rax
    7e8d:	83 c2 04             	add    $0x4,%edx
    7e90:	89 10                	mov    %edx,(%rax)
    7e92:	e9 b2 25 00 00       	jmpq   a449 <virtual_machine+0x7071>

//     case sw_setalarm: /* setalarm */ setalarm(CELL(sp));sp+=4;break;

     case sw_to_catch:
   	 	 	    rp-=12;
    7e97:	83 ad 5c fe ff ff 0c 	subl   $0xc,-0x1a4(%rbp)
   	 	 	    CELL(rp+8)=CELL(HANDLER);
    7e9e:	48 8b 05 e3 74 60 00 	mov    0x6074e3(%rip),%rax        # 60f388 <f_boot>
    7ea5:	48 05 18 01 00 00    	add    $0x118,%rax
    7eab:	89 c2                	mov    %eax,%edx
    7ead:	48 8b 05 d4 74 60 00 	mov    0x6074d4(%rip),%rax        # 60f388 <f_boot>
    7eb4:	29 c2                	sub    %eax,%edx
    7eb6:	89 d0                	mov    %edx,%eax
    7eb8:	89 c7                	mov    %eax,%edi
    7eba:	e8 ae 8f ff ff       	callq  e6d <v2r>
    7ebf:	48 89 c3             	mov    %rax,%rbx
    7ec2:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7ec8:	83 c0 08             	add    $0x8,%eax
    7ecb:	89 c7                	mov    %eax,%edi
    7ecd:	e8 9b 8f ff ff       	callq  e6d <v2r>
    7ed2:	48 89 c2             	mov    %rax,%rdx
    7ed5:	8b 03                	mov    (%rbx),%eax
    7ed7:	89 02                	mov    %eax,(%rdx)
   	 	 	    CELL(rp+4)=sp;
    7ed9:	48 8b 05 a8 74 60 00 	mov    0x6074a8(%rip),%rax        # 60f388 <f_boot>
    7ee0:	48 83 c0 04          	add    $0x4,%rax
    7ee4:	89 c2                	mov    %eax,%edx
    7ee6:	48 8b 05 9b 74 60 00 	mov    0x60749b(%rip),%rax        # 60f388 <f_boot>
    7eed:	29 c2                	sub    %eax,%edx
    7eef:	89 d0                	mov    %edx,%eax
    7ef1:	48 63 d0             	movslq %eax,%rdx
    7ef4:	48 8d 05 e5 71 20 00 	lea    0x2071e5(%rip),%rax        # 20f0e0 <mem>
    7efb:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    7eff:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7f05:	83 c0 04             	add    $0x4,%eax
    7f08:	89 c7                	mov    %eax,%edi
    7f0a:	e8 5e 8f ff ff       	callq  e6d <v2r>
    7f0f:	48 89 c2             	mov    %rax,%rdx
    7f12:	8b 03                	mov    (%rbx),%eax
    7f14:	89 02                	mov    %eax,(%rdx)
   	 	 	    CELL(rp)=ip;
    7f16:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7f1c:	89 c7                	mov    %eax,%edi
    7f1e:	e8 4a 8f ff ff       	callq  e6d <v2r>
    7f23:	48 89 c2             	mov    %rax,%rdx
    7f26:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    7f2c:	89 02                	mov    %eax,(%rdx)
   	 	 	    CELL(HANDLER)=rp;
    7f2e:	48 8b 05 53 74 60 00 	mov    0x607453(%rip),%rax        # 60f388 <f_boot>
    7f35:	48 05 18 01 00 00    	add    $0x118,%rax
    7f3b:	89 c2                	mov    %eax,%edx
    7f3d:	48 8b 05 44 74 60 00 	mov    0x607444(%rip),%rax        # 60f388 <f_boot>
    7f44:	29 c2                	sub    %eax,%edx
    7f46:	89 d0                	mov    %edx,%eax
    7f48:	89 c7                	mov    %eax,%edi
    7f4a:	e8 1e 8f ff ff       	callq  e6d <v2r>
    7f4f:	48 89 c2             	mov    %rax,%rdx
    7f52:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7f58:	89 02                	mov    %eax,(%rdx)
   	 	 	 	ip=CELL(sp);
    7f5a:	48 8b 05 27 74 60 00 	mov    0x607427(%rip),%rax        # 60f388 <f_boot>
    7f61:	48 83 c0 04          	add    $0x4,%rax
    7f65:	89 c2                	mov    %eax,%edx
    7f67:	48 8b 05 1a 74 60 00 	mov    0x60741a(%rip),%rax        # 60f388 <f_boot>
    7f6e:	29 c2                	sub    %eax,%edx
    7f70:	89 d0                	mov    %edx,%eax
    7f72:	48 63 d0             	movslq %eax,%rdx
    7f75:	48 8d 05 64 71 20 00 	lea    0x207164(%rip),%rax        # 20f0e0 <mem>
    7f7c:	48 01 d0             	add    %rdx,%rax
    7f7f:	8b 00                	mov    (%rax),%eax
    7f81:	89 c7                	mov    %eax,%edi
    7f83:	e8 e5 8e ff ff       	callq  e6d <v2r>
    7f88:	8b 00                	mov    (%rax),%eax
    7f8a:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
     	 	 	sp+=4;
    7f90:	48 8b 05 f1 73 60 00 	mov    0x6073f1(%rip),%rax        # 60f388 <f_boot>
    7f97:	48 83 c0 04          	add    $0x4,%rax
    7f9b:	89 c2                	mov    %eax,%edx
    7f9d:	48 8b 05 e4 73 60 00 	mov    0x6073e4(%rip),%rax        # 60f388 <f_boot>
    7fa4:	29 c2                	sub    %eax,%edx
    7fa6:	89 d0                	mov    %edx,%eax
    7fa8:	48 63 d0             	movslq %eax,%rdx
    7fab:	48 8d 05 2e 71 20 00 	lea    0x20712e(%rip),%rax        # 20f0e0 <mem>
    7fb2:	48 01 d0             	add    %rdx,%rax
    7fb5:	8b 10                	mov    (%rax),%edx
    7fb7:	48 8b 05 ca 73 60 00 	mov    0x6073ca(%rip),%rax        # 60f388 <f_boot>
    7fbe:	48 83 c0 04          	add    $0x4,%rax
    7fc2:	89 c1                	mov    %eax,%ecx
    7fc4:	48 8b 05 bd 73 60 00 	mov    0x6073bd(%rip),%rax        # 60f388 <f_boot>
    7fcb:	29 c1                	sub    %eax,%ecx
    7fcd:	89 c8                	mov    %ecx,%eax
    7fcf:	48 63 c8             	movslq %eax,%rcx
    7fd2:	48 8d 05 07 71 20 00 	lea    0x207107(%rip),%rax        # 20f0e0 <mem>
    7fd9:	48 01 c8             	add    %rcx,%rax
    7fdc:	83 c2 04             	add    $0x4,%edx
    7fdf:	89 10                	mov    %edx,(%rax)
     	 	 	 break;
    7fe1:	e9 63 24 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_from_catch:
 	 	  	  	CELL(HANDLER)=CELL(rp+8-4);
    7fe6:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    7fec:	83 c0 04             	add    $0x4,%eax
    7fef:	89 c7                	mov    %eax,%edi
    7ff1:	e8 77 8e ff ff       	callq  e6d <v2r>
    7ff6:	48 89 c3             	mov    %rax,%rbx
    7ff9:	48 8b 05 88 73 60 00 	mov    0x607388(%rip),%rax        # 60f388 <f_boot>
    8000:	48 05 18 01 00 00    	add    $0x118,%rax
    8006:	89 c2                	mov    %eax,%edx
    8008:	48 8b 05 79 73 60 00 	mov    0x607379(%rip),%rax        # 60f388 <f_boot>
    800f:	29 c2                	sub    %eax,%edx
    8011:	89 d0                	mov    %edx,%eax
    8013:	89 c7                	mov    %eax,%edi
    8015:	e8 53 8e ff ff       	callq  e6d <v2r>
    801a:	48 89 c2             	mov    %rax,%rdx
    801d:	8b 03                	mov    (%rbx),%eax
    801f:	89 02                	mov    %eax,(%rdx)
 	 	  	  	rp+=12-4;
    8021:	83 85 5c fe ff ff 08 	addl   $0x8,-0x1a4(%rbp)
 	 	  	  	sp-=4;CELL(sp)=0;
    8028:	48 8b 05 59 73 60 00 	mov    0x607359(%rip),%rax        # 60f388 <f_boot>
    802f:	48 83 c0 04          	add    $0x4,%rax
    8033:	89 c2                	mov    %eax,%edx
    8035:	48 8b 05 4c 73 60 00 	mov    0x60734c(%rip),%rax        # 60f388 <f_boot>
    803c:	29 c2                	sub    %eax,%edx
    803e:	89 d0                	mov    %edx,%eax
    8040:	48 63 d0             	movslq %eax,%rdx
    8043:	48 8d 05 96 70 20 00 	lea    0x207096(%rip),%rax        # 20f0e0 <mem>
    804a:	48 01 d0             	add    %rdx,%rax
    804d:	8b 10                	mov    (%rax),%edx
    804f:	48 8b 05 32 73 60 00 	mov    0x607332(%rip),%rax        # 60f388 <f_boot>
    8056:	48 83 c0 04          	add    $0x4,%rax
    805a:	89 c1                	mov    %eax,%ecx
    805c:	48 8b 05 25 73 60 00 	mov    0x607325(%rip),%rax        # 60f388 <f_boot>
    8063:	29 c1                	sub    %eax,%ecx
    8065:	89 c8                	mov    %ecx,%eax
    8067:	48 63 c8             	movslq %eax,%rcx
    806a:	48 8d 05 6f 70 20 00 	lea    0x20706f(%rip),%rax        # 20f0e0 <mem>
    8071:	48 01 c8             	add    %rcx,%rax
    8074:	83 ea 04             	sub    $0x4,%edx
    8077:	89 10                	mov    %edx,(%rax)
    8079:	48 8b 05 08 73 60 00 	mov    0x607308(%rip),%rax        # 60f388 <f_boot>
    8080:	48 83 c0 04          	add    $0x4,%rax
    8084:	89 c2                	mov    %eax,%edx
    8086:	48 8b 05 fb 72 60 00 	mov    0x6072fb(%rip),%rax        # 60f388 <f_boot>
    808d:	29 c2                	sub    %eax,%edx
    808f:	89 d0                	mov    %edx,%eax
    8091:	48 63 d0             	movslq %eax,%rdx
    8094:	48 8d 05 45 70 20 00 	lea    0x207045(%rip),%rax        # 20f0e0 <mem>
    809b:	48 01 d0             	add    %rdx,%rax
    809e:	8b 00                	mov    (%rax),%eax
    80a0:	89 c7                	mov    %eax,%edi
    80a2:	e8 c6 8d ff ff       	callq  e6d <v2r>
    80a7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 	 	  	  	break;
    80ad:	e9 97 23 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_throw:
    	 	 	 	if( !CELL(sp)) { sp+=4; break; }
    80b2:	48 8b 05 cf 72 60 00 	mov    0x6072cf(%rip),%rax        # 60f388 <f_boot>
    80b9:	48 83 c0 04          	add    $0x4,%rax
    80bd:	89 c2                	mov    %eax,%edx
    80bf:	48 8b 05 c2 72 60 00 	mov    0x6072c2(%rip),%rax        # 60f388 <f_boot>
    80c6:	29 c2                	sub    %eax,%edx
    80c8:	89 d0                	mov    %edx,%eax
    80ca:	48 63 d0             	movslq %eax,%rdx
    80cd:	48 8d 05 0c 70 20 00 	lea    0x20700c(%rip),%rax        # 20f0e0 <mem>
    80d4:	48 01 d0             	add    %rdx,%rax
    80d7:	8b 00                	mov    (%rax),%eax
    80d9:	89 c7                	mov    %eax,%edi
    80db:	e8 8d 8d ff ff       	callq  e6d <v2r>
    80e0:	8b 00                	mov    (%rax),%eax
    80e2:	85 c0                	test   %eax,%eax
    80e4:	75 56                	jne    813c <virtual_machine+0x4d64>
    80e6:	48 8b 05 9b 72 60 00 	mov    0x60729b(%rip),%rax        # 60f388 <f_boot>
    80ed:	48 83 c0 04          	add    $0x4,%rax
    80f1:	89 c2                	mov    %eax,%edx
    80f3:	48 8b 05 8e 72 60 00 	mov    0x60728e(%rip),%rax        # 60f388 <f_boot>
    80fa:	29 c2                	sub    %eax,%edx
    80fc:	89 d0                	mov    %edx,%eax
    80fe:	48 63 d0             	movslq %eax,%rdx
    8101:	48 8d 05 d8 6f 20 00 	lea    0x206fd8(%rip),%rax        # 20f0e0 <mem>
    8108:	48 01 d0             	add    %rdx,%rax
    810b:	8b 10                	mov    (%rax),%edx
    810d:	48 8b 05 74 72 60 00 	mov    0x607274(%rip),%rax        # 60f388 <f_boot>
    8114:	48 83 c0 04          	add    $0x4,%rax
    8118:	89 c1                	mov    %eax,%ecx
    811a:	48 8b 05 67 72 60 00 	mov    0x607267(%rip),%rax        # 60f388 <f_boot>
    8121:	29 c1                	sub    %eax,%ecx
    8123:	89 c8                	mov    %ecx,%eax
    8125:	48 63 c8             	movslq %eax,%rcx
    8128:	48 8d 05 b1 6f 20 00 	lea    0x206fb1(%rip),%rax        # 20f0e0 <mem>
    812f:	48 01 c8             	add    %rcx,%rax
    8132:	83 c2 04             	add    $0x4,%edx
    8135:	89 10                	mov    %edx,(%rax)
    8137:	e9 0d 23 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 	 	 	if( !CELL(HANDLER)) {for(;;);}
    813c:	48 8b 05 45 72 60 00 	mov    0x607245(%rip),%rax        # 60f388 <f_boot>
    8143:	48 05 18 01 00 00    	add    $0x118,%rax
    8149:	89 c2                	mov    %eax,%edx
    814b:	48 8b 05 36 72 60 00 	mov    0x607236(%rip),%rax        # 60f388 <f_boot>
    8152:	29 c2                	sub    %eax,%edx
    8154:	89 d0                	mov    %edx,%eax
    8156:	89 c7                	mov    %eax,%edi
    8158:	e8 10 8d ff ff       	callq  e6d <v2r>
    815d:	8b 00                	mov    (%rax),%eax
    815f:	85 c0                	test   %eax,%eax
    8161:	75 02                	jne    8165 <virtual_machine+0x4d8d>
    8163:	eb fe                	jmp    8163 <virtual_machine+0x4d8b>
    	 	 	 	{ __u32 savesp=CELL(sp);
    8165:	48 8b 05 1c 72 60 00 	mov    0x60721c(%rip),%rax        # 60f388 <f_boot>
    816c:	48 83 c0 04          	add    $0x4,%rax
    8170:	89 c2                	mov    %eax,%edx
    8172:	48 8b 05 0f 72 60 00 	mov    0x60720f(%rip),%rax        # 60f388 <f_boot>
    8179:	29 c2                	sub    %eax,%edx
    817b:	89 d0                	mov    %edx,%eax
    817d:	48 63 d0             	movslq %eax,%rdx
    8180:	48 8d 05 59 6f 20 00 	lea    0x206f59(%rip),%rax        # 20f0e0 <mem>
    8187:	48 01 d0             	add    %rdx,%rax
    818a:	8b 00                	mov    (%rax),%eax
    818c:	89 c7                	mov    %eax,%edi
    818e:	e8 da 8c ff ff       	callq  e6d <v2r>
    8193:	8b 00                	mov    (%rax),%eax
    8195:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
    	 	 	 	  rp=CELL(HANDLER);
    819b:	48 8b 05 e6 71 60 00 	mov    0x6071e6(%rip),%rax        # 60f388 <f_boot>
    81a2:	48 05 18 01 00 00    	add    $0x118,%rax
    81a8:	89 c2                	mov    %eax,%edx
    81aa:	48 8b 05 d7 71 60 00 	mov    0x6071d7(%rip),%rax        # 60f388 <f_boot>
    81b1:	29 c2                	sub    %eax,%edx
    81b3:	89 d0                	mov    %edx,%eax
    81b5:	89 c7                	mov    %eax,%edi
    81b7:	e8 b1 8c ff ff       	callq  e6d <v2r>
    81bc:	8b 00                	mov    (%rax),%eax
    81be:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%rbp)
    	 	 	 	  CELL(HANDLER)=CELL(rp+8);
    81c4:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    81ca:	83 c0 08             	add    $0x8,%eax
    81cd:	89 c7                	mov    %eax,%edi
    81cf:	e8 99 8c ff ff       	callq  e6d <v2r>
    81d4:	48 89 c3             	mov    %rax,%rbx
    81d7:	48 8b 05 aa 71 60 00 	mov    0x6071aa(%rip),%rax        # 60f388 <f_boot>
    81de:	48 05 18 01 00 00    	add    $0x118,%rax
    81e4:	89 c2                	mov    %eax,%edx
    81e6:	48 8b 05 9b 71 60 00 	mov    0x60719b(%rip),%rax        # 60f388 <f_boot>
    81ed:	29 c2                	sub    %eax,%edx
    81ef:	89 d0                	mov    %edx,%eax
    81f1:	89 c7                	mov    %eax,%edi
    81f3:	e8 75 8c ff ff       	callq  e6d <v2r>
    81f8:	48 89 c2             	mov    %rax,%rdx
    81fb:	8b 03                	mov    (%rbx),%eax
    81fd:	89 02                	mov    %eax,(%rdx)
    	 	 	 	  sp=CELL(rp+4);
    81ff:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    8205:	83 c0 04             	add    $0x4,%eax
    8208:	89 c7                	mov    %eax,%edi
    820a:	e8 5e 8c ff ff       	callq  e6d <v2r>
    820f:	48 89 c1             	mov    %rax,%rcx
    8212:	48 8b 05 6f 71 60 00 	mov    0x60716f(%rip),%rax        # 60f388 <f_boot>
    8219:	48 83 c0 04          	add    $0x4,%rax
    821d:	89 c2                	mov    %eax,%edx
    821f:	48 8b 05 62 71 60 00 	mov    0x607162(%rip),%rax        # 60f388 <f_boot>
    8226:	29 c2                	sub    %eax,%edx
    8228:	89 d0                	mov    %edx,%eax
    822a:	48 63 d0             	movslq %eax,%rdx
    822d:	48 8d 05 ac 6e 20 00 	lea    0x206eac(%rip),%rax        # 20f0e0 <mem>
    8234:	48 01 c2             	add    %rax,%rdx
    8237:	8b 01                	mov    (%rcx),%eax
    8239:	89 02                	mov    %eax,(%rdx)
    	 	 	 	  CELL(sp)=savesp;
    823b:	48 8b 05 46 71 60 00 	mov    0x607146(%rip),%rax        # 60f388 <f_boot>
    8242:	48 83 c0 04          	add    $0x4,%rax
    8246:	89 c2                	mov    %eax,%edx
    8248:	48 8b 05 39 71 60 00 	mov    0x607139(%rip),%rax        # 60f388 <f_boot>
    824f:	29 c2                	sub    %eax,%edx
    8251:	89 d0                	mov    %edx,%eax
    8253:	48 63 d0             	movslq %eax,%rdx
    8256:	48 8d 05 83 6e 20 00 	lea    0x206e83(%rip),%rax        # 20f0e0 <mem>
    825d:	48 01 d0             	add    %rdx,%rax
    8260:	8b 00                	mov    (%rax),%eax
    8262:	89 c7                	mov    %eax,%edi
    8264:	e8 04 8c ff ff       	callq  e6d <v2r>
    8269:	48 89 c2             	mov    %rax,%rdx
    826c:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
    8272:	89 02                	mov    %eax,(%rdx)
    	 	 	 	  ip=CELL(rp)+4; // over from_catch
    8274:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    827a:	89 c7                	mov    %eax,%edi
    827c:	e8 ec 8b ff ff       	callq  e6d <v2r>
    8281:	8b 00                	mov    (%rax),%eax
    8283:	83 c0 04             	add    $0x4,%eax
    8286:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    	 	 	 	  rp+=12;
    828c:	83 85 5c fe ff ff 0c 	addl   $0xc,-0x1a4(%rbp)
    	 	 	 	 break;
    8293:	e9 b1 21 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 	 	 	}

     case sw_branch: /*branch*/
    	 ip = CELL(ip);break;
    8298:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    829e:	89 c7                	mov    %eax,%edi
    82a0:	e8 c8 8b ff ff       	callq  e6d <v2r>
    82a5:	8b 00                	mov    (%rax),%eax
    82a7:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    82ad:	e9 97 21 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_0branch: /*0branch*/
    	 if(CELL(sp)) ip+=4; else ip= CELL(ip); sp+=4; break;
    82b2:	48 8b 05 cf 70 60 00 	mov    0x6070cf(%rip),%rax        # 60f388 <f_boot>
    82b9:	48 83 c0 04          	add    $0x4,%rax
    82bd:	89 c2                	mov    %eax,%edx
    82bf:	48 8b 05 c2 70 60 00 	mov    0x6070c2(%rip),%rax        # 60f388 <f_boot>
    82c6:	29 c2                	sub    %eax,%edx
    82c8:	89 d0                	mov    %edx,%eax
    82ca:	48 63 d0             	movslq %eax,%rdx
    82cd:	48 8d 05 0c 6e 20 00 	lea    0x206e0c(%rip),%rax        # 20f0e0 <mem>
    82d4:	48 01 d0             	add    %rdx,%rax
    82d7:	8b 00                	mov    (%rax),%eax
    82d9:	89 c7                	mov    %eax,%edi
    82db:	e8 8d 8b ff ff       	callq  e6d <v2r>
    82e0:	8b 00                	mov    (%rax),%eax
    82e2:	85 c0                	test   %eax,%eax
    82e4:	74 09                	je     82ef <virtual_machine+0x4f17>
    82e6:	83 85 60 fe ff ff 04 	addl   $0x4,-0x1a0(%rbp)
    82ed:	eb 15                	jmp    8304 <virtual_machine+0x4f2c>
    82ef:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    82f5:	89 c7                	mov    %eax,%edi
    82f7:	e8 71 8b ff ff       	callq  e6d <v2r>
    82fc:	8b 00                	mov    (%rax),%eax
    82fe:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    8304:	48 8b 05 7d 70 60 00 	mov    0x60707d(%rip),%rax        # 60f388 <f_boot>
    830b:	48 83 c0 04          	add    $0x4,%rax
    830f:	89 c2                	mov    %eax,%edx
    8311:	48 8b 05 70 70 60 00 	mov    0x607070(%rip),%rax        # 60f388 <f_boot>
    8318:	29 c2                	sub    %eax,%edx
    831a:	89 d0                	mov    %edx,%eax
    831c:	48 63 d0             	movslq %eax,%rdx
    831f:	48 8d 05 ba 6d 20 00 	lea    0x206dba(%rip),%rax        # 20f0e0 <mem>
    8326:	48 01 d0             	add    %rdx,%rax
    8329:	8b 10                	mov    (%rax),%edx
    832b:	48 8b 05 56 70 60 00 	mov    0x607056(%rip),%rax        # 60f388 <f_boot>
    8332:	48 83 c0 04          	add    $0x4,%rax
    8336:	89 c1                	mov    %eax,%ecx
    8338:	48 8b 05 49 70 60 00 	mov    0x607049(%rip),%rax        # 60f388 <f_boot>
    833f:	29 c1                	sub    %eax,%ecx
    8341:	89 c8                	mov    %ecx,%eax
    8343:	48 63 c8             	movslq %eax,%rcx
    8346:	48 8d 05 93 6d 20 00 	lea    0x206d93(%rip),%rax        # 20f0e0 <mem>
    834d:	48 01 c8             	add    %rcx,%rax
    8350:	83 c2 04             	add    $0x4,%edx
    8353:	89 10                	mov    %edx,(%rax)
    8355:	e9 ef 20 00 00       	jmpq   a449 <virtual_machine+0x7071>

    	 case sw_BEGIN:  BEGIN();break;
    835a:	b8 00 00 00 00       	mov    $0x0,%eax
    835f:	e8 4a 96 ff ff       	callq  19ae <BEGIN>
    8364:	e9 e0 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_AGAIN:  AGAIN();break;
    8369:	b8 00 00 00 00       	mov    $0x0,%eax
    836e:	e8 ee 96 ff ff       	callq  1a61 <AGAIN>
    8373:	e9 d1 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_UNTIL:  UNTIL();break;
    8378:	b8 00 00 00 00       	mov    $0x0,%eax
    837d:	e8 78 97 ff ff       	callq  1afa <UNTIL>
    8382:	e9 c2 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_AHEAD:  AHEAD();break;
    8387:	b8 00 00 00 00       	mov    $0x0,%eax
    838c:	e8 02 98 ff ff       	callq  1b93 <AHEAD>
    8391:	e9 b3 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_IF:     IF();break;
    8396:	b8 00 00 00 00       	mov    $0x0,%eax
    839b:	e8 35 99 ff ff       	callq  1cd5 <IF>
    83a0:	e9 a4 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_WHILE:  WHILE();break;
    83a5:	b8 00 00 00 00       	mov    $0x0,%eax
    83aa:	e8 68 9a ff ff       	callq  1e17 <WHILE>
    83af:	e9 95 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_THEN:   THEN();break;
    83b4:	b8 00 00 00 00       	mov    $0x0,%eax
    83b9:	e8 49 9b ff ff       	callq  1f07 <THEN>
    83be:	e9 86 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_ELSE:   ELSE();break;
    83c3:	b8 00 00 00 00       	mov    $0x0,%eax
    83c8:	e8 f6 9b ff ff       	callq  1fc3 <ELSE>
    83cd:	e9 77 20 00 00       	jmpq   a449 <virtual_machine+0x7071>
    	 case sw_REPEAT: REPEAT();break;
    83d2:	b8 00 00 00 00       	mov    $0x0,%eax
    83d7:	e8 e1 9c ff ff       	callq  20bd <REPEAT>
    83dc:	e9 68 20 00 00       	jmpq   a449 <virtual_machine+0x7071>


     case sw_key: /*read char */	sp-=4;CELL(sp)=(__u32)ttgetch(0);break;
    83e1:	48 8b 05 a0 6f 60 00 	mov    0x606fa0(%rip),%rax        # 60f388 <f_boot>
    83e8:	48 83 c0 04          	add    $0x4,%rax
    83ec:	89 c2                	mov    %eax,%edx
    83ee:	48 8b 05 93 6f 60 00 	mov    0x606f93(%rip),%rax        # 60f388 <f_boot>
    83f5:	29 c2                	sub    %eax,%edx
    83f7:	89 d0                	mov    %edx,%eax
    83f9:	48 63 d0             	movslq %eax,%rdx
    83fc:	48 8d 05 dd 6c 20 00 	lea    0x206cdd(%rip),%rax        # 20f0e0 <mem>
    8403:	48 01 d0             	add    %rdx,%rax
    8406:	8b 10                	mov    (%rax),%edx
    8408:	48 8b 05 79 6f 60 00 	mov    0x606f79(%rip),%rax        # 60f388 <f_boot>
    840f:	48 83 c0 04          	add    $0x4,%rax
    8413:	89 c1                	mov    %eax,%ecx
    8415:	48 8b 05 6c 6f 60 00 	mov    0x606f6c(%rip),%rax        # 60f388 <f_boot>
    841c:	29 c1                	sub    %eax,%ecx
    841e:	89 c8                	mov    %ecx,%eax
    8420:	48 63 c8             	movslq %eax,%rcx
    8423:	48 8d 05 b6 6c 20 00 	lea    0x206cb6(%rip),%rax        # 20f0e0 <mem>
    842a:	48 01 c8             	add    %rcx,%rax
    842d:	83 ea 04             	sub    $0x4,%edx
    8430:	89 10                	mov    %edx,(%rax)
    8432:	bf 00 00 00 00       	mov    $0x0,%edi
    8437:	b8 00 00 00 00       	mov    $0x0,%eax
    843c:	e8 a9 4d 00 00       	callq  d1ea <ttgetch>
    8441:	89 c3                	mov    %eax,%ebx
    8443:	48 8b 05 3e 6f 60 00 	mov    0x606f3e(%rip),%rax        # 60f388 <f_boot>
    844a:	48 83 c0 04          	add    $0x4,%rax
    844e:	89 c2                	mov    %eax,%edx
    8450:	48 8b 05 31 6f 60 00 	mov    0x606f31(%rip),%rax        # 60f388 <f_boot>
    8457:	29 c2                	sub    %eax,%edx
    8459:	89 d0                	mov    %edx,%eax
    845b:	48 63 d0             	movslq %eax,%rdx
    845e:	48 8d 05 7b 6c 20 00 	lea    0x206c7b(%rip),%rax        # 20f0e0 <mem>
    8465:	48 01 d0             	add    %rdx,%rax
    8468:	8b 00                	mov    (%rax),%eax
    846a:	89 c7                	mov    %eax,%edi
    846c:	e8 fc 89 ff ff       	callq  e6d <v2r>
    8471:	89 da                	mov    %ebx,%edx
    8473:	89 10                	mov    %edx,(%rax)
    8475:	e9 cf 1f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_keyq: /*check key */	sp-=4;CELL(sp)=-(INT32)ttkbhit(0);break;
    847a:	48 8b 05 07 6f 60 00 	mov    0x606f07(%rip),%rax        # 60f388 <f_boot>
    8481:	48 83 c0 04          	add    $0x4,%rax
    8485:	89 c2                	mov    %eax,%edx
    8487:	48 8b 05 fa 6e 60 00 	mov    0x606efa(%rip),%rax        # 60f388 <f_boot>
    848e:	29 c2                	sub    %eax,%edx
    8490:	89 d0                	mov    %edx,%eax
    8492:	48 63 d0             	movslq %eax,%rdx
    8495:	48 8d 05 44 6c 20 00 	lea    0x206c44(%rip),%rax        # 20f0e0 <mem>
    849c:	48 01 d0             	add    %rdx,%rax
    849f:	8b 10                	mov    (%rax),%edx
    84a1:	48 8b 05 e0 6e 60 00 	mov    0x606ee0(%rip),%rax        # 60f388 <f_boot>
    84a8:	48 83 c0 04          	add    $0x4,%rax
    84ac:	89 c1                	mov    %eax,%ecx
    84ae:	48 8b 05 d3 6e 60 00 	mov    0x606ed3(%rip),%rax        # 60f388 <f_boot>
    84b5:	29 c1                	sub    %eax,%ecx
    84b7:	89 c8                	mov    %ecx,%eax
    84b9:	48 63 c8             	movslq %eax,%rcx
    84bc:	48 8d 05 1d 6c 20 00 	lea    0x206c1d(%rip),%rax        # 20f0e0 <mem>
    84c3:	48 01 c8             	add    %rcx,%rax
    84c6:	83 ea 04             	sub    $0x4,%edx
    84c9:	89 10                	mov    %edx,(%rax)
    84cb:	bf 00 00 00 00       	mov    $0x0,%edi
    84d0:	e8 24 4e 00 00       	callq  d2f9 <ttkbhit>
    84d5:	f7 d8                	neg    %eax
    84d7:	89 c3                	mov    %eax,%ebx
    84d9:	48 8b 05 a8 6e 60 00 	mov    0x606ea8(%rip),%rax        # 60f388 <f_boot>
    84e0:	48 83 c0 04          	add    $0x4,%rax
    84e4:	89 c2                	mov    %eax,%edx
    84e6:	48 8b 05 9b 6e 60 00 	mov    0x606e9b(%rip),%rax        # 60f388 <f_boot>
    84ed:	29 c2                	sub    %eax,%edx
    84ef:	89 d0                	mov    %edx,%eax
    84f1:	48 63 d0             	movslq %eax,%rdx
    84f4:	48 8d 05 e5 6b 20 00 	lea    0x206be5(%rip),%rax        # 20f0e0 <mem>
    84fb:	48 01 d0             	add    %rdx,%rax
    84fe:	8b 00                	mov    (%rax),%eax
    8500:	89 c7                	mov    %eax,%edi
    8502:	e8 66 89 ff ff       	callq  e6d <v2r>
    8507:	89 da                	mov    %ebx,%edx
    8509:	89 10                	mov    %edx,(%rax)
    850b:	e9 39 1f 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_port: /*read char */	CELL(sp)=(__u32)ttgetch(CELL(sp));break;
    8510:	48 8b 05 71 6e 60 00 	mov    0x606e71(%rip),%rax        # 60f388 <f_boot>
    8517:	48 83 c0 04          	add    $0x4,%rax
    851b:	89 c2                	mov    %eax,%edx
    851d:	48 8b 05 64 6e 60 00 	mov    0x606e64(%rip),%rax        # 60f388 <f_boot>
    8524:	29 c2                	sub    %eax,%edx
    8526:	89 d0                	mov    %edx,%eax
    8528:	48 63 d0             	movslq %eax,%rdx
    852b:	48 8d 05 ae 6b 20 00 	lea    0x206bae(%rip),%rax        # 20f0e0 <mem>
    8532:	48 01 d0             	add    %rdx,%rax
    8535:	8b 00                	mov    (%rax),%eax
    8537:	89 c7                	mov    %eax,%edi
    8539:	e8 2f 89 ff ff       	callq  e6d <v2r>
    853e:	8b 00                	mov    (%rax),%eax
    8540:	89 c7                	mov    %eax,%edi
    8542:	b8 00 00 00 00       	mov    $0x0,%eax
    8547:	e8 9e 4c 00 00       	callq  d1ea <ttgetch>
    854c:	89 c3                	mov    %eax,%ebx
    854e:	48 8b 05 33 6e 60 00 	mov    0x606e33(%rip),%rax        # 60f388 <f_boot>
    8555:	48 83 c0 04          	add    $0x4,%rax
    8559:	89 c2                	mov    %eax,%edx
    855b:	48 8b 05 26 6e 60 00 	mov    0x606e26(%rip),%rax        # 60f388 <f_boot>
    8562:	29 c2                	sub    %eax,%edx
    8564:	89 d0                	mov    %edx,%eax
    8566:	48 63 d0             	movslq %eax,%rdx
    8569:	48 8d 05 70 6b 20 00 	lea    0x206b70(%rip),%rax        # 20f0e0 <mem>
    8570:	48 01 d0             	add    %rdx,%rax
    8573:	8b 00                	mov    (%rax),%eax
    8575:	89 c7                	mov    %eax,%edi
    8577:	e8 f1 88 ff ff       	callq  e6d <v2r>
    857c:	89 da                	mov    %ebx,%edx
    857e:	89 10                	mov    %edx,(%rax)
    8580:	e9 c4 1e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_portq: /*check key */	CELL(sp)=-(INT32)ttkbhit(CELL(sp));break;
    8585:	48 8b 05 fc 6d 60 00 	mov    0x606dfc(%rip),%rax        # 60f388 <f_boot>
    858c:	48 83 c0 04          	add    $0x4,%rax
    8590:	89 c2                	mov    %eax,%edx
    8592:	48 8b 05 ef 6d 60 00 	mov    0x606def(%rip),%rax        # 60f388 <f_boot>
    8599:	29 c2                	sub    %eax,%edx
    859b:	89 d0                	mov    %edx,%eax
    859d:	48 63 d0             	movslq %eax,%rdx
    85a0:	48 8d 05 39 6b 20 00 	lea    0x206b39(%rip),%rax        # 20f0e0 <mem>
    85a7:	48 01 d0             	add    %rdx,%rax
    85aa:	8b 00                	mov    (%rax),%eax
    85ac:	89 c7                	mov    %eax,%edi
    85ae:	e8 ba 88 ff ff       	callq  e6d <v2r>
    85b3:	8b 00                	mov    (%rax),%eax
    85b5:	89 c7                	mov    %eax,%edi
    85b7:	e8 3d 4d 00 00       	callq  d2f9 <ttkbhit>
    85bc:	f7 d8                	neg    %eax
    85be:	89 c3                	mov    %eax,%ebx
    85c0:	48 8b 05 c1 6d 60 00 	mov    0x606dc1(%rip),%rax        # 60f388 <f_boot>
    85c7:	48 83 c0 04          	add    $0x4,%rax
    85cb:	89 c2                	mov    %eax,%edx
    85cd:	48 8b 05 b4 6d 60 00 	mov    0x606db4(%rip),%rax        # 60f388 <f_boot>
    85d4:	29 c2                	sub    %eax,%edx
    85d6:	89 d0                	mov    %edx,%eax
    85d8:	48 63 d0             	movslq %eax,%rdx
    85db:	48 8d 05 fe 6a 20 00 	lea    0x206afe(%rip),%rax        # 20f0e0 <mem>
    85e2:	48 01 d0             	add    %rdx,%rax
    85e5:	8b 00                	mov    (%rax),%eax
    85e7:	89 c7                	mov    %eax,%edi
    85e9:	e8 7f 88 ff ff       	callq  e6d <v2r>
    85ee:	89 da                	mov    %ebx,%edx
    85f0:	89 10                	mov    %edx,(%rax)
    85f2:	e9 52 1e 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_emit: /*print char*/
    	ttwrite(CELL(OUTPUT),&BYTE(sp),1);
    85f7:	48 8b 05 8a 6d 60 00 	mov    0x606d8a(%rip),%rax        # 60f388 <f_boot>
    85fe:	48 83 c0 04          	add    $0x4,%rax
    8602:	89 c2                	mov    %eax,%edx
    8604:	48 8b 05 7d 6d 60 00 	mov    0x606d7d(%rip),%rax        # 60f388 <f_boot>
    860b:	29 c2                	sub    %eax,%edx
    860d:	89 d0                	mov    %edx,%eax
    860f:	48 63 d0             	movslq %eax,%rdx
    8612:	48 8d 05 c7 6a 20 00 	lea    0x206ac7(%rip),%rax        # 20f0e0 <mem>
    8619:	48 01 d0             	add    %rdx,%rax
    861c:	8b 00                	mov    (%rax),%eax
    861e:	89 c7                	mov    %eax,%edi
    8620:	e8 48 88 ff ff       	callq  e6d <v2r>
    8625:	48 89 c3             	mov    %rax,%rbx
    8628:	48 8b 05 59 6d 60 00 	mov    0x606d59(%rip),%rax        # 60f388 <f_boot>
    862f:	48 05 78 01 00 00    	add    $0x178,%rax
    8635:	89 c2                	mov    %eax,%edx
    8637:	48 8b 05 4a 6d 60 00 	mov    0x606d4a(%rip),%rax        # 60f388 <f_boot>
    863e:	29 c2                	sub    %eax,%edx
    8640:	89 d0                	mov    %edx,%eax
    8642:	89 c7                	mov    %eax,%edi
    8644:	e8 24 88 ff ff       	callq  e6d <v2r>
    8649:	8b 00                	mov    (%rax),%eax
    864b:	ba 01 00 00 00       	mov    $0x1,%edx
    8650:	48 89 de             	mov    %rbx,%rsi
    8653:	89 c7                	mov    %eax,%edi
    8655:	e8 5b 4b 00 00       	callq  d1b5 <ttwrite>
    	 sp+=4;break;
    865a:	48 8b 05 27 6d 60 00 	mov    0x606d27(%rip),%rax        # 60f388 <f_boot>
    8661:	48 83 c0 04          	add    $0x4,%rax
    8665:	89 c2                	mov    %eax,%edx
    8667:	48 8b 05 1a 6d 60 00 	mov    0x606d1a(%rip),%rax        # 60f388 <f_boot>
    866e:	29 c2                	sub    %eax,%edx
    8670:	89 d0                	mov    %edx,%eax
    8672:	48 63 d0             	movslq %eax,%rdx
    8675:	48 8d 05 64 6a 20 00 	lea    0x206a64(%rip),%rax        # 20f0e0 <mem>
    867c:	48 01 d0             	add    %rdx,%rax
    867f:	8b 10                	mov    (%rax),%edx
    8681:	48 8b 05 00 6d 60 00 	mov    0x606d00(%rip),%rax        # 60f388 <f_boot>
    8688:	48 83 c0 04          	add    $0x4,%rax
    868c:	89 c1                	mov    %eax,%ecx
    868e:	48 8b 05 f3 6c 60 00 	mov    0x606cf3(%rip),%rax        # 60f388 <f_boot>
    8695:	29 c1                	sub    %eax,%ecx
    8697:	89 c8                	mov    %ecx,%eax
    8699:	48 63 c8             	movslq %eax,%rcx
    869c:	48 8d 05 3d 6a 20 00 	lea    0x206a3d(%rip),%rax        # 20f0e0 <mem>
    86a3:	48 01 c8             	add    %rcx,%rax
    86a6:	83 c2 04             	add    $0x4,%edx
    86a9:	89 10                	mov    %edx,(%rax)
    86ab:	e9 99 1d 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_type: /*type*/
//         if( CELL(sp+4)+CELL(sp) < MEMSIZE )
        	 ttwrite(CELL(OUTPUT),&BYTE(CELL(sp+4)),CELL(sp));
    86b0:	48 8b 05 d1 6c 60 00 	mov    0x606cd1(%rip),%rax        # 60f388 <f_boot>
    86b7:	48 83 c0 04          	add    $0x4,%rax
    86bb:	89 c2                	mov    %eax,%edx
    86bd:	48 8b 05 c4 6c 60 00 	mov    0x606cc4(%rip),%rax        # 60f388 <f_boot>
    86c4:	29 c2                	sub    %eax,%edx
    86c6:	89 d0                	mov    %edx,%eax
    86c8:	48 63 d0             	movslq %eax,%rdx
    86cb:	48 8d 05 0e 6a 20 00 	lea    0x206a0e(%rip),%rax        # 20f0e0 <mem>
    86d2:	48 01 d0             	add    %rdx,%rax
    86d5:	8b 00                	mov    (%rax),%eax
    86d7:	89 c7                	mov    %eax,%edi
    86d9:	e8 8f 87 ff ff       	callq  e6d <v2r>
    86de:	8b 00                	mov    (%rax),%eax
    86e0:	41 89 c4             	mov    %eax,%r12d
    86e3:	48 8b 05 9e 6c 60 00 	mov    0x606c9e(%rip),%rax        # 60f388 <f_boot>
    86ea:	48 83 c0 04          	add    $0x4,%rax
    86ee:	89 c2                	mov    %eax,%edx
    86f0:	48 8b 05 91 6c 60 00 	mov    0x606c91(%rip),%rax        # 60f388 <f_boot>
    86f7:	29 c2                	sub    %eax,%edx
    86f9:	89 d0                	mov    %edx,%eax
    86fb:	48 63 d0             	movslq %eax,%rdx
    86fe:	48 8d 05 db 69 20 00 	lea    0x2069db(%rip),%rax        # 20f0e0 <mem>
    8705:	48 01 d0             	add    %rdx,%rax
    8708:	8b 00                	mov    (%rax),%eax
    870a:	83 c0 04             	add    $0x4,%eax
    870d:	89 c7                	mov    %eax,%edi
    870f:	e8 59 87 ff ff       	callq  e6d <v2r>
    8714:	8b 00                	mov    (%rax),%eax
    8716:	89 c7                	mov    %eax,%edi
    8718:	e8 50 87 ff ff       	callq  e6d <v2r>
    871d:	48 89 c3             	mov    %rax,%rbx
    8720:	48 8b 05 61 6c 60 00 	mov    0x606c61(%rip),%rax        # 60f388 <f_boot>
    8727:	48 05 78 01 00 00    	add    $0x178,%rax
    872d:	89 c2                	mov    %eax,%edx
    872f:	48 8b 05 52 6c 60 00 	mov    0x606c52(%rip),%rax        # 60f388 <f_boot>
    8736:	29 c2                	sub    %eax,%edx
    8738:	89 d0                	mov    %edx,%eax
    873a:	89 c7                	mov    %eax,%edi
    873c:	e8 2c 87 ff ff       	callq  e6d <v2r>
    8741:	8b 00                	mov    (%rax),%eax
    8743:	4c 89 e2             	mov    %r12,%rdx
    8746:	48 89 de             	mov    %rbx,%rsi
    8749:	89 c7                	mov    %eax,%edi
    874b:	e8 65 4a 00 00       	callq  d1b5 <ttwrite>
        sp+=8;break;
    8750:	48 8b 05 31 6c 60 00 	mov    0x606c31(%rip),%rax        # 60f388 <f_boot>
    8757:	48 83 c0 04          	add    $0x4,%rax
    875b:	89 c2                	mov    %eax,%edx
    875d:	48 8b 05 24 6c 60 00 	mov    0x606c24(%rip),%rax        # 60f388 <f_boot>
    8764:	29 c2                	sub    %eax,%edx
    8766:	89 d0                	mov    %edx,%eax
    8768:	48 63 d0             	movslq %eax,%rdx
    876b:	48 8d 05 6e 69 20 00 	lea    0x20696e(%rip),%rax        # 20f0e0 <mem>
    8772:	48 01 d0             	add    %rdx,%rax
    8775:	8b 10                	mov    (%rax),%edx
    8777:	48 8b 05 0a 6c 60 00 	mov    0x606c0a(%rip),%rax        # 60f388 <f_boot>
    877e:	48 83 c0 04          	add    $0x4,%rax
    8782:	89 c1                	mov    %eax,%ecx
    8784:	48 8b 05 fd 6b 60 00 	mov    0x606bfd(%rip),%rax        # 60f388 <f_boot>
    878b:	29 c1                	sub    %eax,%ecx
    878d:	89 c8                	mov    %ecx,%eax
    878f:	48 63 c8             	movslq %eax,%rcx
    8792:	48 8d 05 47 69 20 00 	lea    0x206947(%rip),%rax        # 20f0e0 <mem>
    8799:	48 01 c8             	add    %rcx,%rax
    879c:	83 c2 08             	add    $0x8,%edx
    879f:	89 10                	mov    %edx,(%rax)
    87a1:	e9 a3 1c 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_hdot: /*print hex*/
     {   char buffer[44];
     	 tmp= CELL(sp);
    87a6:	48 8b 05 db 6b 60 00 	mov    0x606bdb(%rip),%rax        # 60f388 <f_boot>
    87ad:	48 83 c0 04          	add    $0x4,%rax
    87b1:	89 c2                	mov    %eax,%edx
    87b3:	48 8b 05 ce 6b 60 00 	mov    0x606bce(%rip),%rax        # 60f388 <f_boot>
    87ba:	29 c2                	sub    %eax,%edx
    87bc:	89 d0                	mov    %edx,%eax
    87be:	48 63 d0             	movslq %eax,%rdx
    87c1:	48 8d 05 18 69 20 00 	lea    0x206918(%rip),%rax        # 20f0e0 <mem>
    87c8:	48 01 d0             	add    %rdx,%rax
    87cb:	8b 00                	mov    (%rax),%eax
    87cd:	89 c7                	mov    %eax,%edi
    87cf:	e8 99 86 ff ff       	callq  e6d <v2r>
    87d4:	8b 00                	mov    (%rax),%eax
    87d6:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
         sprintf (buffer, "%X ",tmp);
    87dc:	8b 95 ac fe ff ff    	mov    -0x154(%rbp),%edx
    87e2:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    87e9:	48 8d 35 3b 4d 00 00 	lea    0x4d3b(%rip),%rsi        # d52b <_IO_stdin_used+0x6b>
    87f0:	48 89 c7             	mov    %rax,%rdi
    87f3:	b8 00 00 00 00       	mov    $0x0,%eax
    87f8:	e8 e3 84 ff ff       	callq  ce0 <sprintf@plt>
         for (t = 0; buffer[t] != 0; t ++);
    87fd:	c7 85 64 fe ff ff 00 	movl   $0x0,-0x19c(%rbp)
    8804:	00 00 00 
    8807:	eb 07                	jmp    8810 <virtual_machine+0x5438>
    8809:	83 85 64 fe ff ff 01 	addl   $0x1,-0x19c(%rbp)
    8810:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    8816:	0f b6 84 05 e0 fe ff 	movzbl -0x120(%rbp,%rax,1),%eax
    881d:	ff 
    881e:	84 c0                	test   %al,%al
    8820:	75 e7                	jne    8809 <virtual_machine+0x5431>
    	 ttwrite(CELL(OUTPUT),buffer, t  );
    8822:	8b 9d 64 fe ff ff    	mov    -0x19c(%rbp),%ebx
    8828:	48 8b 05 59 6b 60 00 	mov    0x606b59(%rip),%rax        # 60f388 <f_boot>
    882f:	48 05 78 01 00 00    	add    $0x178,%rax
    8835:	89 c2                	mov    %eax,%edx
    8837:	48 8b 05 4a 6b 60 00 	mov    0x606b4a(%rip),%rax        # 60f388 <f_boot>
    883e:	29 c2                	sub    %eax,%edx
    8840:	89 d0                	mov    %edx,%eax
    8842:	89 c7                	mov    %eax,%edi
    8844:	e8 24 86 ff ff       	callq  e6d <v2r>
    8849:	8b 00                	mov    (%rax),%eax
    884b:	89 c1                	mov    %eax,%ecx
    884d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    8854:	48 89 da             	mov    %rbx,%rdx
    8857:	48 89 c6             	mov    %rax,%rsi
    885a:	89 cf                	mov    %ecx,%edi
    885c:	e8 54 49 00 00       	callq  d1b5 <ttwrite>
     }
     sp+=4;break;
    8861:	48 8b 05 20 6b 60 00 	mov    0x606b20(%rip),%rax        # 60f388 <f_boot>
    8868:	48 83 c0 04          	add    $0x4,%rax
    886c:	89 c2                	mov    %eax,%edx
    886e:	48 8b 05 13 6b 60 00 	mov    0x606b13(%rip),%rax        # 60f388 <f_boot>
    8875:	29 c2                	sub    %eax,%edx
    8877:	89 d0                	mov    %edx,%eax
    8879:	48 63 d0             	movslq %eax,%rdx
    887c:	48 8d 05 5d 68 20 00 	lea    0x20685d(%rip),%rax        # 20f0e0 <mem>
    8883:	48 01 d0             	add    %rdx,%rax
    8886:	8b 10                	mov    (%rax),%edx
    8888:	48 8b 05 f9 6a 60 00 	mov    0x606af9(%rip),%rax        # 60f388 <f_boot>
    888f:	48 83 c0 04          	add    $0x4,%rax
    8893:	89 c1                	mov    %eax,%ecx
    8895:	48 8b 05 ec 6a 60 00 	mov    0x606aec(%rip),%rax        # 60f388 <f_boot>
    889c:	29 c1                	sub    %eax,%ecx
    889e:	89 c8                	mov    %ecx,%eax
    88a0:	48 63 c8             	movslq %eax,%rcx
    88a3:	48 8d 05 36 68 20 00 	lea    0x206836(%rip),%rax        # 20f0e0 <mem>
    88aa:	48 01 c8             	add    %rcx,%rax
    88ad:	83 c2 04             	add    $0x4,%edx
    88b0:	89 10                	mov    %edx,(%rax)
    88b2:	e9 92 1b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_decdot: /*print decimal*/
     {   char buffer[44];
         sprintf (buffer, "%d ", CELL(sp));
    88b7:	48 8b 05 ca 6a 60 00 	mov    0x606aca(%rip),%rax        # 60f388 <f_boot>
    88be:	48 83 c0 04          	add    $0x4,%rax
    88c2:	89 c2                	mov    %eax,%edx
    88c4:	48 8b 05 bd 6a 60 00 	mov    0x606abd(%rip),%rax        # 60f388 <f_boot>
    88cb:	29 c2                	sub    %eax,%edx
    88cd:	89 d0                	mov    %edx,%eax
    88cf:	48 63 d0             	movslq %eax,%rdx
    88d2:	48 8d 05 07 68 20 00 	lea    0x206807(%rip),%rax        # 20f0e0 <mem>
    88d9:	48 01 d0             	add    %rdx,%rax
    88dc:	8b 00                	mov    (%rax),%eax
    88de:	89 c7                	mov    %eax,%edi
    88e0:	e8 88 85 ff ff       	callq  e6d <v2r>
    88e5:	8b 10                	mov    (%rax),%edx
    88e7:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    88ee:	48 8d 35 3a 4c 00 00 	lea    0x4c3a(%rip),%rsi        # d52f <_IO_stdin_used+0x6f>
    88f5:	48 89 c7             	mov    %rax,%rdi
    88f8:	b8 00 00 00 00       	mov    $0x0,%eax
    88fd:	e8 de 83 ff ff       	callq  ce0 <sprintf@plt>
     }
     sp+=4;break;
    8902:	48 8b 05 7f 6a 60 00 	mov    0x606a7f(%rip),%rax        # 60f388 <f_boot>
    8909:	48 83 c0 04          	add    $0x4,%rax
    890d:	89 c2                	mov    %eax,%edx
    890f:	48 8b 05 72 6a 60 00 	mov    0x606a72(%rip),%rax        # 60f388 <f_boot>
    8916:	29 c2                	sub    %eax,%edx
    8918:	89 d0                	mov    %edx,%eax
    891a:	48 63 d0             	movslq %eax,%rdx
    891d:	48 8d 05 bc 67 20 00 	lea    0x2067bc(%rip),%rax        # 20f0e0 <mem>
    8924:	48 01 d0             	add    %rdx,%rax
    8927:	8b 10                	mov    (%rax),%edx
    8929:	48 8b 05 58 6a 60 00 	mov    0x606a58(%rip),%rax        # 60f388 <f_boot>
    8930:	48 83 c0 04          	add    $0x4,%rax
    8934:	89 c1                	mov    %eax,%ecx
    8936:	48 8b 05 4b 6a 60 00 	mov    0x606a4b(%rip),%rax        # 60f388 <f_boot>
    893d:	29 c1                	sub    %eax,%ecx
    893f:	89 c8                	mov    %ecx,%eax
    8941:	48 63 c8             	movslq %eax,%rcx
    8944:	48 8d 05 95 67 20 00 	lea    0x206795(%rip),%rax        # 20f0e0 <mem>
    894b:	48 01 c8             	add    %rcx,%rax
    894e:	83 c2 04             	add    $0x4,%edx
    8951:	89 10                	mov    %edx,(%rax)
    8953:	e9 f1 1a 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_count: /*count*/ sp-=4;
    8958:	48 8b 05 29 6a 60 00 	mov    0x606a29(%rip),%rax        # 60f388 <f_boot>
    895f:	48 83 c0 04          	add    $0x4,%rax
    8963:	89 c2                	mov    %eax,%edx
    8965:	48 8b 05 1c 6a 60 00 	mov    0x606a1c(%rip),%rax        # 60f388 <f_boot>
    896c:	29 c2                	sub    %eax,%edx
    896e:	89 d0                	mov    %edx,%eax
    8970:	48 63 d0             	movslq %eax,%rdx
    8973:	48 8d 05 66 67 20 00 	lea    0x206766(%rip),%rax        # 20f0e0 <mem>
    897a:	48 01 d0             	add    %rdx,%rax
    897d:	8b 10                	mov    (%rax),%edx
    897f:	48 8b 05 02 6a 60 00 	mov    0x606a02(%rip),%rax        # 60f388 <f_boot>
    8986:	48 83 c0 04          	add    $0x4,%rax
    898a:	89 c1                	mov    %eax,%ecx
    898c:	48 8b 05 f5 69 60 00 	mov    0x6069f5(%rip),%rax        # 60f388 <f_boot>
    8993:	29 c1                	sub    %eax,%ecx
    8995:	89 c8                	mov    %ecx,%eax
    8997:	48 63 c8             	movslq %eax,%rcx
    899a:	48 8d 05 3f 67 20 00 	lea    0x20673f(%rip),%rax        # 20f0e0 <mem>
    89a1:	48 01 c8             	add    %rcx,%rax
    89a4:	83 ea 04             	sub    $0x4,%edx
    89a7:	89 10                	mov    %edx,(%rax)
	     CELL(sp)= BYTE(CELL(sp+4)); 
    89a9:	48 8b 05 d8 69 60 00 	mov    0x6069d8(%rip),%rax        # 60f388 <f_boot>
    89b0:	48 83 c0 04          	add    $0x4,%rax
    89b4:	89 c2                	mov    %eax,%edx
    89b6:	48 8b 05 cb 69 60 00 	mov    0x6069cb(%rip),%rax        # 60f388 <f_boot>
    89bd:	29 c2                	sub    %eax,%edx
    89bf:	89 d0                	mov    %edx,%eax
    89c1:	48 63 d0             	movslq %eax,%rdx
    89c4:	48 8d 05 15 67 20 00 	lea    0x206715(%rip),%rax        # 20f0e0 <mem>
    89cb:	48 01 d0             	add    %rdx,%rax
    89ce:	8b 00                	mov    (%rax),%eax
    89d0:	83 c0 04             	add    $0x4,%eax
    89d3:	89 c7                	mov    %eax,%edi
    89d5:	e8 93 84 ff ff       	callq  e6d <v2r>
    89da:	8b 00                	mov    (%rax),%eax
    89dc:	89 c7                	mov    %eax,%edi
    89de:	e8 8a 84 ff ff       	callq  e6d <v2r>
    89e3:	0f b6 18             	movzbl (%rax),%ebx
    89e6:	48 8b 05 9b 69 60 00 	mov    0x60699b(%rip),%rax        # 60f388 <f_boot>
    89ed:	48 83 c0 04          	add    $0x4,%rax
    89f1:	89 c2                	mov    %eax,%edx
    89f3:	48 8b 05 8e 69 60 00 	mov    0x60698e(%rip),%rax        # 60f388 <f_boot>
    89fa:	29 c2                	sub    %eax,%edx
    89fc:	89 d0                	mov    %edx,%eax
    89fe:	48 63 d0             	movslq %eax,%rdx
    8a01:	48 8d 05 d8 66 20 00 	lea    0x2066d8(%rip),%rax        # 20f0e0 <mem>
    8a08:	48 01 d0             	add    %rdx,%rax
    8a0b:	8b 00                	mov    (%rax),%eax
    8a0d:	89 c7                	mov    %eax,%edi
    8a0f:	e8 59 84 ff ff       	callq  e6d <v2r>
    8a14:	48 89 c2             	mov    %rax,%rdx
    8a17:	0f b6 c3             	movzbl %bl,%eax
    8a1a:	89 02                	mov    %eax,(%rdx)
	     CELL(sp+4)++; break;
    8a1c:	48 8b 05 65 69 60 00 	mov    0x606965(%rip),%rax        # 60f388 <f_boot>
    8a23:	48 83 c0 04          	add    $0x4,%rax
    8a27:	89 c2                	mov    %eax,%edx
    8a29:	48 8b 05 58 69 60 00 	mov    0x606958(%rip),%rax        # 60f388 <f_boot>
    8a30:	29 c2                	sub    %eax,%edx
    8a32:	89 d0                	mov    %edx,%eax
    8a34:	48 63 d0             	movslq %eax,%rdx
    8a37:	48 8d 05 a2 66 20 00 	lea    0x2066a2(%rip),%rax        # 20f0e0 <mem>
    8a3e:	48 01 d0             	add    %rdx,%rax
    8a41:	8b 00                	mov    (%rax),%eax
    8a43:	83 c0 04             	add    $0x4,%eax
    8a46:	89 c7                	mov    %eax,%edi
    8a48:	e8 20 84 ff ff       	callq  e6d <v2r>
    8a4d:	8b 10                	mov    (%rax),%edx
    8a4f:	83 c2 01             	add    $0x1,%edx
    8a52:	89 10                	mov    %edx,(%rax)
    8a54:	e9 f0 19 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_cstr: /*(C")*/ sp-=4;  CELL(sp)=ip; t=BYTE(ip++);
    8a59:	48 8b 05 28 69 60 00 	mov    0x606928(%rip),%rax        # 60f388 <f_boot>
    8a60:	48 83 c0 04          	add    $0x4,%rax
    8a64:	89 c2                	mov    %eax,%edx
    8a66:	48 8b 05 1b 69 60 00 	mov    0x60691b(%rip),%rax        # 60f388 <f_boot>
    8a6d:	29 c2                	sub    %eax,%edx
    8a6f:	89 d0                	mov    %edx,%eax
    8a71:	48 63 d0             	movslq %eax,%rdx
    8a74:	48 8d 05 65 66 20 00 	lea    0x206665(%rip),%rax        # 20f0e0 <mem>
    8a7b:	48 01 d0             	add    %rdx,%rax
    8a7e:	8b 10                	mov    (%rax),%edx
    8a80:	48 8b 05 01 69 60 00 	mov    0x606901(%rip),%rax        # 60f388 <f_boot>
    8a87:	48 83 c0 04          	add    $0x4,%rax
    8a8b:	89 c1                	mov    %eax,%ecx
    8a8d:	48 8b 05 f4 68 60 00 	mov    0x6068f4(%rip),%rax        # 60f388 <f_boot>
    8a94:	29 c1                	sub    %eax,%ecx
    8a96:	89 c8                	mov    %ecx,%eax
    8a98:	48 63 c8             	movslq %eax,%rcx
    8a9b:	48 8d 05 3e 66 20 00 	lea    0x20663e(%rip),%rax        # 20f0e0 <mem>
    8aa2:	48 01 c8             	add    %rcx,%rax
    8aa5:	83 ea 04             	sub    $0x4,%edx
    8aa8:	89 10                	mov    %edx,(%rax)
    8aaa:	48 8b 05 d7 68 60 00 	mov    0x6068d7(%rip),%rax        # 60f388 <f_boot>
    8ab1:	48 83 c0 04          	add    $0x4,%rax
    8ab5:	89 c2                	mov    %eax,%edx
    8ab7:	48 8b 05 ca 68 60 00 	mov    0x6068ca(%rip),%rax        # 60f388 <f_boot>
    8abe:	29 c2                	sub    %eax,%edx
    8ac0:	89 d0                	mov    %edx,%eax
    8ac2:	48 63 d0             	movslq %eax,%rdx
    8ac5:	48 8d 05 14 66 20 00 	lea    0x206614(%rip),%rax        # 20f0e0 <mem>
    8acc:	48 01 d0             	add    %rdx,%rax
    8acf:	8b 00                	mov    (%rax),%eax
    8ad1:	89 c7                	mov    %eax,%edi
    8ad3:	e8 95 83 ff ff       	callq  e6d <v2r>
    8ad8:	48 89 c2             	mov    %rax,%rdx
    8adb:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8ae1:	89 02                	mov    %eax,(%rdx)
    8ae3:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8ae9:	8d 50 01             	lea    0x1(%rax),%edx
    8aec:	89 95 60 fe ff ff    	mov    %edx,-0x1a0(%rbp)
    8af2:	89 c7                	mov    %eax,%edi
    8af4:	e8 74 83 ff ff       	callq  e6d <v2r>
    8af9:	0f b6 00             	movzbl (%rax),%eax
    8afc:	0f b6 c0             	movzbl %al,%eax
    8aff:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
			ip+=t; if(ip&1)ip++; break;
    8b05:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    8b0b:	01 85 60 fe ff ff    	add    %eax,-0x1a0(%rbp)
    8b11:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8b17:	83 e0 01             	and    $0x1,%eax
    8b1a:	85 c0                	test   %eax,%eax
    8b1c:	0f 84 23 19 00 00    	je     a445 <virtual_machine+0x706d>
    8b22:	83 85 60 fe ff ff 01 	addl   $0x1,-0x1a0(%rbp)
    8b29:	e9 17 19 00 00       	jmpq   a445 <virtual_machine+0x706d>
     case sw_str: /*(S")*/ sp-=8; t=BYTE(ip++); CELL(sp)=t; CELL(sp+4)=ip;
    8b2e:	48 8b 05 53 68 60 00 	mov    0x606853(%rip),%rax        # 60f388 <f_boot>
    8b35:	48 83 c0 04          	add    $0x4,%rax
    8b39:	89 c2                	mov    %eax,%edx
    8b3b:	48 8b 05 46 68 60 00 	mov    0x606846(%rip),%rax        # 60f388 <f_boot>
    8b42:	29 c2                	sub    %eax,%edx
    8b44:	89 d0                	mov    %edx,%eax
    8b46:	48 63 d0             	movslq %eax,%rdx
    8b49:	48 8d 05 90 65 20 00 	lea    0x206590(%rip),%rax        # 20f0e0 <mem>
    8b50:	48 01 d0             	add    %rdx,%rax
    8b53:	8b 10                	mov    (%rax),%edx
    8b55:	48 8b 05 2c 68 60 00 	mov    0x60682c(%rip),%rax        # 60f388 <f_boot>
    8b5c:	48 83 c0 04          	add    $0x4,%rax
    8b60:	89 c1                	mov    %eax,%ecx
    8b62:	48 8b 05 1f 68 60 00 	mov    0x60681f(%rip),%rax        # 60f388 <f_boot>
    8b69:	29 c1                	sub    %eax,%ecx
    8b6b:	89 c8                	mov    %ecx,%eax
    8b6d:	48 63 c8             	movslq %eax,%rcx
    8b70:	48 8d 05 69 65 20 00 	lea    0x206569(%rip),%rax        # 20f0e0 <mem>
    8b77:	48 01 c8             	add    %rcx,%rax
    8b7a:	83 ea 08             	sub    $0x8,%edx
    8b7d:	89 10                	mov    %edx,(%rax)
    8b7f:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8b85:	8d 50 01             	lea    0x1(%rax),%edx
    8b88:	89 95 60 fe ff ff    	mov    %edx,-0x1a0(%rbp)
    8b8e:	89 c7                	mov    %eax,%edi
    8b90:	e8 d8 82 ff ff       	callq  e6d <v2r>
    8b95:	0f b6 00             	movzbl (%rax),%eax
    8b98:	0f b6 c0             	movzbl %al,%eax
    8b9b:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    8ba1:	48 8b 05 e0 67 60 00 	mov    0x6067e0(%rip),%rax        # 60f388 <f_boot>
    8ba8:	48 83 c0 04          	add    $0x4,%rax
    8bac:	89 c2                	mov    %eax,%edx
    8bae:	48 8b 05 d3 67 60 00 	mov    0x6067d3(%rip),%rax        # 60f388 <f_boot>
    8bb5:	29 c2                	sub    %eax,%edx
    8bb7:	89 d0                	mov    %edx,%eax
    8bb9:	48 63 d0             	movslq %eax,%rdx
    8bbc:	48 8d 05 1d 65 20 00 	lea    0x20651d(%rip),%rax        # 20f0e0 <mem>
    8bc3:	48 01 d0             	add    %rdx,%rax
    8bc6:	8b 00                	mov    (%rax),%eax
    8bc8:	89 c7                	mov    %eax,%edi
    8bca:	e8 9e 82 ff ff       	callq  e6d <v2r>
    8bcf:	48 89 c2             	mov    %rax,%rdx
    8bd2:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    8bd8:	89 02                	mov    %eax,(%rdx)
    8bda:	48 8b 05 a7 67 60 00 	mov    0x6067a7(%rip),%rax        # 60f388 <f_boot>
    8be1:	48 83 c0 04          	add    $0x4,%rax
    8be5:	89 c2                	mov    %eax,%edx
    8be7:	48 8b 05 9a 67 60 00 	mov    0x60679a(%rip),%rax        # 60f388 <f_boot>
    8bee:	29 c2                	sub    %eax,%edx
    8bf0:	89 d0                	mov    %edx,%eax
    8bf2:	48 63 d0             	movslq %eax,%rdx
    8bf5:	48 8d 05 e4 64 20 00 	lea    0x2064e4(%rip),%rax        # 20f0e0 <mem>
    8bfc:	48 01 d0             	add    %rdx,%rax
    8bff:	8b 00                	mov    (%rax),%eax
    8c01:	83 c0 04             	add    $0x4,%eax
    8c04:	89 c7                	mov    %eax,%edi
    8c06:	e8 62 82 ff ff       	callq  e6d <v2r>
    8c0b:	48 89 c2             	mov    %rax,%rdx
    8c0e:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8c14:	89 02                	mov    %eax,(%rdx)
			ip+=t; if(ip&1)ip++; break;
    8c16:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    8c1c:	01 85 60 fe ff ff    	add    %eax,-0x1a0(%rbp)
    8c22:	8b 85 60 fe ff ff    	mov    -0x1a0(%rbp),%eax
    8c28:	83 e0 01             	and    $0x1,%eax
    8c2b:	85 c0                	test   %eax,%eax
    8c2d:	0f 84 15 18 00 00    	je     a448 <virtual_machine+0x7070>
    8c33:	83 85 60 fe ff ff 01 	addl   $0x1,-0x1a0(%rbp)
    8c3a:	e9 09 18 00 00       	jmpq   a448 <virtual_machine+0x7070>

     case sw_slitComp: /* sliteral */
			COM(sw_str<<1|1);
    8c3f:	bf f7 00 00 00       	mov    $0xf7,%edi
    8c44:	e8 6e 84 ff ff       	callq  10b7 <COM>
     case sw_StrComp: /* S, */
			StrComp( v2r(CELL(sp+4)),CELL(sp));
    8c49:	48 8b 05 38 67 60 00 	mov    0x606738(%rip),%rax        # 60f388 <f_boot>
    8c50:	48 83 c0 04          	add    $0x4,%rax
    8c54:	89 c2                	mov    %eax,%edx
    8c56:	48 8b 05 2b 67 60 00 	mov    0x60672b(%rip),%rax        # 60f388 <f_boot>
    8c5d:	29 c2                	sub    %eax,%edx
    8c5f:	89 d0                	mov    %edx,%eax
    8c61:	48 63 d0             	movslq %eax,%rdx
    8c64:	48 8d 05 75 64 20 00 	lea    0x206475(%rip),%rax        # 20f0e0 <mem>
    8c6b:	48 01 d0             	add    %rdx,%rax
    8c6e:	8b 00                	mov    (%rax),%eax
    8c70:	89 c7                	mov    %eax,%edi
    8c72:	e8 f6 81 ff ff       	callq  e6d <v2r>
    8c77:	8b 18                	mov    (%rax),%ebx
    8c79:	48 8b 05 08 67 60 00 	mov    0x606708(%rip),%rax        # 60f388 <f_boot>
    8c80:	48 83 c0 04          	add    $0x4,%rax
    8c84:	89 c2                	mov    %eax,%edx
    8c86:	48 8b 05 fb 66 60 00 	mov    0x6066fb(%rip),%rax        # 60f388 <f_boot>
    8c8d:	29 c2                	sub    %eax,%edx
    8c8f:	89 d0                	mov    %edx,%eax
    8c91:	48 63 d0             	movslq %eax,%rdx
    8c94:	48 8d 05 45 64 20 00 	lea    0x206445(%rip),%rax        # 20f0e0 <mem>
    8c9b:	48 01 d0             	add    %rdx,%rax
    8c9e:	8b 00                	mov    (%rax),%eax
    8ca0:	83 c0 04             	add    $0x4,%eax
    8ca3:	89 c7                	mov    %eax,%edi
    8ca5:	e8 c3 81 ff ff       	callq  e6d <v2r>
    8caa:	8b 00                	mov    (%rax),%eax
    8cac:	89 c7                	mov    %eax,%edi
    8cae:	e8 ba 81 ff ff       	callq  e6d <v2r>
    8cb3:	89 de                	mov    %ebx,%esi
    8cb5:	48 89 c7             	mov    %rax,%rdi
    8cb8:	e8 3a 85 ff ff       	callq  11f7 <StrComp>
			sp+=8;break;
    8cbd:	48 8b 05 c4 66 60 00 	mov    0x6066c4(%rip),%rax        # 60f388 <f_boot>
    8cc4:	48 83 c0 04          	add    $0x4,%rax
    8cc8:	89 c2                	mov    %eax,%edx
    8cca:	48 8b 05 b7 66 60 00 	mov    0x6066b7(%rip),%rax        # 60f388 <f_boot>
    8cd1:	29 c2                	sub    %eax,%edx
    8cd3:	89 d0                	mov    %edx,%eax
    8cd5:	48 63 d0             	movslq %eax,%rdx
    8cd8:	48 8d 05 01 64 20 00 	lea    0x206401(%rip),%rax        # 20f0e0 <mem>
    8cdf:	48 01 d0             	add    %rdx,%rax
    8ce2:	8b 10                	mov    (%rax),%edx
    8ce4:	48 8b 05 9d 66 60 00 	mov    0x60669d(%rip),%rax        # 60f388 <f_boot>
    8ceb:	48 83 c0 04          	add    $0x4,%rax
    8cef:	89 c1                	mov    %eax,%ecx
    8cf1:	48 8b 05 90 66 60 00 	mov    0x606690(%rip),%rax        # 60f388 <f_boot>
    8cf8:	29 c1                	sub    %eax,%ecx
    8cfa:	89 c8                	mov    %ecx,%eax
    8cfc:	48 63 c8             	movslq %eax,%rcx
    8cff:	48 8d 05 da 63 20 00 	lea    0x2063da(%rip),%rax        # 20f0e0 <mem>
    8d06:	48 01 c8             	add    %rcx,%rax
    8d09:	83 c2 08             	add    $0x8,%edx
    8d0c:	89 10                	mov    %edx,(%rax)
    8d0e:	e9 36 17 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Compare: /* Compare */
     {
    	     int addr1,len1,addr2,len2;
    	     len1=CELL(sp);    addr1=CELL(sp+4);
    8d13:	48 8b 05 6e 66 60 00 	mov    0x60666e(%rip),%rax        # 60f388 <f_boot>
    8d1a:	48 83 c0 04          	add    $0x4,%rax
    8d1e:	89 c2                	mov    %eax,%edx
    8d20:	48 8b 05 61 66 60 00 	mov    0x606661(%rip),%rax        # 60f388 <f_boot>
    8d27:	29 c2                	sub    %eax,%edx
    8d29:	89 d0                	mov    %edx,%eax
    8d2b:	48 63 d0             	movslq %eax,%rdx
    8d2e:	48 8d 05 ab 63 20 00 	lea    0x2063ab(%rip),%rax        # 20f0e0 <mem>
    8d35:	48 01 d0             	add    %rdx,%rax
    8d38:	8b 00                	mov    (%rax),%eax
    8d3a:	89 c7                	mov    %eax,%edi
    8d3c:	e8 2c 81 ff ff       	callq  e6d <v2r>
    8d41:	8b 00                	mov    (%rax),%eax
    8d43:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
    8d49:	48 8b 05 38 66 60 00 	mov    0x606638(%rip),%rax        # 60f388 <f_boot>
    8d50:	48 83 c0 04          	add    $0x4,%rax
    8d54:	89 c2                	mov    %eax,%edx
    8d56:	48 8b 05 2b 66 60 00 	mov    0x60662b(%rip),%rax        # 60f388 <f_boot>
    8d5d:	29 c2                	sub    %eax,%edx
    8d5f:	89 d0                	mov    %edx,%eax
    8d61:	48 63 d0             	movslq %eax,%rdx
    8d64:	48 8d 05 75 63 20 00 	lea    0x206375(%rip),%rax        # 20f0e0 <mem>
    8d6b:	48 01 d0             	add    %rdx,%rax
    8d6e:	8b 00                	mov    (%rax),%eax
    8d70:	83 c0 04             	add    $0x4,%eax
    8d73:	89 c7                	mov    %eax,%edi
    8d75:	e8 f3 80 ff ff       	callq  e6d <v2r>
    8d7a:	8b 00                	mov    (%rax),%eax
    8d7c:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%rbp)
    	     len2=CELL(sp+8);  addr2=CELL(sp+12); sp+=12;
    8d82:	48 8b 05 ff 65 60 00 	mov    0x6065ff(%rip),%rax        # 60f388 <f_boot>
    8d89:	48 83 c0 04          	add    $0x4,%rax
    8d8d:	89 c2                	mov    %eax,%edx
    8d8f:	48 8b 05 f2 65 60 00 	mov    0x6065f2(%rip),%rax        # 60f388 <f_boot>
    8d96:	29 c2                	sub    %eax,%edx
    8d98:	89 d0                	mov    %edx,%eax
    8d9a:	48 63 d0             	movslq %eax,%rdx
    8d9d:	48 8d 05 3c 63 20 00 	lea    0x20633c(%rip),%rax        # 20f0e0 <mem>
    8da4:	48 01 d0             	add    %rdx,%rax
    8da7:	8b 00                	mov    (%rax),%eax
    8da9:	83 c0 08             	add    $0x8,%eax
    8dac:	89 c7                	mov    %eax,%edi
    8dae:	e8 ba 80 ff ff       	callq  e6d <v2r>
    8db3:	8b 00                	mov    (%rax),%eax
    8db5:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
    8dbb:	48 8b 05 c6 65 60 00 	mov    0x6065c6(%rip),%rax        # 60f388 <f_boot>
    8dc2:	48 83 c0 04          	add    $0x4,%rax
    8dc6:	89 c2                	mov    %eax,%edx
    8dc8:	48 8b 05 b9 65 60 00 	mov    0x6065b9(%rip),%rax        # 60f388 <f_boot>
    8dcf:	29 c2                	sub    %eax,%edx
    8dd1:	89 d0                	mov    %edx,%eax
    8dd3:	48 63 d0             	movslq %eax,%rdx
    8dd6:	48 8d 05 03 63 20 00 	lea    0x206303(%rip),%rax        # 20f0e0 <mem>
    8ddd:	48 01 d0             	add    %rdx,%rax
    8de0:	8b 00                	mov    (%rax),%eax
    8de2:	83 c0 0c             	add    $0xc,%eax
    8de5:	89 c7                	mov    %eax,%edi
    8de7:	e8 81 80 ff ff       	callq  e6d <v2r>
    8dec:	8b 00                	mov    (%rax),%eax
    8dee:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
    8df4:	48 8b 05 8d 65 60 00 	mov    0x60658d(%rip),%rax        # 60f388 <f_boot>
    8dfb:	48 83 c0 04          	add    $0x4,%rax
    8dff:	89 c2                	mov    %eax,%edx
    8e01:	48 8b 05 80 65 60 00 	mov    0x606580(%rip),%rax        # 60f388 <f_boot>
    8e08:	29 c2                	sub    %eax,%edx
    8e0a:	89 d0                	mov    %edx,%eax
    8e0c:	48 63 d0             	movslq %eax,%rdx
    8e0f:	48 8d 05 ca 62 20 00 	lea    0x2062ca(%rip),%rax        # 20f0e0 <mem>
    8e16:	48 01 d0             	add    %rdx,%rax
    8e19:	8b 10                	mov    (%rax),%edx
    8e1b:	48 8b 05 66 65 60 00 	mov    0x606566(%rip),%rax        # 60f388 <f_boot>
    8e22:	48 83 c0 04          	add    $0x4,%rax
    8e26:	89 c1                	mov    %eax,%ecx
    8e28:	48 8b 05 59 65 60 00 	mov    0x606559(%rip),%rax        # 60f388 <f_boot>
    8e2f:	29 c1                	sub    %eax,%ecx
    8e31:	89 c8                	mov    %ecx,%eax
    8e33:	48 63 c8             	movslq %eax,%rcx
    8e36:	48 8d 05 a3 62 20 00 	lea    0x2062a3(%rip),%rax        # 20f0e0 <mem>
    8e3d:	48 01 c8             	add    %rcx,%rax
    8e40:	83 c2 0c             	add    $0xc,%edx
    8e43:	89 10                	mov    %edx,(%rax)
    	          if(len1!=len2) { CELL(sp)=len1-len2; break; }
    8e45:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
    8e4b:	3b 85 a4 fe ff ff    	cmp    -0x15c(%rbp),%eax
    8e51:	74 45                	je     8e98 <virtual_machine+0x5ac0>
    8e53:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
    8e59:	2b 85 a4 fe ff ff    	sub    -0x15c(%rbp),%eax
    8e5f:	89 c3                	mov    %eax,%ebx
    8e61:	48 8b 05 20 65 60 00 	mov    0x606520(%rip),%rax        # 60f388 <f_boot>
    8e68:	48 83 c0 04          	add    $0x4,%rax
    8e6c:	89 c2                	mov    %eax,%edx
    8e6e:	48 8b 05 13 65 60 00 	mov    0x606513(%rip),%rax        # 60f388 <f_boot>
    8e75:	29 c2                	sub    %eax,%edx
    8e77:	89 d0                	mov    %edx,%eax
    8e79:	48 63 d0             	movslq %eax,%rdx
    8e7c:	48 8d 05 5d 62 20 00 	lea    0x20625d(%rip),%rax        # 20f0e0 <mem>
    8e83:	48 01 d0             	add    %rdx,%rax
    8e86:	8b 00                	mov    (%rax),%eax
    8e88:	89 c7                	mov    %eax,%edi
    8e8a:	e8 de 7f ff ff       	callq  e6d <v2r>
    8e8f:	89 da                	mov    %ebx,%edx
    8e91:	89 10                	mov    %edx,(%rax)
    8e93:	e9 b1 15 00 00       	jmpq   a449 <virtual_machine+0x7071>
//    	          if( addr1+len1 < MEMSIZE )
//        	      if( addr2+len2 < MEMSIZE )
    	          CELL(sp)=memcmp(&BYTE(addr1),&BYTE(addr2),len1);
    8e98:	8b 85 9c fe ff ff    	mov    -0x164(%rbp),%eax
    8e9e:	48 63 d8             	movslq %eax,%rbx
    8ea1:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
    8ea7:	89 c7                	mov    %eax,%edi
    8ea9:	e8 bf 7f ff ff       	callq  e6d <v2r>
    8eae:	49 89 c4             	mov    %rax,%r12
    8eb1:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
    8eb7:	89 c7                	mov    %eax,%edi
    8eb9:	e8 af 7f ff ff       	callq  e6d <v2r>
    8ebe:	48 89 da             	mov    %rbx,%rdx
    8ec1:	4c 89 e6             	mov    %r12,%rsi
    8ec4:	48 89 c7             	mov    %rax,%rdi
    8ec7:	e8 b4 7d ff ff       	callq  c80 <memcmp@plt>
    8ecc:	89 c3                	mov    %eax,%ebx
    8ece:	48 8b 05 b3 64 60 00 	mov    0x6064b3(%rip),%rax        # 60f388 <f_boot>
    8ed5:	48 83 c0 04          	add    $0x4,%rax
    8ed9:	89 c2                	mov    %eax,%edx
    8edb:	48 8b 05 a6 64 60 00 	mov    0x6064a6(%rip),%rax        # 60f388 <f_boot>
    8ee2:	29 c2                	sub    %eax,%edx
    8ee4:	89 d0                	mov    %edx,%eax
    8ee6:	48 63 d0             	movslq %eax,%rdx
    8ee9:	48 8d 05 f0 61 20 00 	lea    0x2061f0(%rip),%rax        # 20f0e0 <mem>
    8ef0:	48 01 d0             	add    %rdx,%rax
    8ef3:	8b 00                	mov    (%rax),%eax
    8ef5:	89 c7                	mov    %eax,%edi
    8ef7:	e8 71 7f ff ff       	callq  e6d <v2r>
    8efc:	89 da                	mov    %ebx,%edx
    8efe:	89 10                	mov    %edx,(%rax)
    	 break;
    8f00:	e9 44 15 00 00       	jmpq   a449 <virtual_machine+0x7071>
     }

     case sw_NextWord:
    	 NextWord(); break;
    8f05:	b8 00 00 00 00       	mov    $0x0,%eax
    8f0a:	e8 eb 91 ff ff       	callq  20fa <NextWord>
    8f0f:	e9 35 15 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_openfile: /*open-file*/
    	 sp+=4;len=CELL(sp);addr=CELL(sp+4); // ior=0;
    8f14:	48 8b 05 6d 64 60 00 	mov    0x60646d(%rip),%rax        # 60f388 <f_boot>
    8f1b:	48 83 c0 04          	add    $0x4,%rax
    8f1f:	89 c2                	mov    %eax,%edx
    8f21:	48 8b 05 60 64 60 00 	mov    0x606460(%rip),%rax        # 60f388 <f_boot>
    8f28:	29 c2                	sub    %eax,%edx
    8f2a:	89 d0                	mov    %edx,%eax
    8f2c:	48 63 d0             	movslq %eax,%rdx
    8f2f:	48 8d 05 aa 61 20 00 	lea    0x2061aa(%rip),%rax        # 20f0e0 <mem>
    8f36:	48 01 d0             	add    %rdx,%rax
    8f39:	8b 10                	mov    (%rax),%edx
    8f3b:	48 8b 05 46 64 60 00 	mov    0x606446(%rip),%rax        # 60f388 <f_boot>
    8f42:	48 83 c0 04          	add    $0x4,%rax
    8f46:	89 c1                	mov    %eax,%ecx
    8f48:	48 8b 05 39 64 60 00 	mov    0x606439(%rip),%rax        # 60f388 <f_boot>
    8f4f:	29 c1                	sub    %eax,%ecx
    8f51:	89 c8                	mov    %ecx,%eax
    8f53:	48 63 c8             	movslq %eax,%rcx
    8f56:	48 8d 05 83 61 20 00 	lea    0x206183(%rip),%rax        # 20f0e0 <mem>
    8f5d:	48 01 c8             	add    %rcx,%rax
    8f60:	83 c2 04             	add    $0x4,%edx
    8f63:	89 10                	mov    %edx,(%rax)
    8f65:	48 8b 05 1c 64 60 00 	mov    0x60641c(%rip),%rax        # 60f388 <f_boot>
    8f6c:	48 83 c0 04          	add    $0x4,%rax
    8f70:	89 c2                	mov    %eax,%edx
    8f72:	48 8b 05 0f 64 60 00 	mov    0x60640f(%rip),%rax        # 60f388 <f_boot>
    8f79:	29 c2                	sub    %eax,%edx
    8f7b:	89 d0                	mov    %edx,%eax
    8f7d:	48 63 d0             	movslq %eax,%rdx
    8f80:	48 8d 05 59 61 20 00 	lea    0x206159(%rip),%rax        # 20f0e0 <mem>
    8f87:	48 01 d0             	add    %rdx,%rax
    8f8a:	8b 00                	mov    (%rax),%eax
    8f8c:	89 c7                	mov    %eax,%edi
    8f8e:	e8 da 7e ff ff       	callq  e6d <v2r>
    8f93:	8b 00                	mov    (%rax),%eax
    8f95:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
    8f9b:	48 8b 05 e6 63 60 00 	mov    0x6063e6(%rip),%rax        # 60f388 <f_boot>
    8fa2:	48 83 c0 04          	add    $0x4,%rax
    8fa6:	89 c2                	mov    %eax,%edx
    8fa8:	48 8b 05 d9 63 60 00 	mov    0x6063d9(%rip),%rax        # 60f388 <f_boot>
    8faf:	29 c2                	sub    %eax,%edx
    8fb1:	89 d0                	mov    %edx,%eax
    8fb3:	48 63 d0             	movslq %eax,%rdx
    8fb6:	48 8d 05 23 61 20 00 	lea    0x206123(%rip),%rax        # 20f0e0 <mem>
    8fbd:	48 01 d0             	add    %rdx,%rax
    8fc0:	8b 00                	mov    (%rax),%eax
    8fc2:	83 c0 04             	add    $0x4,%eax
    8fc5:	89 c7                	mov    %eax,%edi
    8fc7:	e8 a1 7e ff ff       	callq  e6d <v2r>
    8fcc:	8b 00                	mov    (%rax),%eax
    8fce:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
     	 if(!make_name(v2r(addr),len)) {ior=-202; CELL(sp)=ior;break;}
    8fd4:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
    8fda:	89 c7                	mov    %eax,%edi
    8fdc:	e8 8c 7e ff ff       	callq  e6d <v2r>
    8fe1:	48 89 c2             	mov    %rax,%rdx
    8fe4:	8b 85 68 fe ff ff    	mov    -0x198(%rbp),%eax
    8fea:	89 c6                	mov    %eax,%esi
    8fec:	48 89 d7             	mov    %rdx,%rdi
    8fef:	e8 a3 7e ff ff       	callq  e97 <make_name>
    8ff4:	85 c0                	test   %eax,%eax
    8ff6:	75 48                	jne    9040 <virtual_machine+0x5c68>
    8ff8:	c7 85 8c fe ff ff 36 	movl   $0xffffff36,-0x174(%rbp)
    8fff:	ff ff ff 
    9002:	48 8b 05 7f 63 60 00 	mov    0x60637f(%rip),%rax        # 60f388 <f_boot>
    9009:	48 83 c0 04          	add    $0x4,%rax
    900d:	89 c2                	mov    %eax,%edx
    900f:	48 8b 05 72 63 60 00 	mov    0x606372(%rip),%rax        # 60f388 <f_boot>
    9016:	29 c2                	sub    %eax,%edx
    9018:	89 d0                	mov    %edx,%eax
    901a:	48 63 d0             	movslq %eax,%rdx
    901d:	48 8d 05 bc 60 20 00 	lea    0x2060bc(%rip),%rax        # 20f0e0 <mem>
    9024:	48 01 d0             	add    %rdx,%rax
    9027:	8b 00                	mov    (%rax),%eax
    9029:	89 c7                	mov    %eax,%edi
    902b:	e8 3d 7e ff ff       	callq  e6d <v2r>
    9030:	48 89 c2             	mov    %rax,%rdx
    9033:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9039:	89 02                	mov    %eax,(%rdx)
    903b:	e9 09 14 00 00       	jmpq   a449 <virtual_machine+0x7071>
		ior=open(filename,CELL(sp-4),S_IRUSR | S_IWUSR );
    9040:	48 8b 05 41 63 60 00 	mov    0x606341(%rip),%rax        # 60f388 <f_boot>
    9047:	48 83 c0 04          	add    $0x4,%rax
    904b:	89 c2                	mov    %eax,%edx
    904d:	48 8b 05 34 63 60 00 	mov    0x606334(%rip),%rax        # 60f388 <f_boot>
    9054:	29 c2                	sub    %eax,%edx
    9056:	89 d0                	mov    %edx,%eax
    9058:	48 63 d0             	movslq %eax,%rdx
    905b:	48 8d 05 7e 60 20 00 	lea    0x20607e(%rip),%rax        # 20f0e0 <mem>
    9062:	48 01 d0             	add    %rdx,%rax
    9065:	8b 00                	mov    (%rax),%eax
    9067:	83 e8 04             	sub    $0x4,%eax
    906a:	89 c7                	mov    %eax,%edi
    906c:	e8 fc 7d ff ff       	callq  e6d <v2r>
    9071:	8b 00                	mov    (%rax),%eax
    9073:	ba 80 01 00 00       	mov    $0x180,%edx
    9078:	89 c6                	mov    %eax,%esi
    907a:	48 8d 3d ff 61 60 00 	lea    0x6061ff(%rip),%rdi        # 60f280 <filename>
    9081:	b8 00 00 00 00       	mov    $0x0,%eax
    9086:	e8 45 7c ff ff       	callq  cd0 <open@plt>
    908b:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
		strcpy( &FNB[ior&(FNBSize-1)], filename );
    9091:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9097:	83 e0 1f             	and    $0x1f,%eax
    909a:	89 c0                	mov    %eax,%eax
    909c:	48 c1 e0 08          	shl    $0x8,%rax
    90a0:	48 89 c2             	mov    %rax,%rdx
    90a3:	48 8d 05 f6 62 60 00 	lea    0x6062f6(%rip),%rax        # 60f3a0 <FNB>
    90aa:	48 01 d0             	add    %rdx,%rax
    90ad:	48 8d 35 cc 61 60 00 	lea    0x6061cc(%rip),%rsi        # 60f280 <filename>
    90b4:	48 89 c7             	mov    %rax,%rdi
    90b7:	e8 d4 7a ff ff       	callq  b90 <strcpy@plt>
		CELL(sp+4)=ior;
    90bc:	48 8b 05 c5 62 60 00 	mov    0x6062c5(%rip),%rax        # 60f388 <f_boot>
    90c3:	48 83 c0 04          	add    $0x4,%rax
    90c7:	89 c2                	mov    %eax,%edx
    90c9:	48 8b 05 b8 62 60 00 	mov    0x6062b8(%rip),%rax        # 60f388 <f_boot>
    90d0:	29 c2                	sub    %eax,%edx
    90d2:	89 d0                	mov    %edx,%eax
    90d4:	48 63 d0             	movslq %eax,%rdx
    90d7:	48 8d 05 02 60 20 00 	lea    0x206002(%rip),%rax        # 20f0e0 <mem>
    90de:	48 01 d0             	add    %rdx,%rax
    90e1:	8b 00                	mov    (%rax),%eax
    90e3:	83 c0 04             	add    $0x4,%eax
    90e6:	89 c7                	mov    %eax,%edi
    90e8:	e8 80 7d ff ff       	callq  e6d <v2r>
    90ed:	48 89 c2             	mov    %rax,%rdx
    90f0:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    90f6:	89 02                	mov    %eax,(%rdx)
		 CELL(sp)=-((ior+1)==0);break;
    90f8:	83 bd 8c fe ff ff ff 	cmpl   $0xffffffff,-0x174(%rbp)
    90ff:	0f 94 c0             	sete   %al
    9102:	0f b6 c0             	movzbl %al,%eax
    9105:	f7 d8                	neg    %eax
    9107:	89 c3                	mov    %eax,%ebx
    9109:	48 8b 05 78 62 60 00 	mov    0x606278(%rip),%rax        # 60f388 <f_boot>
    9110:	48 83 c0 04          	add    $0x4,%rax
    9114:	89 c2                	mov    %eax,%edx
    9116:	48 8b 05 6b 62 60 00 	mov    0x60626b(%rip),%rax        # 60f388 <f_boot>
    911d:	29 c2                	sub    %eax,%edx
    911f:	89 d0                	mov    %edx,%eax
    9121:	48 63 d0             	movslq %eax,%rdx
    9124:	48 8d 05 b5 5f 20 00 	lea    0x205fb5(%rip),%rax        # 20f0e0 <mem>
    912b:	48 01 d0             	add    %rdx,%rax
    912e:	8b 00                	mov    (%rax),%eax
    9130:	89 c7                	mov    %eax,%edi
    9132:	e8 36 7d ff ff       	callq  e6d <v2r>
    9137:	89 da                	mov    %ebx,%edx
    9139:	89 10                	mov    %edx,(%rax)
    913b:	e9 09 13 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_closefile: /*close-file*/ 	 CELL(sp)=close(CELL(sp));break;;
    9140:	48 8b 05 41 62 60 00 	mov    0x606241(%rip),%rax        # 60f388 <f_boot>
    9147:	48 83 c0 04          	add    $0x4,%rax
    914b:	89 c2                	mov    %eax,%edx
    914d:	48 8b 05 34 62 60 00 	mov    0x606234(%rip),%rax        # 60f388 <f_boot>
    9154:	29 c2                	sub    %eax,%edx
    9156:	89 d0                	mov    %edx,%eax
    9158:	48 63 d0             	movslq %eax,%rdx
    915b:	48 8d 05 7e 5f 20 00 	lea    0x205f7e(%rip),%rax        # 20f0e0 <mem>
    9162:	48 01 d0             	add    %rdx,%rax
    9165:	8b 00                	mov    (%rax),%eax
    9167:	89 c7                	mov    %eax,%edi
    9169:	e8 ff 7c ff ff       	callq  e6d <v2r>
    916e:	8b 00                	mov    (%rax),%eax
    9170:	89 c7                	mov    %eax,%edi
    9172:	b8 00 00 00 00       	mov    $0x0,%eax
    9177:	e8 e4 7a ff ff       	callq  c60 <close@plt>
    917c:	89 c3                	mov    %eax,%ebx
    917e:	48 8b 05 03 62 60 00 	mov    0x606203(%rip),%rax        # 60f388 <f_boot>
    9185:	48 83 c0 04          	add    $0x4,%rax
    9189:	89 c2                	mov    %eax,%edx
    918b:	48 8b 05 f6 61 60 00 	mov    0x6061f6(%rip),%rax        # 60f388 <f_boot>
    9192:	29 c2                	sub    %eax,%edx
    9194:	89 d0                	mov    %edx,%eax
    9196:	48 63 d0             	movslq %eax,%rdx
    9199:	48 8d 05 40 5f 20 00 	lea    0x205f40(%rip),%rax        # 20f0e0 <mem>
    91a0:	48 01 d0             	add    %rdx,%rax
    91a3:	8b 00                	mov    (%rax),%eax
    91a5:	89 c7                	mov    %eax,%edi
    91a7:	e8 c1 7c ff ff       	callq  e6d <v2r>
    91ac:	89 da                	mov    %ebx,%edx
    91ae:	89 10                	mov    %edx,(%rax)
    91b0:	e9 94 12 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_File2err:
     			strcpy( FileErrName, &FNB[CELL(sp)&(FNBSize-1)] );
    91b5:	48 8b 05 cc 61 60 00 	mov    0x6061cc(%rip),%rax        # 60f388 <f_boot>
    91bc:	48 83 c0 04          	add    $0x4,%rax
    91c0:	89 c2                	mov    %eax,%edx
    91c2:	48 8b 05 bf 61 60 00 	mov    0x6061bf(%rip),%rax        # 60f388 <f_boot>
    91c9:	29 c2                	sub    %eax,%edx
    91cb:	89 d0                	mov    %edx,%eax
    91cd:	48 63 d0             	movslq %eax,%rdx
    91d0:	48 8d 05 09 5f 20 00 	lea    0x205f09(%rip),%rax        # 20f0e0 <mem>
    91d7:	48 01 d0             	add    %rdx,%rax
    91da:	8b 00                	mov    (%rax),%eax
    91dc:	89 c7                	mov    %eax,%edi
    91de:	e8 8a 7c ff ff       	callq  e6d <v2r>
    91e3:	8b 00                	mov    (%rax),%eax
    91e5:	83 e0 1f             	and    $0x1f,%eax
    91e8:	89 c0                	mov    %eax,%eax
    91ea:	48 c1 e0 08          	shl    $0x8,%rax
    91ee:	48 89 c2             	mov    %rax,%rdx
    91f1:	48 8d 05 a8 61 60 00 	lea    0x6061a8(%rip),%rax        # 60f3a0 <FNB>
    91f8:	48 01 d0             	add    %rdx,%rax
    91fb:	48 89 c6             	mov    %rax,%rsi
    91fe:	48 8d 3d 7b 5f 60 00 	lea    0x605f7b(%rip),%rdi        # 60f180 <FileErrName>
    9205:	e8 86 79 ff ff       	callq  b90 <strcpy@plt>
     	   sp+=4;
    920a:	48 8b 05 77 61 60 00 	mov    0x606177(%rip),%rax        # 60f388 <f_boot>
    9211:	48 83 c0 04          	add    $0x4,%rax
    9215:	89 c2                	mov    %eax,%edx
    9217:	48 8b 05 6a 61 60 00 	mov    0x60616a(%rip),%rax        # 60f388 <f_boot>
    921e:	29 c2                	sub    %eax,%edx
    9220:	89 d0                	mov    %edx,%eax
    9222:	48 63 d0             	movslq %eax,%rdx
    9225:	48 8d 05 b4 5e 20 00 	lea    0x205eb4(%rip),%rax        # 20f0e0 <mem>
    922c:	48 01 d0             	add    %rdx,%rax
    922f:	8b 10                	mov    (%rax),%edx
    9231:	48 8b 05 50 61 60 00 	mov    0x606150(%rip),%rax        # 60f388 <f_boot>
    9238:	48 83 c0 04          	add    $0x4,%rax
    923c:	89 c1                	mov    %eax,%ecx
    923e:	48 8b 05 43 61 60 00 	mov    0x606143(%rip),%rax        # 60f388 <f_boot>
    9245:	29 c1                	sub    %eax,%ecx
    9247:	89 c8                	mov    %ecx,%eax
    9249:	48 63 c8             	movslq %eax,%rcx
    924c:	48 8d 05 8d 5e 20 00 	lea    0x205e8d(%rip),%rax        # 20f0e0 <mem>
    9253:	48 01 c8             	add    %rcx,%rax
    9256:	83 c2 04             	add    $0x4,%edx
    9259:	89 10                	mov    %edx,(%rax)

    	 break;
    925b:	e9 e9 11 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_FileErrType:
    	 ttwrite(2,FileErrName,strlen(FileErrName));
    9260:	48 8d 3d 19 5f 60 00 	lea    0x605f19(%rip),%rdi        # 60f180 <FileErrName>
    9267:	e8 84 79 ff ff       	callq  bf0 <strlen@plt>
    926c:	48 89 c2             	mov    %rax,%rdx
    926f:	48 8d 35 0a 5f 60 00 	lea    0x605f0a(%rip),%rsi        # 60f180 <FileErrName>
    9276:	bf 02 00 00 00       	mov    $0x2,%edi
    927b:	e8 35 3f 00 00       	callq  d1b5 <ttwrite>


     	 break;
    9280:	e9 c4 11 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_writeline: /*write-line*/ sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
    9285:	48 8b 05 fc 60 60 00 	mov    0x6060fc(%rip),%rax        # 60f388 <f_boot>
    928c:	48 83 c0 04          	add    $0x4,%rax
    9290:	89 c2                	mov    %eax,%edx
    9292:	48 8b 05 ef 60 60 00 	mov    0x6060ef(%rip),%rax        # 60f388 <f_boot>
    9299:	29 c2                	sub    %eax,%edx
    929b:	89 d0                	mov    %edx,%eax
    929d:	48 63 d0             	movslq %eax,%rdx
    92a0:	48 8d 05 39 5e 20 00 	lea    0x205e39(%rip),%rax        # 20f0e0 <mem>
    92a7:	48 01 d0             	add    %rdx,%rax
    92aa:	8b 10                	mov    (%rax),%edx
    92ac:	48 8b 05 d5 60 60 00 	mov    0x6060d5(%rip),%rax        # 60f388 <f_boot>
    92b3:	48 83 c0 04          	add    $0x4,%rax
    92b7:	89 c1                	mov    %eax,%ecx
    92b9:	48 8b 05 c8 60 60 00 	mov    0x6060c8(%rip),%rax        # 60f388 <f_boot>
    92c0:	29 c1                	sub    %eax,%ecx
    92c2:	89 c8                	mov    %ecx,%eax
    92c4:	48 63 c8             	movslq %eax,%rcx
    92c7:	48 8d 05 12 5e 20 00 	lea    0x205e12(%rip),%rax        # 20f0e0 <mem>
    92ce:	48 01 c8             	add    %rcx,%rax
    92d1:	83 c2 08             	add    $0x8,%edx
    92d4:	89 10                	mov    %edx,(%rax)
    92d6:	48 8b 05 ab 60 60 00 	mov    0x6060ab(%rip),%rax        # 60f388 <f_boot>
    92dd:	48 83 c0 04          	add    $0x4,%rax
    92e1:	89 c2                	mov    %eax,%edx
    92e3:	48 8b 05 9e 60 60 00 	mov    0x60609e(%rip),%rax        # 60f388 <f_boot>
    92ea:	29 c2                	sub    %eax,%edx
    92ec:	89 d0                	mov    %edx,%eax
    92ee:	48 63 d0             	movslq %eax,%rdx
    92f1:	48 8d 05 e8 5d 20 00 	lea    0x205de8(%rip),%rax        # 20f0e0 <mem>
    92f8:	48 01 d0             	add    %rdx,%rax
    92fb:	8b 00                	mov    (%rax),%eax
    92fd:	83 e8 08             	sub    $0x8,%eax
    9300:	89 c7                	mov    %eax,%edi
    9302:	e8 66 7b ff ff       	callq  e6d <v2r>
    9307:	8b 00                	mov    (%rax),%eax
    9309:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
    930f:	48 8b 05 72 60 60 00 	mov    0x606072(%rip),%rax        # 60f388 <f_boot>
    9316:	48 83 c0 04          	add    $0x4,%rax
    931a:	89 c2                	mov    %eax,%edx
    931c:	48 8b 05 65 60 60 00 	mov    0x606065(%rip),%rax        # 60f388 <f_boot>
    9323:	29 c2                	sub    %eax,%edx
    9325:	89 d0                	mov    %edx,%eax
    9327:	48 63 d0             	movslq %eax,%rdx
    932a:	48 8d 05 af 5d 20 00 	lea    0x205daf(%rip),%rax        # 20f0e0 <mem>
    9331:	48 01 d0             	add    %rdx,%rax
    9334:	8b 00                	mov    (%rax),%eax
    9336:	83 e8 04             	sub    $0x4,%eax
    9339:	89 c7                	mov    %eax,%edi
    933b:	e8 2d 7b ff ff       	callq  e6d <v2r>
    9340:	8b 00                	mov    (%rax),%eax
    9342:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
     	 	 	 addr=CELL(sp);
    9348:	48 8b 05 39 60 60 00 	mov    0x606039(%rip),%rax        # 60f388 <f_boot>
    934f:	48 83 c0 04          	add    $0x4,%rax
    9353:	89 c2                	mov    %eax,%edx
    9355:	48 8b 05 2c 60 60 00 	mov    0x60602c(%rip),%rax        # 60f388 <f_boot>
    935c:	29 c2                	sub    %eax,%edx
    935e:	89 d0                	mov    %edx,%eax
    9360:	48 63 d0             	movslq %eax,%rdx
    9363:	48 8d 05 76 5d 20 00 	lea    0x205d76(%rip),%rax        # 20f0e0 <mem>
    936a:	48 01 d0             	add    %rdx,%rax
    936d:	8b 00                	mov    (%rax),%eax
    936f:	89 c7                	mov    %eax,%edi
    9371:	e8 f7 7a ff ff       	callq  e6d <v2r>
    9376:	8b 00                	mov    (%rax),%eax
    9378:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
				 write(fp,v2r(addr),len);
    937e:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
    9384:	89 c7                	mov    %eax,%edi
    9386:	e8 e2 7a ff ff       	callq  e6d <v2r>
    938b:	48 89 c1             	mov    %rax,%rcx
    938e:	8b 95 68 fe ff ff    	mov    -0x198(%rbp),%edx
    9394:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    939a:	48 89 ce             	mov    %rcx,%rsi
    939d:	89 c7                	mov    %eax,%edi
    939f:	b8 00 00 00 00       	mov    $0x0,%eax
    93a4:	e8 27 78 ff ff       	callq  bd0 <write@plt>
	    		 write(fp,"\n",1);    ior=0;
    93a9:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    93af:	ba 01 00 00 00       	mov    $0x1,%edx
    93b4:	48 8d 35 6e 41 00 00 	lea    0x416e(%rip),%rsi        # d529 <_IO_stdin_used+0x69>
    93bb:	89 c7                	mov    %eax,%edi
    93bd:	b8 00 00 00 00       	mov    $0x0,%eax
    93c2:	e8 09 78 ff ff       	callq  bd0 <write@plt>
    93c7:	c7 85 8c fe ff ff 00 	movl   $0x0,-0x174(%rbp)
    93ce:	00 00 00 
                 CELL(sp)=ior;break;
    93d1:	48 8b 05 b0 5f 60 00 	mov    0x605fb0(%rip),%rax        # 60f388 <f_boot>
    93d8:	48 83 c0 04          	add    $0x4,%rax
    93dc:	89 c2                	mov    %eax,%edx
    93de:	48 8b 05 a3 5f 60 00 	mov    0x605fa3(%rip),%rax        # 60f388 <f_boot>
    93e5:	29 c2                	sub    %eax,%edx
    93e7:	89 d0                	mov    %edx,%eax
    93e9:	48 63 d0             	movslq %eax,%rdx
    93ec:	48 8d 05 ed 5c 20 00 	lea    0x205ced(%rip),%rax        # 20f0e0 <mem>
    93f3:	48 01 d0             	add    %rdx,%rax
    93f6:	8b 00                	mov    (%rax),%eax
    93f8:	89 c7                	mov    %eax,%edi
    93fa:	e8 6e 7a ff ff       	callq  e6d <v2r>
    93ff:	48 89 c2             	mov    %rax,%rdx
    9402:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9408:	89 02                	mov    %eax,(%rdx)
    940a:	e9 3a 10 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_readline: /*read-line*/
     { __u32 ior; 
      //__u32 len; __u32 addr;
     __u32 rrr;
	 fp=CELL(sp);
    940f:	48 8b 05 72 5f 60 00 	mov    0x605f72(%rip),%rax        # 60f388 <f_boot>
    9416:	48 83 c0 04          	add    $0x4,%rax
    941a:	89 c2                	mov    %eax,%edx
    941c:	48 8b 05 65 5f 60 00 	mov    0x605f65(%rip),%rax        # 60f388 <f_boot>
    9423:	29 c2                	sub    %eax,%edx
    9425:	89 d0                	mov    %edx,%eax
    9427:	48 63 d0             	movslq %eax,%rdx
    942a:	48 8d 05 af 5c 20 00 	lea    0x205caf(%rip),%rax        # 20f0e0 <mem>
    9431:	48 01 d0             	add    %rdx,%rax
    9434:	8b 00                	mov    (%rax),%eax
    9436:	89 c7                	mov    %eax,%edi
    9438:	e8 30 7a ff ff       	callq  e6d <v2r>
    943d:	8b 00                	mov    (%rax),%eax
    943f:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
	 len=CELL(sp+4);
    9445:	48 8b 05 3c 5f 60 00 	mov    0x605f3c(%rip),%rax        # 60f388 <f_boot>
    944c:	48 83 c0 04          	add    $0x4,%rax
    9450:	89 c2                	mov    %eax,%edx
    9452:	48 8b 05 2f 5f 60 00 	mov    0x605f2f(%rip),%rax        # 60f388 <f_boot>
    9459:	29 c2                	sub    %eax,%edx
    945b:	89 d0                	mov    %edx,%eax
    945d:	48 63 d0             	movslq %eax,%rdx
    9460:	48 8d 05 79 5c 20 00 	lea    0x205c79(%rip),%rax        # 20f0e0 <mem>
    9467:	48 01 d0             	add    %rdx,%rax
    946a:	8b 00                	mov    (%rax),%eax
    946c:	83 c0 04             	add    $0x4,%eax
    946f:	89 c7                	mov    %eax,%edi
    9471:	e8 f7 79 ff ff       	callq  e6d <v2r>
    9476:	8b 00                	mov    (%rax),%eax
    9478:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
     addr=CELL(sp+8);
    947e:	48 8b 05 03 5f 60 00 	mov    0x605f03(%rip),%rax        # 60f388 <f_boot>
    9485:	48 83 c0 04          	add    $0x4,%rax
    9489:	89 c2                	mov    %eax,%edx
    948b:	48 8b 05 f6 5e 60 00 	mov    0x605ef6(%rip),%rax        # 60f388 <f_boot>
    9492:	29 c2                	sub    %eax,%edx
    9494:	89 d0                	mov    %edx,%eax
    9496:	48 63 d0             	movslq %eax,%rdx
    9499:	48 8d 05 40 5c 20 00 	lea    0x205c40(%rip),%rax        # 20f0e0 <mem>
    94a0:	48 01 d0             	add    %rdx,%rax
    94a3:	8b 00                	mov    (%rax),%eax
    94a5:	83 c0 08             	add    $0x8,%eax
    94a8:	89 c7                	mov    %eax,%edi
    94aa:	e8 be 79 ff ff       	callq  e6d <v2r>
    94af:	8b 00                	mov    (%rax),%eax
    94b1:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
     res=0;
    94b7:	c7 85 6c fe ff ff 00 	movl   $0x0,-0x194(%rbp)
    94be:	00 00 00 

     if(fp)
    94c1:	83 bd 84 fe ff ff 00 	cmpl   $0x0,-0x17c(%rbp)
    94c8:	0f 84 a8 00 00 00    	je     9576 <virtual_machine+0x619e>
		while(len--)
    94ce:	e9 87 00 00 00       	jmpq   955a <virtual_machine+0x6182>
		{  int rrr=0;
    94d3:	c7 85 94 fe ff ff 00 	movl   $0x0,-0x16c(%rbp)
    94da:	00 00 00 
			do{     rrr=read(fp,v2r(addr+res),1);
    94dd:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    94e3:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    94e9:	01 d0                	add    %edx,%eax
    94eb:	89 c7                	mov    %eax,%edi
    94ed:	e8 7b 79 ff ff       	callq  e6d <v2r>
    94f2:	48 89 c1             	mov    %rax,%rcx
    94f5:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    94fb:	ba 01 00 00 00       	mov    $0x1,%edx
    9500:	48 89 ce             	mov    %rcx,%rsi
    9503:	89 c7                	mov    %eax,%edi
    9505:	b8 00 00 00 00       	mov    $0x0,%eax
    950a:	e8 61 77 ff ff       	callq  c70 <read@plt>
    950f:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
				}while(rrr==-1);
    9515:	83 bd 94 fe ff ff ff 	cmpl   $0xffffffff,-0x16c(%rbp)
    951c:	74 bf                	je     94dd <virtual_machine+0x6105>
				  if(rrr!=1) break;
    951e:	83 bd 94 fe ff ff 01 	cmpl   $0x1,-0x16c(%rbp)
    9525:	0f 85 f0 00 00 00    	jne    961b <virtual_machine+0x6243>
				if(BYTE(addr+res)=='\n') { res++; break; }
    952b:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    9531:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    9537:	01 d0                	add    %edx,%eax
    9539:	89 c7                	mov    %eax,%edi
    953b:	e8 2d 79 ff ff       	callq  e6d <v2r>
    9540:	0f b6 00             	movzbl (%rax),%eax
    9543:	3c 0a                	cmp    $0xa,%al
    9545:	75 0c                	jne    9553 <virtual_machine+0x617b>
    9547:	83 85 6c fe ff ff 01 	addl   $0x1,-0x194(%rbp)
    954e:	e9 c9 00 00 00       	jmpq   961c <virtual_machine+0x6244>
                               	res++;
    9553:	83 85 6c fe ff ff 01 	addl   $0x1,-0x194(%rbp)
		while(len--)
    955a:	8b 85 68 fe ff ff    	mov    -0x198(%rbp),%eax
    9560:	8d 50 ff             	lea    -0x1(%rax),%edx
    9563:	89 95 68 fe ff ff    	mov    %edx,-0x198(%rbp)
    9569:	85 c0                	test   %eax,%eax
    956b:	0f 85 62 ff ff ff    	jne    94d3 <virtual_machine+0x60fb>
    9571:	e9 a6 00 00 00       	jmpq   961c <virtual_machine+0x6244>
		}
     else {
     		 char * zzz;
     		 zzz=rl_gets();
    9576:	b8 00 00 00 00       	mov    $0x0,%eax
    957b:	e8 e9 9d ff ff       	callq  3369 <rl_gets>
    9580:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
     		write_history("rlhistory.cfg");
    9587:	48 8d 3d a5 3f 00 00 	lea    0x3fa5(%rip),%rdi        # d533 <_IO_stdin_used+0x73>
    958e:	e8 4d 76 ff ff       	callq  be0 <write_history@plt>
     		 while( (*zzz!=0) & (len!=0) )
    9593:	eb 39                	jmp    95ce <virtual_machine+0x61f6>
     		 { BYTE(addr+res)=*zzz; res++; zzz++;len--; }
    9595:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    959c:	0f b6 18             	movzbl (%rax),%ebx
    959f:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    95a5:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    95ab:	01 d0                	add    %edx,%eax
    95ad:	89 c7                	mov    %eax,%edi
    95af:	e8 b9 78 ff ff       	callq  e6d <v2r>
    95b4:	89 da                	mov    %ebx,%edx
    95b6:	88 10                	mov    %dl,(%rax)
    95b8:	83 85 6c fe ff ff 01 	addl   $0x1,-0x194(%rbp)
    95bf:	48 83 85 c0 fe ff ff 	addq   $0x1,-0x140(%rbp)
    95c6:	01 
    95c7:	83 ad 68 fe ff ff 01 	subl   $0x1,-0x198(%rbp)
     		 while( (*zzz!=0) & (len!=0) )
    95ce:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    95d5:	0f b6 00             	movzbl (%rax),%eax
    95d8:	84 c0                	test   %al,%al
    95da:	0f 95 c2             	setne  %dl
    95dd:	83 bd 68 fe ff ff 00 	cmpl   $0x0,-0x198(%rbp)
    95e4:	0f 95 c0             	setne  %al
    95e7:	21 d0                	and    %edx,%eax
    95e9:	84 c0                	test   %al,%al
    95eb:	75 a8                	jne    9595 <virtual_machine+0x61bd>
     		 strlen(&BYTE(addr));
    95ed:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
    95f3:	89 c7                	mov    %eax,%edi
    95f5:	e8 73 78 ff ff       	callq  e6d <v2r>
     		 BYTE(addr+res)='\n';
    95fa:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    9600:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    9606:	01 d0                	add    %edx,%eax
    9608:	89 c7                	mov    %eax,%edi
    960a:	e8 5e 78 ff ff       	callq  e6d <v2r>
    960f:	c6 00 0a             	movb   $0xa,(%rax)
     		 res++;
    9612:	83 85 6c fe ff ff 01 	addl   $0x1,-0x194(%rbp)
    9619:	eb 01                	jmp    961c <virtual_machine+0x6244>
				  if(rrr!=1) break;
    961b:	90                   	nop
     }

     	ior=0;
    961c:	c7 85 98 fe ff ff 00 	movl   $0x0,-0x168(%rbp)
    9623:	00 00 00 
		 BYTE(addr+res)=0;
    9626:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    962c:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    9632:	01 d0                	add    %edx,%eax
    9634:	89 c7                	mov    %eax,%edi
    9636:	e8 32 78 ff ff       	callq  e6d <v2r>
    963b:	c6 00 00             	movb   $0x0,(%rax)
               if(res) { CELL(sp+4)=0xffffffff;
    963e:	83 bd 6c fe ff ff 00 	cmpl   $0x0,-0x194(%rbp)
    9645:	74 72                	je     96b9 <virtual_machine+0x62e1>
    9647:	48 8b 05 3a 5d 60 00 	mov    0x605d3a(%rip),%rax        # 60f388 <f_boot>
    964e:	48 83 c0 04          	add    $0x4,%rax
    9652:	89 c2                	mov    %eax,%edx
    9654:	48 8b 05 2d 5d 60 00 	mov    0x605d2d(%rip),%rax        # 60f388 <f_boot>
    965b:	29 c2                	sub    %eax,%edx
    965d:	89 d0                	mov    %edx,%eax
    965f:	48 63 d0             	movslq %eax,%rdx
    9662:	48 8d 05 77 5a 20 00 	lea    0x205a77(%rip),%rax        # 20f0e0 <mem>
    9669:	48 01 d0             	add    %rdx,%rax
    966c:	8b 00                	mov    (%rax),%eax
    966e:	83 c0 04             	add    $0x4,%eax
    9671:	89 c7                	mov    %eax,%edi
    9673:	e8 f5 77 ff ff       	callq  e6d <v2r>
    9678:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
         		while((BYTE(addr+res-1)<' ')&(res>1)) res--; }
    967e:	eb 07                	jmp    9687 <virtual_machine+0x62af>
    9680:	83 ad 6c fe ff ff 01 	subl   $0x1,-0x194(%rbp)
    9687:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    968d:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    9693:	01 d0                	add    %edx,%eax
    9695:	83 e8 01             	sub    $0x1,%eax
    9698:	89 c7                	mov    %eax,%edi
    969a:	e8 ce 77 ff ff       	callq  e6d <v2r>
    969f:	0f b6 00             	movzbl (%rax),%eax
    96a2:	3c 1f                	cmp    $0x1f,%al
    96a4:	0f 96 c2             	setbe  %dl
    96a7:	83 bd 6c fe ff ff 01 	cmpl   $0x1,-0x194(%rbp)
    96ae:	0f 97 c0             	seta   %al
    96b1:	21 d0                	and    %edx,%eax
    96b3:	84 c0                	test   %al,%al
    96b5:	75 c9                	jne    9680 <virtual_machine+0x62a8>
    96b7:	eb 37                	jmp    96f0 <virtual_machine+0x6318>
               else  CELL(sp+4)=0;
    96b9:	48 8b 05 c8 5c 60 00 	mov    0x605cc8(%rip),%rax        # 60f388 <f_boot>
    96c0:	48 83 c0 04          	add    $0x4,%rax
    96c4:	89 c2                	mov    %eax,%edx
    96c6:	48 8b 05 bb 5c 60 00 	mov    0x605cbb(%rip),%rax        # 60f388 <f_boot>
    96cd:	29 c2                	sub    %eax,%edx
    96cf:	89 d0                	mov    %edx,%eax
    96d1:	48 63 d0             	movslq %eax,%rdx
    96d4:	48 8d 05 05 5a 20 00 	lea    0x205a05(%rip),%rax        # 20f0e0 <mem>
    96db:	48 01 d0             	add    %rdx,%rax
    96de:	8b 00                	mov    (%rax),%eax
    96e0:	83 c0 04             	add    $0x4,%eax
    96e3:	89 c7                	mov    %eax,%edi
    96e5:	e8 83 77 ff ff       	callq  e6d <v2r>
    96ea:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
                         CELL(sp+8)=res;
    96f0:	48 8b 05 91 5c 60 00 	mov    0x605c91(%rip),%rax        # 60f388 <f_boot>
    96f7:	48 83 c0 04          	add    $0x4,%rax
    96fb:	89 c2                	mov    %eax,%edx
    96fd:	48 8b 05 84 5c 60 00 	mov    0x605c84(%rip),%rax        # 60f388 <f_boot>
    9704:	29 c2                	sub    %eax,%edx
    9706:	89 d0                	mov    %edx,%eax
    9708:	48 63 d0             	movslq %eax,%rdx
    970b:	48 8d 05 ce 59 20 00 	lea    0x2059ce(%rip),%rax        # 20f0e0 <mem>
    9712:	48 01 d0             	add    %rdx,%rax
    9715:	8b 00                	mov    (%rax),%eax
    9717:	83 c0 08             	add    $0x8,%eax
    971a:	89 c7                	mov    %eax,%edi
    971c:	e8 4c 77 ff ff       	callq  e6d <v2r>
    9721:	48 89 c2             	mov    %rax,%rdx
    9724:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    972a:	89 02                	mov    %eax,(%rdx)
                         CELL(sp)=ior;
    972c:	48 8b 05 55 5c 60 00 	mov    0x605c55(%rip),%rax        # 60f388 <f_boot>
    9733:	48 83 c0 04          	add    $0x4,%rax
    9737:	89 c2                	mov    %eax,%edx
    9739:	48 8b 05 48 5c 60 00 	mov    0x605c48(%rip),%rax        # 60f388 <f_boot>
    9740:	29 c2                	sub    %eax,%edx
    9742:	89 d0                	mov    %edx,%eax
    9744:	48 63 d0             	movslq %eax,%rdx
    9747:	48 8d 05 92 59 20 00 	lea    0x205992(%rip),%rax        # 20f0e0 <mem>
    974e:	48 01 d0             	add    %rdx,%rax
    9751:	8b 00                	mov    (%rax),%eax
    9753:	89 c7                	mov    %eax,%edi
    9755:	e8 13 77 ff ff       	callq  e6d <v2r>
    975a:	48 89 c2             	mov    %rax,%rdx
    975d:	8b 85 98 fe ff ff    	mov    -0x168(%rbp),%eax
    9763:	89 02                	mov    %eax,(%rdx)

    } break;
    9765:	e9 df 0c 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_writefile: /*write-file*/sp+=8;fp=CELL(sp-8); len=CELL(sp-4);
    976a:	48 8b 05 17 5c 60 00 	mov    0x605c17(%rip),%rax        # 60f388 <f_boot>
    9771:	48 83 c0 04          	add    $0x4,%rax
    9775:	89 c2                	mov    %eax,%edx
    9777:	48 8b 05 0a 5c 60 00 	mov    0x605c0a(%rip),%rax        # 60f388 <f_boot>
    977e:	29 c2                	sub    %eax,%edx
    9780:	89 d0                	mov    %edx,%eax
    9782:	48 63 d0             	movslq %eax,%rdx
    9785:	48 8d 05 54 59 20 00 	lea    0x205954(%rip),%rax        # 20f0e0 <mem>
    978c:	48 01 d0             	add    %rdx,%rax
    978f:	8b 10                	mov    (%rax),%edx
    9791:	48 8b 05 f0 5b 60 00 	mov    0x605bf0(%rip),%rax        # 60f388 <f_boot>
    9798:	48 83 c0 04          	add    $0x4,%rax
    979c:	89 c1                	mov    %eax,%ecx
    979e:	48 8b 05 e3 5b 60 00 	mov    0x605be3(%rip),%rax        # 60f388 <f_boot>
    97a5:	29 c1                	sub    %eax,%ecx
    97a7:	89 c8                	mov    %ecx,%eax
    97a9:	48 63 c8             	movslq %eax,%rcx
    97ac:	48 8d 05 2d 59 20 00 	lea    0x20592d(%rip),%rax        # 20f0e0 <mem>
    97b3:	48 01 c8             	add    %rcx,%rax
    97b6:	83 c2 08             	add    $0x8,%edx
    97b9:	89 10                	mov    %edx,(%rax)
    97bb:	48 8b 05 c6 5b 60 00 	mov    0x605bc6(%rip),%rax        # 60f388 <f_boot>
    97c2:	48 83 c0 04          	add    $0x4,%rax
    97c6:	89 c2                	mov    %eax,%edx
    97c8:	48 8b 05 b9 5b 60 00 	mov    0x605bb9(%rip),%rax        # 60f388 <f_boot>
    97cf:	29 c2                	sub    %eax,%edx
    97d1:	89 d0                	mov    %edx,%eax
    97d3:	48 63 d0             	movslq %eax,%rdx
    97d6:	48 8d 05 03 59 20 00 	lea    0x205903(%rip),%rax        # 20f0e0 <mem>
    97dd:	48 01 d0             	add    %rdx,%rax
    97e0:	8b 00                	mov    (%rax),%eax
    97e2:	83 e8 08             	sub    $0x8,%eax
    97e5:	89 c7                	mov    %eax,%edi
    97e7:	e8 81 76 ff ff       	callq  e6d <v2r>
    97ec:	8b 00                	mov    (%rax),%eax
    97ee:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
    97f4:	48 8b 05 8d 5b 60 00 	mov    0x605b8d(%rip),%rax        # 60f388 <f_boot>
    97fb:	48 83 c0 04          	add    $0x4,%rax
    97ff:	89 c2                	mov    %eax,%edx
    9801:	48 8b 05 80 5b 60 00 	mov    0x605b80(%rip),%rax        # 60f388 <f_boot>
    9808:	29 c2                	sub    %eax,%edx
    980a:	89 d0                	mov    %edx,%eax
    980c:	48 63 d0             	movslq %eax,%rdx
    980f:	48 8d 05 ca 58 20 00 	lea    0x2058ca(%rip),%rax        # 20f0e0 <mem>
    9816:	48 01 d0             	add    %rdx,%rax
    9819:	8b 00                	mov    (%rax),%eax
    981b:	83 e8 04             	sub    $0x4,%eax
    981e:	89 c7                	mov    %eax,%edi
    9820:	e8 48 76 ff ff       	callq  e6d <v2r>
    9825:	8b 00                	mov    (%rax),%eax
    9827:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
          addr=CELL(sp);
    982d:	48 8b 05 54 5b 60 00 	mov    0x605b54(%rip),%rax        # 60f388 <f_boot>
    9834:	48 83 c0 04          	add    $0x4,%rax
    9838:	89 c2                	mov    %eax,%edx
    983a:	48 8b 05 47 5b 60 00 	mov    0x605b47(%rip),%rax        # 60f388 <f_boot>
    9841:	29 c2                	sub    %eax,%edx
    9843:	89 d0                	mov    %edx,%eax
    9845:	48 63 d0             	movslq %eax,%rdx
    9848:	48 8d 05 91 58 20 00 	lea    0x205891(%rip),%rax        # 20f0e0 <mem>
    984f:	48 01 d0             	add    %rdx,%rax
    9852:	8b 00                	mov    (%rax),%eax
    9854:	89 c7                	mov    %eax,%edi
    9856:	e8 12 76 ff ff       	callq  e6d <v2r>
    985b:	8b 00                	mov    (%rax),%eax
    985d:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
          res=write(fp,v2r(addr),len);
    9863:	8b 85 90 fe ff ff    	mov    -0x170(%rbp),%eax
    9869:	89 c7                	mov    %eax,%edi
    986b:	e8 fd 75 ff ff       	callq  e6d <v2r>
    9870:	48 89 c1             	mov    %rax,%rcx
    9873:	8b 95 68 fe ff ff    	mov    -0x198(%rbp),%edx
    9879:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    987f:	48 89 ce             	mov    %rcx,%rsi
    9882:	89 c7                	mov    %eax,%edi
    9884:	b8 00 00 00 00       	mov    $0x0,%eax
    9889:	e8 42 73 ff ff       	callq  bd0 <write@plt>
    988e:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
          CELL(sp)=res;break;
    9894:	48 8b 05 ed 5a 60 00 	mov    0x605aed(%rip),%rax        # 60f388 <f_boot>
    989b:	48 83 c0 04          	add    $0x4,%rax
    989f:	89 c2                	mov    %eax,%edx
    98a1:	48 8b 05 e0 5a 60 00 	mov    0x605ae0(%rip),%rax        # 60f388 <f_boot>
    98a8:	29 c2                	sub    %eax,%edx
    98aa:	89 d0                	mov    %edx,%eax
    98ac:	48 63 d0             	movslq %eax,%rdx
    98af:	48 8d 05 2a 58 20 00 	lea    0x20582a(%rip),%rax        # 20f0e0 <mem>
    98b6:	48 01 d0             	add    %rdx,%rax
    98b9:	8b 00                	mov    (%rax),%eax
    98bb:	89 c7                	mov    %eax,%edi
    98bd:	e8 ab 75 ff ff       	callq  e6d <v2r>
    98c2:	48 89 c2             	mov    %rax,%rdx
    98c5:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    98cb:	89 02                	mov    %eax,(%rdx)
    98cd:	e9 77 0b 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_readfile: /*read-file*/ sp+=4;fp=CELL(sp-4); len=CELL(sp);
    98d2:	48 8b 05 af 5a 60 00 	mov    0x605aaf(%rip),%rax        # 60f388 <f_boot>
    98d9:	48 83 c0 04          	add    $0x4,%rax
    98dd:	89 c2                	mov    %eax,%edx
    98df:	48 8b 05 a2 5a 60 00 	mov    0x605aa2(%rip),%rax        # 60f388 <f_boot>
    98e6:	29 c2                	sub    %eax,%edx
    98e8:	89 d0                	mov    %edx,%eax
    98ea:	48 63 d0             	movslq %eax,%rdx
    98ed:	48 8d 05 ec 57 20 00 	lea    0x2057ec(%rip),%rax        # 20f0e0 <mem>
    98f4:	48 01 d0             	add    %rdx,%rax
    98f7:	8b 10                	mov    (%rax),%edx
    98f9:	48 8b 05 88 5a 60 00 	mov    0x605a88(%rip),%rax        # 60f388 <f_boot>
    9900:	48 83 c0 04          	add    $0x4,%rax
    9904:	89 c1                	mov    %eax,%ecx
    9906:	48 8b 05 7b 5a 60 00 	mov    0x605a7b(%rip),%rax        # 60f388 <f_boot>
    990d:	29 c1                	sub    %eax,%ecx
    990f:	89 c8                	mov    %ecx,%eax
    9911:	48 63 c8             	movslq %eax,%rcx
    9914:	48 8d 05 c5 57 20 00 	lea    0x2057c5(%rip),%rax        # 20f0e0 <mem>
    991b:	48 01 c8             	add    %rcx,%rax
    991e:	83 c2 04             	add    $0x4,%edx
    9921:	89 10                	mov    %edx,(%rax)
    9923:	48 8b 05 5e 5a 60 00 	mov    0x605a5e(%rip),%rax        # 60f388 <f_boot>
    992a:	48 83 c0 04          	add    $0x4,%rax
    992e:	89 c2                	mov    %eax,%edx
    9930:	48 8b 05 51 5a 60 00 	mov    0x605a51(%rip),%rax        # 60f388 <f_boot>
    9937:	29 c2                	sub    %eax,%edx
    9939:	89 d0                	mov    %edx,%eax
    993b:	48 63 d0             	movslq %eax,%rdx
    993e:	48 8d 05 9b 57 20 00 	lea    0x20579b(%rip),%rax        # 20f0e0 <mem>
    9945:	48 01 d0             	add    %rdx,%rax
    9948:	8b 00                	mov    (%rax),%eax
    994a:	83 e8 04             	sub    $0x4,%eax
    994d:	89 c7                	mov    %eax,%edi
    994f:	e8 19 75 ff ff       	callq  e6d <v2r>
    9954:	8b 00                	mov    (%rax),%eax
    9956:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
    995c:	48 8b 05 25 5a 60 00 	mov    0x605a25(%rip),%rax        # 60f388 <f_boot>
    9963:	48 83 c0 04          	add    $0x4,%rax
    9967:	89 c2                	mov    %eax,%edx
    9969:	48 8b 05 18 5a 60 00 	mov    0x605a18(%rip),%rax        # 60f388 <f_boot>
    9970:	29 c2                	sub    %eax,%edx
    9972:	89 d0                	mov    %edx,%eax
    9974:	48 63 d0             	movslq %eax,%rdx
    9977:	48 8d 05 62 57 20 00 	lea    0x205762(%rip),%rax        # 20f0e0 <mem>
    997e:	48 01 d0             	add    %rdx,%rax
    9981:	8b 00                	mov    (%rax),%eax
    9983:	89 c7                	mov    %eax,%edi
    9985:	e8 e3 74 ff ff       	callq  e6d <v2r>
    998a:	8b 00                	mov    (%rax),%eax
    998c:	89 85 68 fe ff ff    	mov    %eax,-0x198(%rbp)
     	  addr=CELL(sp+4);
    9992:	48 8b 05 ef 59 60 00 	mov    0x6059ef(%rip),%rax        # 60f388 <f_boot>
    9999:	48 83 c0 04          	add    $0x4,%rax
    999d:	89 c2                	mov    %eax,%edx
    999f:	48 8b 05 e2 59 60 00 	mov    0x6059e2(%rip),%rax        # 60f388 <f_boot>
    99a6:	29 c2                	sub    %eax,%edx
    99a8:	89 d0                	mov    %edx,%eax
    99aa:	48 63 d0             	movslq %eax,%rdx
    99ad:	48 8d 05 2c 57 20 00 	lea    0x20572c(%rip),%rax        # 20f0e0 <mem>
    99b4:	48 01 d0             	add    %rdx,%rax
    99b7:	8b 00                	mov    (%rax),%eax
    99b9:	83 c0 04             	add    $0x4,%eax
    99bc:	89 c7                	mov    %eax,%edi
    99be:	e8 aa 74 ff ff       	callq  e6d <v2r>
    99c3:	8b 00                	mov    (%rax),%eax
    99c5:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
     	  res=read(fp,mem+addr,len);ior=0;
    99cb:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
    99d1:	48 8d 05 08 57 20 00 	lea    0x205708(%rip),%rax        # 20f0e0 <mem>
    99d8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    99dc:	8b 95 68 fe ff ff    	mov    -0x198(%rbp),%edx
    99e2:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    99e8:	48 89 ce             	mov    %rcx,%rsi
    99eb:	89 c7                	mov    %eax,%edi
    99ed:	b8 00 00 00 00       	mov    $0x0,%eax
    99f2:	e8 79 72 ff ff       	callq  c70 <read@plt>
    99f7:	89 85 6c fe ff ff    	mov    %eax,-0x194(%rbp)
    99fd:	c7 85 8c fe ff ff 00 	movl   $0x0,-0x174(%rbp)
    9a04:	00 00 00 
     	  CELL(sp+4)=res;
    9a07:	48 8b 05 7a 59 60 00 	mov    0x60597a(%rip),%rax        # 60f388 <f_boot>
    9a0e:	48 83 c0 04          	add    $0x4,%rax
    9a12:	89 c2                	mov    %eax,%edx
    9a14:	48 8b 05 6d 59 60 00 	mov    0x60596d(%rip),%rax        # 60f388 <f_boot>
    9a1b:	29 c2                	sub    %eax,%edx
    9a1d:	89 d0                	mov    %edx,%eax
    9a1f:	48 63 d0             	movslq %eax,%rdx
    9a22:	48 8d 05 b7 56 20 00 	lea    0x2056b7(%rip),%rax        # 20f0e0 <mem>
    9a29:	48 01 d0             	add    %rdx,%rax
    9a2c:	8b 00                	mov    (%rax),%eax
    9a2e:	83 c0 04             	add    $0x4,%eax
    9a31:	89 c7                	mov    %eax,%edi
    9a33:	e8 35 74 ff ff       	callq  e6d <v2r>
    9a38:	48 89 c2             	mov    %rax,%rdx
    9a3b:	8b 85 6c fe ff ff    	mov    -0x194(%rbp),%eax
    9a41:	89 02                	mov    %eax,(%rdx)
		  CELL(sp)=ior;break;
    9a43:	48 8b 05 3e 59 60 00 	mov    0x60593e(%rip),%rax        # 60f388 <f_boot>
    9a4a:	48 83 c0 04          	add    $0x4,%rax
    9a4e:	89 c2                	mov    %eax,%edx
    9a50:	48 8b 05 31 59 60 00 	mov    0x605931(%rip),%rax        # 60f388 <f_boot>
    9a57:	29 c2                	sub    %eax,%edx
    9a59:	89 d0                	mov    %edx,%eax
    9a5b:	48 63 d0             	movslq %eax,%rdx
    9a5e:	48 8d 05 7b 56 20 00 	lea    0x20567b(%rip),%rax        # 20f0e0 <mem>
    9a65:	48 01 d0             	add    %rdx,%rax
    9a68:	8b 00                	mov    (%rax),%eax
    9a6a:	89 c7                	mov    %eax,%edi
    9a6c:	e8 fc 73 ff ff       	callq  e6d <v2r>
    9a71:	48 89 c2             	mov    %rax,%rdx
    9a74:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9a7a:	89 02                	mov    %eax,(%rdx)
    9a7c:	e9 c8 09 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_repositionfile: /*reposition-file*/ sp+=8;fp=CELL(sp-8);
    9a81:	48 8b 05 00 59 60 00 	mov    0x605900(%rip),%rax        # 60f388 <f_boot>
    9a88:	48 83 c0 04          	add    $0x4,%rax
    9a8c:	89 c2                	mov    %eax,%edx
    9a8e:	48 8b 05 f3 58 60 00 	mov    0x6058f3(%rip),%rax        # 60f388 <f_boot>
    9a95:	29 c2                	sub    %eax,%edx
    9a97:	89 d0                	mov    %edx,%eax
    9a99:	48 63 d0             	movslq %eax,%rdx
    9a9c:	48 8d 05 3d 56 20 00 	lea    0x20563d(%rip),%rax        # 20f0e0 <mem>
    9aa3:	48 01 d0             	add    %rdx,%rax
    9aa6:	8b 10                	mov    (%rax),%edx
    9aa8:	48 8b 05 d9 58 60 00 	mov    0x6058d9(%rip),%rax        # 60f388 <f_boot>
    9aaf:	48 83 c0 04          	add    $0x4,%rax
    9ab3:	89 c1                	mov    %eax,%ecx
    9ab5:	48 8b 05 cc 58 60 00 	mov    0x6058cc(%rip),%rax        # 60f388 <f_boot>
    9abc:	29 c1                	sub    %eax,%ecx
    9abe:	89 c8                	mov    %ecx,%eax
    9ac0:	48 63 c8             	movslq %eax,%rcx
    9ac3:	48 8d 05 16 56 20 00 	lea    0x205616(%rip),%rax        # 20f0e0 <mem>
    9aca:	48 01 c8             	add    %rcx,%rax
    9acd:	83 c2 08             	add    $0x8,%edx
    9ad0:	89 10                	mov    %edx,(%rax)
    9ad2:	48 8b 05 af 58 60 00 	mov    0x6058af(%rip),%rax        # 60f388 <f_boot>
    9ad9:	48 83 c0 04          	add    $0x4,%rax
    9add:	89 c2                	mov    %eax,%edx
    9adf:	48 8b 05 a2 58 60 00 	mov    0x6058a2(%rip),%rax        # 60f388 <f_boot>
    9ae6:	29 c2                	sub    %eax,%edx
    9ae8:	89 d0                	mov    %edx,%eax
    9aea:	48 63 d0             	movslq %eax,%rdx
    9aed:	48 8d 05 ec 55 20 00 	lea    0x2055ec(%rip),%rax        # 20f0e0 <mem>
    9af4:	48 01 d0             	add    %rdx,%rax
    9af7:	8b 00                	mov    (%rax),%eax
    9af9:	83 e8 08             	sub    $0x8,%eax
    9afc:	89 c7                	mov    %eax,%edi
    9afe:	e8 6a 73 ff ff       	callq  e6d <v2r>
    9b03:	8b 00                	mov    (%rax),%eax
    9b05:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
                             lseek(fp,CELL(sp),SEEK_SET); ior=0;
    9b0b:	48 8b 05 76 58 60 00 	mov    0x605876(%rip),%rax        # 60f388 <f_boot>
    9b12:	48 83 c0 04          	add    $0x4,%rax
    9b16:	89 c2                	mov    %eax,%edx
    9b18:	48 8b 05 69 58 60 00 	mov    0x605869(%rip),%rax        # 60f388 <f_boot>
    9b1f:	29 c2                	sub    %eax,%edx
    9b21:	89 d0                	mov    %edx,%eax
    9b23:	48 63 d0             	movslq %eax,%rdx
    9b26:	48 8d 05 b3 55 20 00 	lea    0x2055b3(%rip),%rax        # 20f0e0 <mem>
    9b2d:	48 01 d0             	add    %rdx,%rax
    9b30:	8b 00                	mov    (%rax),%eax
    9b32:	89 c7                	mov    %eax,%edi
    9b34:	e8 34 73 ff ff       	callq  e6d <v2r>
    9b39:	8b 08                	mov    (%rax),%ecx
    9b3b:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    9b41:	ba 00 00 00 00       	mov    $0x0,%edx
    9b46:	89 ce                	mov    %ecx,%esi
    9b48:	89 c7                	mov    %eax,%edi
    9b4a:	b8 00 00 00 00       	mov    $0x0,%eax
    9b4f:	e8 dc 70 ff ff       	callq  c30 <lseek@plt>
    9b54:	c7 85 8c fe ff ff 00 	movl   $0x0,-0x174(%rbp)
    9b5b:	00 00 00 
				CELL(sp)=ior;break;
    9b5e:	48 8b 05 23 58 60 00 	mov    0x605823(%rip),%rax        # 60f388 <f_boot>
    9b65:	48 83 c0 04          	add    $0x4,%rax
    9b69:	89 c2                	mov    %eax,%edx
    9b6b:	48 8b 05 16 58 60 00 	mov    0x605816(%rip),%rax        # 60f388 <f_boot>
    9b72:	29 c2                	sub    %eax,%edx
    9b74:	89 d0                	mov    %edx,%eax
    9b76:	48 63 d0             	movslq %eax,%rdx
    9b79:	48 8d 05 60 55 20 00 	lea    0x205560(%rip),%rax        # 20f0e0 <mem>
    9b80:	48 01 d0             	add    %rdx,%rax
    9b83:	8b 00                	mov    (%rax),%eax
    9b85:	89 c7                	mov    %eax,%edi
    9b87:	e8 e1 72 ff ff       	callq  e6d <v2r>
    9b8c:	48 89 c2             	mov    %rax,%rdx
    9b8f:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9b95:	89 02                	mov    %eax,(%rdx)
    9b97:	e9 ad 08 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_fileposition: /*file-position*/ sp-=8;fp=CELL(sp+8);
    9b9c:	48 8b 05 e5 57 60 00 	mov    0x6057e5(%rip),%rax        # 60f388 <f_boot>
    9ba3:	48 83 c0 04          	add    $0x4,%rax
    9ba7:	89 c2                	mov    %eax,%edx
    9ba9:	48 8b 05 d8 57 60 00 	mov    0x6057d8(%rip),%rax        # 60f388 <f_boot>
    9bb0:	29 c2                	sub    %eax,%edx
    9bb2:	89 d0                	mov    %edx,%eax
    9bb4:	48 63 d0             	movslq %eax,%rdx
    9bb7:	48 8d 05 22 55 20 00 	lea    0x205522(%rip),%rax        # 20f0e0 <mem>
    9bbe:	48 01 d0             	add    %rdx,%rax
    9bc1:	8b 10                	mov    (%rax),%edx
    9bc3:	48 8b 05 be 57 60 00 	mov    0x6057be(%rip),%rax        # 60f388 <f_boot>
    9bca:	48 83 c0 04          	add    $0x4,%rax
    9bce:	89 c1                	mov    %eax,%ecx
    9bd0:	48 8b 05 b1 57 60 00 	mov    0x6057b1(%rip),%rax        # 60f388 <f_boot>
    9bd7:	29 c1                	sub    %eax,%ecx
    9bd9:	89 c8                	mov    %ecx,%eax
    9bdb:	48 63 c8             	movslq %eax,%rcx
    9bde:	48 8d 05 fb 54 20 00 	lea    0x2054fb(%rip),%rax        # 20f0e0 <mem>
    9be5:	48 01 c8             	add    %rcx,%rax
    9be8:	83 ea 08             	sub    $0x8,%edx
    9beb:	89 10                	mov    %edx,(%rax)
    9bed:	48 8b 05 94 57 60 00 	mov    0x605794(%rip),%rax        # 60f388 <f_boot>
    9bf4:	48 83 c0 04          	add    $0x4,%rax
    9bf8:	89 c2                	mov    %eax,%edx
    9bfa:	48 8b 05 87 57 60 00 	mov    0x605787(%rip),%rax        # 60f388 <f_boot>
    9c01:	29 c2                	sub    %eax,%edx
    9c03:	89 d0                	mov    %edx,%eax
    9c05:	48 63 d0             	movslq %eax,%rdx
    9c08:	48 8d 05 d1 54 20 00 	lea    0x2054d1(%rip),%rax        # 20f0e0 <mem>
    9c0f:	48 01 d0             	add    %rdx,%rax
    9c12:	8b 00                	mov    (%rax),%eax
    9c14:	83 c0 08             	add    $0x8,%eax
    9c17:	89 c7                	mov    %eax,%edi
    9c19:	e8 4f 72 ff ff       	callq  e6d <v2r>
    9c1e:	8b 00                	mov    (%rax),%eax
    9c20:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
                             CELL(sp+8)=lseek(fp, (off_t) 0, SEEK_CUR);CELL(sp+4)=0;
    9c26:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    9c2c:	ba 01 00 00 00       	mov    $0x1,%edx
    9c31:	be 00 00 00 00       	mov    $0x0,%esi
    9c36:	89 c7                	mov    %eax,%edi
    9c38:	b8 00 00 00 00       	mov    $0x0,%eax
    9c3d:	e8 ee 6f ff ff       	callq  c30 <lseek@plt>
    9c42:	89 c3                	mov    %eax,%ebx
    9c44:	48 8b 05 3d 57 60 00 	mov    0x60573d(%rip),%rax        # 60f388 <f_boot>
    9c4b:	48 83 c0 04          	add    $0x4,%rax
    9c4f:	89 c2                	mov    %eax,%edx
    9c51:	48 8b 05 30 57 60 00 	mov    0x605730(%rip),%rax        # 60f388 <f_boot>
    9c58:	29 c2                	sub    %eax,%edx
    9c5a:	89 d0                	mov    %edx,%eax
    9c5c:	48 63 d0             	movslq %eax,%rdx
    9c5f:	48 8d 05 7a 54 20 00 	lea    0x20547a(%rip),%rax        # 20f0e0 <mem>
    9c66:	48 01 d0             	add    %rdx,%rax
    9c69:	8b 00                	mov    (%rax),%eax
    9c6b:	83 c0 08             	add    $0x8,%eax
    9c6e:	89 c7                	mov    %eax,%edi
    9c70:	e8 f8 71 ff ff       	callq  e6d <v2r>
    9c75:	89 da                	mov    %ebx,%edx
    9c77:	89 10                	mov    %edx,(%rax)
    9c79:	48 8b 05 08 57 60 00 	mov    0x605708(%rip),%rax        # 60f388 <f_boot>
    9c80:	48 83 c0 04          	add    $0x4,%rax
    9c84:	89 c2                	mov    %eax,%edx
    9c86:	48 8b 05 fb 56 60 00 	mov    0x6056fb(%rip),%rax        # 60f388 <f_boot>
    9c8d:	29 c2                	sub    %eax,%edx
    9c8f:	89 d0                	mov    %edx,%eax
    9c91:	48 63 d0             	movslq %eax,%rdx
    9c94:	48 8d 05 45 54 20 00 	lea    0x205445(%rip),%rax        # 20f0e0 <mem>
    9c9b:	48 01 d0             	add    %rdx,%rax
    9c9e:	8b 00                	mov    (%rax),%eax
    9ca0:	83 c0 04             	add    $0x4,%eax
    9ca3:	89 c7                	mov    %eax,%edi
    9ca5:	e8 c3 71 ff ff       	callq  e6d <v2r>
    9caa:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
				 ior=0;
    9cb0:	c7 85 8c fe ff ff 00 	movl   $0x0,-0x174(%rbp)
    9cb7:	00 00 00 
                             CELL(sp)=ior;break;
    9cba:	48 8b 05 c7 56 60 00 	mov    0x6056c7(%rip),%rax        # 60f388 <f_boot>
    9cc1:	48 83 c0 04          	add    $0x4,%rax
    9cc5:	89 c2                	mov    %eax,%edx
    9cc7:	48 8b 05 ba 56 60 00 	mov    0x6056ba(%rip),%rax        # 60f388 <f_boot>
    9cce:	29 c2                	sub    %eax,%edx
    9cd0:	89 d0                	mov    %edx,%eax
    9cd2:	48 63 d0             	movslq %eax,%rdx
    9cd5:	48 8d 05 04 54 20 00 	lea    0x205404(%rip),%rax        # 20f0e0 <mem>
    9cdc:	48 01 d0             	add    %rdx,%rax
    9cdf:	8b 00                	mov    (%rax),%eax
    9ce1:	89 c7                	mov    %eax,%edi
    9ce3:	e8 85 71 ff ff       	callq  e6d <v2r>
    9ce8:	48 89 c2             	mov    %rax,%rdx
    9ceb:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
    9cf1:	89 02                	mov    %eax,(%rdx)
    9cf3:	e9 51 07 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_filesize: /* file-size*/ sp-=8;fp=CELL(sp-8);
    9cf8:	48 8b 05 89 56 60 00 	mov    0x605689(%rip),%rax        # 60f388 <f_boot>
    9cff:	48 83 c0 04          	add    $0x4,%rax
    9d03:	89 c2                	mov    %eax,%edx
    9d05:	48 8b 05 7c 56 60 00 	mov    0x60567c(%rip),%rax        # 60f388 <f_boot>
    9d0c:	29 c2                	sub    %eax,%edx
    9d0e:	89 d0                	mov    %edx,%eax
    9d10:	48 63 d0             	movslq %eax,%rdx
    9d13:	48 8d 05 c6 53 20 00 	lea    0x2053c6(%rip),%rax        # 20f0e0 <mem>
    9d1a:	48 01 d0             	add    %rdx,%rax
    9d1d:	8b 10                	mov    (%rax),%edx
    9d1f:	48 8b 05 62 56 60 00 	mov    0x605662(%rip),%rax        # 60f388 <f_boot>
    9d26:	48 83 c0 04          	add    $0x4,%rax
    9d2a:	89 c1                	mov    %eax,%ecx
    9d2c:	48 8b 05 55 56 60 00 	mov    0x605655(%rip),%rax        # 60f388 <f_boot>
    9d33:	29 c1                	sub    %eax,%ecx
    9d35:	89 c8                	mov    %ecx,%eax
    9d37:	48 63 c8             	movslq %eax,%rcx
    9d3a:	48 8d 05 9f 53 20 00 	lea    0x20539f(%rip),%rax        # 20f0e0 <mem>
    9d41:	48 01 c8             	add    %rcx,%rax
    9d44:	83 ea 08             	sub    $0x8,%edx
    9d47:	89 10                	mov    %edx,(%rax)
    9d49:	48 8b 05 38 56 60 00 	mov    0x605638(%rip),%rax        # 60f388 <f_boot>
    9d50:	48 83 c0 04          	add    $0x4,%rax
    9d54:	89 c2                	mov    %eax,%edx
    9d56:	48 8b 05 2b 56 60 00 	mov    0x60562b(%rip),%rax        # 60f388 <f_boot>
    9d5d:	29 c2                	sub    %eax,%edx
    9d5f:	89 d0                	mov    %edx,%eax
    9d61:	48 63 d0             	movslq %eax,%rdx
    9d64:	48 8d 05 75 53 20 00 	lea    0x205375(%rip),%rax        # 20f0e0 <mem>
    9d6b:	48 01 d0             	add    %rdx,%rax
    9d6e:	8b 00                	mov    (%rax),%eax
    9d70:	83 e8 08             	sub    $0x8,%eax
    9d73:	89 c7                	mov    %eax,%edi
    9d75:	e8 f3 70 ff ff       	callq  e6d <v2r>
    9d7a:	8b 00                	mov    (%rax),%eax
    9d7c:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
     { int fpt;
         fpt=lseek(fp, (off_t) 0, SEEK_CUR);
    9d82:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    9d88:	ba 01 00 00 00       	mov    $0x1,%edx
    9d8d:	be 00 00 00 00       	mov    $0x0,%esi
    9d92:	89 c7                	mov    %eax,%edi
    9d94:	b8 00 00 00 00       	mov    $0x0,%eax
    9d99:	e8 92 6e ff ff       	callq  c30 <lseek@plt>
    9d9e:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
         CELL(sp+8)=lseek(fp, (off_t) 0, SEEK_END);
    9da4:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    9daa:	ba 02 00 00 00       	mov    $0x2,%edx
    9daf:	be 00 00 00 00       	mov    $0x0,%esi
    9db4:	89 c7                	mov    %eax,%edi
    9db6:	b8 00 00 00 00       	mov    $0x0,%eax
    9dbb:	e8 70 6e ff ff       	callq  c30 <lseek@plt>
    9dc0:	89 c3                	mov    %eax,%ebx
    9dc2:	48 8b 05 bf 55 60 00 	mov    0x6055bf(%rip),%rax        # 60f388 <f_boot>
    9dc9:	48 83 c0 04          	add    $0x4,%rax
    9dcd:	89 c2                	mov    %eax,%edx
    9dcf:	48 8b 05 b2 55 60 00 	mov    0x6055b2(%rip),%rax        # 60f388 <f_boot>
    9dd6:	29 c2                	sub    %eax,%edx
    9dd8:	89 d0                	mov    %edx,%eax
    9dda:	48 63 d0             	movslq %eax,%rdx
    9ddd:	48 8d 05 fc 52 20 00 	lea    0x2052fc(%rip),%rax        # 20f0e0 <mem>
    9de4:	48 01 d0             	add    %rdx,%rax
    9de7:	8b 00                	mov    (%rax),%eax
    9de9:	83 c0 08             	add    $0x8,%eax
    9dec:	89 c7                	mov    %eax,%edi
    9dee:	e8 7a 70 ff ff       	callq  e6d <v2r>
    9df3:	89 da                	mov    %ebx,%edx
    9df5:	89 10                	mov    %edx,(%rax)
         CELL(sp+4)=0;
    9df7:	48 8b 05 8a 55 60 00 	mov    0x60558a(%rip),%rax        # 60f388 <f_boot>
    9dfe:	48 83 c0 04          	add    $0x4,%rax
    9e02:	89 c2                	mov    %eax,%edx
    9e04:	48 8b 05 7d 55 60 00 	mov    0x60557d(%rip),%rax        # 60f388 <f_boot>
    9e0b:	29 c2                	sub    %eax,%edx
    9e0d:	89 d0                	mov    %edx,%eax
    9e0f:	48 63 d0             	movslq %eax,%rdx
    9e12:	48 8d 05 c7 52 20 00 	lea    0x2052c7(%rip),%rax        # 20f0e0 <mem>
    9e19:	48 01 d0             	add    %rdx,%rax
    9e1c:	8b 00                	mov    (%rax),%eax
    9e1e:	83 c0 04             	add    $0x4,%eax
    9e21:	89 c7                	mov    %eax,%edi
    9e23:	e8 45 70 ff ff       	callq  e6d <v2r>
    9e28:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
         CELL(sp)=0;
    9e2e:	48 8b 05 53 55 60 00 	mov    0x605553(%rip),%rax        # 60f388 <f_boot>
    9e35:	48 83 c0 04          	add    $0x4,%rax
    9e39:	89 c2                	mov    %eax,%edx
    9e3b:	48 8b 05 46 55 60 00 	mov    0x605546(%rip),%rax        # 60f388 <f_boot>
    9e42:	29 c2                	sub    %eax,%edx
    9e44:	89 d0                	mov    %edx,%eax
    9e46:	48 63 d0             	movslq %eax,%rdx
    9e49:	48 8d 05 90 52 20 00 	lea    0x205290(%rip),%rax        # 20f0e0 <mem>
    9e50:	48 01 d0             	add    %rdx,%rax
    9e53:	8b 00                	mov    (%rax),%eax
    9e55:	89 c7                	mov    %eax,%edi
    9e57:	e8 11 70 ff ff       	callq  e6d <v2r>
    9e5c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
            lseek(fp, (off_t) fpt, SEEK_SET);
    9e62:	8b 85 88 fe ff ff    	mov    -0x178(%rbp),%eax
    9e68:	48 63 c8             	movslq %eax,%rcx
    9e6b:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
    9e71:	ba 00 00 00 00       	mov    $0x0,%edx
    9e76:	48 89 ce             	mov    %rcx,%rsi
    9e79:	89 c7                	mov    %eax,%edi
    9e7b:	b8 00 00 00 00       	mov    $0x0,%eax
    9e80:	e8 ab 6d ff ff       	callq  c30 <lseek@plt>
      }break;
    9e85:	e9 bf 05 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_Parse:		Parse(); break;
    9e8a:	b8 00 00 00 00       	mov    $0x0,%eax
    9e8f:	e8 72 84 ff ff       	callq  2306 <Parse>
    9e94:	e9 b0 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_CQ: /* C" */ CQ();       break;
    9e99:	b8 00 00 00 00       	mov    $0x0,%eax
    9e9e:	e8 23 88 ff ff       	callq  26c6 <CQ>
    9ea3:	e9 a1 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_SQ: /* S" */ SQ();       break;
    9ea8:	b8 00 00 00 00       	mov    $0x0,%eax
    9ead:	e8 71 86 ff ff       	callq  2523 <SQ>
    9eb2:	e9 92 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_PQ: /* ." */ SQ();	 COM(sw_type<<1|1); break;
    9eb7:	b8 00 00 00 00       	mov    $0x0,%eax
    9ebc:	e8 62 86 ff ff       	callq  2523 <SQ>
    9ec1:	bf ed 00 00 00       	mov    $0xed,%edi
    9ec6:	e8 ec 71 ff ff       	callq  10b7 <COM>
    9ecb:	e9 79 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_SourceST:		SourceST(); break;
    9ed0:	b8 00 00 00 00       	mov    $0x0,%eax
    9ed5:	e8 9c 8a ff ff       	callq  2976 <SourceST>
    9eda:	e9 6a 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_Source:		Source(); break;
    9edf:	b8 00 00 00 00       	mov    $0x0,%eax
    9ee4:	e8 80 89 ff ff       	callq  2869 <Source>
    9ee9:	e9 5b 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_SearchWordList:	SearchWordList(); break;
    9eee:	b8 00 00 00 00       	mov    $0x0,%eax
    9ef3:	e8 09 8c ff ff       	callq  2b01 <SearchWordList>
    9ef8:	e9 4c 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_SFind:		SFind(); break;
    9efd:	b8 00 00 00 00       	mov    $0x0,%eax
    9f02:	e8 d1 8f ff ff       	callq  2ed8 <SFind>
    9f07:	e9 3d 05 00 00       	jmpq   a449 <virtual_machine+0x7071>
     case sw_SHeader: //	if( CELL(sp+4)+CELL(sp) < MEMSIZE )
    	                  SHEADER( &BYTE(CELL(sp+4)), CELL(sp) );
    9f0c:	48 8b 05 75 54 60 00 	mov    0x605475(%rip),%rax        # 60f388 <f_boot>
    9f13:	48 83 c0 04          	add    $0x4,%rax
    9f17:	89 c2                	mov    %eax,%edx
    9f19:	48 8b 05 68 54 60 00 	mov    0x605468(%rip),%rax        # 60f388 <f_boot>
    9f20:	29 c2                	sub    %eax,%edx
    9f22:	89 d0                	mov    %edx,%eax
    9f24:	48 63 d0             	movslq %eax,%rdx
    9f27:	48 8d 05 b2 51 20 00 	lea    0x2051b2(%rip),%rax        # 20f0e0 <mem>
    9f2e:	48 01 d0             	add    %rdx,%rax
    9f31:	8b 00                	mov    (%rax),%eax
    9f33:	89 c7                	mov    %eax,%edi
    9f35:	e8 33 6f ff ff       	callq  e6d <v2r>
    9f3a:	8b 18                	mov    (%rax),%ebx
    9f3c:	48 8b 05 45 54 60 00 	mov    0x605445(%rip),%rax        # 60f388 <f_boot>
    9f43:	48 83 c0 04          	add    $0x4,%rax
    9f47:	89 c2                	mov    %eax,%edx
    9f49:	48 8b 05 38 54 60 00 	mov    0x605438(%rip),%rax        # 60f388 <f_boot>
    9f50:	29 c2                	sub    %eax,%edx
    9f52:	89 d0                	mov    %edx,%eax
    9f54:	48 63 d0             	movslq %eax,%rdx
    9f57:	48 8d 05 82 51 20 00 	lea    0x205182(%rip),%rax        # 20f0e0 <mem>
    9f5e:	48 01 d0             	add    %rdx,%rax
    9f61:	8b 00                	mov    (%rax),%eax
    9f63:	83 c0 04             	add    $0x4,%eax
    9f66:	89 c7                	mov    %eax,%edi
    9f68:	e8 00 6f ff ff       	callq  e6d <v2r>
    9f6d:	8b 00                	mov    (%rax),%eax
    9f6f:	89 c7                	mov    %eax,%edi
    9f71:	e8 f7 6e ff ff       	callq  e6d <v2r>
    9f76:	89 de                	mov    %ebx,%esi
    9f78:	48 89 c7             	mov    %rax,%rdi
    9f7b:	e8 6c 73 ff ff       	callq  12ec <SHEADER>
    	 	 	 	 sp+=8; break;
    9f80:	48 8b 05 01 54 60 00 	mov    0x605401(%rip),%rax        # 60f388 <f_boot>
    9f87:	48 83 c0 04          	add    $0x4,%rax
    9f8b:	89 c2                	mov    %eax,%edx
    9f8d:	48 8b 05 f4 53 60 00 	mov    0x6053f4(%rip),%rax        # 60f388 <f_boot>
    9f94:	29 c2                	sub    %eax,%edx
    9f96:	89 d0                	mov    %edx,%eax
    9f98:	48 63 d0             	movslq %eax,%rdx
    9f9b:	48 8d 05 3e 51 20 00 	lea    0x20513e(%rip),%rax        # 20f0e0 <mem>
    9fa2:	48 01 d0             	add    %rdx,%rax
    9fa5:	8b 10                	mov    (%rax),%edx
    9fa7:	48 8b 05 da 53 60 00 	mov    0x6053da(%rip),%rax        # 60f388 <f_boot>
    9fae:	48 83 c0 04          	add    $0x4,%rax
    9fb2:	89 c1                	mov    %eax,%ecx
    9fb4:	48 8b 05 cd 53 60 00 	mov    0x6053cd(%rip),%rax        # 60f388 <f_boot>
    9fbb:	29 c1                	sub    %eax,%ecx
    9fbd:	89 c8                	mov    %ecx,%eax
    9fbf:	48 63 c8             	movslq %eax,%rcx
    9fc2:	48 8d 05 17 51 20 00 	lea    0x205117(%rip),%rax        # 20f0e0 <mem>
    9fc9:	48 01 c8             	add    %rcx,%rax
    9fcc:	83 c2 08             	add    $0x8,%edx
    9fcf:	89 10                	mov    %edx,(%rax)
    9fd1:	e9 73 04 00 00       	jmpq   a449 <virtual_machine+0x7071>

    case sw_alloc:
	 {	int ii;
		__u32 a_size =  CELL(sp);
    9fd6:	48 8b 05 ab 53 60 00 	mov    0x6053ab(%rip),%rax        # 60f388 <f_boot>
    9fdd:	48 83 c0 04          	add    $0x4,%rax
    9fe1:	89 c2                	mov    %eax,%edx
    9fe3:	48 8b 05 9e 53 60 00 	mov    0x60539e(%rip),%rax        # 60f388 <f_boot>
    9fea:	29 c2                	sub    %eax,%edx
    9fec:	89 d0                	mov    %edx,%eax
    9fee:	48 63 d0             	movslq %eax,%rdx
    9ff1:	48 8d 05 e8 50 20 00 	lea    0x2050e8(%rip),%rax        # 20f0e0 <mem>
    9ff8:	48 01 d0             	add    %rdx,%rax
    9ffb:	8b 00                	mov    (%rax),%eax
    9ffd:	89 c7                	mov    %eax,%edi
    9fff:	e8 69 6e ff ff       	callq  e6d <v2r>
    a004:	8b 00                	mov    (%rax),%eax
    a006:	89 85 80 fe ff ff    	mov    %eax,-0x180(%rbp)

		sp-=4;
    a00c:	48 8b 05 75 53 60 00 	mov    0x605375(%rip),%rax        # 60f388 <f_boot>
    a013:	48 83 c0 04          	add    $0x4,%rax
    a017:	89 c2                	mov    %eax,%edx
    a019:	48 8b 05 68 53 60 00 	mov    0x605368(%rip),%rax        # 60f388 <f_boot>
    a020:	29 c2                	sub    %eax,%edx
    a022:	89 d0                	mov    %edx,%eax
    a024:	48 63 d0             	movslq %eax,%rdx
    a027:	48 8d 05 b2 50 20 00 	lea    0x2050b2(%rip),%rax        # 20f0e0 <mem>
    a02e:	48 01 d0             	add    %rdx,%rax
    a031:	8b 10                	mov    (%rax),%edx
    a033:	48 8b 05 4e 53 60 00 	mov    0x60534e(%rip),%rax        # 60f388 <f_boot>
    a03a:	48 83 c0 04          	add    $0x4,%rax
    a03e:	89 c1                	mov    %eax,%ecx
    a040:	48 8b 05 41 53 60 00 	mov    0x605341(%rip),%rax        # 60f388 <f_boot>
    a047:	29 c1                	sub    %eax,%ecx
    a049:	89 c8                	mov    %ecx,%eax
    a04b:	48 63 c8             	movslq %eax,%rcx
    a04e:	48 8d 05 8b 50 20 00 	lea    0x20508b(%rip),%rax        # 20f0e0 <mem>
    a055:	48 01 c8             	add    %rcx,%rax
    a058:	83 ea 04             	sub    $0x4,%edx
    a05b:	89 10                	mov    %edx,(%rax)
		for(ii=1;ii<17;ii++)
    a05d:	c7 85 74 fe ff ff 01 	movl   $0x1,-0x18c(%rbp)
    a064:	00 00 00 
    a067:	eb 27                	jmp    a090 <virtual_machine+0x6cb8>
		{ if( DescriptorTable[ii] == (__u8 *)0) break;
    a069:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
    a06f:	48 98                	cltq   
    a071:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a078:	00 
    a079:	48 8d 05 c0 4f 20 00 	lea    0x204fc0(%rip),%rax        # 20f040 <DescriptorTable>
    a080:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    a084:	48 85 c0             	test   %rax,%rax
    a087:	74 12                	je     a09b <virtual_machine+0x6cc3>
		for(ii=1;ii<17;ii++)
    a089:	83 85 74 fe ff ff 01 	addl   $0x1,-0x18c(%rbp)
    a090:	83 bd 74 fe ff ff 10 	cmpl   $0x10,-0x18c(%rbp)
    a097:	7e d0                	jle    a069 <virtual_machine+0x6c91>
    a099:	eb 01                	jmp    a09c <virtual_machine+0x6cc4>
		{ if( DescriptorTable[ii] == (__u8 *)0) break;
    a09b:	90                   	nop
		}

		if(ii==17) CELL(sp) = -1;
    a09c:	83 bd 74 fe ff ff 11 	cmpl   $0x11,-0x18c(%rbp)
    a0a3:	75 39                	jne    a0de <virtual_machine+0x6d06>
    a0a5:	48 8b 05 dc 52 60 00 	mov    0x6052dc(%rip),%rax        # 60f388 <f_boot>
    a0ac:	48 83 c0 04          	add    $0x4,%rax
    a0b0:	89 c2                	mov    %eax,%edx
    a0b2:	48 8b 05 cf 52 60 00 	mov    0x6052cf(%rip),%rax        # 60f388 <f_boot>
    a0b9:	29 c2                	sub    %eax,%edx
    a0bb:	89 d0                	mov    %edx,%eax
    a0bd:	48 63 d0             	movslq %eax,%rdx
    a0c0:	48 8d 05 19 50 20 00 	lea    0x205019(%rip),%rax        # 20f0e0 <mem>
    a0c7:	48 01 d0             	add    %rdx,%rax
    a0ca:	8b 00                	mov    (%rax),%eax
    a0cc:	89 c7                	mov    %eax,%edi
    a0ce:	e8 9a 6d ff ff       	callq  e6d <v2r>
    a0d3:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%rax)
			CELL(sp)=0;
			CELL(sp+4)=ii<<(32-4);
		}

	 }
 break;
    a0d9:	e9 6b 03 00 00       	jmpq   a449 <virtual_machine+0x7071>
		{ __u8 * a_addr = malloc(a_size);
    a0de:	8b 85 80 fe ff ff    	mov    -0x180(%rbp),%eax
    a0e4:	48 89 c7             	mov    %rax,%rdi
    a0e7:	e8 b4 6b ff ff       	callq  ca0 <malloc@plt>
    a0ec:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
			DescriptorTable[ii]= & a_addr[-(ii<<(32-4))] ;
    a0f3:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
    a0f9:	c1 e0 1c             	shl    $0x1c,%eax
    a0fc:	f7 d8                	neg    %eax
    a0fe:	48 63 d0             	movslq %eax,%rdx
    a101:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    a108:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a10c:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
    a112:	48 98                	cltq   
    a114:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a11b:	00 
    a11c:	48 8d 05 1d 4f 20 00 	lea    0x204f1d(%rip),%rax        # 20f040 <DescriptorTable>
    a123:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
			CELL(sp)=0;
    a127:	48 8b 05 5a 52 60 00 	mov    0x60525a(%rip),%rax        # 60f388 <f_boot>
    a12e:	48 83 c0 04          	add    $0x4,%rax
    a132:	89 c2                	mov    %eax,%edx
    a134:	48 8b 05 4d 52 60 00 	mov    0x60524d(%rip),%rax        # 60f388 <f_boot>
    a13b:	29 c2                	sub    %eax,%edx
    a13d:	89 d0                	mov    %edx,%eax
    a13f:	48 63 d0             	movslq %eax,%rdx
    a142:	48 8d 05 97 4f 20 00 	lea    0x204f97(%rip),%rax        # 20f0e0 <mem>
    a149:	48 01 d0             	add    %rdx,%rax
    a14c:	8b 00                	mov    (%rax),%eax
    a14e:	89 c7                	mov    %eax,%edi
    a150:	e8 18 6d ff ff       	callq  e6d <v2r>
    a155:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
			CELL(sp+4)=ii<<(32-4);
    a15b:	8b 85 74 fe ff ff    	mov    -0x18c(%rbp),%eax
    a161:	c1 e0 1c             	shl    $0x1c,%eax
    a164:	89 c3                	mov    %eax,%ebx
    a166:	48 8b 05 1b 52 60 00 	mov    0x60521b(%rip),%rax        # 60f388 <f_boot>
    a16d:	48 83 c0 04          	add    $0x4,%rax
    a171:	89 c2                	mov    %eax,%edx
    a173:	48 8b 05 0e 52 60 00 	mov    0x60520e(%rip),%rax        # 60f388 <f_boot>
    a17a:	29 c2                	sub    %eax,%edx
    a17c:	89 d0                	mov    %edx,%eax
    a17e:	48 63 d0             	movslq %eax,%rdx
    a181:	48 8d 05 58 4f 20 00 	lea    0x204f58(%rip),%rax        # 20f0e0 <mem>
    a188:	48 01 d0             	add    %rdx,%rax
    a18b:	8b 00                	mov    (%rax),%eax
    a18d:	83 c0 04             	add    $0x4,%eax
    a190:	89 c7                	mov    %eax,%edi
    a192:	e8 d6 6c ff ff       	callq  e6d <v2r>
    a197:	89 da                	mov    %ebx,%edx
    a199:	89 10                	mov    %edx,(%rax)
 break;
    a19b:	e9 a9 02 00 00       	jmpq   a449 <virtual_machine+0x7071>

    case sw_free:
	{ __u8 ii = CELL(sp)>>(32-4);
    a1a0:	48 8b 05 e1 51 60 00 	mov    0x6051e1(%rip),%rax        # 60f388 <f_boot>
    a1a7:	48 83 c0 04          	add    $0x4,%rax
    a1ab:	89 c2                	mov    %eax,%edx
    a1ad:	48 8b 05 d4 51 60 00 	mov    0x6051d4(%rip),%rax        # 60f388 <f_boot>
    a1b4:	29 c2                	sub    %eax,%edx
    a1b6:	89 d0                	mov    %edx,%eax
    a1b8:	48 63 d0             	movslq %eax,%rdx
    a1bb:	48 8d 05 1e 4f 20 00 	lea    0x204f1e(%rip),%rax        # 20f0e0 <mem>
    a1c2:	48 01 d0             	add    %rdx,%rax
    a1c5:	8b 00                	mov    (%rax),%eax
    a1c7:	89 c7                	mov    %eax,%edi
    a1c9:	e8 9f 6c ff ff       	callq  e6d <v2r>
    a1ce:	8b 00                	mov    (%rax),%eax
    a1d0:	c1 e8 1c             	shr    $0x1c,%eax
    a1d3:	88 85 5b fe ff ff    	mov    %al,-0x1a5(%rbp)
		free( &(DescriptorTable[ii]) [(ii<<(32-4))] );
    a1d9:	0f b6 85 5b fe ff ff 	movzbl -0x1a5(%rbp),%eax
    a1e0:	48 98                	cltq   
    a1e2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a1e9:	00 
    a1ea:	48 8d 05 4f 4e 20 00 	lea    0x204e4f(%rip),%rax        # 20f040 <DescriptorTable>
    a1f1:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    a1f5:	0f b6 85 5b fe ff ff 	movzbl -0x1a5(%rbp),%eax
    a1fc:	c1 e0 1c             	shl    $0x1c,%eax
    a1ff:	48 98                	cltq   
    a201:	48 01 d0             	add    %rdx,%rax
    a204:	48 89 c7             	mov    %rax,%rdi
    a207:	e8 74 69 ff ff       	callq  b80 <free@plt>
		DescriptorTable[ii]=(__u8 * ) 0;
    a20c:	0f b6 85 5b fe ff ff 	movzbl -0x1a5(%rbp),%eax
    a213:	48 98                	cltq   
    a215:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a21c:	00 
    a21d:	48 8d 05 1c 4e 20 00 	lea    0x204e1c(%rip),%rax        # 20f040 <DescriptorTable>
    a224:	48 c7 04 02 00 00 00 	movq   $0x0,(%rdx,%rax,1)
    a22b:	00 
		CELL(sp) = 0 ;
    a22c:	48 8b 05 55 51 60 00 	mov    0x605155(%rip),%rax        # 60f388 <f_boot>
    a233:	48 83 c0 04          	add    $0x4,%rax
    a237:	89 c2                	mov    %eax,%edx
    a239:	48 8b 05 48 51 60 00 	mov    0x605148(%rip),%rax        # 60f388 <f_boot>
    a240:	29 c2                	sub    %eax,%edx
    a242:	89 d0                	mov    %edx,%eax
    a244:	48 63 d0             	movslq %eax,%rdx
    a247:	48 8d 05 92 4e 20 00 	lea    0x204e92(%rip),%rax        # 20f0e0 <mem>
    a24e:	48 01 d0             	add    %rdx,%rax
    a251:	8b 00                	mov    (%rax),%eax
    a253:	89 c7                	mov    %eax,%edi
    a255:	e8 13 6c ff ff       	callq  e6d <v2r>
    a25a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
	 } break;
    a260:	e9 e4 01 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_vatr:
    	 strcpy( &BYTE(CELL(sp)+1) , vatr );
    a265:	48 8b 1d c4 4d 20 00 	mov    0x204dc4(%rip),%rbx        # 20f030 <vatr>
    a26c:	48 8b 05 15 51 60 00 	mov    0x605115(%rip),%rax        # 60f388 <f_boot>
    a273:	48 83 c0 04          	add    $0x4,%rax
    a277:	89 c2                	mov    %eax,%edx
    a279:	48 8b 05 08 51 60 00 	mov    0x605108(%rip),%rax        # 60f388 <f_boot>
    a280:	29 c2                	sub    %eax,%edx
    a282:	89 d0                	mov    %edx,%eax
    a284:	48 63 d0             	movslq %eax,%rdx
    a287:	48 8d 05 52 4e 20 00 	lea    0x204e52(%rip),%rax        # 20f0e0 <mem>
    a28e:	48 01 d0             	add    %rdx,%rax
    a291:	8b 00                	mov    (%rax),%eax
    a293:	89 c7                	mov    %eax,%edi
    a295:	e8 d3 6b ff ff       	callq  e6d <v2r>
    a29a:	8b 00                	mov    (%rax),%eax
    a29c:	83 c0 01             	add    $0x1,%eax
    a29f:	89 c7                	mov    %eax,%edi
    a2a1:	e8 c7 6b ff ff       	callq  e6d <v2r>
    a2a6:	48 89 de             	mov    %rbx,%rsi
    a2a9:	48 89 c7             	mov    %rax,%rdi
    a2ac:	e8 df 68 ff ff       	callq  b90 <strcpy@plt>
    	 BYTE(CELL(sp))=strlen(vatr);
    a2b1:	48 8b 05 78 4d 20 00 	mov    0x204d78(%rip),%rax        # 20f030 <vatr>
    a2b8:	48 89 c7             	mov    %rax,%rdi
    a2bb:	e8 30 69 ff ff       	callq  bf0 <strlen@plt>
    a2c0:	48 89 c3             	mov    %rax,%rbx
    a2c3:	48 8b 05 be 50 60 00 	mov    0x6050be(%rip),%rax        # 60f388 <f_boot>
    a2ca:	48 83 c0 04          	add    $0x4,%rax
    a2ce:	89 c2                	mov    %eax,%edx
    a2d0:	48 8b 05 b1 50 60 00 	mov    0x6050b1(%rip),%rax        # 60f388 <f_boot>
    a2d7:	29 c2                	sub    %eax,%edx
    a2d9:	89 d0                	mov    %edx,%eax
    a2db:	48 63 d0             	movslq %eax,%rdx
    a2de:	48 8d 05 fb 4d 20 00 	lea    0x204dfb(%rip),%rax        # 20f0e0 <mem>
    a2e5:	48 01 d0             	add    %rdx,%rax
    a2e8:	8b 00                	mov    (%rax),%eax
    a2ea:	89 c7                	mov    %eax,%edi
    a2ec:	e8 7c 6b ff ff       	callq  e6d <v2r>
    a2f1:	8b 00                	mov    (%rax),%eax
    a2f3:	89 c7                	mov    %eax,%edi
    a2f5:	e8 73 6b ff ff       	callq  e6d <v2r>
    a2fa:	89 da                	mov    %ebx,%edx
    a2fc:	88 10                	mov    %dl,(%rax)

         break;
    a2fe:	e9 46 01 00 00       	jmpq   a449 <virtual_machine+0x7071>
	 if (fcntl(CELL(sp), F_GETPATH, filePath) != -1)
		{    
        	 ttwrite(CELL(OUTPUT),&filePath,sizeof(filePath));
		}
*/
	} sp+=4;
    a303:	48 8b 05 7e 50 60 00 	mov    0x60507e(%rip),%rax        # 60f388 <f_boot>
    a30a:	48 83 c0 04          	add    $0x4,%rax
    a30e:	89 c2                	mov    %eax,%edx
    a310:	48 8b 05 71 50 60 00 	mov    0x605071(%rip),%rax        # 60f388 <f_boot>
    a317:	29 c2                	sub    %eax,%edx
    a319:	89 d0                	mov    %edx,%eax
    a31b:	48 63 d0             	movslq %eax,%rdx
    a31e:	48 8d 05 bb 4d 20 00 	lea    0x204dbb(%rip),%rax        # 20f0e0 <mem>
    a325:	48 01 d0             	add    %rdx,%rax
    a328:	8b 10                	mov    (%rax),%edx
    a32a:	48 8b 05 57 50 60 00 	mov    0x605057(%rip),%rax        # 60f388 <f_boot>
    a331:	48 83 c0 04          	add    $0x4,%rax
    a335:	89 c1                	mov    %eax,%ecx
    a337:	48 8b 05 4a 50 60 00 	mov    0x60504a(%rip),%rax        # 60f388 <f_boot>
    a33e:	29 c1                	sub    %eax,%ecx
    a340:	89 c8                	mov    %ecx,%eax
    a342:	48 63 c8             	movslq %eax,%rcx
    a345:	48 8d 05 94 4d 20 00 	lea    0x204d94(%rip),%rax        # 20f0e0 <mem>
    a34c:	48 01 c8             	add    %rcx,%rax
    a34f:	83 c2 04             	add    $0x4,%edx
    a352:	89 10                	mov    %edx,(%rax)
         break;
    a354:	e9 f0 00 00 00       	jmpq   a449 <virtual_machine+0x7071>

     case sw_halt: exit(CELL(sp));
    a359:	48 8b 05 28 50 60 00 	mov    0x605028(%rip),%rax        # 60f388 <f_boot>
    a360:	48 83 c0 04          	add    $0x4,%rax
    a364:	89 c2                	mov    %eax,%edx
    a366:	48 8b 05 1b 50 60 00 	mov    0x60501b(%rip),%rax        # 60f388 <f_boot>
    a36d:	29 c2                	sub    %eax,%edx
    a36f:	89 d0                	mov    %edx,%eax
    a371:	48 63 d0             	movslq %eax,%rdx
    a374:	48 8d 05 65 4d 20 00 	lea    0x204d65(%rip),%rax        # 20f0e0 <mem>
    a37b:	48 01 d0             	add    %rdx,%rax
    a37e:	8b 00                	mov    (%rax),%eax
    a380:	89 c7                	mov    %eax,%edi
    a382:	e8 e6 6a ff ff       	callq  e6d <v2r>
    a387:	8b 00                	mov    (%rax),%eax
    a389:	89 c7                	mov    %eax,%edi
    a38b:	e8 60 69 ff ff       	callq  cf0 <exit@plt>
     case sw_ms: /* ms*/ usleep(CELL(sp)*1000);sp+=4;break;
    a390:	48 8b 05 f1 4f 60 00 	mov    0x604ff1(%rip),%rax        # 60f388 <f_boot>
    a397:	48 83 c0 04          	add    $0x4,%rax
    a39b:	89 c2                	mov    %eax,%edx
    a39d:	48 8b 05 e4 4f 60 00 	mov    0x604fe4(%rip),%rax        # 60f388 <f_boot>
    a3a4:	29 c2                	sub    %eax,%edx
    a3a6:	89 d0                	mov    %edx,%eax
    a3a8:	48 63 d0             	movslq %eax,%rdx
    a3ab:	48 8d 05 2e 4d 20 00 	lea    0x204d2e(%rip),%rax        # 20f0e0 <mem>
    a3b2:	48 01 d0             	add    %rdx,%rax
    a3b5:	8b 00                	mov    (%rax),%eax
    a3b7:	89 c7                	mov    %eax,%edi
    a3b9:	e8 af 6a ff ff       	callq  e6d <v2r>
    a3be:	8b 00                	mov    (%rax),%eax
    a3c0:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
    a3c6:	89 c7                	mov    %eax,%edi
    a3c8:	b8 00 00 00 00       	mov    $0x0,%eax
    a3cd:	e8 2e 69 ff ff       	callq  d00 <usleep@plt>
    a3d2:	48 8b 05 af 4f 60 00 	mov    0x604faf(%rip),%rax        # 60f388 <f_boot>
    a3d9:	48 83 c0 04          	add    $0x4,%rax
    a3dd:	89 c2                	mov    %eax,%edx
    a3df:	48 8b 05 a2 4f 60 00 	mov    0x604fa2(%rip),%rax        # 60f388 <f_boot>
    a3e6:	29 c2                	sub    %eax,%edx
    a3e8:	89 d0                	mov    %edx,%eax
    a3ea:	48 63 d0             	movslq %eax,%rdx
    a3ed:	48 8d 05 ec 4c 20 00 	lea    0x204cec(%rip),%rax        # 20f0e0 <mem>
    a3f4:	48 01 d0             	add    %rdx,%rax
    a3f7:	8b 10                	mov    (%rax),%edx
    a3f9:	48 8b 05 88 4f 60 00 	mov    0x604f88(%rip),%rax        # 60f388 <f_boot>
    a400:	48 83 c0 04          	add    $0x4,%rax
    a404:	89 c1                	mov    %eax,%ecx
    a406:	48 8b 05 7b 4f 60 00 	mov    0x604f7b(%rip),%rax        # 60f388 <f_boot>
    a40d:	29 c1                	sub    %eax,%ecx
    a40f:	89 c8                	mov    %ecx,%eax
    a411:	48 63 c8             	movslq %eax,%rcx
    a414:	48 8d 05 c5 4c 20 00 	lea    0x204cc5(%rip),%rax        # 20f0e0 <mem>
    a41b:	48 01 c8             	add    %rcx,%rax
    a41e:	83 c2 04             	add    $0x4,%edx
    a421:	89 10                	mov    %edx,(%rax)
    a423:	eb 24                	jmp    a449 <virtual_machine+0x7071>

     case sw_hi:
         write(1,"Hello!!!\n",9);
    a425:	ba 09 00 00 00       	mov    $0x9,%edx
    a42a:	48 8d 35 10 31 00 00 	lea    0x3110(%rip),%rsi        # d541 <_IO_stdin_used+0x81>
    a431:	bf 01 00 00 00       	mov    $0x1,%edi
    a436:	b8 00 00 00 00       	mov    $0x0,%eax
    a43b:	e8 90 67 ff ff       	callq  bd0 <write@plt>
         break;
    a440:	eb 07                	jmp    a449 <virtual_machine+0x7071>
     case sw_qdup:/* dup  */  if(CELL(sp)==0)break;
    a442:	90                   	nop
    a443:	eb 04                	jmp    a449 <virtual_machine+0x7071>
			ip+=t; if(ip&1)ip++; break;
    a445:	90                   	nop
    a446:	eb 01                	jmp    a449 <virtual_machine+0x7071>
			ip+=t; if(ip&1)ip++; break;
    a448:	90                   	nop

   }

   if(ireg&0xC000)/*return*/ {
    a449:	8b 85 7c fe ff ff    	mov    -0x184(%rbp),%eax
    a44f:	25 00 c0 00 00       	and    $0xc000,%eax
    a454:	85 c0                	test   %eax,%eax
    a456:	0f 84 ff 8f ff ff    	je     345b <virtual_machine+0x83>
            ip=CELL(rp);
    a45c:	8b 85 5c fe ff ff    	mov    -0x1a4(%rbp),%eax
    a462:	89 c7                	mov    %eax,%edi
    a464:	e8 04 6a ff ff       	callq  e6d <v2r>
    a469:	8b 00                	mov    (%rax),%eax
    a46b:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
            rp+=4;
    a471:	83 85 5c fe ff ff 04 	addl   $0x4,-0x1a4(%rbp)
  if(interrupt) {
    a478:	e9 de 8f ff ff       	jmpq   345b <virtual_machine+0x83>

000000000000a47d <make_image>:
  }
 }
}

make_image()
{ 	
    a47d:	55                   	push   %rbp
    a47e:	48 89 e5             	mov    %rsp,%rbp
    a481:	53                   	push   %rbx
    a482:	48 83 ec 18          	sub    $0x18,%rsp
	__u32 shere;
  HERE=0;
    a486:	48 8b 05 fb 4e 60 00 	mov    0x604efb(%rip),%rax        # 60f388 <f_boot>
    a48d:	48 05 20 01 00 00    	add    $0x120,%rax
    a493:	89 c2                	mov    %eax,%edx
    a495:	48 8b 05 ec 4e 60 00 	mov    0x604eec(%rip),%rax        # 60f388 <f_boot>
    a49c:	29 c2                	sub    %eax,%edx
    a49e:	89 d0                	mov    %edx,%eax
    a4a0:	89 c7                	mov    %eax,%edi
    a4a2:	e8 c6 69 ff ff       	callq  e6d <v2r>
    a4a7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 HERE=vocs_beg;
    a4ad:	48 8b 05 d4 4e 60 00 	mov    0x604ed4(%rip),%rax        # 60f388 <f_boot>
    a4b4:	48 05 20 01 00 00    	add    $0x120,%rax
    a4ba:	89 c2                	mov    %eax,%edx
    a4bc:	48 8b 05 c5 4e 60 00 	mov    0x604ec5(%rip),%rax        # 60f388 <f_boot>
    a4c3:	29 c2                	sub    %eax,%edx
    a4c5:	89 d0                	mov    %edx,%eax
    a4c7:	89 c7                	mov    %eax,%edi
    a4c9:	e8 9f 69 ff ff       	callq  e6d <v2r>
    a4ce:	c7 00 80 01 00 00    	movl   $0x180,(%rax)
 CELL(HANDLER)=0;
    a4d4:	48 8b 05 ad 4e 60 00 	mov    0x604ead(%rip),%rax        # 60f388 <f_boot>
    a4db:	48 05 18 01 00 00    	add    $0x118,%rax
    a4e1:	89 c2                	mov    %eax,%edx
    a4e3:	48 8b 05 9e 4e 60 00 	mov    0x604e9e(%rip),%rax        # 60f388 <f_boot>
    a4ea:	29 c2                	sub    %eax,%edx
    a4ec:	89 d0                	mov    %edx,%eax
    a4ee:	89 c7                	mov    %eax,%edi
    a4f0:	e8 78 69 ff ff       	callq  e6d <v2r>
    a4f5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 CELL(ATIB)=TTIB;
    a4fb:	48 8b 05 86 4e 60 00 	mov    0x604e86(%rip),%rax        # 60f388 <f_boot>
    a502:	48 83 c0 10          	add    $0x10,%rax
    a506:	89 c2                	mov    %eax,%edx
    a508:	48 8b 05 79 4e 60 00 	mov    0x604e79(%rip),%rax        # 60f388 <f_boot>
    a50f:	89 d3                	mov    %edx,%ebx
    a511:	29 c3                	sub    %eax,%ebx
    a513:	48 8b 05 6e 4e 60 00 	mov    0x604e6e(%rip),%rax        # 60f388 <f_boot>
    a51a:	48 05 10 01 00 00    	add    $0x110,%rax
    a520:	89 c2                	mov    %eax,%edx
    a522:	48 8b 05 5f 4e 60 00 	mov    0x604e5f(%rip),%rax        # 60f388 <f_boot>
    a529:	29 c2                	sub    %eax,%edx
    a52b:	89 d0                	mov    %edx,%eax
    a52d:	89 c7                	mov    %eax,%edi
    a52f:	e8 39 69 ff ff       	callq  e6d <v2r>
    a534:	89 da                	mov    %ebx,%edx
    a536:	89 10                	mov    %edx,(%rax)
 CELL(CONTEXT)=VFORTH;
    a538:	48 8b 05 49 4e 60 00 	mov    0x604e49(%rip),%rax        # 60f388 <f_boot>
    a53f:	48 05 2c 01 00 00    	add    $0x12c,%rax
    a545:	89 c2                	mov    %eax,%edx
    a547:	48 8b 05 3a 4e 60 00 	mov    0x604e3a(%rip),%rax        # 60f388 <f_boot>
    a54e:	89 d3                	mov    %edx,%ebx
    a550:	29 c3                	sub    %eax,%ebx
    a552:	48 8b 05 2f 4e 60 00 	mov    0x604e2f(%rip),%rax        # 60f388 <f_boot>
    a559:	48 05 30 01 00 00    	add    $0x130,%rax
    a55f:	89 c2                	mov    %eax,%edx
    a561:	48 8b 05 20 4e 60 00 	mov    0x604e20(%rip),%rax        # 60f388 <f_boot>
    a568:	29 c2                	sub    %eax,%edx
    a56a:	89 d0                	mov    %edx,%eax
    a56c:	89 c7                	mov    %eax,%edi
    a56e:	e8 fa 68 ff ff       	callq  e6d <v2r>
    a573:	89 da                	mov    %ebx,%edx
    a575:	89 10                	mov    %edx,(%rax)
 CELL(CONTEXT+4)=0;
    a577:	48 8b 05 0a 4e 60 00 	mov    0x604e0a(%rip),%rax        # 60f388 <f_boot>
    a57e:	48 05 30 01 00 00    	add    $0x130,%rax
    a584:	89 c2                	mov    %eax,%edx
    a586:	48 8b 05 fb 4d 60 00 	mov    0x604dfb(%rip),%rax        # 60f388 <f_boot>
    a58d:	29 c2                	sub    %eax,%edx
    a58f:	89 d0                	mov    %edx,%eax
    a591:	83 c0 04             	add    $0x4,%eax
    a594:	89 c7                	mov    %eax,%edi
    a596:	e8 d2 68 ff ff       	callq  e6d <v2r>
    a59b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 CELL(CURRENT)=VFORTH;
    a5a1:	48 8b 05 e0 4d 60 00 	mov    0x604de0(%rip),%rax        # 60f388 <f_boot>
    a5a8:	48 05 2c 01 00 00    	add    $0x12c,%rax
    a5ae:	89 c2                	mov    %eax,%edx
    a5b0:	48 8b 05 d1 4d 60 00 	mov    0x604dd1(%rip),%rax        # 60f388 <f_boot>
    a5b7:	89 d3                	mov    %edx,%ebx
    a5b9:	29 c3                	sub    %eax,%ebx
    a5bb:	48 8b 05 c6 4d 60 00 	mov    0x604dc6(%rip),%rax        # 60f388 <f_boot>
    a5c2:	48 05 74 01 00 00    	add    $0x174,%rax
    a5c8:	89 c2                	mov    %eax,%edx
    a5ca:	48 8b 05 b7 4d 60 00 	mov    0x604db7(%rip),%rax        # 60f388 <f_boot>
    a5d1:	29 c2                	sub    %eax,%edx
    a5d3:	89 d0                	mov    %edx,%eax
    a5d5:	89 c7                	mov    %eax,%edi
    a5d7:	e8 91 68 ff ff       	callq  e6d <v2r>
    a5dc:	89 da                	mov    %ebx,%edx
    a5de:	89 10                	mov    %edx,(%rax)
 CELL(INPUT)=0;
    a5e0:	48 8b 05 a1 4d 60 00 	mov    0x604da1(%rip),%rax        # 60f388 <f_boot>
    a5e7:	48 05 7c 01 00 00    	add    $0x17c,%rax
    a5ed:	89 c2                	mov    %eax,%edx
    a5ef:	48 8b 05 92 4d 60 00 	mov    0x604d92(%rip),%rax        # 60f388 <f_boot>
    a5f6:	29 c2                	sub    %eax,%edx
    a5f8:	89 d0                	mov    %edx,%eax
    a5fa:	89 c7                	mov    %eax,%edi
    a5fc:	e8 6c 68 ff ff       	callq  e6d <v2r>
    a601:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 CELL(OUTPUT)=1;
    a607:	48 8b 05 7a 4d 60 00 	mov    0x604d7a(%rip),%rax        # 60f388 <f_boot>
    a60e:	48 05 78 01 00 00    	add    $0x178,%rax
    a614:	89 c2                	mov    %eax,%edx
    a616:	48 8b 05 6b 4d 60 00 	mov    0x604d6b(%rip),%rax        # 60f388 <f_boot>
    a61d:	29 c2                	sub    %eax,%edx
    a61f:	89 d0                	mov    %edx,%eax
    a621:	89 c7                	mov    %eax,%edi
    a623:	e8 45 68 ff ff       	callq  e6d <v2r>
    a628:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 CELL(LFORTH)=0;
    a62e:	48 8b 05 53 4d 60 00 	mov    0x604d53(%rip),%rax        # 60f388 <f_boot>
    a635:	48 05 28 01 00 00    	add    $0x128,%rax
    a63b:	89 c2                	mov    %eax,%edx
    a63d:	48 8b 05 44 4d 60 00 	mov    0x604d44(%rip),%rax        # 60f388 <f_boot>
    a644:	29 c2                	sub    %eax,%edx
    a646:	89 d0                	mov    %edx,%eax
    a648:	89 c7                	mov    %eax,%edi
    a64a:	e8 1e 68 ff ff       	callq  e6d <v2r>
    a64f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 current=0;
    a655:	48 8b 05 2c 4d 60 00 	mov    0x604d2c(%rip),%rax        # 60f388 <f_boot>
    a65c:	48 05 74 01 00 00    	add    $0x174,%rax
    a662:	89 c2                	mov    %eax,%edx
    a664:	48 8b 05 1d 4d 60 00 	mov    0x604d1d(%rip),%rax        # 60f388 <f_boot>
    a66b:	29 c2                	sub    %eax,%edx
    a66d:	89 d0                	mov    %edx,%eax
    a66f:	89 c7                	mov    %eax,%edi
    a671:	e8 f7 67 ff ff       	callq  e6d <v2r>
    a676:	8b 00                	mov    (%rax),%eax
    a678:	89 c7                	mov    %eax,%edi
    a67a:	e8 ee 67 ff ff       	callq  e6d <v2r>
    a67f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 sp = MEMSIZE-32*2;
    a685:	48 8b 05 fc 4c 60 00 	mov    0x604cfc(%rip),%rax        # 60f388 <f_boot>
    a68c:	48 83 c0 04          	add    $0x4,%rax
    a690:	89 c2                	mov    %eax,%edx
    a692:	48 8b 05 ef 4c 60 00 	mov    0x604cef(%rip),%rax        # 60f388 <f_boot>
    a699:	29 c2                	sub    %eax,%edx
    a69b:	89 d0                	mov    %edx,%eax
    a69d:	48 63 d0             	movslq %eax,%rdx
    a6a0:	48 8d 05 39 4a 20 00 	lea    0x204a39(%rip),%rax        # 20f0e0 <mem>
    a6a7:	48 01 d0             	add    %rdx,%rax
    a6aa:	c7 00 c0 ff 3f 00    	movl   $0x3fffc0,(%rax)

PRIM("NOOP",sw_nop);
    a6b0:	be 00 00 00 00       	mov    $0x0,%esi
    a6b5:	48 8d 3d fc 30 00 00 	lea    0x30fc(%rip),%rdi        # d7b8 <_IO_stdin_used+0x2f8>
    a6bc:	e8 78 6d ff ff       	callq  1439 <PRIM>
PRIM("CHARS",sw_nop);
    a6c1:	be 00 00 00 00       	mov    $0x0,%esi
    a6c6:	48 8d 3d f0 30 00 00 	lea    0x30f0(%rip),%rdi        # d7bd <_IO_stdin_used+0x2fd>
    a6cd:	e8 67 6d ff ff       	callq  1439 <PRIM>
PRIM("SWAP",sw_swap);
    a6d2:	be 01 00 00 00       	mov    $0x1,%esi
    a6d7:	48 8d 3d e5 30 00 00 	lea    0x30e5(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    a6de:	e8 56 6d ff ff       	callq  1439 <PRIM>
PRIM("ROT",sw_rot);
    a6e3:	be 02 00 00 00       	mov    $0x2,%esi
    a6e8:	48 8d 3d d9 30 00 00 	lea    0x30d9(%rip),%rdi        # d7c8 <_IO_stdin_used+0x308>
    a6ef:	e8 45 6d ff ff       	callq  1439 <PRIM>
PRIM("-ROT",sw_rrot);
    a6f4:	be 03 00 00 00       	mov    $0x3,%esi
    a6f9:	48 8d 3d cc 30 00 00 	lea    0x30cc(%rip),%rdi        # d7cc <_IO_stdin_used+0x30c>
    a700:	e8 34 6d ff ff       	callq  1439 <PRIM>
PRIM("0=",sw_0equ);
    a705:	be 04 00 00 00       	mov    $0x4,%esi
    a70a:	48 8d 3d c0 30 00 00 	lea    0x30c0(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    a711:	e8 23 6d ff ff       	callq  1439 <PRIM>
PRIM("0<>",sw_0Nequ);
    a716:	be 05 00 00 00       	mov    $0x5,%esi
    a71b:	48 8d 3d b2 30 00 00 	lea    0x30b2(%rip),%rdi        # d7d4 <_IO_stdin_used+0x314>
    a722:	e8 12 6d ff ff       	callq  1439 <PRIM>
PRIM("0<",sw_0LT);
    a727:	be 06 00 00 00       	mov    $0x6,%esi
    a72c:	48 8d 3d a5 30 00 00 	lea    0x30a5(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    a733:	e8 01 6d ff ff       	callq  1439 <PRIM>
PRIM("0>",sw_0GT);
    a738:	be 07 00 00 00       	mov    $0x7,%esi
    a73d:	48 8d 3d 97 30 00 00 	lea    0x3097(%rip),%rdi        # d7db <_IO_stdin_used+0x31b>
    a744:	e8 f0 6c ff ff       	callq  1439 <PRIM>
PRIM("=",sw_equ);
    a749:	be 08 00 00 00       	mov    $0x8,%esi
    a74e:	48 8d 3d 89 30 00 00 	lea    0x3089(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    a755:	e8 df 6c ff ff       	callq  1439 <PRIM>
PRIM("<>",sw_nequ);
    a75a:	be 09 00 00 00       	mov    $0x9,%esi
    a75f:	48 8d 3d 7a 30 00 00 	lea    0x307a(%rip),%rdi        # d7e0 <_IO_stdin_used+0x320>
    a766:	e8 ce 6c ff ff       	callq  1439 <PRIM>
PRIM("NEGATE",sw_negate);
    a76b:	be 0a 00 00 00       	mov    $0xa,%esi
    a770:	48 8d 3d 6c 30 00 00 	lea    0x306c(%rip),%rdi        # d7e3 <_IO_stdin_used+0x323>
    a777:	e8 bd 6c ff ff       	callq  1439 <PRIM>
PRIM("INVERT",sw_invert);
    a77c:	be 0b 00 00 00       	mov    $0xb,%esi
    a781:	48 8d 3d 62 30 00 00 	lea    0x3062(%rip),%rdi        # d7ea <_IO_stdin_used+0x32a>
    a788:	e8 ac 6c ff ff       	callq  1439 <PRIM>
PRIM("UM*",sw_ummul);
    a78d:	be 0c 00 00 00       	mov    $0xc,%esi
    a792:	48 8d 3d 58 30 00 00 	lea    0x3058(%rip),%rdi        # d7f1 <_IO_stdin_used+0x331>
    a799:	e8 9b 6c ff ff       	callq  1439 <PRIM>
PRIM("C@",sw_Cload);
    a79e:	be 0d 00 00 00       	mov    $0xd,%esi
    a7a3:	48 8d 3d 4b 30 00 00 	lea    0x304b(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    a7aa:	e8 8a 6c ff ff       	callq  1439 <PRIM>
PRIM("W@",sw_Wload);
    a7af:	be 0e 00 00 00       	mov    $0xe,%esi
    a7b4:	48 8d 3d 3d 30 00 00 	lea    0x303d(%rip),%rdi        # d7f8 <_IO_stdin_used+0x338>
    a7bb:	e8 79 6c ff ff       	callq  1439 <PRIM>
PRIM("@",sw_load);
    a7c0:	be 0f 00 00 00       	mov    $0xf,%esi
    a7c5:	48 8d 3d 2f 30 00 00 	lea    0x302f(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    a7cc:	e8 68 6c ff ff       	callq  1439 <PRIM>
PRIM("ON",sw_on);
    a7d1:	be 33 00 00 00       	mov    $0x33,%esi
    a7d6:	48 8d 3d 20 30 00 00 	lea    0x3020(%rip),%rdi        # d7fd <_IO_stdin_used+0x33d>
    a7dd:	e8 57 6c ff ff       	callq  1439 <PRIM>
PRIM("0!",sw_0ST);
    a7e2:	be 34 00 00 00       	mov    $0x34,%esi
    a7e7:	48 8d 3d 12 30 00 00 	lea    0x3012(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    a7ee:	e8 46 6c ff ff       	callq  1439 <PRIM>
PRIM("1+",sw_1add);
    a7f3:	be 10 00 00 00       	mov    $0x10,%esi
    a7f8:	48 8d 3d 04 30 00 00 	lea    0x3004(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    a7ff:	e8 35 6c ff ff       	callq  1439 <PRIM>
PRIM("2+",sw_2add);
    a804:	be 11 00 00 00       	mov    $0x11,%esi
    a809:	48 8d 3d f6 2f 00 00 	lea    0x2ff6(%rip),%rdi        # d806 <_IO_stdin_used+0x346>
    a810:	e8 24 6c ff ff       	callq  1439 <PRIM>
PRIM("1-",sw_1sub);
    a815:	be 12 00 00 00       	mov    $0x12,%esi
    a81a:	48 8d 3d e8 2f 00 00 	lea    0x2fe8(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    a821:	e8 13 6c ff ff       	callq  1439 <PRIM>
PRIM("2-",sw_2sub);
    a826:	be 13 00 00 00       	mov    $0x13,%esi
    a82b:	48 8d 3d da 2f 00 00 	lea    0x2fda(%rip),%rdi        # d80c <_IO_stdin_used+0x34c>
    a832:	e8 02 6c ff ff       	callq  1439 <PRIM>
PRIM("2*",sw_2mul);
    a837:	be 14 00 00 00       	mov    $0x14,%esi
    a83c:	48 8d 3d cc 2f 00 00 	lea    0x2fcc(%rip),%rdi        # d80f <_IO_stdin_used+0x34f>
    a843:	e8 f1 6b ff ff       	callq  1439 <PRIM>
PRIM("2/",sw_2div);
    a848:	be 15 00 00 00       	mov    $0x15,%esi
    a84d:	48 8d 3d be 2f 00 00 	lea    0x2fbe(%rip),%rdi        # d812 <_IO_stdin_used+0x352>
    a854:	e8 e0 6b ff ff       	callq  1439 <PRIM>
PRIM("U2/",sw_u2div);
    a859:	be 16 00 00 00       	mov    $0x16,%esi
    a85e:	48 8d 3d b0 2f 00 00 	lea    0x2fb0(%rip),%rdi        # d815 <_IO_stdin_used+0x355>
    a865:	e8 cf 6b ff ff       	callq  1439 <PRIM>
PRIM("+",sw_add);
    a86a:	be 17 00 00 00       	mov    $0x17,%esi
    a86f:	48 8d 3d a3 2f 00 00 	lea    0x2fa3(%rip),%rdi        # d819 <_IO_stdin_used+0x359>
    a876:	e8 be 6b ff ff       	callq  1439 <PRIM>
PRIM("-",sw_sub);
    a87b:	be 18 00 00 00       	mov    $0x18,%esi
    a880:	48 8d 3d 94 2f 00 00 	lea    0x2f94(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    a887:	e8 ad 6b ff ff       	callq  1439 <PRIM>
PRIM("*",sw_mul);
    a88c:	be 19 00 00 00       	mov    $0x19,%esi
    a891:	48 8d 3d 85 2f 00 00 	lea    0x2f85(%rip),%rdi        # d81d <_IO_stdin_used+0x35d>
    a898:	e8 9c 6b ff ff       	callq  1439 <PRIM>
PRIM("/",sw_div);
    a89d:	be 1a 00 00 00       	mov    $0x1a,%esi
    a8a2:	48 8d 3d 76 2f 00 00 	lea    0x2f76(%rip),%rdi        # d81f <_IO_stdin_used+0x35f>
    a8a9:	e8 8b 6b ff ff       	callq  1439 <PRIM>
PRIM("MOD",sw_mod);
    a8ae:	be 1b 00 00 00       	mov    $0x1b,%esi
    a8b3:	48 8d 3d 67 2f 00 00 	lea    0x2f67(%rip),%rdi        # d821 <_IO_stdin_used+0x361>
    a8ba:	e8 7a 6b ff ff       	callq  1439 <PRIM>
PRIM("CELL/",sw_celldiv);
    a8bf:	be 1c 00 00 00       	mov    $0x1c,%esi
    a8c4:	48 8d 3d 5a 2f 00 00 	lea    0x2f5a(%rip),%rdi        # d825 <_IO_stdin_used+0x365>
    a8cb:	e8 69 6b ff ff       	callq  1439 <PRIM>
PRIM("CELLS",sw_cells);
    a8d0:	be 1d 00 00 00       	mov    $0x1d,%esi
    a8d5:	48 8d 3d 4f 2f 00 00 	lea    0x2f4f(%rip),%rdi        # d82b <_IO_stdin_used+0x36b>
    a8dc:	e8 58 6b ff ff       	callq  1439 <PRIM>
PRIM("CELL+",sw_cellp);
    a8e1:	be 1e 00 00 00       	mov    $0x1e,%esi
    a8e6:	48 8d 3d 44 2f 00 00 	lea    0x2f44(%rip),%rdi        # d831 <_IO_stdin_used+0x371>
    a8ed:	e8 47 6b ff ff       	callq  1439 <PRIM>
PRIM("CELL-",sw_cellm);
    a8f2:	be 1f 00 00 00       	mov    $0x1f,%esi
    a8f7:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # d837 <_IO_stdin_used+0x377>
    a8fe:	e8 36 6b ff ff       	callq  1439 <PRIM>
PRIM("AND",sw_and);
    a903:	be 20 00 00 00       	mov    $0x20,%esi
    a908:	48 8d 3d 2e 2f 00 00 	lea    0x2f2e(%rip),%rdi        # d83d <_IO_stdin_used+0x37d>
    a90f:	e8 25 6b ff ff       	callq  1439 <PRIM>
PRIM("OR",sw_or);
    a914:	be 21 00 00 00       	mov    $0x21,%esi
    a919:	48 8d 3d 21 2f 00 00 	lea    0x2f21(%rip),%rdi        # d841 <_IO_stdin_used+0x381>
    a920:	e8 14 6b ff ff       	callq  1439 <PRIM>
PRIM("XOR",sw_xor);
    a925:	be 22 00 00 00       	mov    $0x22,%esi
    a92a:	48 8d 3d 13 2f 00 00 	lea    0x2f13(%rip),%rdi        # d844 <_IO_stdin_used+0x384>
    a931:	e8 03 6b ff ff       	callq  1439 <PRIM>
PRIM("U<",sw_uLT);
    a936:	be 23 00 00 00       	mov    $0x23,%esi
    a93b:	48 8d 3d 06 2f 00 00 	lea    0x2f06(%rip),%rdi        # d848 <_IO_stdin_used+0x388>
    a942:	e8 f2 6a ff ff       	callq  1439 <PRIM>
PRIM("<",sw_LT);
    a947:	be 24 00 00 00       	mov    $0x24,%esi
    a94c:	48 8d 3d f8 2e 00 00 	lea    0x2ef8(%rip),%rdi        # d84b <_IO_stdin_used+0x38b>
    a953:	e8 e1 6a ff ff       	callq  1439 <PRIM>
PRIM("U>",sw_uGT);
    a958:	be 25 00 00 00       	mov    $0x25,%esi
    a95d:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # d84d <_IO_stdin_used+0x38d>
    a964:	e8 d0 6a ff ff       	callq  1439 <PRIM>
PRIM(">",sw_GT);
    a969:	be 26 00 00 00       	mov    $0x26,%esi
    a96e:	48 8d 3d db 2e 00 00 	lea    0x2edb(%rip),%rdi        # d850 <_IO_stdin_used+0x390>
    a975:	e8 bf 6a ff ff       	callq  1439 <PRIM>
PRIM("UMIN",sw_umin);
    a97a:	be 27 00 00 00       	mov    $0x27,%esi
    a97f:	48 8d 3d cc 2e 00 00 	lea    0x2ecc(%rip),%rdi        # d852 <_IO_stdin_used+0x392>
    a986:	e8 ae 6a ff ff       	callq  1439 <PRIM>
PRIM("UMAX",sw_umax);
    a98b:	be 28 00 00 00       	mov    $0x28,%esi
    a990:	48 8d 3d c0 2e 00 00 	lea    0x2ec0(%rip),%rdi        # d857 <_IO_stdin_used+0x397>
    a997:	e8 9d 6a ff ff       	callq  1439 <PRIM>
PRIM("MIN",sw_min);
    a99c:	be 29 00 00 00       	mov    $0x29,%esi
    a9a1:	48 8d 3d b4 2e 00 00 	lea    0x2eb4(%rip),%rdi        # d85c <_IO_stdin_used+0x39c>
    a9a8:	e8 8c 6a ff ff       	callq  1439 <PRIM>
PRIM("MAX",sw_max);
    a9ad:	be 2a 00 00 00       	mov    $0x2a,%esi
    a9b2:	48 8d 3d a7 2e 00 00 	lea    0x2ea7(%rip),%rdi        # d860 <_IO_stdin_used+0x3a0>
    a9b9:	e8 7b 6a ff ff       	callq  1439 <PRIM>
PRIM("LSHIFT",sw_lshift);
    a9be:	be 2b 00 00 00       	mov    $0x2b,%esi
    a9c3:	48 8d 3d 9a 2e 00 00 	lea    0x2e9a(%rip),%rdi        # d864 <_IO_stdin_used+0x3a4>
    a9ca:	e8 6a 6a ff ff       	callq  1439 <PRIM>
PRIM("RSHIFT",sw_rshift);
    a9cf:	be 2c 00 00 00       	mov    $0x2c,%esi
    a9d4:	48 8d 3d 90 2e 00 00 	lea    0x2e90(%rip),%rdi        # d86b <_IO_stdin_used+0x3ab>
    a9db:	e8 59 6a ff ff       	callq  1439 <PRIM>
PRIM("UM/MOD",sw_umSmod);
    a9e0:	be 2d 00 00 00       	mov    $0x2d,%esi
    a9e5:	48 8d 3d 86 2e 00 00 	lea    0x2e86(%rip),%rdi        # d872 <_IO_stdin_used+0x3b2>
    a9ec:	e8 48 6a ff ff       	callq  1439 <PRIM>
PRIM("+CY",sw_addcy);
    a9f1:	be 2e 00 00 00       	mov    $0x2e,%esi
    a9f6:	48 8d 3d 7c 2e 00 00 	lea    0x2e7c(%rip),%rdi        # d879 <_IO_stdin_used+0x3b9>
    a9fd:	e8 37 6a ff ff       	callq  1439 <PRIM>
PRIM("D+",sw_Dadd);
    aa02:	be 2f 00 00 00       	mov    $0x2f,%esi
    aa07:	48 8d 3d 6f 2e 00 00 	lea    0x2e6f(%rip),%rdi        # d87d <_IO_stdin_used+0x3bd>
    aa0e:	e8 26 6a ff ff       	callq  1439 <PRIM>
PRIM("SCAN1",sw_scan1);
    aa13:	be 30 00 00 00       	mov    $0x30,%esi
    aa18:	48 8d 3d 61 2e 00 00 	lea    0x2e61(%rip),%rdi        # d880 <_IO_stdin_used+0x3c0>
    aa1f:	e8 15 6a ff ff       	callq  1439 <PRIM>
PRIM("DROP",sw_drop);
    aa24:	be 31 00 00 00       	mov    $0x31,%esi
    aa29:	48 8d 3d 56 2e 00 00 	lea    0x2e56(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    aa30:	e8 04 6a ff ff       	callq  1439 <PRIM>
PRIM("2DROP",sw_2drop);
    aa35:	be 32 00 00 00       	mov    $0x32,%esi
    aa3a:	48 8d 3d 4a 2e 00 00 	lea    0x2e4a(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    aa41:	e8 f3 69 ff ff       	callq  1439 <PRIM>
PRIM("MLIT,",sw_litcomp);
    aa46:	be 52 00 00 00       	mov    $0x52,%esi
    aa4b:	48 8d 3d 3f 2e 00 00 	lea    0x2e3f(%rip),%rdi        # d891 <_IO_stdin_used+0x3d1>
    aa52:	e8 e2 69 ff ff       	callq  1439 <PRIM>
PRIM(",",sw_comp);
    aa57:	be 53 00 00 00       	mov    $0x53,%esi
    aa5c:	48 8d 3d 34 2e 00 00 	lea    0x2e34(%rip),%rdi        # d897 <_IO_stdin_used+0x3d7>
    aa63:	e8 d1 69 ff ff       	callq  1439 <PRIM>
PRIM("W,",sw_Wcomp);
    aa68:	be 54 00 00 00       	mov    $0x54,%esi
    aa6d:	48 8d 3d 25 2e 00 00 	lea    0x2e25(%rip),%rdi        # d899 <_IO_stdin_used+0x3d9>
    aa74:	e8 c0 69 ff ff       	callq  1439 <PRIM>
PRIM("C,",sw_Ccomp);
    aa79:	be 55 00 00 00       	mov    $0x55,%esi
    aa7e:	48 8d 3d 17 2e 00 00 	lea    0x2e17(%rip),%rdi        # d89c <_IO_stdin_used+0x3dc>
    aa85:	e8 af 69 ff ff       	callq  1439 <PRIM>
PRIM("ALLOT",sw_allot);
    aa8a:	be 56 00 00 00       	mov    $0x56,%esi
    aa8f:	48 8d 3d 09 2e 00 00 	lea    0x2e09(%rip),%rdi        # d89f <_IO_stdin_used+0x3df>
    aa96:	e8 9e 69 ff ff       	callq  1439 <PRIM>
PRIM("PERFORM",sw_perform);
    aa9b:	be 57 00 00 00       	mov    $0x57,%esi
    aaa0:	48 8d 3d fe 2d 00 00 	lea    0x2dfe(%rip),%rdi        # d8a5 <_IO_stdin_used+0x3e5>
    aaa7:	e8 8d 69 ff ff       	callq  1439 <PRIM>
PRIM("EXECUTE",sw_execute);
    aaac:	be 58 00 00 00       	mov    $0x58,%esi
    aab1:	48 8d 3d f5 2d 00 00 	lea    0x2df5(%rip),%rdi        # d8ad <_IO_stdin_used+0x3ed>
    aab8:	e8 7c 69 ff ff       	callq  1439 <PRIM>
PRIM("COMPILE,",sw_compile);
    aabd:	be 59 00 00 00       	mov    $0x59,%esi
    aac2:	48 8d 3d ec 2d 00 00 	lea    0x2dec(%rip),%rdi        # d8b5 <_IO_stdin_used+0x3f5>
    aac9:	e8 6b 69 ff ff       	callq  1439 <PRIM>
PRIM("IMMEDIATE",sw_immediate);
    aace:	be 5a 00 00 00       	mov    $0x5a,%esi
    aad3:	48 8d 3d e4 2d 00 00 	lea    0x2de4(%rip),%rdi        # d8be <_IO_stdin_used+0x3fe>
    aada:	e8 5a 69 ff ff       	callq  1439 <PRIM>
PRIM("NAME>",sw_FromName);
    aadf:	be 5b 00 00 00       	mov    $0x5b,%esi
    aae4:	48 8d 3d dd 2d 00 00 	lea    0x2ddd(%rip),%rdi        # d8c8 <_IO_stdin_used+0x408>
    aaeb:	e8 49 69 ff ff       	callq  1439 <PRIM>
PRIM(">BODY",sw_cellp);
    aaf0:	be 1e 00 00 00       	mov    $0x1e,%esi
    aaf5:	48 8d 3d d2 2d 00 00 	lea    0x2dd2(%rip),%rdi        # d8ce <_IO_stdin_used+0x40e>
    aafc:	e8 38 69 ff ff       	callq  1439 <PRIM>
PRIM("SP@",sw_spload);
    ab01:	be 5e 00 00 00       	mov    $0x5e,%esi
    ab06:	48 8d 3d c7 2d 00 00 	lea    0x2dc7(%rip),%rdi        # d8d4 <_IO_stdin_used+0x414>
    ab0d:	e8 27 69 ff ff       	callq  1439 <PRIM>
PRIM("SP!",sw_spST);
    ab12:	be 5f 00 00 00       	mov    $0x5f,%esi
    ab17:	48 8d 3d ba 2d 00 00 	lea    0x2dba(%rip),%rdi        # d8d8 <_IO_stdin_used+0x418>
    ab1e:	e8 16 69 ff ff       	callq  1439 <PRIM>
PRIM("RP@",sw_rpload);
    ab23:	be 60 00 00 00       	mov    $0x60,%esi
    ab28:	48 8d 3d ad 2d 00 00 	lea    0x2dad(%rip),%rdi        # d8dc <_IO_stdin_used+0x41c>
    ab2f:	e8 05 69 ff ff       	callq  1439 <PRIM>
PRIM("RP!",sw_rpST);
    ab34:	be 61 00 00 00       	mov    $0x61,%esi
    ab39:	48 8d 3d a0 2d 00 00 	lea    0x2da0(%rip),%rdi        # d8e0 <_IO_stdin_used+0x420>
    ab40:	e8 f4 68 ff ff       	callq  1439 <PRIM>

PRIM("THROW",sw_throw);
    ab45:	be 64 00 00 00       	mov    $0x64,%esi
    ab4a:	48 8d 3d 93 2d 00 00 	lea    0x2d93(%rip),%rdi        # d8e4 <_IO_stdin_used+0x424>
    ab51:	e8 e3 68 ff ff       	callq  1439 <PRIM>
PRIM("!",sw_ST);
    ab56:	be 35 00 00 00       	mov    $0x35,%esi
    ab5b:	48 8d 3d 88 2d 00 00 	lea    0x2d88(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    ab62:	e8 d2 68 ff ff       	callq  1439 <PRIM>
PRIM("+!",sw_addST);
    ab67:	be 36 00 00 00       	mov    $0x36,%esi
    ab6c:	48 8d 3d 79 2d 00 00 	lea    0x2d79(%rip),%rdi        # d8ec <_IO_stdin_used+0x42c>
    ab73:	e8 c1 68 ff ff       	callq  1439 <PRIM>
PRIM("C!",sw_cST);
    ab78:	be 37 00 00 00       	mov    $0x37,%esi
    ab7d:	48 8d 3d 6b 2d 00 00 	lea    0x2d6b(%rip),%rdi        # d8ef <_IO_stdin_used+0x42f>
    ab84:	e8 b0 68 ff ff       	callq  1439 <PRIM>
PRIM("W!",sw_wST);
    ab89:	be 38 00 00 00       	mov    $0x38,%esi
    ab8e:	48 8d 3d 5d 2d 00 00 	lea    0x2d5d(%rip),%rdi        # d8f2 <_IO_stdin_used+0x432>
    ab95:	e8 9f 68 ff ff       	callq  1439 <PRIM>
PRIM("2!",sw_2ST);
    ab9a:	be 39 00 00 00       	mov    $0x39,%esi
    ab9f:	48 8d 3d 4f 2d 00 00 	lea    0x2d4f(%rip),%rdi        # d8f5 <_IO_stdin_used+0x435>
    aba6:	e8 8e 68 ff ff       	callq  1439 <PRIM>
PRIM("2@",sw_2load);
    abab:	be 3a 00 00 00       	mov    $0x3a,%esi
    abb0:	48 8d 3d 41 2d 00 00 	lea    0x2d41(%rip),%rdi        # d8f8 <_IO_stdin_used+0x438>
    abb7:	e8 7d 68 ff ff       	callq  1439 <PRIM>
PRIM("2SWAP",sw_2swap);
    abbc:	be 3b 00 00 00       	mov    $0x3b,%esi
    abc1:	48 8d 3d 33 2d 00 00 	lea    0x2d33(%rip),%rdi        # d8fb <_IO_stdin_used+0x43b>
    abc8:	e8 6c 68 ff ff       	callq  1439 <PRIM>
PRIM("C!A",sw_cSTa);
    abcd:	be 3c 00 00 00       	mov    $0x3c,%esi
    abd2:	48 8d 3d 28 2d 00 00 	lea    0x2d28(%rip),%rdi        # d901 <_IO_stdin_used+0x441>
    abd9:	e8 5b 68 ff ff       	callq  1439 <PRIM>
PRIM("VFMADR",sw_VFMAdr);
    abde:	be 3d 00 00 00       	mov    $0x3d,%esi
    abe3:	48 8d 3d 1b 2d 00 00 	lea    0x2d1b(%rip),%rdi        # d905 <_IO_stdin_used+0x445>
    abea:	e8 4a 68 ff ff       	callq  1439 <PRIM>
PRIM("P@",sw_PLoad);
    abef:	be 3e 00 00 00       	mov    $0x3e,%esi
    abf4:	48 8d 3d 11 2d 00 00 	lea    0x2d11(%rip),%rdi        # d90c <_IO_stdin_used+0x44c>
    abfb:	e8 39 68 ff ff       	callq  1439 <PRIM>
PRIM("P!",sw_PST);
    ac00:	be 3f 00 00 00       	mov    $0x3f,%esi
    ac05:	48 8d 3d 03 2d 00 00 	lea    0x2d03(%rip),%rdi        # d90f <_IO_stdin_used+0x44f>
    ac0c:	e8 28 68 ff ff       	callq  1439 <PRIM>
PRIM("PC@",sw_CPLoad);
    ac11:	be 40 00 00 00       	mov    $0x40,%esi
    ac16:	48 8d 3d f5 2c 00 00 	lea    0x2cf5(%rip),%rdi        # d912 <_IO_stdin_used+0x452>
    ac1d:	e8 17 68 ff ff       	callq  1439 <PRIM>
PRIM("PDUMP",sw_PDump);
    ac22:	be 41 00 00 00       	mov    $0x41,%esi
    ac27:	48 8d 3d e8 2c 00 00 	lea    0x2ce8(%rip),%rdi        # d916 <_IO_stdin_used+0x456>
    ac2e:	e8 06 68 ff ff       	callq  1439 <PRIM>
PRIM("?DUP",sw_qdup);
    ac33:	be 42 00 00 00       	mov    $0x42,%esi
    ac38:	48 8d 3d dd 2c 00 00 	lea    0x2cdd(%rip),%rdi        # d91c <_IO_stdin_used+0x45c>
    ac3f:	e8 f5 67 ff ff       	callq  1439 <PRIM>
PRIM("DUP",sw_dup);
    ac44:	be 43 00 00 00       	mov    $0x43,%esi
    ac49:	48 8d 3d d1 2c 00 00 	lea    0x2cd1(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    ac50:	e8 e4 67 ff ff       	callq  1439 <PRIM>
PRIM("2DUP",sw_2dup);
    ac55:	be 44 00 00 00       	mov    $0x44,%esi
    ac5a:	48 8d 3d c4 2c 00 00 	lea    0x2cc4(%rip),%rdi        # d925 <_IO_stdin_used+0x465>
    ac61:	e8 d3 67 ff ff       	callq  1439 <PRIM>
PRIM("OVER",sw_over);
    ac66:	be 45 00 00 00       	mov    $0x45,%esi
    ac6b:	48 8d 3d b8 2c 00 00 	lea    0x2cb8(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    ac72:	e8 c2 67 ff ff       	callq  1439 <PRIM>
PRIM("2OVER",sw_2over);
    ac77:	be 46 00 00 00       	mov    $0x46,%esi
    ac7c:	48 8d 3d ac 2c 00 00 	lea    0x2cac(%rip),%rdi        # d92f <_IO_stdin_used+0x46f>
    ac83:	e8 b1 67 ff ff       	callq  1439 <PRIM>
PRIM("R@",sw_rload);
    ac88:	be 47 00 00 00       	mov    $0x47,%esi
    ac8d:	48 8d 3d a1 2c 00 00 	lea    0x2ca1(%rip),%rdi        # d935 <_IO_stdin_used+0x475>
    ac94:	e8 a0 67 ff ff       	callq  1439 <PRIM>
PRIM("R>",sw_rGT);
    ac99:	be 48 00 00 00       	mov    $0x48,%esi
    ac9e:	48 8d 3d 93 2c 00 00 	lea    0x2c93(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    aca5:	e8 8f 67 ff ff       	callq  1439 <PRIM>
PRIM("RDROP",sw_rdrop);
    acaa:	be 49 00 00 00       	mov    $0x49,%esi
    acaf:	48 8d 3d 85 2c 00 00 	lea    0x2c85(%rip),%rdi        # d93b <_IO_stdin_used+0x47b>
    acb6:	e8 7e 67 ff ff       	callq  1439 <PRIM>
PRIM("DUP>R",sw_dupGTr);
    acbb:	be 4a 00 00 00       	mov    $0x4a,%esi
    acc0:	48 8d 3d 7a 2c 00 00 	lea    0x2c7a(%rip),%rdi        # d941 <_IO_stdin_used+0x481>
    acc7:	e8 6d 67 ff ff       	callq  1439 <PRIM>
PRIM(">R",sw_GTr);
    accc:	be 4b 00 00 00       	mov    $0x4b,%esi
    acd1:	48 8d 3d 6f 2c 00 00 	lea    0x2c6f(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    acd8:	e8 5c 67 ff ff       	callq  1439 <PRIM>
PRIM("2R@",sw_2rload);
    acdd:	be 4c 00 00 00       	mov    $0x4c,%esi
    ace2:	48 8d 3d 61 2c 00 00 	lea    0x2c61(%rip),%rdi        # d94a <_IO_stdin_used+0x48a>
    ace9:	e8 4b 67 ff ff       	callq  1439 <PRIM>
PRIM("2R>",sw_2rGT);
    acee:	be 4d 00 00 00       	mov    $0x4d,%esi
    acf3:	48 8d 3d 54 2c 00 00 	lea    0x2c54(%rip),%rdi        # d94e <_IO_stdin_used+0x48e>
    acfa:	e8 3a 67 ff ff       	callq  1439 <PRIM>
PRIM("2RDROP",sw_2rdrop);
    acff:	be 4e 00 00 00       	mov    $0x4e,%esi
    ad04:	48 8d 3d 47 2c 00 00 	lea    0x2c47(%rip),%rdi        # d952 <_IO_stdin_used+0x492>
    ad0b:	e8 29 67 ff ff       	callq  1439 <PRIM>
PRIM("2>R",sw_2GTr);
    ad10:	be 4f 00 00 00       	mov    $0x4f,%esi
    ad15:	48 8d 3d 3d 2c 00 00 	lea    0x2c3d(%rip),%rdi        # d959 <_IO_stdin_used+0x499>
    ad1c:	e8 18 67 ff ff       	callq  1439 <PRIM>
PRIM("KEY",sw_key);
    ad21:	be 73 00 00 00       	mov    $0x73,%esi
    ad26:	48 8d 3d 30 2c 00 00 	lea    0x2c30(%rip),%rdi        # d95d <_IO_stdin_used+0x49d>
    ad2d:	e8 07 67 ff ff       	callq  1439 <PRIM>
PRIM("KEY?",sw_keyq);
    ad32:	be 74 00 00 00       	mov    $0x74,%esi
    ad37:	48 8d 3d 23 2c 00 00 	lea    0x2c23(%rip),%rdi        # d961 <_IO_stdin_used+0x4a1>
    ad3e:	e8 f6 66 ff ff       	callq  1439 <PRIM>
PRIM("PORT@",sw_port);
    ad43:	be 71 00 00 00       	mov    $0x71,%esi
    ad48:	48 8d 3d 17 2c 00 00 	lea    0x2c17(%rip),%rdi        # d966 <_IO_stdin_used+0x4a6>
    ad4f:	e8 e5 66 ff ff       	callq  1439 <PRIM>
PRIM("PORT?",sw_portq);
    ad54:	be 72 00 00 00       	mov    $0x72,%esi
    ad59:	48 8d 3d 0c 2c 00 00 	lea    0x2c0c(%rip),%rdi        # d96c <_IO_stdin_used+0x4ac>
    ad60:	e8 d4 66 ff ff       	callq  1439 <PRIM>
PRIM("EMIT",sw_emit);
    ad65:	be 75 00 00 00       	mov    $0x75,%esi
    ad6a:	48 8d 3d 01 2c 00 00 	lea    0x2c01(%rip),%rdi        # d972 <_IO_stdin_used+0x4b2>
    ad71:	e8 c3 66 ff ff       	callq  1439 <PRIM>
PRIM("TYPE",sw_type);
    ad76:	be 76 00 00 00       	mov    $0x76,%esi
    ad7b:	48 8d 3d f5 2b 00 00 	lea    0x2bf5(%rip),%rdi        # d977 <_IO_stdin_used+0x4b7>
    ad82:	e8 b2 66 ff ff       	callq  1439 <PRIM>
PRIM("MS",sw_ms);
    ad87:	be 99 00 00 00       	mov    $0x99,%esi
    ad8c:	48 8d 3d e9 2b 00 00 	lea    0x2be9(%rip),%rdi        # d97c <_IO_stdin_used+0x4bc>
    ad93:	e8 a1 66 ff ff       	callq  1439 <PRIM>
PRIM("HI",sw_hi);
    ad98:	be 9a 00 00 00       	mov    $0x9a,%esi
    ad9d:	48 8d 3d db 2b 00 00 	lea    0x2bdb(%rip),%rdi        # d97f <_IO_stdin_used+0x4bf>
    ada4:	e8 90 66 ff ff       	callq  1439 <PRIM>
PRIM("H.",sw_hdot);
    ada9:	be 77 00 00 00       	mov    $0x77,%esi
    adae:	48 8d 3d cd 2b 00 00 	lea    0x2bcd(%rip),%rdi        # d982 <_IO_stdin_used+0x4c2>
    adb5:	e8 7f 66 ff ff       	callq  1439 <PRIM>
PRIM("DEC.",sw_decdot);
    adba:	be 78 00 00 00       	mov    $0x78,%esi
    adbf:	48 8d 3d bf 2b 00 00 	lea    0x2bbf(%rip),%rdi        # d985 <_IO_stdin_used+0x4c5>
    adc6:	e8 6e 66 ff ff       	callq  1439 <PRIM>
PRIM("COUNT",sw_count);
    adcb:	be 79 00 00 00       	mov    $0x79,%esi
    add0:	48 8d 3d b3 2b 00 00 	lea    0x2bb3(%rip),%rdi        # d98a <_IO_stdin_used+0x4ca>
    add7:	e8 5d 66 ff ff       	callq  1439 <PRIM>
PRIM("SLIT,",sw_slitComp);
    addc:	be 7c 00 00 00       	mov    $0x7c,%esi
    ade1:	48 8d 3d a8 2b 00 00 	lea    0x2ba8(%rip),%rdi        # d990 <_IO_stdin_used+0x4d0>
    ade8:	e8 4c 66 ff ff       	callq  1439 <PRIM>
PRIM("S\",",sw_StrComp);
    aded:	be 7d 00 00 00       	mov    $0x7d,%esi
    adf2:	48 8d 3d 9d 2b 00 00 	lea    0x2b9d(%rip),%rdi        # d996 <_IO_stdin_used+0x4d6>
    adf9:	e8 3b 66 ff ff       	callq  1439 <PRIM>
PRIM("COMPARE",sw_Compare);
    adfe:	be 7e 00 00 00       	mov    $0x7e,%esi
    ae03:	48 8d 3d 90 2b 00 00 	lea    0x2b90(%rip),%rdi        # d99a <_IO_stdin_used+0x4da>
    ae0a:	e8 2a 66 ff ff       	callq  1439 <PRIM>
PRIM("PARSE-NAME",sw_NextWord);
    ae0f:	be 7f 00 00 00       	mov    $0x7f,%esi
    ae14:	48 8d 3d 87 2b 00 00 	lea    0x2b87(%rip),%rdi        # d9a2 <_IO_stdin_used+0x4e2>
    ae1b:	e8 19 66 ff ff       	callq  1439 <PRIM>
PRIM("PARSE",sw_Parse);
    ae20:	be 8b 00 00 00       	mov    $0x8b,%esi
    ae25:	48 8d 3d 81 2b 00 00 	lea    0x2b81(%rip),%rdi        # d9ad <_IO_stdin_used+0x4ed>
    ae2c:	e8 08 66 ff ff       	callq  1439 <PRIM>
PRIM("C\"", sw_CQ); IMMED();
    ae31:	be 8c 00 00 00       	mov    $0x8c,%esi
    ae36:	48 8d 3d 76 2b 00 00 	lea    0x2b76(%rip),%rdi        # d9b3 <_IO_stdin_used+0x4f3>
    ae3d:	e8 f7 65 ff ff       	callq  1439 <PRIM>
    ae42:	b8 00 00 00 00       	mov    $0x0,%eax
    ae47:	e8 86 65 ff ff       	callq  13d2 <IMMED>
PRIM("S\"", sw_SQ); IMMED();
    ae4c:	be 8d 00 00 00       	mov    $0x8d,%esi
    ae51:	48 8d 3d 5e 2b 00 00 	lea    0x2b5e(%rip),%rdi        # d9b6 <_IO_stdin_used+0x4f6>
    ae58:	e8 dc 65 ff ff       	callq  1439 <PRIM>
    ae5d:	b8 00 00 00 00       	mov    $0x0,%eax
    ae62:	e8 6b 65 ff ff       	callq  13d2 <IMMED>
PRIM(".\"", sw_PQ); IMMED();
    ae67:	be 8e 00 00 00       	mov    $0x8e,%esi
    ae6c:	48 8d 3d 46 2b 00 00 	lea    0x2b46(%rip),%rdi        # d9b9 <_IO_stdin_used+0x4f9>
    ae73:	e8 c1 65 ff ff       	callq  1439 <PRIM>
    ae78:	b8 00 00 00 00       	mov    $0x0,%eax
    ae7d:	e8 50 65 ff ff       	callq  13d2 <IMMED>
PRIM("SOURCE",sw_Source);
    ae82:	be 8f 00 00 00       	mov    $0x8f,%esi
    ae87:	48 8d 3d 2e 2b 00 00 	lea    0x2b2e(%rip),%rdi        # d9bc <_IO_stdin_used+0x4fc>
    ae8e:	e8 a6 65 ff ff       	callq  1439 <PRIM>
PRIM("SOURCE!",sw_SourceST);
    ae93:	be 90 00 00 00       	mov    $0x90,%esi
    ae98:	48 8d 3d 24 2b 00 00 	lea    0x2b24(%rip),%rdi        # d9c3 <_IO_stdin_used+0x503>
    ae9f:	e8 95 65 ff ff       	callq  1439 <PRIM>
PRIM("SEARCH-WORDLIST",sw_SearchWordList);
    aea4:	be 92 00 00 00       	mov    $0x92,%esi
    aea9:	48 8d 3d 1b 2b 00 00 	lea    0x2b1b(%rip),%rdi        # d9cb <_IO_stdin_used+0x50b>
    aeb0:	e8 84 65 ff ff       	callq  1439 <PRIM>
PRIM("SFIND",sw_SFind);
    aeb5:	be 91 00 00 00       	mov    $0x91,%esi
    aeba:	48 8d 3d 1a 2b 00 00 	lea    0x2b1a(%rip),%rdi        # d9db <_IO_stdin_used+0x51b>
    aec1:	e8 73 65 ff ff       	callq  1439 <PRIM>
PRIM("SHEADER_",sw_SHeader);
    aec6:	be 93 00 00 00       	mov    $0x93,%esi
    aecb:	48 8d 3d 0f 2b 00 00 	lea    0x2b0f(%rip),%rdi        # d9e1 <_IO_stdin_used+0x521>
    aed2:	e8 62 65 ff ff       	callq  1439 <PRIM>

PRIM("BEGIN",sw_BEGIN); IMMED();
    aed7:	be 68 00 00 00       	mov    $0x68,%esi
    aedc:	48 8d 3d 07 2b 00 00 	lea    0x2b07(%rip),%rdi        # d9ea <_IO_stdin_used+0x52a>
    aee3:	e8 51 65 ff ff       	callq  1439 <PRIM>
    aee8:	b8 00 00 00 00       	mov    $0x0,%eax
    aeed:	e8 e0 64 ff ff       	callq  13d2 <IMMED>
PRIM("AGAIN",sw_AGAIN); IMMED();
    aef2:	be 69 00 00 00       	mov    $0x69,%esi
    aef7:	48 8d 3d f2 2a 00 00 	lea    0x2af2(%rip),%rdi        # d9f0 <_IO_stdin_used+0x530>
    aefe:	e8 36 65 ff ff       	callq  1439 <PRIM>
    af03:	b8 00 00 00 00       	mov    $0x0,%eax
    af08:	e8 c5 64 ff ff       	callq  13d2 <IMMED>
PRIM("UNTIL",sw_UNTIL); IMMED();
    af0d:	be 6a 00 00 00       	mov    $0x6a,%esi
    af12:	48 8d 3d dd 2a 00 00 	lea    0x2add(%rip),%rdi        # d9f6 <_IO_stdin_used+0x536>
    af19:	e8 1b 65 ff ff       	callq  1439 <PRIM>
    af1e:	b8 00 00 00 00       	mov    $0x0,%eax
    af23:	e8 aa 64 ff ff       	callq  13d2 <IMMED>
PRIM("AHEAD",sw_AHEAD); IMMED();
    af28:	be 6b 00 00 00       	mov    $0x6b,%esi
    af2d:	48 8d 3d c8 2a 00 00 	lea    0x2ac8(%rip),%rdi        # d9fc <_IO_stdin_used+0x53c>
    af34:	e8 00 65 ff ff       	callq  1439 <PRIM>
    af39:	b8 00 00 00 00       	mov    $0x0,%eax
    af3e:	e8 8f 64 ff ff       	callq  13d2 <IMMED>
PRIM("IF",sw_IF); IMMED();
    af43:	be 6c 00 00 00       	mov    $0x6c,%esi
    af48:	48 8d 3d b3 2a 00 00 	lea    0x2ab3(%rip),%rdi        # da02 <_IO_stdin_used+0x542>
    af4f:	e8 e5 64 ff ff       	callq  1439 <PRIM>
    af54:	b8 00 00 00 00       	mov    $0x0,%eax
    af59:	e8 74 64 ff ff       	callq  13d2 <IMMED>
PRIM("WHILE",sw_WHILE); IMMED();
    af5e:	be 6d 00 00 00       	mov    $0x6d,%esi
    af63:	48 8d 3d 9b 2a 00 00 	lea    0x2a9b(%rip),%rdi        # da05 <_IO_stdin_used+0x545>
    af6a:	e8 ca 64 ff ff       	callq  1439 <PRIM>
    af6f:	b8 00 00 00 00       	mov    $0x0,%eax
    af74:	e8 59 64 ff ff       	callq  13d2 <IMMED>
PRIM("THEN",sw_THEN); IMMED();
    af79:	be 6e 00 00 00       	mov    $0x6e,%esi
    af7e:	48 8d 3d 86 2a 00 00 	lea    0x2a86(%rip),%rdi        # da0b <_IO_stdin_used+0x54b>
    af85:	e8 af 64 ff ff       	callq  1439 <PRIM>
    af8a:	b8 00 00 00 00       	mov    $0x0,%eax
    af8f:	e8 3e 64 ff ff       	callq  13d2 <IMMED>
PRIM("ELSE",sw_ELSE); IMMED();
    af94:	be 6f 00 00 00       	mov    $0x6f,%esi
    af99:	48 8d 3d 70 2a 00 00 	lea    0x2a70(%rip),%rdi        # da10 <_IO_stdin_used+0x550>
    afa0:	e8 94 64 ff ff       	callq  1439 <PRIM>
    afa5:	b8 00 00 00 00       	mov    $0x0,%eax
    afaa:	e8 23 64 ff ff       	callq  13d2 <IMMED>
PRIM("REPEAT",sw_REPEAT); IMMED();
    afaf:	be 70 00 00 00       	mov    $0x70,%esi
    afb4:	48 8d 3d 5a 2a 00 00 	lea    0x2a5a(%rip),%rdi        # da15 <_IO_stdin_used+0x555>
    afbb:	e8 79 64 ff ff       	callq  1439 <PRIM>
    afc0:	b8 00 00 00 00       	mov    $0x0,%eax
    afc5:	e8 08 64 ff ff       	callq  13d2 <IMMED>

PRIM("OPEN-FILE",sw_openfile);
    afca:	be 80 00 00 00       	mov    $0x80,%esi
    afcf:	48 8d 3d 46 2a 00 00 	lea    0x2a46(%rip),%rdi        # da1c <_IO_stdin_used+0x55c>
    afd6:	e8 5e 64 ff ff       	callq  1439 <PRIM>
PRIM("CLOSE-FILE",sw_closefile);
    afdb:	be 81 00 00 00       	mov    $0x81,%esi
    afe0:	48 8d 3d 3f 2a 00 00 	lea    0x2a3f(%rip),%rdi        # da26 <_IO_stdin_used+0x566>
    afe7:	e8 4d 64 ff ff       	callq  1439 <PRIM>

PRIM("FILE2ERR",sw_File2err);
    afec:	be 83 00 00 00       	mov    $0x83,%esi
    aff1:	48 8d 3d 39 2a 00 00 	lea    0x2a39(%rip),%rdi        # da31 <_IO_stdin_used+0x571>
    aff8:	e8 3c 64 ff ff       	callq  1439 <PRIM>
PRIM("FE-TYPE",sw_FileErrType);
    affd:	be 82 00 00 00       	mov    $0x82,%esi
    b002:	48 8d 3d 31 2a 00 00 	lea    0x2a31(%rip),%rdi        # da3a <_IO_stdin_used+0x57a>
    b009:	e8 2b 64 ff ff       	callq  1439 <PRIM>

PRIM("WRITE-LINE",sw_writeline);
    b00e:	be 84 00 00 00       	mov    $0x84,%esi
    b013:	48 8d 3d 28 2a 00 00 	lea    0x2a28(%rip),%rdi        # da42 <_IO_stdin_used+0x582>
    b01a:	e8 1a 64 ff ff       	callq  1439 <PRIM>
PRIM("READ-LINE",sw_readline);
    b01f:	be 85 00 00 00       	mov    $0x85,%esi
    b024:	48 8d 3d 22 2a 00 00 	lea    0x2a22(%rip),%rdi        # da4d <_IO_stdin_used+0x58d>
    b02b:	e8 09 64 ff ff       	callq  1439 <PRIM>

PRIM("WRITE-FILE",sw_writefile);
    b030:	be 86 00 00 00       	mov    $0x86,%esi
    b035:	48 8d 3d 1b 2a 00 00 	lea    0x2a1b(%rip),%rdi        # da57 <_IO_stdin_used+0x597>
    b03c:	e8 f8 63 ff ff       	callq  1439 <PRIM>
PRIM("READ-FILE",sw_readfile);
    b041:	be 87 00 00 00       	mov    $0x87,%esi
    b046:	48 8d 3d 15 2a 00 00 	lea    0x2a15(%rip),%rdi        # da62 <_IO_stdin_used+0x5a2>
    b04d:	e8 e7 63 ff ff       	callq  1439 <PRIM>

PRIM("REPOSITION-FILE",sw_repositionfile);
    b052:	be 88 00 00 00       	mov    $0x88,%esi
    b057:	48 8d 3d 0e 2a 00 00 	lea    0x2a0e(%rip),%rdi        # da6c <_IO_stdin_used+0x5ac>
    b05e:	e8 d6 63 ff ff       	callq  1439 <PRIM>
PRIM("FILE-POSITION",sw_fileposition);
    b063:	be 89 00 00 00       	mov    $0x89,%esi
    b068:	48 8d 3d 0d 2a 00 00 	lea    0x2a0d(%rip),%rdi        # da7c <_IO_stdin_used+0x5bc>
    b06f:	e8 c5 63 ff ff       	callq  1439 <PRIM>
PRIM("FILE-SIZE",sw_filesize);
    b074:	be 8a 00 00 00       	mov    $0x8a,%esi
    b079:	48 8d 3d 0a 2a 00 00 	lea    0x2a0a(%rip),%rdi        # da8a <_IO_stdin_used+0x5ca>
    b080:	e8 b4 63 ff ff       	callq  1439 <PRIM>

PRIM("ALLOCATE",sw_alloc);
    b085:	be 94 00 00 00       	mov    $0x94,%esi
    b08a:	48 8d 3d 03 2a 00 00 	lea    0x2a03(%rip),%rdi        # da94 <_IO_stdin_used+0x5d4>
    b091:	e8 a3 63 ff ff       	callq  1439 <PRIM>
PRIM("FREE",sw_free);
    b096:	be 95 00 00 00       	mov    $0x95,%esi
    b09b:	48 8d 3d fb 29 00 00 	lea    0x29fb(%rip),%rdi        # da9d <_IO_stdin_used+0x5dd>
    b0a2:	e8 92 63 ff ff       	callq  1439 <PRIM>
PRIM("VATR",sw_vatr);
    b0a7:	be 96 00 00 00       	mov    $0x96,%esi
    b0ac:	48 8d 3d ef 29 00 00 	lea    0x29ef(%rip),%rdi        # daa2 <_IO_stdin_used+0x5e2>
    b0b3:	e8 81 63 ff ff       	callq  1439 <PRIM>
PRIM("FNT",sw_FNType);
    b0b8:	be 97 00 00 00       	mov    $0x97,%esi
    b0bd:	48 8d 3d e3 29 00 00 	lea    0x29e3(%rip),%rdi        # daa7 <_IO_stdin_used+0x5e7>
    b0c4:	e8 70 63 ff ff       	callq  1439 <PRIM>
PRIM("HALT",sw_halt);
    b0c9:	be 98 00 00 00       	mov    $0x98,%esi
    b0ce:	48 8d 3d d6 29 00 00 	lea    0x29d6(%rip),%rdi        # daab <_IO_stdin_used+0x5eb>
    b0d5:	e8 5f 63 ff ff       	callq  1439 <PRIM>

HEADER("EXECUTE"); current=last; COM(sw_GTr<<1|0x4001);
    b0da:	48 8d 3d cc 27 00 00 	lea    0x27cc(%rip),%rdi        # d8ad <_IO_stdin_used+0x3ed>
    b0e1:	e8 ae 62 ff ff       	callq  1394 <HEADER>
    b0e6:	48 8b 05 9b 42 60 00 	mov    0x60429b(%rip),%rax        # 60f388 <f_boot>
    b0ed:	48 05 24 01 00 00    	add    $0x124,%rax
    b0f3:	89 c2                	mov    %eax,%edx
    b0f5:	48 8b 05 8c 42 60 00 	mov    0x60428c(%rip),%rax        # 60f388 <f_boot>
    b0fc:	29 c2                	sub    %eax,%edx
    b0fe:	89 d0                	mov    %edx,%eax
    b100:	89 c7                	mov    %eax,%edi
    b102:	e8 66 5d ff ff       	callq  e6d <v2r>
    b107:	48 89 c3             	mov    %rax,%rbx
    b10a:	48 8b 05 77 42 60 00 	mov    0x604277(%rip),%rax        # 60f388 <f_boot>
    b111:	48 05 74 01 00 00    	add    $0x174,%rax
    b117:	89 c2                	mov    %eax,%edx
    b119:	48 8b 05 68 42 60 00 	mov    0x604268(%rip),%rax        # 60f388 <f_boot>
    b120:	29 c2                	sub    %eax,%edx
    b122:	89 d0                	mov    %edx,%eax
    b124:	89 c7                	mov    %eax,%edi
    b126:	e8 42 5d ff ff       	callq  e6d <v2r>
    b12b:	8b 00                	mov    (%rax),%eax
    b12d:	89 c7                	mov    %eax,%edi
    b12f:	e8 39 5d ff ff       	callq  e6d <v2r>
    b134:	48 89 c2             	mov    %rax,%rdx
    b137:	8b 03                	mov    (%rbx),%eax
    b139:	89 02                	mov    %eax,(%rdx)
    b13b:	bf 97 40 00 00       	mov    $0x4097,%edi
    b140:	e8 72 5f ff ff       	callq  10b7 <COM>

CONSTANT("CELL",4);
    b145:	be 04 00 00 00       	mov    $0x4,%esi
    b14a:	48 8d 3d 5f 29 00 00 	lea    0x295f(%rip),%rdi        # dab0 <_IO_stdin_used+0x5f0>
    b151:	e8 6d 63 ff ff       	callq  14c3 <CONSTANT>
CONSTANT(">IN",TO_IN);
    b156:	48 8b 05 2b 42 60 00 	mov    0x60422b(%rip),%rax        # 60f388 <f_boot>
    b15d:	48 83 c0 08          	add    $0x8,%rax
    b161:	89 c2                	mov    %eax,%edx
    b163:	48 8b 05 1e 42 60 00 	mov    0x60421e(%rip),%rax        # 60f388 <f_boot>
    b16a:	29 c2                	sub    %eax,%edx
    b16c:	89 d0                	mov    %edx,%eax
    b16e:	89 c6                	mov    %eax,%esi
    b170:	48 8d 3d 3e 29 00 00 	lea    0x293e(%rip),%rdi        # dab5 <_IO_stdin_used+0x5f5>
    b177:	e8 47 63 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("STATE",STATE);
    b17c:	48 8b 05 05 42 60 00 	mov    0x604205(%rip),%rax        # 60f388 <f_boot>
    b183:	48 05 14 01 00 00    	add    $0x114,%rax
    b189:	89 c2                	mov    %eax,%edx
    b18b:	48 8b 05 f6 41 60 00 	mov    0x6041f6(%rip),%rax        # 60f388 <f_boot>
    b192:	29 c2                	sub    %eax,%edx
    b194:	89 d0                	mov    %edx,%eax
    b196:	89 c6                	mov    %eax,%esi
    b198:	48 8d 3d 1a 29 00 00 	lea    0x291a(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    b19f:	e8 1f 63 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("[EXIT]",0x8001);
    b1a4:	be 01 80 00 00       	mov    $0x8001,%esi
    b1a9:	48 8d 3d 0f 29 00 00 	lea    0x290f(%rip),%rdi        # dabf <_IO_stdin_used+0x5ff>
    b1b0:	e8 0e 63 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("C/L",TIB_SAZE);
    b1b5:	be 00 01 00 00       	mov    $0x100,%esi
    b1ba:	48 8d 3d 05 29 00 00 	lea    0x2905(%rip),%rdi        # dac6 <_IO_stdin_used+0x606>
    b1c1:	e8 fd 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("ATIB",ATIB);
    b1c6:	48 8b 05 bb 41 60 00 	mov    0x6041bb(%rip),%rax        # 60f388 <f_boot>
    b1cd:	48 05 10 01 00 00    	add    $0x110,%rax
    b1d3:	89 c2                	mov    %eax,%edx
    b1d5:	48 8b 05 ac 41 60 00 	mov    0x6041ac(%rip),%rax        # 60f388 <f_boot>
    b1dc:	29 c2                	sub    %eax,%edx
    b1de:	89 d0                	mov    %edx,%eax
    b1e0:	89 c6                	mov    %eax,%esi
    b1e2:	48 8d 3d e1 28 00 00 	lea    0x28e1(%rip),%rdi        # daca <_IO_stdin_used+0x60a>
    b1e9:	e8 d5 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("TTIB",TTIB);
    b1ee:	48 8b 05 93 41 60 00 	mov    0x604193(%rip),%rax        # 60f388 <f_boot>
    b1f5:	48 83 c0 10          	add    $0x10,%rax
    b1f9:	89 c2                	mov    %eax,%edx
    b1fb:	48 8b 05 86 41 60 00 	mov    0x604186(%rip),%rax        # 60f388 <f_boot>
    b202:	29 c2                	sub    %eax,%edx
    b204:	89 d0                	mov    %edx,%eax
    b206:	89 c6                	mov    %eax,%esi
    b208:	48 8d 3d c0 28 00 00 	lea    0x28c0(%rip),%rdi        # dacf <_IO_stdin_used+0x60f>
    b20f:	e8 af 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("#TIB",NTIB);
    b214:	48 8b 05 6d 41 60 00 	mov    0x60416d(%rip),%rax        # 60f388 <f_boot>
    b21b:	48 83 c0 0c          	add    $0xc,%rax
    b21f:	89 c2                	mov    %eax,%edx
    b221:	48 8b 05 60 41 60 00 	mov    0x604160(%rip),%rax        # 60f388 <f_boot>
    b228:	29 c2                	sub    %eax,%edx
    b22a:	89 d0                	mov    %edx,%eax
    b22c:	89 c6                	mov    %eax,%esi
    b22e:	48 8d 3d 9f 28 00 00 	lea    0x289f(%rip),%rdi        # dad4 <_IO_stdin_used+0x614>
    b235:	e8 89 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("DP",DPOINT);
    b23a:	48 8b 05 47 41 60 00 	mov    0x604147(%rip),%rax        # 60f388 <f_boot>
    b241:	48 05 20 01 00 00    	add    $0x120,%rax
    b247:	89 c2                	mov    %eax,%edx
    b249:	48 8b 05 38 41 60 00 	mov    0x604138(%rip),%rax        # 60f388 <f_boot>
    b250:	29 c2                	sub    %eax,%edx
    b252:	89 d0                	mov    %edx,%eax
    b254:	89 c6                	mov    %eax,%esi
    b256:	48 8d 3d 7c 28 00 00 	lea    0x287c(%rip),%rdi        # dad9 <_IO_stdin_used+0x619>
    b25d:	e8 61 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("CURRENT",CURRENT);
    b262:	48 8b 05 1f 41 60 00 	mov    0x60411f(%rip),%rax        # 60f388 <f_boot>
    b269:	48 05 74 01 00 00    	add    $0x174,%rax
    b26f:	89 c2                	mov    %eax,%edx
    b271:	48 8b 05 10 41 60 00 	mov    0x604110(%rip),%rax        # 60f388 <f_boot>
    b278:	29 c2                	sub    %eax,%edx
    b27a:	89 d0                	mov    %edx,%eax
    b27c:	89 c6                	mov    %eax,%esi
    b27e:	48 8d 3d 57 28 00 00 	lea    0x2857(%rip),%rdi        # dadc <_IO_stdin_used+0x61c>
    b285:	e8 39 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("CONTEXT",CONTEXT);
    b28a:	48 8b 05 f7 40 60 00 	mov    0x6040f7(%rip),%rax        # 60f388 <f_boot>
    b291:	48 05 30 01 00 00    	add    $0x130,%rax
    b297:	89 c2                	mov    %eax,%edx
    b299:	48 8b 05 e8 40 60 00 	mov    0x6040e8(%rip),%rax        # 60f388 <f_boot>
    b2a0:	29 c2                	sub    %eax,%edx
    b2a2:	89 d0                	mov    %edx,%eax
    b2a4:	89 c6                	mov    %eax,%esi
    b2a6:	48 8d 3d 37 28 00 00 	lea    0x2837(%rip),%rdi        # dae4 <_IO_stdin_used+0x624>
    b2ad:	e8 11 62 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("LAST",LAST);
    b2b2:	48 8b 05 cf 40 60 00 	mov    0x6040cf(%rip),%rax        # 60f388 <f_boot>
    b2b9:	48 05 24 01 00 00    	add    $0x124,%rax
    b2bf:	89 c2                	mov    %eax,%edx
    b2c1:	48 8b 05 c0 40 60 00 	mov    0x6040c0(%rip),%rax        # 60f388 <f_boot>
    b2c8:	29 c2                	sub    %eax,%edx
    b2ca:	89 d0                	mov    %edx,%eax
    b2cc:	89 c6                	mov    %eax,%esi
    b2ce:	48 8d 3d 17 28 00 00 	lea    0x2817(%rip),%rdi        # daec <_IO_stdin_used+0x62c>
    b2d5:	e8 e9 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("FORTH-WORDLIST",VFORTH);
    b2da:	48 8b 05 a7 40 60 00 	mov    0x6040a7(%rip),%rax        # 60f388 <f_boot>
    b2e1:	48 05 2c 01 00 00    	add    $0x12c,%rax
    b2e7:	89 c2                	mov    %eax,%edx
    b2e9:	48 8b 05 98 40 60 00 	mov    0x604098(%rip),%rax        # 60f388 <f_boot>
    b2f0:	29 c2                	sub    %eax,%edx
    b2f2:	89 d0                	mov    %edx,%eax
    b2f4:	89 c6                	mov    %eax,%esi
    b2f6:	48 8d 3d f4 27 00 00 	lea    0x27f4(%rip),%rdi        # daf1 <_IO_stdin_used+0x631>
    b2fd:	e8 c1 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("CREATE-CODE",sw_ip<<1|0x4001);
    b302:	be a1 40 00 00       	mov    $0x40a1,%esi
    b307:	48 8d 3d f2 27 00 00 	lea    0x27f2(%rip),%rdi        # db00 <_IO_stdin_used+0x640>
    b30e:	e8 b0 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("CONSTANT-CODE",sw_lit<<1|0x4001);
    b313:	be a3 40 00 00       	mov    $0x40a3,%esi
    b318:	48 8d 3d ed 27 00 00 	lea    0x27ed(%rip),%rdi        # db0c <_IO_stdin_used+0x64c>
    b31f:	e8 9f 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("BRANCH-CODE",sw_branch<<1|1);
    b324:	be cd 00 00 00       	mov    $0xcd,%esi
    b329:	48 8d 3d ea 27 00 00 	lea    0x27ea(%rip),%rdi        # db1a <_IO_stdin_used+0x65a>
    b330:	e8 8e 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("PPPP",0x55);
    b335:	be 55 00 00 00       	mov    $0x55,%esi
    b33a:	48 8d 3d e5 27 00 00 	lea    0x27e5(%rip),%rdi        # db26 <_IO_stdin_used+0x666>
    b341:	e8 7d 61 ff ff       	callq  14c3 <CONSTANT>


CONSTANT("R/O",O_RDONLY);
    b346:	be 00 00 00 00       	mov    $0x0,%esi
    b34b:	48 8d 3d d9 27 00 00 	lea    0x27d9(%rip),%rdi        # db2b <_IO_stdin_used+0x66b>
    b352:	e8 6c 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("W/O",O_WRONLY);
    b357:	be 01 00 00 00       	mov    $0x1,%esi
    b35c:	48 8d 3d cc 27 00 00 	lea    0x27cc(%rip),%rdi        # db2f <_IO_stdin_used+0x66f>
    b363:	e8 5b 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("R/W",O_RDWR);
    b368:	be 02 00 00 00       	mov    $0x2,%esi
    b36d:	48 8d 3d bf 27 00 00 	lea    0x27bf(%rip),%rdi        # db33 <_IO_stdin_used+0x673>
    b374:	e8 4a 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("O_CREAT",O_CREAT);
    b379:	be 40 00 00 00       	mov    $0x40,%esi
    b37e:	48 8d 3d b2 27 00 00 	lea    0x27b2(%rip),%rdi        # db37 <_IO_stdin_used+0x677>
    b385:	e8 39 61 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("O_TRUNC",O_TRUNC);
    b38a:	be 00 02 00 00       	mov    $0x200,%esi
    b38f:	48 8d 3d a9 27 00 00 	lea    0x27a9(%rip),%rdi        # db3f <_IO_stdin_used+0x67f>
    b396:	e8 28 61 ff ff       	callq  14c3 <CONSTANT>

HERE+=0x300;
    b39b:	48 8b 05 e6 3f 60 00 	mov    0x603fe6(%rip),%rax        # 60f388 <f_boot>
    b3a2:	48 05 20 01 00 00    	add    $0x120,%rax
    b3a8:	89 c2                	mov    %eax,%edx
    b3aa:	48 8b 05 d7 3f 60 00 	mov    0x603fd7(%rip),%rax        # 60f388 <f_boot>
    b3b1:	29 c2                	sub    %eax,%edx
    b3b3:	89 d0                	mov    %edx,%eax
    b3b5:	89 c7                	mov    %eax,%edi
    b3b7:	e8 b1 5a ff ff       	callq  e6d <v2r>
    b3bc:	8b 10                	mov    (%rax),%edx
    b3be:	81 c2 00 03 00 00    	add    $0x300,%edx
    b3c4:	89 10                	mov    %edx,(%rax)

CONSTANT("PAD",HERE-0x100);
    b3c6:	48 8b 05 bb 3f 60 00 	mov    0x603fbb(%rip),%rax        # 60f388 <f_boot>
    b3cd:	48 05 20 01 00 00    	add    $0x120,%rax
    b3d3:	89 c2                	mov    %eax,%edx
    b3d5:	48 8b 05 ac 3f 60 00 	mov    0x603fac(%rip),%rax        # 60f388 <f_boot>
    b3dc:	29 c2                	sub    %eax,%edx
    b3de:	89 d0                	mov    %edx,%eax
    b3e0:	89 c7                	mov    %eax,%edi
    b3e2:	e8 86 5a ff ff       	callq  e6d <v2r>
    b3e7:	8b 00                	mov    (%rax),%eax
    b3e9:	2d 00 01 00 00       	sub    $0x100,%eax
    b3ee:	89 c6                	mov    %eax,%esi
    b3f0:	48 8d 3d 50 27 00 00 	lea    0x2750(%rip),%rdi        # db47 <_IO_stdin_used+0x687>
    b3f7:	e8 c7 60 ff ff       	callq  14c3 <CONSTANT>

VARIABLE("DPL");
    b3fc:	48 8d 3d 48 27 00 00 	lea    0x2748(%rip),%rdi        # db4b <_IO_stdin_used+0x68b>
    b403:	e8 c8 61 ff ff       	callq  15d0 <VARIABLE>
VARIABLE("BASE");
    b408:	48 8d 3d 40 27 00 00 	lea    0x2740(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b40f:	e8 bc 61 ff ff       	callq  15d0 <VARIABLE>
VARIABLE("SP0");
    b414:	48 8d 3d 39 27 00 00 	lea    0x2739(%rip),%rdi        # db54 <_IO_stdin_used+0x694>
    b41b:	e8 b0 61 ff ff       	callq  15d0 <VARIABLE>
VARIABLE("CURSTR");
    b420:	48 8d 3d 31 27 00 00 	lea    0x2731(%rip),%rdi        # db58 <_IO_stdin_used+0x698>
    b427:	e8 a4 61 ff ff       	callq  15d0 <VARIABLE>
VARIABLE("SAVEERR?");
    b42c:	48 8d 3d 2c 27 00 00 	lea    0x272c(%rip),%rdi        # db5f <_IO_stdin_used+0x69f>
    b433:	e8 98 61 ff ff       	callq  15d0 <VARIABLE>

CONSTANT("STDOUT",OUTPUT);
    b438:	48 8b 05 49 3f 60 00 	mov    0x603f49(%rip),%rax        # 60f388 <f_boot>
    b43f:	48 05 78 01 00 00    	add    $0x178,%rax
    b445:	89 c2                	mov    %eax,%edx
    b447:	48 8b 05 3a 3f 60 00 	mov    0x603f3a(%rip),%rax        # 60f388 <f_boot>
    b44e:	29 c2                	sub    %eax,%edx
    b450:	89 d0                	mov    %edx,%eax
    b452:	89 c6                	mov    %eax,%esi
    b454:	48 8d 3d 0d 27 00 00 	lea    0x270d(%rip),%rdi        # db68 <_IO_stdin_used+0x6a8>
    b45b:	e8 63 60 ff ff       	callq  14c3 <CONSTANT>

CONSTANT("STDIN",INPUT);
    b460:	48 8b 05 21 3f 60 00 	mov    0x603f21(%rip),%rax        # 60f388 <f_boot>
    b467:	48 05 7c 01 00 00    	add    $0x17c,%rax
    b46d:	89 c2                	mov    %eax,%edx
    b46f:	48 8b 05 12 3f 60 00 	mov    0x603f12(%rip),%rax        # 60f388 <f_boot>
    b476:	29 c2                	sub    %eax,%edx
    b478:	89 d0                	mov    %edx,%eax
    b47a:	89 c6                	mov    %eax,%esi
    b47c:	48 8d 3d ec 26 00 00 	lea    0x26ec(%rip),%rdi        # db6f <_IO_stdin_used+0x6af>
    b483:	e8 3b 60 ff ff       	callq  14c3 <CONSTANT>
CONSTANT("SID",INPUT);
    b488:	48 8b 05 f9 3e 60 00 	mov    0x603ef9(%rip),%rax        # 60f388 <f_boot>
    b48f:	48 05 7c 01 00 00    	add    $0x17c,%rax
    b495:	89 c2                	mov    %eax,%edx
    b497:	48 8b 05 ea 3e 60 00 	mov    0x603eea(%rip),%rax        # 60f388 <f_boot>
    b49e:	29 c2                	sub    %eax,%edx
    b4a0:	89 d0                	mov    %edx,%eax
    b4a2:	89 c6                	mov    %eax,%esi
    b4a4:	48 8d 3d ca 26 00 00 	lea    0x26ca(%rip),%rdi        # db75 <_IO_stdin_used+0x6b5>
    b4ab:	e8 13 60 ff ff       	callq  14c3 <CONSTANT>

HEADER("LIT,"); COM(sw_litcomp<<1|1);
    b4b0:	48 8d 3d c2 26 00 00 	lea    0x26c2(%rip),%rdi        # db79 <_IO_stdin_used+0x6b9>
    b4b7:	e8 d8 5e ff ff       	callq  1394 <HEADER>
    b4bc:	bf a5 00 00 00       	mov    $0xa5,%edi
    b4c1:	e8 f1 5b ff ff       	callq  10b7 <COM>
F_END();
    b4c6:	b8 00 00 00 00       	mov    $0x0,%eax
    b4cb:	e8 76 64 ff ff       	callq  1946 <F_END>

HEADER("SHEADER"); CC("SHEADER_"); F_END();
    b4d0:	48 8d 3d a7 26 00 00 	lea    0x26a7(%rip),%rdi        # db7e <_IO_stdin_used+0x6be>
    b4d7:	e8 b8 5e ff ff       	callq  1394 <HEADER>
    b4dc:	48 8d 3d fe 24 00 00 	lea    0x24fe(%rip),%rdi        # d9e1 <_IO_stdin_used+0x521>
    b4e3:	e8 a7 62 ff ff       	callq  178f <CC>
    b4e8:	b8 00 00 00 00       	mov    $0x0,%eax
    b4ed:	e8 54 64 ff ff       	callq  1946 <F_END>
HEADER("DECIMAL");
    b4f2:	48 8d 3d 8d 26 00 00 	lea    0x268d(%rip),%rdi        # db86 <_IO_stdin_used+0x6c6>
    b4f9:	e8 96 5e ff ff       	callq  1394 <HEADER>
// TP(" DECIMAL");
 LIT(10); CC("BASE");  CC("!"); F_END();
    b4fe:	bf 0a 00 00 00       	mov    $0xa,%edi
    b503:	e8 d0 6b ff ff       	callq  20d8 <LIT>
    b508:	48 8d 3d 40 26 00 00 	lea    0x2640(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b50f:	e8 7b 62 ff ff       	callq  178f <CC>
    b514:	48 8d 3d cf 23 00 00 	lea    0x23cf(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    b51b:	e8 6f 62 ff ff       	callq  178f <CC>
    b520:	b8 00 00 00 00       	mov    $0x0,%eax
    b525:	e8 1c 64 ff ff       	callq  1946 <F_END>
HEADER("HEX");     LIT(16); CC("BASE");  CC("!"); F_END();
    b52a:	48 8d 3d 5d 26 00 00 	lea    0x265d(%rip),%rdi        # db8e <_IO_stdin_used+0x6ce>
    b531:	e8 5e 5e ff ff       	callq  1394 <HEADER>
    b536:	bf 10 00 00 00       	mov    $0x10,%edi
    b53b:	e8 98 6b ff ff       	callq  20d8 <LIT>
    b540:	48 8d 3d 08 26 00 00 	lea    0x2608(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b547:	e8 43 62 ff ff       	callq  178f <CC>
    b54c:	48 8d 3d 97 23 00 00 	lea    0x2397(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    b553:	e8 37 62 ff ff       	callq  178f <CC>
    b558:	b8 00 00 00 00       	mov    $0x0,%eax
    b55d:	e8 e4 63 ff ff       	callq  1946 <F_END>
HEADER("["); CC("STATE");  CC("0!"); F_END();  IMMED();
    b562:	48 8d 3d 29 26 00 00 	lea    0x2629(%rip),%rdi        # db92 <_IO_stdin_used+0x6d2>
    b569:	e8 26 5e ff ff       	callq  1394 <HEADER>
    b56e:	48 8d 3d 44 25 00 00 	lea    0x2544(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    b575:	e8 15 62 ff ff       	callq  178f <CC>
    b57a:	48 8d 3d 7f 22 00 00 	lea    0x227f(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    b581:	e8 09 62 ff ff       	callq  178f <CC>
    b586:	b8 00 00 00 00       	mov    $0x0,%eax
    b58b:	e8 b6 63 ff ff       	callq  1946 <F_END>
    b590:	b8 00 00 00 00       	mov    $0x0,%eax
    b595:	e8 38 5e ff ff       	callq  13d2 <IMMED>
HEADER("]"); CC("STATE");  CC("ON"); F_END();
    b59a:	48 8d 3d f3 25 00 00 	lea    0x25f3(%rip),%rdi        # db94 <_IO_stdin_used+0x6d4>
    b5a1:	e8 ee 5d ff ff       	callq  1394 <HEADER>
    b5a6:	48 8d 3d 0c 25 00 00 	lea    0x250c(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    b5ad:	e8 dd 61 ff ff       	callq  178f <CC>
    b5b2:	48 8d 3d 44 22 00 00 	lea    0x2244(%rip),%rdi        # d7fd <_IO_stdin_used+0x33d>
    b5b9:	e8 d1 61 ff ff       	callq  178f <CC>
    b5be:	b8 00 00 00 00       	mov    $0x0,%eax
    b5c3:	e8 7e 63 ff ff       	callq  1946 <F_END>
HEADER("TIB"); CC("ATIB");  CC("@"); F_END();
    b5c8:	48 8d 3d c7 25 00 00 	lea    0x25c7(%rip),%rdi        # db96 <_IO_stdin_used+0x6d6>
    b5cf:	e8 c0 5d ff ff       	callq  1394 <HEADER>
    b5d4:	48 8d 3d ef 24 00 00 	lea    0x24ef(%rip),%rdi        # daca <_IO_stdin_used+0x60a>
    b5db:	e8 af 61 ff ff       	callq  178f <CC>
    b5e0:	48 8d 3d 14 22 00 00 	lea    0x2214(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    b5e7:	e8 a3 61 ff ff       	callq  178f <CC>
    b5ec:	b8 00 00 00 00       	mov    $0x0,%eax
    b5f1:	e8 50 63 ff ff       	callq  1946 <F_END>


HEADER("CATCH");
    b5f6:	48 8d 3d 9d 25 00 00 	lea    0x259d(%rip),%rdi        # db9a <_IO_stdin_used+0x6da>
    b5fd:	e8 92 5d ff ff       	callq  1394 <HEADER>
COM(sw_to_catch<<1|1);
    b602:	bf c5 00 00 00       	mov    $0xc5,%edi
    b607:	e8 ab 5a ff ff       	callq  10b7 <COM>
COM(sw_from_catch<<1|1);
    b60c:	bf c7 00 00 00       	mov    $0xc7,%edi
    b611:	e8 a1 5a ff ff       	callq  10b7 <COM>
F_END();
    b616:	b8 00 00 00 00       	mov    $0x0,%eax
    b61b:	e8 26 63 ff ff       	callq  1946 <F_END>

 //CC("PARSE-NAME");   CC("2DUP"); CC("TYPE");   CC("2DROP");
  // CC("SHEADER");  CC("LAST"); CC("@"); CC("CURRENT"); CC("@"); CC("!");
// F_END();

 HEADER("DNEGATE"); // ( d1 --- d2)
    b620:	48 8d 3d 79 25 00 00 	lea    0x2579(%rip),%rdi        # dba0 <_IO_stdin_used+0x6e0>
    b627:	e8 68 5d ff ff       	callq  1394 <HEADER>
 // Negate the top double number on the stack.
 CC(">R");
    b62c:	48 8d 3d 14 23 00 00 	lea    0x2314(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    b633:	e8 57 61 ff ff       	callq  178f <CC>
 CC("NEGATE");
    b638:	48 8d 3d a4 21 00 00 	lea    0x21a4(%rip),%rdi        # d7e3 <_IO_stdin_used+0x323>
    b63f:	e8 4b 61 ff ff       	callq  178f <CC>
 CC("R>");
    b644:	48 8d 3d ed 22 00 00 	lea    0x22ed(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    b64b:	e8 3f 61 ff ff       	callq  178f <CC>
 CC("NEGATE");
    b650:	48 8d 3d 8c 21 00 00 	lea    0x218c(%rip),%rdi        # d7e3 <_IO_stdin_used+0x323>
    b657:	e8 33 61 ff ff       	callq  178f <CC>
 CC("OVER");
    b65c:	48 8d 3d c7 22 00 00 	lea    0x22c7(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    b663:	e8 27 61 ff ff       	callq  178f <CC>
 CC("0<>");
    b668:	48 8d 3d 65 21 00 00 	lea    0x2165(%rip),%rdi        # d7d4 <_IO_stdin_used+0x314>
    b66f:	e8 1b 61 ff ff       	callq  178f <CC>
 CC("+");
    b674:	48 8d 3d 9e 21 00 00 	lea    0x219e(%rip),%rdi        # d819 <_IO_stdin_used+0x359>
    b67b:	e8 0f 61 ff ff       	callq  178f <CC>
 F_END();
    b680:	b8 00 00 00 00       	mov    $0x0,%eax
    b685:	e8 bc 62 ff ff       	callq  1946 <F_END>


 HEADER("DIGIT?"); // ( c -- 0| c--- n -1)
    b68a:	48 8d 3d 17 25 00 00 	lea    0x2517(%rip),%rdi        # dba8 <_IO_stdin_used+0x6e8>
    b691:	e8 fe 5c ff ff       	callq  1394 <HEADER>
 // Convert character c to its digit value n and return true if c is a
 // digit in the current base. Otherwise return false.
 LIT('0'); CC("-"); CC("DUP"); CC("0<"); IF(); CC("DROP"); LIT(0); COM(0x8001); THEN();
    b696:	bf 30 00 00 00       	mov    $0x30,%edi
    b69b:	e8 38 6a ff ff       	callq  20d8 <LIT>
    b6a0:	48 8d 3d 74 21 00 00 	lea    0x2174(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    b6a7:	e8 e3 60 ff ff       	callq  178f <CC>
    b6ac:	48 8d 3d 6e 22 00 00 	lea    0x226e(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b6b3:	e8 d7 60 ff ff       	callq  178f <CC>
    b6b8:	48 8d 3d 19 21 00 00 	lea    0x2119(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    b6bf:	e8 cb 60 ff ff       	callq  178f <CC>
    b6c4:	b8 00 00 00 00       	mov    $0x0,%eax
    b6c9:	e8 07 66 ff ff       	callq  1cd5 <IF>
    b6ce:	48 8d 3d b1 21 00 00 	lea    0x21b1(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    b6d5:	e8 b5 60 ff ff       	callq  178f <CC>
    b6da:	bf 00 00 00 00       	mov    $0x0,%edi
    b6df:	e8 f4 69 ff ff       	callq  20d8 <LIT>
    b6e4:	bf 01 80 00 00       	mov    $0x8001,%edi
    b6e9:	e8 c9 59 ff ff       	callq  10b7 <COM>
    b6ee:	b8 00 00 00 00       	mov    $0x0,%eax
    b6f3:	e8 0f 68 ff ff       	callq  1f07 <THEN>
 CC("DUP"); LIT(9); CC(">"); CC("OVER"); LIT(17); CC("<"); CC("AND"); IF(); CC("DROP"); LIT(0); COM(0x8001); THEN();
    b6f8:	48 8d 3d 22 22 00 00 	lea    0x2222(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b6ff:	e8 8b 60 ff ff       	callq  178f <CC>
    b704:	bf 09 00 00 00       	mov    $0x9,%edi
    b709:	e8 ca 69 ff ff       	callq  20d8 <LIT>
    b70e:	48 8d 3d 3b 21 00 00 	lea    0x213b(%rip),%rdi        # d850 <_IO_stdin_used+0x390>
    b715:	e8 75 60 ff ff       	callq  178f <CC>
    b71a:	48 8d 3d 09 22 00 00 	lea    0x2209(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    b721:	e8 69 60 ff ff       	callq  178f <CC>
    b726:	bf 11 00 00 00       	mov    $0x11,%edi
    b72b:	e8 a8 69 ff ff       	callq  20d8 <LIT>
    b730:	48 8d 3d 14 21 00 00 	lea    0x2114(%rip),%rdi        # d84b <_IO_stdin_used+0x38b>
    b737:	e8 53 60 ff ff       	callq  178f <CC>
    b73c:	48 8d 3d fa 20 00 00 	lea    0x20fa(%rip),%rdi        # d83d <_IO_stdin_used+0x37d>
    b743:	e8 47 60 ff ff       	callq  178f <CC>
    b748:	b8 00 00 00 00       	mov    $0x0,%eax
    b74d:	e8 83 65 ff ff       	callq  1cd5 <IF>
    b752:	48 8d 3d 2d 21 00 00 	lea    0x212d(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    b759:	e8 31 60 ff ff       	callq  178f <CC>
    b75e:	bf 00 00 00 00       	mov    $0x0,%edi
    b763:	e8 70 69 ff ff       	callq  20d8 <LIT>
    b768:	bf 01 80 00 00       	mov    $0x8001,%edi
    b76d:	e8 45 59 ff ff       	callq  10b7 <COM>
    b772:	b8 00 00 00 00       	mov    $0x0,%eax
    b777:	e8 8b 67 ff ff       	callq  1f07 <THEN>
 CC("DUP"); LIT(9);  CC(">"); IF();  LIT(7); CC("-"); THEN();
    b77c:	48 8d 3d 9e 21 00 00 	lea    0x219e(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b783:	e8 07 60 ff ff       	callq  178f <CC>
    b788:	bf 09 00 00 00       	mov    $0x9,%edi
    b78d:	e8 46 69 ff ff       	callq  20d8 <LIT>
    b792:	48 8d 3d b7 20 00 00 	lea    0x20b7(%rip),%rdi        # d850 <_IO_stdin_used+0x390>
    b799:	e8 f1 5f ff ff       	callq  178f <CC>
    b79e:	b8 00 00 00 00       	mov    $0x0,%eax
    b7a3:	e8 2d 65 ff ff       	callq  1cd5 <IF>
    b7a8:	bf 07 00 00 00       	mov    $0x7,%edi
    b7ad:	e8 26 69 ff ff       	callq  20d8 <LIT>
    b7b2:	48 8d 3d 62 20 00 00 	lea    0x2062(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    b7b9:	e8 d1 5f ff ff       	callq  178f <CC>
    b7be:	b8 00 00 00 00       	mov    $0x0,%eax
    b7c3:	e8 3f 67 ff ff       	callq  1f07 <THEN>
 CC("DUP"); LIT(41); CC(">"); IF();  LIT(32); CC("-"); THEN();
    b7c8:	48 8d 3d 52 21 00 00 	lea    0x2152(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b7cf:	e8 bb 5f ff ff       	callq  178f <CC>
    b7d4:	bf 29 00 00 00       	mov    $0x29,%edi
    b7d9:	e8 fa 68 ff ff       	callq  20d8 <LIT>
    b7de:	48 8d 3d 6b 20 00 00 	lea    0x206b(%rip),%rdi        # d850 <_IO_stdin_used+0x390>
    b7e5:	e8 a5 5f ff ff       	callq  178f <CC>
    b7ea:	b8 00 00 00 00       	mov    $0x0,%eax
    b7ef:	e8 e1 64 ff ff       	callq  1cd5 <IF>
    b7f4:	bf 20 00 00 00       	mov    $0x20,%edi
    b7f9:	e8 da 68 ff ff       	callq  20d8 <LIT>
    b7fe:	48 8d 3d 16 20 00 00 	lea    0x2016(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    b805:	e8 85 5f ff ff       	callq  178f <CC>
    b80a:	b8 00 00 00 00       	mov    $0x0,%eax
    b80f:	e8 f3 66 ff ff       	callq  1f07 <THEN>
 CC("DUP"); CC("BASE"); CC("@"); CC("<"); CC("0="); IF(); CC("DROP"); LIT(0); COM(0x8001); THEN();
    b814:	48 8d 3d 06 21 00 00 	lea    0x2106(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b81b:	e8 6f 5f ff ff       	callq  178f <CC>
    b820:	48 8d 3d 28 23 00 00 	lea    0x2328(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b827:	e8 63 5f ff ff       	callq  178f <CC>
    b82c:	48 8d 3d c8 1f 00 00 	lea    0x1fc8(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    b833:	e8 57 5f ff ff       	callq  178f <CC>
    b838:	48 8d 3d 0c 20 00 00 	lea    0x200c(%rip),%rdi        # d84b <_IO_stdin_used+0x38b>
    b83f:	e8 4b 5f ff ff       	callq  178f <CC>
    b844:	48 8d 3d 86 1f 00 00 	lea    0x1f86(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    b84b:	e8 3f 5f ff ff       	callq  178f <CC>
    b850:	b8 00 00 00 00       	mov    $0x0,%eax
    b855:	e8 7b 64 ff ff       	callq  1cd5 <IF>
    b85a:	48 8d 3d 25 20 00 00 	lea    0x2025(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    b861:	e8 29 5f ff ff       	callq  178f <CC>
    b866:	bf 00 00 00 00       	mov    $0x0,%edi
    b86b:	e8 68 68 ff ff       	callq  20d8 <LIT>
    b870:	bf 01 80 00 00       	mov    $0x8001,%edi
    b875:	e8 3d 58 ff ff       	callq  10b7 <COM>
    b87a:	b8 00 00 00 00       	mov    $0x0,%eax
    b87f:	e8 83 66 ff ff       	callq  1f07 <THEN>
 LIT((__u32)-1);
    b884:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    b889:	e8 4a 68 ff ff       	callq  20d8 <LIT>
 F_END();
    b88e:	b8 00 00 00 00       	mov    $0x0,%eax
    b893:	e8 ae 60 ff ff       	callq  1946 <F_END>

 HEADER(">NUMBER"); // ( ud1 c-addr1 u1 --- ud2 c-addr2 u2 )
    b898:	48 8d 3d 10 23 00 00 	lea    0x2310(%rip),%rdi        # dbaf <_IO_stdin_used+0x6ef>
    b89f:	e8 f0 5a ff ff       	callq  1394 <HEADER>
 // Convert the string at c-addr with length u1 to binary, multiplying ud1
 // by the number in BASE and adding the digit value to it for each digit.
 // c-addr2 u2 is the remainder of the string starting at the first character
 // that is no digit.
   BEGIN();
    b8a4:	b8 00 00 00 00       	mov    $0x0,%eax
    b8a9:	e8 00 61 ff ff       	callq  19ae <BEGIN>
   CC("DUP");
    b8ae:	48 8d 3d 6c 20 00 00 	lea    0x206c(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    b8b5:	e8 d5 5e ff ff       	callq  178f <CC>
   WHILE();
    b8ba:	b8 00 00 00 00       	mov    $0x0,%eax
    b8bf:	e8 53 65 ff ff       	callq  1e17 <WHILE>
    CC("1-"); CC(">R");
    b8c4:	48 8d 3d 3e 1f 00 00 	lea    0x1f3e(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    b8cb:	e8 bf 5e ff ff       	callq  178f <CC>
    b8d0:	48 8d 3d 70 20 00 00 	lea    0x2070(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    b8d7:	e8 b3 5e ff ff       	callq  178f <CC>
    CC("COUNT"); CC("DIGIT?"); CC("0=");
    b8dc:	48 8d 3d a7 20 00 00 	lea    0x20a7(%rip),%rdi        # d98a <_IO_stdin_used+0x4ca>
    b8e3:	e8 a7 5e ff ff       	callq  178f <CC>
    b8e8:	48 8d 3d b9 22 00 00 	lea    0x22b9(%rip),%rdi        # dba8 <_IO_stdin_used+0x6e8>
    b8ef:	e8 9b 5e ff ff       	callq  178f <CC>
    b8f4:	48 8d 3d d6 1e 00 00 	lea    0x1ed6(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    b8fb:	e8 8f 5e ff ff       	callq  178f <CC>
    IF();
    b900:	b8 00 00 00 00       	mov    $0x0,%eax
    b905:	e8 cb 63 ff ff       	callq  1cd5 <IF>
    CC("R>"); CC("1+"); CC("SWAP"); CC("1-"); CC("SWAP");  COM(0x8001);
    b90a:	48 8d 3d 27 20 00 00 	lea    0x2027(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    b911:	e8 79 5e ff ff       	callq  178f <CC>
    b916:	48 8d 3d e6 1e 00 00 	lea    0x1ee6(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    b91d:	e8 6d 5e ff ff       	callq  178f <CC>
    b922:	48 8d 3d 9a 1e 00 00 	lea    0x1e9a(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    b929:	e8 61 5e ff ff       	callq  178f <CC>
    b92e:	48 8d 3d d4 1e 00 00 	lea    0x1ed4(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    b935:	e8 55 5e ff ff       	callq  178f <CC>
    b93a:	48 8d 3d 82 1e 00 00 	lea    0x1e82(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    b941:	e8 49 5e ff ff       	callq  178f <CC>
    b946:	bf 01 80 00 00       	mov    $0x8001,%edi
    b94b:	e8 67 57 ff ff       	callq  10b7 <COM>
    THEN();
    b950:	b8 00 00 00 00       	mov    $0x0,%eax
    b955:	e8 ad 65 ff ff       	callq  1f07 <THEN>
    CC("SWAP"); CC(">R");
    b95a:	48 8d 3d 62 1e 00 00 	lea    0x1e62(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    b961:	e8 29 5e ff ff       	callq  178f <CC>
    b966:	48 8d 3d da 1f 00 00 	lea    0x1fda(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    b96d:	e8 1d 5e ff ff       	callq  178f <CC>
    CC(">R");
    b972:	48 8d 3d ce 1f 00 00 	lea    0x1fce(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    b979:	e8 11 5e ff ff       	callq  178f <CC>
    CC("SWAP"); CC("BASE"); CC("@");CC("UM*"); CC("ROT");CC("BASE");CC("@");
    b97e:	48 8d 3d 3e 1e 00 00 	lea    0x1e3e(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    b985:	e8 05 5e ff ff       	callq  178f <CC>
    b98a:	48 8d 3d be 21 00 00 	lea    0x21be(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b991:	e8 f9 5d ff ff       	callq  178f <CC>
    b996:	48 8d 3d 5e 1e 00 00 	lea    0x1e5e(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    b99d:	e8 ed 5d ff ff       	callq  178f <CC>
    b9a2:	48 8d 3d 48 1e 00 00 	lea    0x1e48(%rip),%rdi        # d7f1 <_IO_stdin_used+0x331>
    b9a9:	e8 e1 5d ff ff       	callq  178f <CC>
    b9ae:	48 8d 3d 13 1e 00 00 	lea    0x1e13(%rip),%rdi        # d7c8 <_IO_stdin_used+0x308>
    b9b5:	e8 d5 5d ff ff       	callq  178f <CC>
    b9ba:	48 8d 3d 8e 21 00 00 	lea    0x218e(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    b9c1:	e8 c9 5d ff ff       	callq  178f <CC>
    b9c6:	48 8d 3d 2e 1e 00 00 	lea    0x1e2e(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    b9cd:	e8 bd 5d ff ff       	callq  178f <CC>
    CC("*"); LIT(0); CC("SWAP"); CC("D+"); // Multiply ud by base.
    b9d2:	48 8d 3d 44 1e 00 00 	lea    0x1e44(%rip),%rdi        # d81d <_IO_stdin_used+0x35d>
    b9d9:	e8 b1 5d ff ff       	callq  178f <CC>
    b9de:	bf 00 00 00 00       	mov    $0x0,%edi
    b9e3:	e8 f0 66 ff ff       	callq  20d8 <LIT>
    b9e8:	48 8d 3d d4 1d 00 00 	lea    0x1dd4(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    b9ef:	e8 9b 5d ff ff       	callq  178f <CC>
    b9f4:	48 8d 3d 82 1e 00 00 	lea    0x1e82(%rip),%rdi        # d87d <_IO_stdin_used+0x3bd>
    b9fb:	e8 8f 5d ff ff       	callq  178f <CC>
    CC("R>"); LIT(0); CC("D+");           // Add new digit.
    ba00:	48 8d 3d 31 1f 00 00 	lea    0x1f31(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    ba07:	e8 83 5d ff ff       	callq  178f <CC>
    ba0c:	bf 00 00 00 00       	mov    $0x0,%edi
    ba11:	e8 c2 66 ff ff       	callq  20d8 <LIT>
    ba16:	48 8d 3d 60 1e 00 00 	lea    0x1e60(%rip),%rdi        # d87d <_IO_stdin_used+0x3bd>
    ba1d:	e8 6d 5d ff ff       	callq  178f <CC>
    CC("R>"); CC("R>");
    ba22:	48 8d 3d 0f 1f 00 00 	lea    0x1f0f(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    ba29:	e8 61 5d ff ff       	callq  178f <CC>
    ba2e:	48 8d 3d 03 1f 00 00 	lea    0x1f03(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    ba35:	e8 55 5d ff ff       	callq  178f <CC>
   REPEAT();
    ba3a:	b8 00 00 00 00       	mov    $0x0,%eax
    ba3f:	e8 79 66 ff ff       	callq  20bd <REPEAT>
   F_END();
    ba44:	b8 00 00 00 00       	mov    $0x0,%eax
    ba49:	e8 f8 5e ff ff       	callq  1946 <F_END>

 HEADER("CONVERT"); // ( ud1 c-addr1 --- ud2 c-addr2)
    ba4e:	48 8d 3d 62 21 00 00 	lea    0x2162(%rip),%rdi        # dbb7 <_IO_stdin_used+0x6f7>
    ba55:	e8 3a 59 ff ff       	callq  1394 <HEADER>
 // Convert the string starting at c-addr1 + 1 to binary. c-addr2 is the
 // address of the first non-digit. Digits are added into ud1 as in >NUMBER
 CC("1-"); LIT((__u32)-1); CC(">NUMBER"); CC("DROP");
    ba5a:	48 8d 3d a8 1d 00 00 	lea    0x1da8(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    ba61:	e8 29 5d ff ff       	callq  178f <CC>
    ba66:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    ba6b:	e8 68 66 ff ff       	callq  20d8 <LIT>
    ba70:	48 8d 3d 38 21 00 00 	lea    0x2138(%rip),%rdi        # dbaf <_IO_stdin_used+0x6ef>
    ba77:	e8 13 5d ff ff       	callq  178f <CC>
    ba7c:	48 8d 3d 03 1e 00 00 	lea    0x1e03(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    ba83:	e8 07 5d ff ff       	callq  178f <CC>
 F_END();
    ba88:	b8 00 00 00 00       	mov    $0x0,%eax
    ba8d:	e8 b4 5e ff ff       	callq  1946 <F_END>

 HEADER("NUMBER?"); // ( c-addr n ---- d f)
    ba92:	48 8d 3d 26 21 00 00 	lea    0x2126(%rip),%rdi        # dbbf <_IO_stdin_used+0x6ff>
    ba99:	e8 f6 58 ff ff       	callq  1394 <HEADER>
 // Convert the counted string at c-addr to a double binary number.
 // f is true if and only if the conversion was successful. DPL contains
 // -1 if there was no point in the number, else the position of the point
 // from the right. Special prefixes: # means decimal, $ means hex.
 LIT((__u32)-1); CC("DPL"); CC("!");
    ba9e:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    baa3:	e8 30 66 ff ff       	callq  20d8 <LIT>
    baa8:	48 8d 3d 9c 20 00 00 	lea    0x209c(%rip),%rdi        # db4b <_IO_stdin_used+0x68b>
    baaf:	e8 db 5c ff ff       	callq  178f <CC>
    bab4:	48 8d 3d 2f 1e 00 00 	lea    0x1e2f(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    babb:	e8 cf 5c ff ff       	callq  178f <CC>
 CC("BASE"); CC("@"); CC(">R");
    bac0:	48 8d 3d 88 20 00 00 	lea    0x2088(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    bac7:	e8 c3 5c ff ff       	callq  178f <CC>
    bacc:	48 8d 3d 28 1d 00 00 	lea    0x1d28(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    bad3:	e8 b7 5c ff ff       	callq  178f <CC>
    bad8:	48 8d 3d 68 1e 00 00 	lea    0x1e68(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    badf:	e8 ab 5c ff ff       	callq  178f <CC>
// CC("COUNT");
 CC("OVER"); CC("C@"); LIT(45); CC("="); CC("DUP"); CC(">R"); IF(); CC("1-"); CC("SWAP"); CC("1+"); CC("SWAP"); THEN(); // Get any - sign
    bae4:	48 8d 3d 3f 1e 00 00 	lea    0x1e3f(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    baeb:	e8 9f 5c ff ff       	callq  178f <CC>
    baf0:	48 8d 3d fe 1c 00 00 	lea    0x1cfe(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    baf7:	e8 93 5c ff ff       	callq  178f <CC>
    bafc:	bf 2d 00 00 00       	mov    $0x2d,%edi
    bb01:	e8 d2 65 ff ff       	callq  20d8 <LIT>
    bb06:	48 8d 3d d1 1c 00 00 	lea    0x1cd1(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    bb0d:	e8 7d 5c ff ff       	callq  178f <CC>
    bb12:	48 8d 3d 08 1e 00 00 	lea    0x1e08(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    bb19:	e8 71 5c ff ff       	callq  178f <CC>
    bb1e:	48 8d 3d 22 1e 00 00 	lea    0x1e22(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    bb25:	e8 65 5c ff ff       	callq  178f <CC>
    bb2a:	b8 00 00 00 00       	mov    $0x0,%eax
    bb2f:	e8 a1 61 ff ff       	callq  1cd5 <IF>
    bb34:	48 8d 3d ce 1c 00 00 	lea    0x1cce(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    bb3b:	e8 4f 5c ff ff       	callq  178f <CC>
    bb40:	48 8d 3d 7c 1c 00 00 	lea    0x1c7c(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bb47:	e8 43 5c ff ff       	callq  178f <CC>
    bb4c:	48 8d 3d b0 1c 00 00 	lea    0x1cb0(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    bb53:	e8 37 5c ff ff       	callq  178f <CC>
    bb58:	48 8d 3d 64 1c 00 00 	lea    0x1c64(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bb5f:	e8 2b 5c ff ff       	callq  178f <CC>
    bb64:	b8 00 00 00 00       	mov    $0x0,%eax
    bb69:	e8 99 63 ff ff       	callq  1f07 <THEN>
 CC("OVER"); CC("C@"); LIT(36); CC("="); IF(); LIT(16); CC("BASE"); CC("!"); CC("1-"); CC("SWAP"); CC("1+"); CC("SWAP"); THEN();   // $ sign for hex.
    bb6e:	48 8d 3d b5 1d 00 00 	lea    0x1db5(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    bb75:	e8 15 5c ff ff       	callq  178f <CC>
    bb7a:	48 8d 3d 74 1c 00 00 	lea    0x1c74(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    bb81:	e8 09 5c ff ff       	callq  178f <CC>
    bb86:	bf 24 00 00 00       	mov    $0x24,%edi
    bb8b:	e8 48 65 ff ff       	callq  20d8 <LIT>
    bb90:	48 8d 3d 47 1c 00 00 	lea    0x1c47(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    bb97:	e8 f3 5b ff ff       	callq  178f <CC>
    bb9c:	b8 00 00 00 00       	mov    $0x0,%eax
    bba1:	e8 2f 61 ff ff       	callq  1cd5 <IF>
    bba6:	bf 10 00 00 00       	mov    $0x10,%edi
    bbab:	e8 28 65 ff ff       	callq  20d8 <LIT>
    bbb0:	48 8d 3d 98 1f 00 00 	lea    0x1f98(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    bbb7:	e8 d3 5b ff ff       	callq  178f <CC>
    bbbc:	48 8d 3d 27 1d 00 00 	lea    0x1d27(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    bbc3:	e8 c7 5b ff ff       	callq  178f <CC>
    bbc8:	48 8d 3d 3a 1c 00 00 	lea    0x1c3a(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    bbcf:	e8 bb 5b ff ff       	callq  178f <CC>
    bbd4:	48 8d 3d e8 1b 00 00 	lea    0x1be8(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bbdb:	e8 af 5b ff ff       	callq  178f <CC>
    bbe0:	48 8d 3d 1c 1c 00 00 	lea    0x1c1c(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    bbe7:	e8 a3 5b ff ff       	callq  178f <CC>
    bbec:	48 8d 3d d0 1b 00 00 	lea    0x1bd0(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bbf3:	e8 97 5b ff ff       	callq  178f <CC>
    bbf8:	b8 00 00 00 00       	mov    $0x0,%eax
    bbfd:	e8 05 63 ff ff       	callq  1f07 <THEN>
 CC("OVER"); CC("C@"); LIT(35); CC("="); IF(); LIT(10); CC("BASE"); CC("!"); CC("1-"); CC("SWAP"); CC("1+"); CC("SWAP"); THEN();   // # sign for decimal
    bc02:	48 8d 3d 21 1d 00 00 	lea    0x1d21(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    bc09:	e8 81 5b ff ff       	callq  178f <CC>
    bc0e:	48 8d 3d e0 1b 00 00 	lea    0x1be0(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    bc15:	e8 75 5b ff ff       	callq  178f <CC>
    bc1a:	bf 23 00 00 00       	mov    $0x23,%edi
    bc1f:	e8 b4 64 ff ff       	callq  20d8 <LIT>
    bc24:	48 8d 3d b3 1b 00 00 	lea    0x1bb3(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    bc2b:	e8 5f 5b ff ff       	callq  178f <CC>
    bc30:	b8 00 00 00 00       	mov    $0x0,%eax
    bc35:	e8 9b 60 ff ff       	callq  1cd5 <IF>
    bc3a:	bf 0a 00 00 00       	mov    $0xa,%edi
    bc3f:	e8 94 64 ff ff       	callq  20d8 <LIT>
    bc44:	48 8d 3d 04 1f 00 00 	lea    0x1f04(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    bc4b:	e8 3f 5b ff ff       	callq  178f <CC>
    bc50:	48 8d 3d 93 1c 00 00 	lea    0x1c93(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    bc57:	e8 33 5b ff ff       	callq  178f <CC>
    bc5c:	48 8d 3d a6 1b 00 00 	lea    0x1ba6(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    bc63:	e8 27 5b ff ff       	callq  178f <CC>
    bc68:	48 8d 3d 54 1b 00 00 	lea    0x1b54(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bc6f:	e8 1b 5b ff ff       	callq  178f <CC>
    bc74:	48 8d 3d 88 1b 00 00 	lea    0x1b88(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    bc7b:	e8 0f 5b ff ff       	callq  178f <CC>
    bc80:	48 8d 3d 3c 1b 00 00 	lea    0x1b3c(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bc87:	e8 03 5b ff ff       	callq  178f <CC>
    bc8c:	b8 00 00 00 00       	mov    $0x0,%eax
    bc91:	e8 71 62 ff ff       	callq  1f07 <THEN>
 CC("DUP");  CC("0>"); CC("0=");
    bc96:	48 8d 3d 84 1c 00 00 	lea    0x1c84(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    bc9d:	e8 ed 5a ff ff       	callq  178f <CC>
    bca2:	48 8d 3d 32 1b 00 00 	lea    0x1b32(%rip),%rdi        # d7db <_IO_stdin_used+0x31b>
    bca9:	e8 e1 5a ff ff       	callq  178f <CC>
    bcae:	48 8d 3d 1c 1b 00 00 	lea    0x1b1c(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    bcb5:	e8 d5 5a ff ff       	callq  178f <CC>
 IF();  CC("R>"); CC("DROP"); CC("R>"); CC("BASE"); CC("!"); LIT(0); COM(0x8001);
    bcba:	b8 00 00 00 00       	mov    $0x0,%eax
    bcbf:	e8 11 60 ff ff       	callq  1cd5 <IF>
    bcc4:	48 8d 3d 6d 1c 00 00 	lea    0x1c6d(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bccb:	e8 bf 5a ff ff       	callq  178f <CC>
    bcd0:	48 8d 3d af 1b 00 00 	lea    0x1baf(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    bcd7:	e8 b3 5a ff ff       	callq  178f <CC>
    bcdc:	48 8d 3d 55 1c 00 00 	lea    0x1c55(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bce3:	e8 a7 5a ff ff       	callq  178f <CC>
    bce8:	48 8d 3d 60 1e 00 00 	lea    0x1e60(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    bcef:	e8 9b 5a ff ff       	callq  178f <CC>
    bcf4:	48 8d 3d ef 1b 00 00 	lea    0x1bef(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    bcfb:	e8 8f 5a ff ff       	callq  178f <CC>
    bd00:	bf 00 00 00 00       	mov    $0x0,%edi
    bd05:	e8 ce 63 ff ff       	callq  20d8 <LIT>
    bd0a:	bf 01 80 00 00       	mov    $0x8001,%edi
    bd0f:	e8 a3 53 ff ff       	callq  10b7 <COM>
 THEN();   // Length 0 or less?
    bd14:	b8 00 00 00 00       	mov    $0x0,%eax
    bd19:	e8 e9 61 ff ff       	callq  1f07 <THEN>
 CC(">R"); CC(">R"); LIT(0); LIT(0); CC("R>"); CC("R>");
    bd1e:	48 8d 3d 22 1c 00 00 	lea    0x1c22(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    bd25:	e8 65 5a ff ff       	callq  178f <CC>
    bd2a:	48 8d 3d 16 1c 00 00 	lea    0x1c16(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    bd31:	e8 59 5a ff ff       	callq  178f <CC>
    bd36:	bf 00 00 00 00       	mov    $0x0,%edi
    bd3b:	e8 98 63 ff ff       	callq  20d8 <LIT>
    bd40:	bf 00 00 00 00       	mov    $0x0,%edi
    bd45:	e8 8e 63 ff ff       	callq  20d8 <LIT>
    bd4a:	48 8d 3d e7 1b 00 00 	lea    0x1be7(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bd51:	e8 39 5a ff ff       	callq  178f <CC>
    bd56:	48 8d 3d db 1b 00 00 	lea    0x1bdb(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bd5d:	e8 2d 5a ff ff       	callq  178f <CC>
   BEGIN();
    bd62:	b8 00 00 00 00       	mov    $0x0,%eax
    bd67:	e8 42 5c ff ff       	callq  19ae <BEGIN>
 CC(">NUMBER");
    bd6c:	48 8d 3d 3c 1e 00 00 	lea    0x1e3c(%rip),%rdi        # dbaf <_IO_stdin_used+0x6ef>
    bd73:	e8 17 5a ff ff       	callq  178f <CC>
 CC("DUP"); IF(); CC("OVER"); CC("C@"); LIT(46); CC("="); IF(); CC("1-"); CC("DUP");
    bd78:	48 8d 3d a2 1b 00 00 	lea    0x1ba2(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    bd7f:	e8 0b 5a ff ff       	callq  178f <CC>
    bd84:	b8 00 00 00 00       	mov    $0x0,%eax
    bd89:	e8 47 5f ff ff       	callq  1cd5 <IF>
    bd8e:	48 8d 3d 95 1b 00 00 	lea    0x1b95(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    bd95:	e8 f5 59 ff ff       	callq  178f <CC>
    bd9a:	48 8d 3d 54 1a 00 00 	lea    0x1a54(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    bda1:	e8 e9 59 ff ff       	callq  178f <CC>
    bda6:	bf 2e 00 00 00       	mov    $0x2e,%edi
    bdab:	e8 28 63 ff ff       	callq  20d8 <LIT>
    bdb0:	48 8d 3d 27 1a 00 00 	lea    0x1a27(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    bdb7:	e8 d3 59 ff ff       	callq  178f <CC>
    bdbc:	b8 00 00 00 00       	mov    $0x0,%eax
    bdc1:	e8 0f 5f ff ff       	callq  1cd5 <IF>
    bdc6:	48 8d 3d 3c 1a 00 00 	lea    0x1a3c(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    bdcd:	e8 bd 59 ff ff       	callq  178f <CC>
    bdd2:	48 8d 3d 48 1b 00 00 	lea    0x1b48(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    bdd9:	e8 b1 59 ff ff       	callq  178f <CC>
 CC("DPL"); CC("!"); CC("SWAP"); CC("1+"); CC("SWAP"); ELSE(); // handle point.
    bdde:	48 8d 3d 66 1d 00 00 	lea    0x1d66(%rip),%rdi        # db4b <_IO_stdin_used+0x68b>
    bde5:	e8 a5 59 ff ff       	callq  178f <CC>
    bdea:	48 8d 3d f9 1a 00 00 	lea    0x1af9(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    bdf1:	e8 99 59 ff ff       	callq  178f <CC>
    bdf6:	48 8d 3d c6 19 00 00 	lea    0x19c6(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    bdfd:	e8 8d 59 ff ff       	callq  178f <CC>
    be02:	48 8d 3d fa 19 00 00 	lea    0x19fa(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    be09:	e8 81 59 ff ff       	callq  178f <CC>
    be0e:	48 8d 3d ae 19 00 00 	lea    0x19ae(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    be15:	e8 75 59 ff ff       	callq  178f <CC>
    be1a:	b8 00 00 00 00       	mov    $0x0,%eax
    be1f:	e8 9f 61 ff ff       	callq  1fc3 <ELSE>
 CC("R>"); CC("DROP"); CC("R>"); CC("BASE"); CC("!"); LIT(0); COM(0x8001); THEN();  // Error if anything but point
    be24:	48 8d 3d 0d 1b 00 00 	lea    0x1b0d(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    be2b:	e8 5f 59 ff ff       	callq  178f <CC>
    be30:	48 8d 3d 4f 1a 00 00 	lea    0x1a4f(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    be37:	e8 53 59 ff ff       	callq  178f <CC>
    be3c:	48 8d 3d f5 1a 00 00 	lea    0x1af5(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    be43:	e8 47 59 ff ff       	callq  178f <CC>
    be48:	48 8d 3d 00 1d 00 00 	lea    0x1d00(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    be4f:	e8 3b 59 ff ff       	callq  178f <CC>
    be54:	48 8d 3d 8f 1a 00 00 	lea    0x1a8f(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    be5b:	e8 2f 59 ff ff       	callq  178f <CC>
    be60:	bf 00 00 00 00       	mov    $0x0,%edi
    be65:	e8 6e 62 ff ff       	callq  20d8 <LIT>
    be6a:	bf 01 80 00 00       	mov    $0x8001,%edi
    be6f:	e8 43 52 ff ff       	callq  10b7 <COM>
    be74:	b8 00 00 00 00       	mov    $0x0,%eax
    be79:	e8 89 60 ff ff       	callq  1f07 <THEN>
        THEN();
    be7e:	b8 00 00 00 00       	mov    $0x0,%eax
    be83:	e8 7f 60 ff ff       	callq  1f07 <THEN>
   CC("DUP"); CC("0="); UNTIL(); CC("2DROP"); CC("R>"); IF(); CC("DNEGATE"); THEN();
    be88:	48 8d 3d 92 1a 00 00 	lea    0x1a92(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    be8f:	e8 fb 58 ff ff       	callq  178f <CC>
    be94:	48 8d 3d 36 19 00 00 	lea    0x1936(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    be9b:	e8 ef 58 ff ff       	callq  178f <CC>
    bea0:	b8 00 00 00 00       	mov    $0x0,%eax
    bea5:	e8 50 5c ff ff       	callq  1afa <UNTIL>
    beaa:	48 8d 3d da 19 00 00 	lea    0x19da(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    beb1:	e8 d9 58 ff ff       	callq  178f <CC>
    beb6:	48 8d 3d 7b 1a 00 00 	lea    0x1a7b(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bebd:	e8 cd 58 ff ff       	callq  178f <CC>
    bec2:	b8 00 00 00 00       	mov    $0x0,%eax
    bec7:	e8 09 5e ff ff       	callq  1cd5 <IF>
    becc:	48 8d 3d cd 1c 00 00 	lea    0x1ccd(%rip),%rdi        # dba0 <_IO_stdin_used+0x6e0>
    bed3:	e8 b7 58 ff ff       	callq  178f <CC>
    bed8:	b8 00 00 00 00       	mov    $0x0,%eax
    bedd:	e8 25 60 ff ff       	callq  1f07 <THEN>
   CC("R>"); CC("BASE"); CC("!"); LIT(-1);
    bee2:	48 8d 3d 4f 1a 00 00 	lea    0x1a4f(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    bee9:	e8 a1 58 ff ff       	callq  178f <CC>
    beee:	48 8d 3d 5a 1c 00 00 	lea    0x1c5a(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    bef5:	e8 95 58 ff ff       	callq  178f <CC>
    befa:	48 8d 3d e9 19 00 00 	lea    0x19e9(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    bf01:	e8 89 58 ff ff       	callq  178f <CC>
    bf06:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    bf0b:	e8 c8 61 ff ff       	callq  20d8 <LIT>
   F_END();
    bf10:	b8 00 00 00 00       	mov    $0x0,%eax
    bf15:	e8 2c 5a ff ff       	callq  1946 <F_END>

HEADER("DEPTH");
    bf1a:	48 8d 3d a6 1c 00 00 	lea    0x1ca6(%rip),%rdi        # dbc7 <_IO_stdin_used+0x707>
    bf21:	e8 6e 54 ff ff       	callq  1394 <HEADER>
  CC("SP0"); CC("@"); CC("SP@");  CC("-");
    bf26:	48 8d 3d 27 1c 00 00 	lea    0x1c27(%rip),%rdi        # db54 <_IO_stdin_used+0x694>
    bf2d:	e8 5d 58 ff ff       	callq  178f <CC>
    bf32:	48 8d 3d c2 18 00 00 	lea    0x18c2(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    bf39:	e8 51 58 ff ff       	callq  178f <CC>
    bf3e:	48 8d 3d 8f 19 00 00 	lea    0x198f(%rip),%rdi        # d8d4 <_IO_stdin_used+0x414>
    bf45:	e8 45 58 ff ff       	callq  178f <CC>
    bf4a:	48 8d 3d ca 18 00 00 	lea    0x18ca(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    bf51:	e8 39 58 ff ff       	callq  178f <CC>
  CC("CELL/"); CC("1-");
    bf56:	48 8d 3d c8 18 00 00 	lea    0x18c8(%rip),%rdi        # d825 <_IO_stdin_used+0x365>
    bf5d:	e8 2d 58 ff ff       	callq  178f <CC>
    bf62:	48 8d 3d a0 18 00 00 	lea    0x18a0(%rip),%rdi        # d809 <_IO_stdin_used+0x349>
    bf69:	e8 21 58 ff ff       	callq  178f <CC>
  F_END();
    bf6e:	b8 00 00 00 00       	mov    $0x0,%eax
    bf73:	e8 ce 59 ff ff       	callq  1946 <F_END>

HEADER("?STACK");
    bf78:	48 8d 3d 4e 1c 00 00 	lea    0x1c4e(%rip),%rdi        # dbcd <_IO_stdin_used+0x70d>
    bf7f:	e8 10 54 ff ff       	callq  1394 <HEADER>
CC("DEPTH");  CC("0<");
    bf84:	48 8d 3d 3c 1c 00 00 	lea    0x1c3c(%rip),%rdi        # dbc7 <_IO_stdin_used+0x707>
    bf8b:	e8 ff 57 ff ff       	callq  178f <CC>
    bf90:	48 8d 3d 41 18 00 00 	lea    0x1841(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    bf97:	e8 f3 57 ff ff       	callq  178f <CC>
IF(); LIT((__u32)-4); CC("THROW");
    bf9c:	b8 00 00 00 00       	mov    $0x0,%eax
    bfa1:	e8 2f 5d ff ff       	callq  1cd5 <IF>
    bfa6:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    bfab:	e8 28 61 ff ff       	callq  20d8 <LIT>
    bfb0:	48 8d 3d 2d 19 00 00 	lea    0x192d(%rip),%rdi        # d8e4 <_IO_stdin_used+0x424>
    bfb7:	e8 d3 57 ff ff       	callq  178f <CC>
THEN();
    bfbc:	b8 00 00 00 00       	mov    $0x0,%eax
    bfc1:	e8 41 5f ff ff       	callq  1f07 <THEN>
F_END();
    bfc6:	b8 00 00 00 00       	mov    $0x0,%eax
    bfcb:	e8 76 59 ff ff       	callq  1946 <F_END>

HEADER("?SLITERAL");
    bfd0:	48 8d 3d fd 1b 00 00 	lea    0x1bfd(%rip),%rdi        # dbd4 <_IO_stdin_used+0x714>
    bfd7:	e8 b8 53 ff ff       	callq  1394 <HEADER>
//        CC("DUP>R");
        CC("NUMBER?");
    bfdc:	48 8d 3d dc 1b 00 00 	lea    0x1bdc(%rip),%rdi        # dbbf <_IO_stdin_used+0x6ff>
    bfe3:	e8 a7 57 ff ff       	callq  178f <CC>
        IF(); //  CC("RDROP");
    bfe8:	b8 00 00 00 00       	mov    $0x0,%eax
    bfed:	e8 e3 5c ff ff       	callq  1cd5 <IF>

    		CC("DPL"); CC("@"); CC("1+");
    bff2:	48 8d 3d 52 1b 00 00 	lea    0x1b52(%rip),%rdi        # db4b <_IO_stdin_used+0x68b>
    bff9:	e8 91 57 ff ff       	callq  178f <CC>
    bffe:	48 8d 3d f6 17 00 00 	lea    0x17f6(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c005:	e8 85 57 ff ff       	callq  178f <CC>
    c00a:	48 8d 3d f2 17 00 00 	lea    0x17f2(%rip),%rdi        # d803 <_IO_stdin_used+0x343>
    c011:	e8 79 57 ff ff       	callq  178f <CC>
    	    IF(); 	CC("STATE"); CC("@");
    c016:	b8 00 00 00 00       	mov    $0x0,%eax
    c01b:	e8 b5 5c ff ff       	callq  1cd5 <IF>
    c020:	48 8d 3d 92 1a 00 00 	lea    0x1a92(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c027:	e8 63 57 ff ff       	callq  178f <CC>
    c02c:	48 8d 3d c8 17 00 00 	lea    0x17c8(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c033:	e8 57 57 ff ff       	callq  178f <CC>
    		   IF(); CC("SWAP"); CC("LIT,"); CC("LIT,");
    c038:	b8 00 00 00 00       	mov    $0x0,%eax
    c03d:	e8 93 5c ff ff       	callq  1cd5 <IF>
    c042:	48 8d 3d 7a 17 00 00 	lea    0x177a(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    c049:	e8 41 57 ff ff       	callq  178f <CC>
    c04e:	48 8d 3d 24 1b 00 00 	lea    0x1b24(%rip),%rdi        # db79 <_IO_stdin_used+0x6b9>
    c055:	e8 35 57 ff ff       	callq  178f <CC>
    c05a:	48 8d 3d 18 1b 00 00 	lea    0x1b18(%rip),%rdi        # db79 <_IO_stdin_used+0x6b9>
    c061:	e8 29 57 ff ff       	callq  178f <CC>
    		   THEN();
    c066:	b8 00 00 00 00       	mov    $0x0,%eax
    c06b:	e8 97 5e ff ff       	callq  1f07 <THEN>
            ELSE(); CC("DROP"); CC("STATE"); CC("@"); IF(); CC("LIT,"); THEN();
    c070:	b8 00 00 00 00       	mov    $0x0,%eax
    c075:	e8 49 5f ff ff       	callq  1fc3 <ELSE>
    c07a:	48 8d 3d 05 18 00 00 	lea    0x1805(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    c081:	e8 09 57 ff ff       	callq  178f <CC>
    c086:	48 8d 3d 2c 1a 00 00 	lea    0x1a2c(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c08d:	e8 fd 56 ff ff       	callq  178f <CC>
    c092:	48 8d 3d 62 17 00 00 	lea    0x1762(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c099:	e8 f1 56 ff ff       	callq  178f <CC>
    c09e:	b8 00 00 00 00       	mov    $0x0,%eax
    c0a3:	e8 2d 5c ff ff       	callq  1cd5 <IF>
    c0a8:	48 8d 3d ca 1a 00 00 	lea    0x1aca(%rip),%rdi        # db79 <_IO_stdin_used+0x6b9>
    c0af:	e8 db 56 ff ff       	callq  178f <CC>
    c0b4:	b8 00 00 00 00       	mov    $0x0,%eax
    c0b9:	e8 49 5e ff ff       	callq  1f07 <THEN>
            THEN();
    c0be:	b8 00 00 00 00       	mov    $0x0,%eax
    c0c3:	e8 3f 5e ff ff       	callq  1f07 <THEN>
       ELSE();
    c0c8:	b8 00 00 00 00       	mov    $0x0,%eax
    c0cd:	e8 f1 5e ff ff       	callq  1fc3 <ELSE>
//  CC("2SWAP"); CC("2DROP");  CC("R@"); CC("-");  CC("+");  CC("R>");
//             CC("NUMBER?"); CC("0=");  IF();  LIT((__u32)-13); CC("THROW"); THEN();
//             CC("STATE"); CC("@");  IF(); CC("LIT,"); THEN();
		LIT((__u32)-13); CC("THROW");
    c0d2:	bf f3 ff ff ff       	mov    $0xfffffff3,%edi
    c0d7:	e8 fc 5f ff ff       	callq  20d8 <LIT>
    c0dc:	48 8d 3d 01 18 00 00 	lea    0x1801(%rip),%rdi        # d8e4 <_IO_stdin_used+0x424>
    c0e3:	e8 a7 56 ff ff       	callq  178f <CC>
       THEN();
    c0e8:	b8 00 00 00 00       	mov    $0x0,%eax
    c0ed:	e8 15 5e ff ff       	callq  1f07 <THEN>
F_END();
    c0f2:	b8 00 00 00 00       	mov    $0x0,%eax
    c0f7:	e8 4a 58 ff ff       	callq  1946 <F_END>
 
 HEADER("INTERPRET_");
    c0fc:	48 8d 3d db 1a 00 00 	lea    0x1adb(%rip),%rdi        # dbde <_IO_stdin_used+0x71e>
    c103:	e8 8c 52 ff ff       	callq  1394 <HEADER>
 LIT(-1);  CC("SAVEERR?");  CC("!");
    c108:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    c10d:	e8 c6 5f ff ff       	callq  20d8 <LIT>
    c112:	48 8d 3d 46 1a 00 00 	lea    0x1a46(%rip),%rdi        # db5f <_IO_stdin_used+0x69f>
    c119:	e8 71 56 ff ff       	callq  178f <CC>
    c11e:	48 8d 3d c5 17 00 00 	lea    0x17c5(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    c125:	e8 65 56 ff ff       	callq  178f <CC>
 BEGIN();
    c12a:	b8 00 00 00 00       	mov    $0x0,%eax
    c12f:	e8 7a 58 ff ff       	callq  19ae <BEGIN>
 CC("PARSE-NAME");
    c134:	48 8d 3d 67 18 00 00 	lea    0x1867(%rip),%rdi        # d9a2 <_IO_stdin_used+0x4e2>
    c13b:	e8 4f 56 ff ff       	callq  178f <CC>

 CC("DUP");
    c140:	48 8d 3d da 17 00 00 	lea    0x17da(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    c147:	e8 43 56 ff ff       	callq  178f <CC>
 WHILE();
    c14c:	b8 00 00 00 00       	mov    $0x0,%eax
    c151:	e8 c1 5c ff ff       	callq  1e17 <WHILE>
 CC("SFIND"); CC("?DUP");
    c156:	48 8d 3d 7e 18 00 00 	lea    0x187e(%rip),%rdi        # d9db <_IO_stdin_used+0x51b>
    c15d:	e8 2d 56 ff ff       	callq  178f <CC>
    c162:	48 8d 3d b3 17 00 00 	lea    0x17b3(%rip),%rdi        # d91c <_IO_stdin_used+0x45c>
    c169:	e8 21 56 ff ff       	callq  178f <CC>
    IF();    CC("STATE"); CC("@"); CC("=");
    c16e:	b8 00 00 00 00       	mov    $0x0,%eax
    c173:	e8 5d 5b ff ff       	callq  1cd5 <IF>
    c178:	48 8d 3d 3a 19 00 00 	lea    0x193a(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c17f:	e8 0b 56 ff ff       	callq  178f <CC>
    c184:	48 8d 3d 70 16 00 00 	lea    0x1670(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c18b:	e8 ff 55 ff ff       	callq  178f <CC>
    c190:	48 8d 3d 47 16 00 00 	lea    0x1647(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    c197:	e8 f3 55 ff ff       	callq  178f <CC>
    	IF();  CC("COMPILE,");
    c19c:	b8 00 00 00 00       	mov    $0x0,%eax
    c1a1:	e8 2f 5b ff ff       	callq  1cd5 <IF>
    c1a6:	48 8d 3d 08 17 00 00 	lea    0x1708(%rip),%rdi        # d8b5 <_IO_stdin_used+0x3f5>
    c1ad:	e8 dd 55 ff ff       	callq  178f <CC>
    	ELSE();    	CC("EXECUTE");
    c1b2:	b8 00 00 00 00       	mov    $0x0,%eax
    c1b7:	e8 07 5e ff ff       	callq  1fc3 <ELSE>
    c1bc:	48 8d 3d ea 16 00 00 	lea    0x16ea(%rip),%rdi        # d8ad <_IO_stdin_used+0x3ed>
    c1c3:	e8 c7 55 ff ff       	callq  178f <CC>
    	THEN();
    c1c8:	b8 00 00 00 00       	mov    $0x0,%eax
    c1cd:	e8 35 5d ff ff       	callq  1f07 <THEN>
    ELSE(); CC("?SLITERAL");
    c1d2:	b8 00 00 00 00       	mov    $0x0,%eax
    c1d7:	e8 e7 5d ff ff       	callq  1fc3 <ELSE>
    c1dc:	48 8d 3d f1 19 00 00 	lea    0x19f1(%rip),%rdi        # dbd4 <_IO_stdin_used+0x714>
    c1e3:	e8 a7 55 ff ff       	callq  178f <CC>
    THEN();
    c1e8:	b8 00 00 00 00       	mov    $0x0,%eax
    c1ed:	e8 15 5d ff ff       	callq  1f07 <THEN>

 CC("?STACK");
    c1f2:	48 8d 3d d4 19 00 00 	lea    0x19d4(%rip),%rdi        # dbcd <_IO_stdin_used+0x70d>
    c1f9:	e8 91 55 ff ff       	callq  178f <CC>
 REPEAT();
    c1fe:	b8 00 00 00 00       	mov    $0x0,%eax
    c203:	e8 b5 5e ff ff       	callq  20bd <REPEAT>
 CC("2DROP");
    c208:	48 8d 3d 7c 16 00 00 	lea    0x167c(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    c20f:	e8 7b 55 ff ff       	callq  178f <CC>
 F_END();
    c214:	b8 00 00 00 00       	mov    $0x0,%eax
    c219:	e8 28 57 ff ff       	callq  1946 <F_END>

 VARIABLE("&INTERPRET");
    c21e:	48 8d 3d c4 19 00 00 	lea    0x19c4(%rip),%rdi        # dbe9 <_IO_stdin_used+0x729>
    c225:	e8 a6 53 ff ff       	callq  15d0 <VARIABLE>

 HEADER("INTERPRET");
    c22a:	48 8d 3d c3 19 00 00 	lea    0x19c3(%rip),%rdi        # dbf4 <_IO_stdin_used+0x734>
    c231:	e8 5e 51 ff ff       	callq  1394 <HEADER>
 CC("&INTERPRET"); CC("PERFORM");
    c236:	48 8d 3d ac 19 00 00 	lea    0x19ac(%rip),%rdi        # dbe9 <_IO_stdin_used+0x729>
    c23d:	e8 4d 55 ff ff       	callq  178f <CC>
    c242:	48 8d 3d 5c 16 00 00 	lea    0x165c(%rip),%rdi        # d8a5 <_IO_stdin_used+0x3e5>
    c249:	e8 41 55 ff ff       	callq  178f <CC>
 F_END();
    c24e:	b8 00 00 00 00       	mov    $0x0,%eax
    c253:	e8 ee 56 ff ff       	callq  1946 <F_END>


 HEADER("EVAL");
    c258:	48 8d 3d 9f 19 00 00 	lea    0x199f(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    c25f:	e8 30 51 ff ff       	callq  1394 <HEADER>
 //TP("\nEVAL=<"); CC("2DUP"); CC("TYPE"); TP(">\n");
 CC("SOURCE!");
    c264:	48 8d 3d 58 17 00 00 	lea    0x1758(%rip),%rdi        # d9c3 <_IO_stdin_used+0x503>
    c26b:	e8 1f 55 ff ff       	callq  178f <CC>
 CC(">IN");   CC("0!");
    c270:	48 8d 3d 3e 18 00 00 	lea    0x183e(%rip),%rdi        # dab5 <_IO_stdin_used+0x5f5>
    c277:	e8 13 55 ff ff       	callq  178f <CC>
    c27c:	48 8d 3d 7d 15 00 00 	lea    0x157d(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    c283:	e8 07 55 ff ff       	callq  178f <CC>
 CC("INTERPRET_");
    c288:	48 8d 3d 4f 19 00 00 	lea    0x194f(%rip),%rdi        # dbde <_IO_stdin_used+0x71e>
    c28f:	e8 fb 54 ff ff       	callq  178f <CC>
 F_END();
    c294:	b8 00 00 00 00       	mov    $0x0,%eax
    c299:	e8 a8 56 ff ff       	callq  1946 <F_END>

 HEADER("HERE");
    c29e:	48 8d 3d 5e 19 00 00 	lea    0x195e(%rip),%rdi        # dc03 <_IO_stdin_used+0x743>
    c2a5:	e8 ea 50 ff ff       	callq  1394 <HEADER>
 CC("DP");   CC("@");
    c2aa:	48 8d 3d 28 18 00 00 	lea    0x1828(%rip),%rdi        # dad9 <_IO_stdin_used+0x619>
    c2b1:	e8 d9 54 ff ff       	callq  178f <CC>
    c2b6:	48 8d 3d 3e 15 00 00 	lea    0x153e(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c2bd:	e8 cd 54 ff ff       	callq  178f <CC>
 F_END();
    c2c2:	b8 00 00 00 00       	mov    $0x0,%eax
    c2c7:	e8 7a 56 ff ff       	callq  1946 <F_END>

 HEADER("\:");
    c2cc:	48 8d 3d 35 19 00 00 	lea    0x1935(%rip),%rdi        # dc08 <_IO_stdin_used+0x748>
    c2d3:	e8 bc 50 ff ff       	callq  1394 <HEADER>
 CC("STATE"); CC("ON");
    c2d8:	48 8d 3d da 17 00 00 	lea    0x17da(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c2df:	e8 ab 54 ff ff       	callq  178f <CC>
    c2e4:	48 8d 3d 12 15 00 00 	lea    0x1512(%rip),%rdi        # d7fd <_IO_stdin_used+0x33d>
    c2eb:	e8 9f 54 ff ff       	callq  178f <CC>
 CC("PARSE-NAME");
    c2f0:	48 8d 3d ab 16 00 00 	lea    0x16ab(%rip),%rdi        # d9a2 <_IO_stdin_used+0x4e2>
    c2f7:	e8 93 54 ff ff       	callq  178f <CC>
 //TP("PARSE-NAME=");  CC("2DUP"); CC("TYPE");
 CC("SHEADER");
    c2fc:	48 8d 3d 7b 18 00 00 	lea    0x187b(%rip),%rdi        # db7e <_IO_stdin_used+0x6be>
    c303:	e8 87 54 ff ff       	callq  178f <CC>
 F_END();
    c308:	b8 00 00 00 00       	mov    $0x0,%eax
    c30d:	e8 34 56 ff ff       	callq  1946 <F_END>

 HEADER("EXIT");  IMMED();
    c312:	48 8d 3d f1 18 00 00 	lea    0x18f1(%rip),%rdi        # dc0a <_IO_stdin_used+0x74a>
    c319:	e8 76 50 ff ff       	callq  1394 <HEADER>
    c31e:	b8 00 00 00 00       	mov    $0x0,%eax
    c323:	e8 aa 50 ff ff       	callq  13d2 <IMMED>
 CC("[EXIT]"); CC("W,");
    c328:	48 8d 3d 90 17 00 00 	lea    0x1790(%rip),%rdi        # dabf <_IO_stdin_used+0x5ff>
    c32f:	e8 5b 54 ff ff       	callq  178f <CC>
    c334:	48 8d 3d 5e 15 00 00 	lea    0x155e(%rip),%rdi        # d899 <_IO_stdin_used+0x3d9>
    c33b:	e8 4f 54 ff ff       	callq  178f <CC>
 F_END();
    c340:	b8 00 00 00 00       	mov    $0x0,%eax
    c345:	e8 fc 55 ff ff       	callq  1946 <F_END>

 HEADER(";");  IMMED();
    c34a:	48 8d 3d be 18 00 00 	lea    0x18be(%rip),%rdi        # dc0f <_IO_stdin_used+0x74f>
    c351:	e8 3e 50 ff ff       	callq  1394 <HEADER>
    c356:	b8 00 00 00 00       	mov    $0x0,%eax
    c35b:	e8 72 50 ff ff       	callq  13d2 <IMMED>
// COM(sw_femd<<1|1);
 CC("[EXIT]"); CC("W,");
    c360:	48 8d 3d 58 17 00 00 	lea    0x1758(%rip),%rdi        # dabf <_IO_stdin_used+0x5ff>
    c367:	e8 23 54 ff ff       	callq  178f <CC>
    c36c:	48 8d 3d 26 15 00 00 	lea    0x1526(%rip),%rdi        # d899 <_IO_stdin_used+0x3d9>
    c373:	e8 17 54 ff ff       	callq  178f <CC>
 CC("STATE"); CC("0!");
    c378:	48 8d 3d 3a 17 00 00 	lea    0x173a(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c37f:	e8 0b 54 ff ff       	callq  178f <CC>
    c384:	48 8d 3d 75 14 00 00 	lea    0x1475(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    c38b:	e8 ff 53 ff ff       	callq  178f <CC>
 CC("LAST"); CC("@");   CC("CURRENT"); CC("@");  CC("!");
    c390:	48 8d 3d 55 17 00 00 	lea    0x1755(%rip),%rdi        # daec <_IO_stdin_used+0x62c>
    c397:	e8 f3 53 ff ff       	callq  178f <CC>
    c39c:	48 8d 3d 58 14 00 00 	lea    0x1458(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c3a3:	e8 e7 53 ff ff       	callq  178f <CC>
    c3a8:	48 8d 3d 2d 17 00 00 	lea    0x172d(%rip),%rdi        # dadc <_IO_stdin_used+0x61c>
    c3af:	e8 db 53 ff ff       	callq  178f <CC>
    c3b4:	48 8d 3d 40 14 00 00 	lea    0x1440(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c3bb:	e8 cf 53 ff ff       	callq  178f <CC>
    c3c0:	48 8d 3d 23 15 00 00 	lea    0x1523(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    c3c7:	e8 c3 53 ff ff       	callq  178f <CC>
 F_END();
    c3cc:	b8 00 00 00 00       	mov    $0x0,%eax
    c3d1:	e8 70 55 ff ff       	callq  1946 <F_END>

 HEADER("CREATE");
    c3d6:	48 8d 3d 34 18 00 00 	lea    0x1834(%rip),%rdi        # dc11 <_IO_stdin_used+0x751>
    c3dd:	e8 b2 4f ff ff       	callq  1394 <HEADER>
 CC("\:"); 
    c3e2:	48 8d 3d 1f 18 00 00 	lea    0x181f(%rip),%rdi        # dc08 <_IO_stdin_used+0x748>
    c3e9:	e8 a1 53 ff ff       	callq  178f <CC>
//   TP(">CRE\n");
	LIT(sw_ip<<1|0x4001); CC(",");
    c3ee:	bf a1 40 00 00       	mov    $0x40a1,%edi
    c3f3:	e8 e0 5c ff ff       	callq  20d8 <LIT>
    c3f8:	48 8d 3d 98 14 00 00 	lea    0x1498(%rip),%rdi        # d897 <_IO_stdin_used+0x3d7>
    c3ff:	e8 8b 53 ff ff       	callq  178f <CC>
 CC("STATE"); CC("0!");
    c404:	48 8d 3d ae 16 00 00 	lea    0x16ae(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    c40b:	e8 7f 53 ff ff       	callq  178f <CC>
    c410:	48 8d 3d e9 13 00 00 	lea    0x13e9(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    c417:	e8 73 53 ff ff       	callq  178f <CC>
  CC("LAST"); CC("@");   CC("CURRENT"); CC("@");  CC("!");
    c41c:	48 8d 3d c9 16 00 00 	lea    0x16c9(%rip),%rdi        # daec <_IO_stdin_used+0x62c>
    c423:	e8 67 53 ff ff       	callq  178f <CC>
    c428:	48 8d 3d cc 13 00 00 	lea    0x13cc(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c42f:	e8 5b 53 ff ff       	callq  178f <CC>
    c434:	48 8d 3d a1 16 00 00 	lea    0x16a1(%rip),%rdi        # dadc <_IO_stdin_used+0x61c>
    c43b:	e8 4f 53 ff ff       	callq  178f <CC>
    c440:	48 8d 3d b4 13 00 00 	lea    0x13b4(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c447:	e8 43 53 ff ff       	callq  178f <CC>
    c44c:	48 8d 3d 97 14 00 00 	lea    0x1497(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    c453:	e8 37 53 ff ff       	callq  178f <CC>
//  CC("STATE"); CC("@"); TP("ST="); CC("H.");
  F_END();
    c458:	b8 00 00 00 00       	mov    $0x0,%eax
    c45d:	e8 e4 54 ff ff       	callq  1946 <F_END>

 HEADER("'");
    c462:	48 8d 3d af 17 00 00 	lea    0x17af(%rip),%rdi        # dc18 <_IO_stdin_used+0x758>
    c469:	e8 26 4f ff ff       	callq  1394 <HEADER>
 CC("PARSE-NAME"); CC("SFIND");  CC("0=");
    c46e:	48 8d 3d 2d 15 00 00 	lea    0x152d(%rip),%rdi        # d9a2 <_IO_stdin_used+0x4e2>
    c475:	e8 15 53 ff ff       	callq  178f <CC>
    c47a:	48 8d 3d 5a 15 00 00 	lea    0x155a(%rip),%rdi        # d9db <_IO_stdin_used+0x51b>
    c481:	e8 09 53 ff ff       	callq  178f <CC>
    c486:	48 8d 3d 44 13 00 00 	lea    0x1344(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    c48d:	e8 fd 52 ff ff       	callq  178f <CC>
 IF(); LIT((__u32)-321); CC("THROW");
    c492:	b8 00 00 00 00       	mov    $0x0,%eax
    c497:	e8 39 58 ff ff       	callq  1cd5 <IF>
    c49c:	bf bf fe ff ff       	mov    $0xfffffebf,%edi
    c4a1:	e8 32 5c ff ff       	callq  20d8 <LIT>
    c4a6:	48 8d 3d 37 14 00 00 	lea    0x1437(%rip),%rdi        # d8e4 <_IO_stdin_used+0x424>
    c4ad:	e8 dd 52 ff ff       	callq  178f <CC>
 THEN();
    c4b2:	b8 00 00 00 00       	mov    $0x0,%eax
    c4b7:	e8 4b 5a ff ff       	callq  1f07 <THEN>
 F_END();
    c4bc:	b8 00 00 00 00       	mov    $0x0,%eax
    c4c1:	e8 80 54 ff ff       	callq  1946 <F_END>

 HEADER("[']"); IMMED();
    c4c6:	48 8d 3d 4d 17 00 00 	lea    0x174d(%rip),%rdi        # dc1a <_IO_stdin_used+0x75a>
    c4cd:	e8 c2 4e ff ff       	callq  1394 <HEADER>
    c4d2:	b8 00 00 00 00       	mov    $0x0,%eax
    c4d7:	e8 f6 4e ff ff       	callq  13d2 <IMMED>
 CC("'"); CC("LIT,");
    c4dc:	48 8d 3d 35 17 00 00 	lea    0x1735(%rip),%rdi        # dc18 <_IO_stdin_used+0x758>
    c4e3:	e8 a7 52 ff ff       	callq  178f <CC>
    c4e8:	48 8d 3d 8a 16 00 00 	lea    0x168a(%rip),%rdi        # db79 <_IO_stdin_used+0x6b9>
    c4ef:	e8 9b 52 ff ff       	callq  178f <CC>
 F_END();
    c4f4:	b8 00 00 00 00       	mov    $0x0,%eax
    c4f9:	e8 48 54 ff ff       	callq  1946 <F_END>

// HEADER("(");   IMMED();
//  LIT(')'); CC("PARSE"); CC("2DROP");
// F_END();

 HEADER(".(");   IMMED();
    c4fe:	48 8d 3d 19 17 00 00 	lea    0x1719(%rip),%rdi        # dc1e <_IO_stdin_used+0x75e>
    c505:	e8 8a 4e ff ff       	callq  1394 <HEADER>
    c50a:	b8 00 00 00 00       	mov    $0x0,%eax
    c50f:	e8 be 4e ff ff       	callq  13d2 <IMMED>
  LIT(')'); CC("PARSE"); CC("TYPE");
    c514:	bf 29 00 00 00       	mov    $0x29,%edi
    c519:	e8 ba 5b ff ff       	callq  20d8 <LIT>
    c51e:	48 8d 3d 88 14 00 00 	lea    0x1488(%rip),%rdi        # d9ad <_IO_stdin_used+0x4ed>
    c525:	e8 65 52 ff ff       	callq  178f <CC>
    c52a:	48 8d 3d 46 14 00 00 	lea    0x1446(%rip),%rdi        # d977 <_IO_stdin_used+0x4b7>
    c531:	e8 59 52 ff ff       	callq  178f <CC>
 F_END();
    c536:	b8 00 00 00 00       	mov    $0x0,%eax
    c53b:	e8 06 54 ff ff       	callq  1946 <F_END>

 HEADER("\\");   IMMED();
    c540:	48 8d 3d da 16 00 00 	lea    0x16da(%rip),%rdi        # dc21 <_IO_stdin_used+0x761>
    c547:	e8 48 4e ff ff       	callq  1394 <HEADER>
    c54c:	b8 00 00 00 00       	mov    $0x0,%eax
    c551:	e8 7c 4e ff ff       	callq  13d2 <IMMED>
  LIT(0); CC("PARSE"); CC("2DROP");
    c556:	bf 00 00 00 00       	mov    $0x0,%edi
    c55b:	e8 78 5b ff ff       	callq  20d8 <LIT>
    c560:	48 8d 3d 46 14 00 00 	lea    0x1446(%rip),%rdi        # d9ad <_IO_stdin_used+0x4ed>
    c567:	e8 23 52 ff ff       	callq  178f <CC>
    c56c:	48 8d 3d 18 13 00 00 	lea    0x1318(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    c573:	e8 17 52 ff ff       	callq  178f <CC>
 F_END();
    c578:	b8 00 00 00 00       	mov    $0x0,%eax
    c57d:	e8 c4 53 ff ff       	callq  1946 <F_END>

 HEADER("CR");
    c582:	48 8d 3d 9a 16 00 00 	lea    0x169a(%rip),%rdi        # dc23 <_IO_stdin_used+0x763>
    c589:	e8 06 4e ff ff       	callq  1394 <HEADER>
 LIT('\n');  CC("EMIT");
    c58e:	bf 0a 00 00 00       	mov    $0xa,%edi
    c593:	e8 40 5b ff ff       	callq  20d8 <LIT>
    c598:	48 8d 3d d3 13 00 00 	lea    0x13d3(%rip),%rdi        # d972 <_IO_stdin_used+0x4b2>
    c59f:	e8 eb 51 ff ff       	callq  178f <CC>
 //LIT('\r');  CC("EMIT");
 F_END();
    c5a4:	b8 00 00 00 00       	mov    $0x0,%eax
    c5a9:	e8 98 53 ff ff       	callq  1946 <F_END>

 HEADER("SPACE");
    c5ae:	48 8d 3d 71 16 00 00 	lea    0x1671(%rip),%rdi        # dc26 <_IO_stdin_used+0x766>
    c5b5:	e8 da 4d ff ff       	callq  1394 <HEADER>
  LIT(' ');  CC("EMIT");
    c5ba:	bf 20 00 00 00       	mov    $0x20,%edi
    c5bf:	e8 14 5b ff ff       	callq  20d8 <LIT>
    c5c4:	48 8d 3d a7 13 00 00 	lea    0x13a7(%rip),%rdi        # d972 <_IO_stdin_used+0x4b2>
    c5cb:	e8 bf 51 ff ff       	callq  178f <CC>
 F_END();
    c5d0:	b8 00 00 00 00       	mov    $0x0,%eax
    c5d5:	e8 6c 53 ff ff       	callq  1946 <F_END>

 HEADER("MU/MOD");
    c5da:	48 8d 3d 4b 16 00 00 	lea    0x164b(%rip),%rdi        # dc2c <_IO_stdin_used+0x76c>
    c5e1:	e8 ae 4d ff ff       	callq  1394 <HEADER>
 // ( ud u --- urem udquot )  Divide unsigned double number
 //ud by u and return a double quotient and G a single remainder.
 CC(">R"); LIT(0); CC("R@"); CC("UM/MOD"); CC("R>");
    c5e6:	48 8d 3d 5a 13 00 00 	lea    0x135a(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    c5ed:	e8 9d 51 ff ff       	callq  178f <CC>
    c5f2:	bf 00 00 00 00       	mov    $0x0,%edi
    c5f7:	e8 dc 5a ff ff       	callq  20d8 <LIT>
    c5fc:	48 8d 3d 32 13 00 00 	lea    0x1332(%rip),%rdi        # d935 <_IO_stdin_used+0x475>
    c603:	e8 87 51 ff ff       	callq  178f <CC>
    c608:	48 8d 3d 63 12 00 00 	lea    0x1263(%rip),%rdi        # d872 <_IO_stdin_used+0x3b2>
    c60f:	e8 7b 51 ff ff       	callq  178f <CC>
    c614:	48 8d 3d 1d 13 00 00 	lea    0x131d(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    c61b:	e8 6f 51 ff ff       	callq  178f <CC>
       CC("SWAP"); CC(">R"); CC("UM/MOD"); CC("R>");
    c620:	48 8d 3d 9c 11 00 00 	lea    0x119c(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    c627:	e8 63 51 ff ff       	callq  178f <CC>
    c62c:	48 8d 3d 14 13 00 00 	lea    0x1314(%rip),%rdi        # d947 <_IO_stdin_used+0x487>
    c633:	e8 57 51 ff ff       	callq  178f <CC>
    c638:	48 8d 3d 33 12 00 00 	lea    0x1233(%rip),%rdi        # d872 <_IO_stdin_used+0x3b2>
    c63f:	e8 4b 51 ff ff       	callq  178f <CC>
    c644:	48 8d 3d ed 12 00 00 	lea    0x12ed(%rip),%rdi        # d938 <_IO_stdin_used+0x478>
    c64b:	e8 3f 51 ff ff       	callq  178f <CC>
F_END();
    c650:	b8 00 00 00 00       	mov    $0x0,%eax
    c655:	e8 ec 52 ff ff       	callq  1946 <F_END>

 HEADER("DABS"); // ( d --- ud)  ud is the absolute value of d.
    c65a:	48 8d 3d d2 15 00 00 	lea    0x15d2(%rip),%rdi        # dc33 <_IO_stdin_used+0x773>
    c661:	e8 2e 4d ff ff       	callq  1394 <HEADER>
		 CC("DUP"); CC("0<"); IF(); CC("DNEGATE"); THEN();
    c666:	48 8d 3d b4 12 00 00 	lea    0x12b4(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    c66d:	e8 1d 51 ff ff       	callq  178f <CC>
    c672:	48 8d 3d 5f 11 00 00 	lea    0x115f(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    c679:	e8 11 51 ff ff       	callq  178f <CC>
    c67e:	b8 00 00 00 00       	mov    $0x0,%eax
    c683:	e8 4d 56 ff ff       	callq  1cd5 <IF>
    c688:	48 8d 3d 11 15 00 00 	lea    0x1511(%rip),%rdi        # dba0 <_IO_stdin_used+0x6e0>
    c68f:	e8 fb 50 ff ff       	callq  178f <CC>
    c694:	b8 00 00 00 00       	mov    $0x0,%eax
    c699:	e8 69 58 ff ff       	callq  1f07 <THEN>
F_END();
    c69e:	b8 00 00 00 00       	mov    $0x0,%eax
    c6a3:	e8 9e 52 ff ff       	callq  1946 <F_END>

 VARIABLE("HLD");
    c6a8:	48 8d 3d 89 15 00 00 	lea    0x1589(%rip),%rdi        # dc38 <_IO_stdin_used+0x778>
    c6af:	e8 1c 4f ff ff       	callq  15d0 <VARIABLE>

 HEADER("HOLD"); // ( c ---)  Insert character c into the  numerical  conver- sion buffer.
    c6b4:	48 8d 3d 81 15 00 00 	lea    0x1581(%rip),%rdi        # dc3c <_IO_stdin_used+0x77c>
    c6bb:	e8 d4 4c ff ff       	callq  1394 <HEADER>
 LIT(-1);  CC("HLD"); CC("+!"); CC("HLD"); CC("@"); CC("C!");
    c6c0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    c6c5:	e8 0e 5a ff ff       	callq  20d8 <LIT>
    c6ca:	48 8d 3d 67 15 00 00 	lea    0x1567(%rip),%rdi        # dc38 <_IO_stdin_used+0x778>
    c6d1:	e8 b9 50 ff ff       	callq  178f <CC>
    c6d6:	48 8d 3d 0f 12 00 00 	lea    0x120f(%rip),%rdi        # d8ec <_IO_stdin_used+0x42c>
    c6dd:	e8 ad 50 ff ff       	callq  178f <CC>
    c6e2:	48 8d 3d 4f 15 00 00 	lea    0x154f(%rip),%rdi        # dc38 <_IO_stdin_used+0x778>
    c6e9:	e8 a1 50 ff ff       	callq  178f <CC>
    c6ee:	48 8d 3d 06 11 00 00 	lea    0x1106(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c6f5:	e8 95 50 ff ff       	callq  178f <CC>
    c6fa:	48 8d 3d ee 11 00 00 	lea    0x11ee(%rip),%rdi        # d8ef <_IO_stdin_used+0x42f>
    c701:	e8 89 50 ff ff       	callq  178f <CC>
 F_END();
    c706:	b8 00 00 00 00       	mov    $0x0,%eax
    c70b:	e8 36 52 ff ff       	callq  1946 <F_END>

 HEADER("#");  // ( ud1 --- ud2)  Extract the rightmost digit of ud1 and put
    c710:	48 8d 3d 2a 15 00 00 	lea    0x152a(%rip),%rdi        # dc41 <_IO_stdin_used+0x781>
    c717:	e8 78 4c ff ff       	callq  1394 <HEADER>
 // it into the numerical G conversion buffer.
 CC("BASE"); CC("@"); CC("MU/MOD"); CC("ROT"); CC("DUP");
    c71c:	48 8d 3d 2c 14 00 00 	lea    0x142c(%rip),%rdi        # db4f <_IO_stdin_used+0x68f>
    c723:	e8 67 50 ff ff       	callq  178f <CC>
    c728:	48 8d 3d cc 10 00 00 	lea    0x10cc(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c72f:	e8 5b 50 ff ff       	callq  178f <CC>
    c734:	48 8d 3d f1 14 00 00 	lea    0x14f1(%rip),%rdi        # dc2c <_IO_stdin_used+0x76c>
    c73b:	e8 4f 50 ff ff       	callq  178f <CC>
    c740:	48 8d 3d 81 10 00 00 	lea    0x1081(%rip),%rdi        # d7c8 <_IO_stdin_used+0x308>
    c747:	e8 43 50 ff ff       	callq  178f <CC>
    c74c:	48 8d 3d ce 11 00 00 	lea    0x11ce(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    c753:	e8 37 50 ff ff       	callq  178f <CC>
  LIT(9); CC(">");
    c758:	bf 09 00 00 00       	mov    $0x9,%edi
    c75d:	e8 76 59 ff ff       	callq  20d8 <LIT>
    c762:	48 8d 3d e7 10 00 00 	lea    0x10e7(%rip),%rdi        # d850 <_IO_stdin_used+0x390>
    c769:	e8 21 50 ff ff       	callq  178f <CC>
  IF(); LIT(7); CC("+");
    c76e:	b8 00 00 00 00       	mov    $0x0,%eax
    c773:	e8 5d 55 ff ff       	callq  1cd5 <IF>
    c778:	bf 07 00 00 00       	mov    $0x7,%edi
    c77d:	e8 56 59 ff ff       	callq  20d8 <LIT>
    c782:	48 8d 3d 90 10 00 00 	lea    0x1090(%rip),%rdi        # d819 <_IO_stdin_used+0x359>
    c789:	e8 01 50 ff ff       	callq  178f <CC>
  THEN(); LIT(48); CC("+"); CC("HOLD");
    c78e:	b8 00 00 00 00       	mov    $0x0,%eax
    c793:	e8 6f 57 ff ff       	callq  1f07 <THEN>
    c798:	bf 30 00 00 00       	mov    $0x30,%edi
    c79d:	e8 36 59 ff ff       	callq  20d8 <LIT>
    c7a2:	48 8d 3d 70 10 00 00 	lea    0x1070(%rip),%rdi        # d819 <_IO_stdin_used+0x359>
    c7a9:	e8 e1 4f ff ff       	callq  178f <CC>
    c7ae:	48 8d 3d 87 14 00 00 	lea    0x1487(%rip),%rdi        # dc3c <_IO_stdin_used+0x77c>
    c7b5:	e8 d5 4f ff ff       	callq  178f <CC>
 F_END();
    c7ba:	b8 00 00 00 00       	mov    $0x0,%eax
    c7bf:	e8 82 51 ff ff       	callq  1946 <F_END>

 HEADER("#S");  // ( ud --- 0 0 )  Convert ud by repeated use of # until ud is zero.
    c7c4:	48 8d 3d 78 14 00 00 	lea    0x1478(%rip),%rdi        # dc43 <_IO_stdin_used+0x783>
    c7cb:	e8 c4 4b ff ff       	callq  1394 <HEADER>
   BEGIN(); CC("#"); CC("2DUP"); CC("OR"); CC("0="); UNTIL();
    c7d0:	b8 00 00 00 00       	mov    $0x0,%eax
    c7d5:	e8 d4 51 ff ff       	callq  19ae <BEGIN>
    c7da:	48 8d 3d 60 14 00 00 	lea    0x1460(%rip),%rdi        # dc41 <_IO_stdin_used+0x781>
    c7e1:	e8 a9 4f ff ff       	callq  178f <CC>
    c7e6:	48 8d 3d 38 11 00 00 	lea    0x1138(%rip),%rdi        # d925 <_IO_stdin_used+0x465>
    c7ed:	e8 9d 4f ff ff       	callq  178f <CC>
    c7f2:	48 8d 3d 48 10 00 00 	lea    0x1048(%rip),%rdi        # d841 <_IO_stdin_used+0x381>
    c7f9:	e8 91 4f ff ff       	callq  178f <CC>
    c7fe:	48 8d 3d cc 0f 00 00 	lea    0xfcc(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    c805:	e8 85 4f ff ff       	callq  178f <CC>
    c80a:	b8 00 00 00 00       	mov    $0x0,%eax
    c80f:	e8 e6 52 ff ff       	callq  1afa <UNTIL>
 F_END();
    c814:	b8 00 00 00 00       	mov    $0x0,%eax
    c819:	e8 28 51 ff ff       	callq  1946 <F_END>

 HEADER("SIGN"); // (  n  ---)  Insert a - sign in the numerical conversion buffer if n is negative.
    c81e:	48 8d 3d 21 14 00 00 	lea    0x1421(%rip),%rdi        # dc46 <_IO_stdin_used+0x786>
    c825:	e8 6a 4b ff ff       	callq  1394 <HEADER>
		 CC("0<"); IF(); LIT(45); CC("HOLD"); THEN();
    c82a:	48 8d 3d a7 0f 00 00 	lea    0xfa7(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    c831:	e8 59 4f ff ff       	callq  178f <CC>
    c836:	b8 00 00 00 00       	mov    $0x0,%eax
    c83b:	e8 95 54 ff ff       	callq  1cd5 <IF>
    c840:	bf 2d 00 00 00       	mov    $0x2d,%edi
    c845:	e8 8e 58 ff ff       	callq  20d8 <LIT>
    c84a:	48 8d 3d eb 13 00 00 	lea    0x13eb(%rip),%rdi        # dc3c <_IO_stdin_used+0x77c>
    c851:	e8 39 4f ff ff       	callq  178f <CC>
    c856:	b8 00 00 00 00       	mov    $0x0,%eax
    c85b:	e8 a7 56 ff ff       	callq  1f07 <THEN>
 F_END();
    c860:	b8 00 00 00 00       	mov    $0x0,%eax
    c865:	e8 dc 50 ff ff       	callq  1946 <F_END>

 HEADER("<#"); // ( --- )  Reset the numerical conversion buffer.
    c86a:	48 8d 3d da 13 00 00 	lea    0x13da(%rip),%rdi        # dc4b <_IO_stdin_used+0x78b>
    c871:	e8 1e 4b ff ff       	callq  1394 <HEADER>
 CC("PAD"); CC("HLD"); CC("!");
    c876:	48 8d 3d ca 12 00 00 	lea    0x12ca(%rip),%rdi        # db47 <_IO_stdin_used+0x687>
    c87d:	e8 0d 4f ff ff       	callq  178f <CC>
    c882:	48 8d 3d af 13 00 00 	lea    0x13af(%rip),%rdi        # dc38 <_IO_stdin_used+0x778>
    c889:	e8 01 4f ff ff       	callq  178f <CC>
    c88e:	48 8d 3d 55 10 00 00 	lea    0x1055(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    c895:	e8 f5 4e ff ff       	callq  178f <CC>
 F_END();
    c89a:	b8 00 00 00 00       	mov    $0x0,%eax
    c89f:	e8 a2 50 ff ff       	callq  1946 <F_END>

 HEADER("#>"); // ( ud --- addr u )  Discard ud  and  give  the  address  and  length of the numerical conversion G buffer.
    c8a4:	48 8d 3d a3 13 00 00 	lea    0x13a3(%rip),%rdi        # dc4e <_IO_stdin_used+0x78e>
    c8ab:	e8 e4 4a ff ff       	callq  1394 <HEADER>
 CC("2DROP");  CC("HLD"); CC("@"); CC("PAD"); CC("OVER"); CC("-");
    c8b0:	48 8d 3d d4 0f 00 00 	lea    0xfd4(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    c8b7:	e8 d3 4e ff ff       	callq  178f <CC>
    c8bc:	48 8d 3d 75 13 00 00 	lea    0x1375(%rip),%rdi        # dc38 <_IO_stdin_used+0x778>
    c8c3:	e8 c7 4e ff ff       	callq  178f <CC>
    c8c8:	48 8d 3d 2c 0f 00 00 	lea    0xf2c(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    c8cf:	e8 bb 4e ff ff       	callq  178f <CC>
    c8d4:	48 8d 3d 6c 12 00 00 	lea    0x126c(%rip),%rdi        # db47 <_IO_stdin_used+0x687>
    c8db:	e8 af 4e ff ff       	callq  178f <CC>
    c8e0:	48 8d 3d 43 10 00 00 	lea    0x1043(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    c8e7:	e8 a3 4e ff ff       	callq  178f <CC>
    c8ec:	48 8d 3d 28 0f 00 00 	lea    0xf28(%rip),%rdi        # d81b <_IO_stdin_used+0x35b>
    c8f3:	e8 97 4e ff ff       	callq  178f <CC>
     F_END();
    c8f8:	b8 00 00 00 00       	mov    $0x0,%eax
    c8fd:	e8 44 50 ff ff       	callq  1946 <F_END>

 HEADER("(D.)");
    c902:	48 8d 3d 48 13 00 00 	lea    0x1348(%rip),%rdi        # dc51 <_IO_stdin_used+0x791>
    c909:	e8 86 4a ff ff       	callq  1394 <HEADER>
 CC("SWAP"); CC("OVER"); CC("DABS"); CC("<#"); CC("#S"); CC("ROT"); CC("SIGN");
    c90e:	48 8d 3d ae 0e 00 00 	lea    0xeae(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    c915:	e8 75 4e ff ff       	callq  178f <CC>
    c91a:	48 8d 3d 09 10 00 00 	lea    0x1009(%rip),%rdi        # d92a <_IO_stdin_used+0x46a>
    c921:	e8 69 4e ff ff       	callq  178f <CC>
    c926:	48 8d 3d 06 13 00 00 	lea    0x1306(%rip),%rdi        # dc33 <_IO_stdin_used+0x773>
    c92d:	e8 5d 4e ff ff       	callq  178f <CC>
    c932:	48 8d 3d 12 13 00 00 	lea    0x1312(%rip),%rdi        # dc4b <_IO_stdin_used+0x78b>
    c939:	e8 51 4e ff ff       	callq  178f <CC>
    c93e:	48 8d 3d fe 12 00 00 	lea    0x12fe(%rip),%rdi        # dc43 <_IO_stdin_used+0x783>
    c945:	e8 45 4e ff ff       	callq  178f <CC>
    c94a:	48 8d 3d 77 0e 00 00 	lea    0xe77(%rip),%rdi        # d7c8 <_IO_stdin_used+0x308>
    c951:	e8 39 4e ff ff       	callq  178f <CC>
    c956:	48 8d 3d e9 12 00 00 	lea    0x12e9(%rip),%rdi        # dc46 <_IO_stdin_used+0x786>
    c95d:	e8 2d 4e ff ff       	callq  178f <CC>
 CC("#>");
    c962:	48 8d 3d e5 12 00 00 	lea    0x12e5(%rip),%rdi        # dc4e <_IO_stdin_used+0x78e>
    c969:	e8 21 4e ff ff       	callq  178f <CC>
     F_END();
    c96e:	b8 00 00 00 00       	mov    $0x0,%eax
    c973:	e8 ce 4f ff ff       	callq  1946 <F_END>

HEADER("D."); // ( d --- )  Type the double number d to the terminal.
    c978:	48 8d 3d d7 12 00 00 	lea    0x12d7(%rip),%rdi        # dc56 <_IO_stdin_used+0x796>
    c97f:	e8 10 4a ff ff       	callq  1394 <HEADER>
  CC("(D.)"); CC("TYPE"); CC("SPACE");
    c984:	48 8d 3d c6 12 00 00 	lea    0x12c6(%rip),%rdi        # dc51 <_IO_stdin_used+0x791>
    c98b:	e8 ff 4d ff ff       	callq  178f <CC>
    c990:	48 8d 3d e0 0f 00 00 	lea    0xfe0(%rip),%rdi        # d977 <_IO_stdin_used+0x4b7>
    c997:	e8 f3 4d ff ff       	callq  178f <CC>
    c99c:	48 8d 3d 83 12 00 00 	lea    0x1283(%rip),%rdi        # dc26 <_IO_stdin_used+0x766>
    c9a3:	e8 e7 4d ff ff       	callq  178f <CC>
  F_END();
    c9a8:	b8 00 00 00 00       	mov    $0x0,%eax
    c9ad:	e8 94 4f ff ff       	callq  1946 <F_END>

 HEADER("U."); // ( u ---)  Type the unsigned number u to the terminal.
    c9b2:	48 8d 3d a0 12 00 00 	lea    0x12a0(%rip),%rdi        # dc59 <_IO_stdin_used+0x799>
    c9b9:	e8 d6 49 ff ff       	callq  1394 <HEADER>
     LIT(0); CC("D.");
    c9be:	bf 00 00 00 00       	mov    $0x0,%edi
    c9c3:	e8 10 57 ff ff       	callq  20d8 <LIT>
    c9c8:	48 8d 3d 87 12 00 00 	lea    0x1287(%rip),%rdi        # dc56 <_IO_stdin_used+0x796>
    c9cf:	e8 bb 4d ff ff       	callq  178f <CC>
     F_END();
    c9d4:	b8 00 00 00 00       	mov    $0x0,%eax
    c9d9:	e8 68 4f ff ff       	callq  1946 <F_END>

 HEADER("S>D");
    c9de:	48 8d 3d 77 12 00 00 	lea    0x1277(%rip),%rdi        # dc5c <_IO_stdin_used+0x79c>
    c9e5:	e8 aa 49 ff ff       	callq  1394 <HEADER>
   CC("DUP");  CC("0<");
    c9ea:	48 8d 3d 30 0f 00 00 	lea    0xf30(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    c9f1:	e8 99 4d ff ff       	callq  178f <CC>
    c9f6:	48 8d 3d db 0d 00 00 	lea    0xddb(%rip),%rdi        # d7d8 <_IO_stdin_used+0x318>
    c9fd:	e8 8d 4d ff ff       	callq  178f <CC>
 F_END();
    ca02:	b8 00 00 00 00       	mov    $0x0,%eax
    ca07:	e8 3a 4f ff ff       	callq  1946 <F_END>

 HEADER("."); // ( n ---)  Type the signed number n to the terminal.
    ca0c:	48 8d 3d 14 0b 00 00 	lea    0xb14(%rip),%rdi        # d527 <_IO_stdin_used+0x67>
    ca13:	e8 7c 49 ff ff       	callq  1394 <HEADER>
		 CC("S>D"); CC("D.");
    ca18:	48 8d 3d 3d 12 00 00 	lea    0x123d(%rip),%rdi        # dc5c <_IO_stdin_used+0x79c>
    ca1f:	e8 6b 4d ff ff       	callq  178f <CC>
    ca24:	48 8d 3d 2b 12 00 00 	lea    0x122b(%rip),%rdi        # dc56 <_IO_stdin_used+0x796>
    ca2b:	e8 5f 4d ff ff       	callq  178f <CC>
 F_END();
    ca30:	b8 00 00 00 00       	mov    $0x0,%eax
    ca35:	e8 0c 4f ff ff       	callq  1946 <F_END>



 HEADER("SOURCE-ID"); CC("SID");  CC("@");
    ca3a:	48 8d 3d 1f 12 00 00 	lea    0x121f(%rip),%rdi        # dc60 <_IO_stdin_used+0x7a0>
    ca41:	e8 4e 49 ff ff       	callq  1394 <HEADER>
    ca46:	48 8d 3d 28 11 00 00 	lea    0x1128(%rip),%rdi        # db75 <_IO_stdin_used+0x6b5>
    ca4d:	e8 3d 4d ff ff       	callq  178f <CC>
    ca52:	48 8d 3d a2 0d 00 00 	lea    0xda2(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    ca59:	e8 31 4d ff ff       	callq  178f <CC>
 F_END();
    ca5e:	b8 00 00 00 00       	mov    $0x0,%eax
    ca63:	e8 de 4e ff ff       	callq  1946 <F_END>


 HEADER("ACCEPT");
    ca68:	48 8d 3d fb 11 00 00 	lea    0x11fb(%rip),%rdi        # dc6a <_IO_stdin_used+0x7aa>
    ca6f:	e8 20 49 ff ff       	callq  1394 <HEADER>
  LIT(0); CC("READ-LINE"); CC("2DROP");
    ca74:	bf 00 00 00 00       	mov    $0x0,%edi
    ca79:	e8 5a 56 ff ff       	callq  20d8 <LIT>
    ca7e:	48 8d 3d c8 0f 00 00 	lea    0xfc8(%rip),%rdi        # da4d <_IO_stdin_used+0x58d>
    ca85:	e8 05 4d ff ff       	callq  178f <CC>
    ca8a:	48 8d 3d fa 0d 00 00 	lea    0xdfa(%rip),%rdi        # d88b <_IO_stdin_used+0x3cb>
    ca91:	e8 f9 4c ff ff       	callq  178f <CC>
 F_END();
    ca96:	b8 00 00 00 00       	mov    $0x0,%eax
    ca9b:	e8 a6 4e ff ff       	callq  1946 <F_END>

 HEADER("FORPRE");
    caa0:	48 8d 3d ca 11 00 00 	lea    0x11ca(%rip),%rdi        # dc71 <_IO_stdin_used+0x7b1>
    caa7:	e8 e8 48 ff ff       	callq  1394 <HEADER>
 CC("NOOP");
    caac:	48 8d 3d 05 0d 00 00 	lea    0xd05(%rip),%rdi        # d7b8 <_IO_stdin_used+0x2f8>
    cab3:	e8 d7 4c ff ff       	callq  178f <CC>
 F_END();
    cab8:	b8 00 00 00 00       	mov    $0x0,%eax
    cabd:	e8 84 4e ff ff       	callq  1946 <F_END>

 HEADER("REFILL");
    cac2:	48 8d 3d af 11 00 00 	lea    0x11af(%rip),%rdi        # dc78 <_IO_stdin_used+0x7b8>
    cac9:	e8 c6 48 ff ff       	callq  1394 <HEADER>
 CC("TIB"); CC("C/L"); CC("SOURCE-ID");
    cace:	48 8d 3d c1 10 00 00 	lea    0x10c1(%rip),%rdi        # db96 <_IO_stdin_used+0x6d6>
    cad5:	e8 b5 4c ff ff       	callq  178f <CC>
    cada:	48 8d 3d e5 0f 00 00 	lea    0xfe5(%rip),%rdi        # dac6 <_IO_stdin_used+0x606>
    cae1:	e8 a9 4c ff ff       	callq  178f <CC>
    cae6:	48 8d 3d 73 11 00 00 	lea    0x1173(%rip),%rdi        # dc60 <_IO_stdin_used+0x7a0>
    caed:	e8 9d 4c ff ff       	callq  178f <CC>
   CC("READ-LINE");  CC("DROP");
    caf2:	48 8d 3d 54 0f 00 00 	lea    0xf54(%rip),%rdi        # da4d <_IO_stdin_used+0x58d>
    caf9:	e8 91 4c ff ff       	callq  178f <CC>
    cafe:	48 8d 3d 81 0d 00 00 	lea    0xd81(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    cb05:	e8 85 4c ff ff       	callq  178f <CC>
   IF();  CC("TIB"); CC("SWAP");
    cb0a:	b8 00 00 00 00       	mov    $0x0,%eax
    cb0f:	e8 c1 51 ff ff       	callq  1cd5 <IF>
    cb14:	48 8d 3d 7b 10 00 00 	lea    0x107b(%rip),%rdi        # db96 <_IO_stdin_used+0x6d6>
    cb1b:	e8 6f 4c ff ff       	callq  178f <CC>
    cb20:	48 8d 3d 9c 0c 00 00 	lea    0xc9c(%rip),%rdi        # d7c3 <_IO_stdin_used+0x303>
    cb27:	e8 63 4c ff ff       	callq  178f <CC>
 CC("SOURCE!");
    cb2c:	48 8d 3d 90 0e 00 00 	lea    0xe90(%rip),%rdi        # d9c3 <_IO_stdin_used+0x503>
    cb33:	e8 57 4c ff ff       	callq  178f <CC>
    LIT(1); CC("CURSTR"); CC("+!");   CC("FORPRE");
    cb38:	bf 01 00 00 00       	mov    $0x1,%edi
    cb3d:	e8 96 55 ff ff       	callq  20d8 <LIT>
    cb42:	48 8d 3d 0f 10 00 00 	lea    0x100f(%rip),%rdi        # db58 <_IO_stdin_used+0x698>
    cb49:	e8 41 4c ff ff       	callq  178f <CC>
    cb4e:	48 8d 3d 97 0d 00 00 	lea    0xd97(%rip),%rdi        # d8ec <_IO_stdin_used+0x42c>
    cb55:	e8 35 4c ff ff       	callq  178f <CC>
    cb5a:	48 8d 3d 10 11 00 00 	lea    0x1110(%rip),%rdi        # dc71 <_IO_stdin_used+0x7b1>
    cb61:	e8 29 4c ff ff       	callq  178f <CC>
  LIT((__u32)-1);
    cb66:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    cb6b:	e8 68 55 ff ff       	callq  20d8 <LIT>
   ELSE(); CC("DROP"); LIT(0);
    cb70:	b8 00 00 00 00       	mov    $0x0,%eax
    cb75:	e8 49 54 ff ff       	callq  1fc3 <ELSE>
    cb7a:	48 8d 3d 05 0d 00 00 	lea    0xd05(%rip),%rdi        # d886 <_IO_stdin_used+0x3c6>
    cb81:	e8 09 4c ff ff       	callq  178f <CC>
    cb86:	bf 00 00 00 00       	mov    $0x0,%edi
    cb8b:	e8 48 55 ff ff       	callq  20d8 <LIT>
   THEN();
    cb90:	b8 00 00 00 00       	mov    $0x0,%eax
    cb95:	e8 6d 53 ff ff       	callq  1f07 <THEN>
   CC(">IN"); CC("0!");
    cb9a:	48 8d 3d 14 0f 00 00 	lea    0xf14(%rip),%rdi        # dab5 <_IO_stdin_used+0x5f5>
    cba1:	e8 e9 4b ff ff       	callq  178f <CC>
    cba6:	48 8d 3d 53 0c 00 00 	lea    0xc53(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    cbad:	e8 dd 4b ff ff       	callq  178f <CC>
   F_END();
    cbb2:	b8 00 00 00 00       	mov    $0x0,%eax
    cbb7:	e8 8a 4d ff ff       	callq  1946 <F_END>

HEADER("(");   IMMED();
    cbbc:	48 8d 3d bc 10 00 00 	lea    0x10bc(%rip),%rdi        # dc7f <_IO_stdin_used+0x7bf>
    cbc3:	e8 cc 47 ff ff       	callq  1394 <HEADER>
    cbc8:	b8 00 00 00 00       	mov    $0x0,%eax
    cbcd:	e8 00 48 ff ff       	callq  13d2 <IMMED>
     BEGIN();
    cbd2:	b8 00 00 00 00       	mov    $0x0,%eax
    cbd7:	e8 d2 4d ff ff       	callq  19ae <BEGIN>
      	  LIT(')'); CC("DUP"); CC("PARSE"); CC("+");
    cbdc:	bf 29 00 00 00       	mov    $0x29,%edi
    cbe1:	e8 f2 54 ff ff       	callq  20d8 <LIT>
    cbe6:	48 8d 3d 34 0d 00 00 	lea    0xd34(%rip),%rdi        # d921 <_IO_stdin_used+0x461>
    cbed:	e8 9d 4b ff ff       	callq  178f <CC>
    cbf2:	48 8d 3d b4 0d 00 00 	lea    0xdb4(%rip),%rdi        # d9ad <_IO_stdin_used+0x4ed>
    cbf9:	e8 91 4b ff ff       	callq  178f <CC>
    cbfe:	48 8d 3d 14 0c 00 00 	lea    0xc14(%rip),%rdi        # d819 <_IO_stdin_used+0x359>
    cc05:	e8 85 4b ff ff       	callq  178f <CC>
      	  CC("C@"); CC("="); CC("0=");
    cc0a:	48 8d 3d e4 0b 00 00 	lea    0xbe4(%rip),%rdi        # d7f5 <_IO_stdin_used+0x335>
    cc11:	e8 79 4b ff ff       	callq  178f <CC>
    cc16:	48 8d 3d c1 0b 00 00 	lea    0xbc1(%rip),%rdi        # d7de <_IO_stdin_used+0x31e>
    cc1d:	e8 6d 4b ff ff       	callq  178f <CC>
    cc22:	48 8d 3d a8 0b 00 00 	lea    0xba8(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    cc29:	e8 61 4b ff ff       	callq  178f <CC>
     WHILE(); CC("REFILL"); CC("0=");
    cc2e:	b8 00 00 00 00       	mov    $0x0,%eax
    cc33:	e8 df 51 ff ff       	callq  1e17 <WHILE>
    cc38:	48 8d 3d 39 10 00 00 	lea    0x1039(%rip),%rdi        # dc78 <_IO_stdin_used+0x7b8>
    cc3f:	e8 4b 4b ff ff       	callq  178f <CC>
    cc44:	48 8d 3d 86 0b 00 00 	lea    0xb86(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    cc4b:	e8 3f 4b ff ff       	callq  178f <CC>
     	 IF(); COM(0x8001); THEN();
    cc50:	b8 00 00 00 00       	mov    $0x0,%eax
    cc55:	e8 7b 50 ff ff       	callq  1cd5 <IF>
    cc5a:	bf 01 80 00 00       	mov    $0x8001,%edi
    cc5f:	e8 53 44 ff ff       	callq  10b7 <COM>
    cc64:	b8 00 00 00 00       	mov    $0x0,%eax
    cc69:	e8 99 52 ff ff       	callq  1f07 <THEN>
     REPEAT();
    cc6e:	b8 00 00 00 00       	mov    $0x0,%eax
    cc73:	e8 45 54 ff ff       	callq  20bd <REPEAT>
  F_END();
    cc78:	b8 00 00 00 00       	mov    $0x0,%eax
    cc7d:	e8 c4 4c ff ff       	callq  1946 <F_END>

   HEADER("FQUIT");
    cc82:	48 8d 3d f8 0f 00 00 	lea    0xff8(%rip),%rdi        # dc81 <_IO_stdin_used+0x7c1>
    cc89:	e8 06 47 ff ff       	callq  1394 <HEADER>
   BEGIN();    CC("REFILL");
    cc8e:	b8 00 00 00 00       	mov    $0x0,%eax
    cc93:	e8 16 4d ff ff       	callq  19ae <BEGIN>
    cc98:	48 8d 3d d9 0f 00 00 	lea    0xfd9(%rip),%rdi        # dc78 <_IO_stdin_used+0x7b8>
    cc9f:	e8 eb 4a ff ff       	callq  178f <CC>
   WHILE();    CC("INTERPRET");
    cca4:	b8 00 00 00 00       	mov    $0x0,%eax
    cca9:	e8 69 51 ff ff       	callq  1e17 <WHILE>
    ccae:	48 8d 3d 3f 0f 00 00 	lea    0xf3f(%rip),%rdi        # dbf4 <_IO_stdin_used+0x734>
    ccb5:	e8 d5 4a ff ff       	callq  178f <CC>
   REPEAT();
    ccba:	b8 00 00 00 00       	mov    $0x0,%eax
    ccbf:	e8 f9 53 ff ff       	callq  20bd <REPEAT>
   F_END();
    ccc4:	b8 00 00 00 00       	mov    $0x0,%eax
    ccc9:	e8 78 4c ff ff       	callq  1946 <F_END>

   HEADER("QUIT");
    ccce:	48 8d 3d b2 0f 00 00 	lea    0xfb2(%rip),%rdi        # dc87 <_IO_stdin_used+0x7c7>
    ccd5:	e8 ba 46 ff ff       	callq  1394 <HEADER>
   BEGIN();    CC("REFILL");
    ccda:	b8 00 00 00 00       	mov    $0x0,%eax
    ccdf:	e8 ca 4c ff ff       	callq  19ae <BEGIN>
    cce4:	48 8d 3d 8d 0f 00 00 	lea    0xf8d(%rip),%rdi        # dc78 <_IO_stdin_used+0x7b8>
    cceb:	e8 9f 4a ff ff       	callq  178f <CC>
   WHILE();    CC("INTERPRET");   CC("STATE"); CC("@");   CC("0=");   	   	   IF();  TP("OK"); CC("CR");   	   	   THEN();
    ccf0:	b8 00 00 00 00       	mov    $0x0,%eax
    ccf5:	e8 1d 51 ff ff       	callq  1e17 <WHILE>
    ccfa:	48 8d 3d f3 0e 00 00 	lea    0xef3(%rip),%rdi        # dbf4 <_IO_stdin_used+0x734>
    cd01:	e8 89 4a ff ff       	callq  178f <CC>
    cd06:	48 8d 3d ac 0d 00 00 	lea    0xdac(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    cd0d:	e8 7d 4a ff ff       	callq  178f <CC>
    cd12:	48 8d 3d e2 0a 00 00 	lea    0xae2(%rip),%rdi        # d7fb <_IO_stdin_used+0x33b>
    cd19:	e8 71 4a ff ff       	callq  178f <CC>
    cd1e:	48 8d 3d ac 0a 00 00 	lea    0xaac(%rip),%rdi        # d7d1 <_IO_stdin_used+0x311>
    cd25:	e8 65 4a ff ff       	callq  178f <CC>
    cd2a:	b8 00 00 00 00       	mov    $0x0,%eax
    cd2f:	e8 a1 4f ff ff       	callq  1cd5 <IF>
    cd34:	48 8d 3d 51 0f 00 00 	lea    0xf51(%rip),%rdi        # dc8c <_IO_stdin_used+0x7cc>
    cd3b:	e8 e1 4b ff ff       	callq  1921 <TP>
    cd40:	48 8d 3d dc 0e 00 00 	lea    0xedc(%rip),%rdi        # dc23 <_IO_stdin_used+0x763>
    cd47:	e8 43 4a ff ff       	callq  178f <CC>
    cd4c:	b8 00 00 00 00       	mov    $0x0,%eax
    cd51:	e8 b1 51 ff ff       	callq  1f07 <THEN>
//   WHILE();  CC("CR"); CC("SOURCE"); TP("<" ); CC("TYPE");  TP(">" );   //  CC("INTERPRET");

   REPEAT();
    cd56:	b8 00 00 00 00       	mov    $0x0,%eax
    cd5b:	e8 5d 53 ff ff       	callq  20bd <REPEAT>
   F_END();
    cd60:	b8 00 00 00 00       	mov    $0x0,%eax
    cd65:	e8 dc 4b ff ff       	callq  1946 <F_END>

   HEADER("TST"); // ( d --- )  Type the double number d to the terminal.
    cd6a:	48 8d 3d 1e 0f 00 00 	lea    0xf1e(%rip),%rdi        # dc8f <_IO_stdin_used+0x7cf>
    cd71:	e8 1e 46 ff ff       	callq  1394 <HEADER>
   TP("TST<");  CC("PPPP"); CC("U.");   TP(">TST\n");
    cd76:	48 8d 3d 16 0f 00 00 	lea    0xf16(%rip),%rdi        # dc93 <_IO_stdin_used+0x7d3>
    cd7d:	e8 9f 4b ff ff       	callq  1921 <TP>
    cd82:	48 8d 3d 9d 0d 00 00 	lea    0xd9d(%rip),%rdi        # db26 <_IO_stdin_used+0x666>
    cd89:	e8 01 4a ff ff       	callq  178f <CC>
    cd8e:	48 8d 3d c4 0e 00 00 	lea    0xec4(%rip),%rdi        # dc59 <_IO_stdin_used+0x799>
    cd95:	e8 f5 49 ff ff       	callq  178f <CC>
    cd9a:	48 8d 3d f7 0e 00 00 	lea    0xef7(%rip),%rdi        # dc98 <_IO_stdin_used+0x7d8>
    cda1:	e8 7b 4b ff ff       	callq  1921 <TP>
     F_END();
    cda6:	b8 00 00 00 00       	mov    $0x0,%eax
    cdab:	e8 96 4b ff ff       	callq  1946 <F_END>

  HEADER("ECHOX");
    cdb0:	48 8d 3d e7 0e 00 00 	lea    0xee7(%rip),%rdi        # dc9e <_IO_stdin_used+0x7de>
    cdb7:	e8 d8 45 ff ff       	callq  1394 <HEADER>
  BEGIN(); CC("KEY"); CC("H.");
    cdbc:	b8 00 00 00 00       	mov    $0x0,%eax
    cdc1:	e8 e8 4b ff ff       	callq  19ae <BEGIN>
    cdc6:	48 8d 3d 90 0b 00 00 	lea    0xb90(%rip),%rdi        # d95d <_IO_stdin_used+0x49d>
    cdcd:	e8 bd 49 ff ff       	callq  178f <CC>
    cdd2:	48 8d 3d a9 0b 00 00 	lea    0xba9(%rip),%rdi        # d982 <_IO_stdin_used+0x4c2>
    cdd9:	e8 b1 49 ff ff       	callq  178f <CC>
  AGAIN();
    cdde:	b8 00 00 00 00       	mov    $0x0,%eax
    cde3:	e8 79 4c ff ff       	callq  1a61 <AGAIN>
  F_END();
    cde8:	b8 00 00 00 00       	mov    $0x0,%eax
    cded:	e8 54 4b ff ff       	callq  1946 <F_END>

  shere=HERE;
    cdf2:	48 8b 05 8f 25 60 00 	mov    0x60258f(%rip),%rax        # 60f388 <f_boot>
    cdf9:	48 05 20 01 00 00    	add    $0x120,%rax
    cdff:	89 c2                	mov    %eax,%edx
    ce01:	48 8b 05 80 25 60 00 	mov    0x602580(%rip),%rax        # 60f388 <f_boot>
    ce08:	29 c2                	sub    %eax,%edx
    ce0a:	89 d0                	mov    %edx,%eax
    ce0c:	89 c7                	mov    %eax,%edi
    ce0e:	e8 5a 40 ff ff       	callq  e6d <v2r>
    ce13:	8b 00                	mov    (%rax),%eax
    ce15:	89 45 ec             	mov    %eax,-0x14(%rbp)
  HERE+=1000;
    ce18:	48 8b 05 69 25 60 00 	mov    0x602569(%rip),%rax        # 60f388 <f_boot>
    ce1f:	48 05 20 01 00 00    	add    $0x120,%rax
    ce25:	89 c2                	mov    %eax,%edx
    ce27:	48 8b 05 5a 25 60 00 	mov    0x60255a(%rip),%rax        # 60f388 <f_boot>
    ce2e:	29 c2                	sub    %eax,%edx
    ce30:	89 d0                	mov    %edx,%eax
    ce32:	89 c7                	mov    %eax,%edi
    ce34:	e8 34 40 ff ff       	callq  e6d <v2r>
    ce39:	8b 10                	mov    (%rax),%edx
    ce3b:	81 c2 e8 03 00 00    	add    $0x3e8,%edx
    ce41:	89 10                	mov    %edx,(%rax)

 FSTART=HERE;
    ce43:	48 8b 05 3e 25 60 00 	mov    0x60253e(%rip),%rax        # 60f388 <f_boot>
    ce4a:	48 05 20 01 00 00    	add    $0x120,%rax
    ce50:	89 c2                	mov    %eax,%edx
    ce52:	48 8b 05 2f 25 60 00 	mov    0x60252f(%rip),%rax        # 60f388 <f_boot>
    ce59:	29 c2                	sub    %eax,%edx
    ce5b:	89 d0                	mov    %edx,%eax
    ce5d:	89 c7                	mov    %eax,%edi
    ce5f:	e8 09 40 ff ff       	callq  e6d <v2r>
    ce64:	48 89 c2             	mov    %rax,%rdx
    ce67:	48 8d 05 72 22 20 00 	lea    0x202272(%rip),%rax        # 20f0e0 <mem>
    ce6e:	8b 12                	mov    (%rdx),%edx
    ce70:	89 10                	mov    %edx,(%rax)
 TP("Forth");
    ce72:	48 8d 3d 2b 0e 00 00 	lea    0xe2b(%rip),%rdi        # dca4 <_IO_stdin_used+0x7e4>
    ce79:	e8 a3 4a ff ff       	callq  1921 <TP>
 COM(sw_lit<<1|1); CC("INTERPRET_");  TP(" sys\n");  CC("&INTERPRET"); CC("!");
    ce7e:	bf a3 00 00 00       	mov    $0xa3,%edi
    ce83:	e8 2f 42 ff ff       	callq  10b7 <COM>
    ce88:	48 8d 3d 4f 0d 00 00 	lea    0xd4f(%rip),%rdi        # dbde <_IO_stdin_used+0x71e>
    ce8f:	e8 fb 48 ff ff       	callq  178f <CC>
    ce94:	48 8d 3d 0f 0e 00 00 	lea    0xe0f(%rip),%rdi        # dcaa <_IO_stdin_used+0x7ea>
    ce9b:	e8 81 4a ff ff       	callq  1921 <TP>
    cea0:	48 8d 3d 42 0d 00 00 	lea    0xd42(%rip),%rdi        # dbe9 <_IO_stdin_used+0x729>
    cea7:	e8 e3 48 ff ff       	callq  178f <CC>
    ceac:	48 8d 3d 37 0a 00 00 	lea    0xa37(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    ceb3:	e8 d7 48 ff ff       	callq  178f <CC>

 //TP("Save version 2 \n");
  CC("STATE");
    ceb8:	48 8d 3d fa 0b 00 00 	lea    0xbfa(%rip),%rdi        # dab9 <_IO_stdin_used+0x5f9>
    cebf:	e8 cb 48 ff ff       	callq  178f <CC>
 CC("0!");
    cec4:	48 8d 3d 35 09 00 00 	lea    0x935(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    cecb:	e8 bf 48 ff ff       	callq  178f <CC>
 CC("SID"); CC("0!");
    ced0:	48 8d 3d 9e 0c 00 00 	lea    0xc9e(%rip),%rdi        # db75 <_IO_stdin_used+0x6b5>
    ced7:	e8 b3 48 ff ff       	callq  178f <CC>
    cedc:	48 8d 3d 1d 09 00 00 	lea    0x91d(%rip),%rdi        # d800 <_IO_stdin_used+0x340>
    cee3:	e8 a7 48 ff ff       	callq  178f <CC>
 CC("SP@"); CC("SP0"); CC("!");
    cee8:	48 8d 3d e5 09 00 00 	lea    0x9e5(%rip),%rdi        # d8d4 <_IO_stdin_used+0x414>
    ceef:	e8 9b 48 ff ff       	callq  178f <CC>
    cef4:	48 8d 3d 59 0c 00 00 	lea    0xc59(%rip),%rdi        # db54 <_IO_stdin_used+0x694>
    cefb:	e8 8f 48 ff ff       	callq  178f <CC>
    cf00:	48 8d 3d e3 09 00 00 	lea    0x9e3(%rip),%rdi        # d8ea <_IO_stdin_used+0x42a>
    cf07:	e8 83 48 ff ff       	callq  178f <CC>

CC("DECIMAL");
    cf0c:	48 8d 3d 73 0c 00 00 	lea    0xc73(%rip),%rdi        # db86 <_IO_stdin_used+0x6c6>
    cf13:	e8 77 48 ff ff       	callq  178f <CC>

STR(".( DEPTH=) DEPTH . CR");  CC("EVAL");
    cf18:	48 8d 3d 91 0d 00 00 	lea    0xd91(%rip),%rdi        # dcb0 <_IO_stdin_used+0x7f0>
    cf1f:	e8 30 49 ff ff       	callq  1854 <STR>
    cf24:	48 8d 3d d3 0c 00 00 	lea    0xcd3(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cf2b:	e8 5f 48 ff ff       	callq  178f <CC>

STR(" : CDUMP  SWAP   VFMADR + SWAP  PDUMP ; ");  CC("EVAL");
    cf30:	48 8d 3d 91 0d 00 00 	lea    0xd91(%rip),%rdi        # dcc8 <_IO_stdin_used+0x808>
    cf37:	e8 18 49 ff ff       	callq  1854 <STR>
    cf3c:	48 8d 3d bb 0c 00 00 	lea    0xcbb(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cf43:	e8 47 48 ff ff       	callq  178f <CC>
//STR(" : UTST  BEGIN  S\" U\" UTYPE  AGAIN  ; ");  CC("EVAL");

STR(": FERR^ NOOP ;");  CC("EVAL");
    cf48:	48 8d 3d a2 0d 00 00 	lea    0xda2(%rip),%rdi        # dcf1 <_IO_stdin_used+0x831>
    cf4f:	e8 00 49 ff ff       	callq  1854 <STR>
    cf54:	48 8d 3d a3 0c 00 00 	lea    0xca3(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cf5b:	e8 2f 48 ff ff       	callq  178f <CC>
STR(": PERR .\" v ERR=\". ;");  CC("EVAL");
    cf60:	48 8d 3d 99 0d 00 00 	lea    0xd99(%rip),%rdi        # dd00 <_IO_stdin_used+0x840>
    cf67:	e8 e8 48 ff ff       	callq  1854 <STR>
    cf6c:	48 8d 3d 8b 0c 00 00 	lea    0xc8b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cf73:	e8 17 48 ff ff       	callq  178f <CC>
STR(": SAVEERR NOOP ;");  CC("EVAL");
    cf78:	48 8d 3d 96 0d 00 00 	lea    0xd96(%rip),%rdi        # dd15 <_IO_stdin_used+0x855>
    cf7f:	e8 d0 48 ff ff       	callq  1854 <STR>
    cf84:	48 8d 3d 73 0c 00 00 	lea    0xc73(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cf8b:	e8 ff 47 ff ff       	callq  178f <CC>

STR(": INCLUDE-FILE");  CC("EVAL"); // ( fid --- )
    cf90:	48 8d 3d 8f 0d 00 00 	lea    0xd8f(%rip),%rdi        # dd26 <_IO_stdin_used+0x866>
    cf97:	e8 b8 48 ff ff       	callq  1854 <STR>
    cf9c:	48 8d 3d 5b 0c 00 00 	lea    0xc5b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cfa3:	e8 e7 47 ff ff       	callq  178f <CC>
// Read lines from the file identified by fid and interpret them.
// INCLUDE and EVALUATE nest in arbitrary order.
STR("SID @ >R >IN @ >R ATIB @ >R #TIB @ >R CURSTR @ >R RP@ C/L - RP!");  CC("EVAL");
    cfa8:	48 8d 3d 89 0d 00 00 	lea    0xd89(%rip),%rdi        # dd38 <_IO_stdin_used+0x878>
    cfaf:	e8 a0 48 ff ff       	callq  1854 <STR>
    cfb4:	48 8d 3d 43 0c 00 00 	lea    0xc43(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cfbb:	e8 cf 47 ff ff       	callq  178f <CC>
STR("SID ! RP@ ATIB ! CURSTR 0! ");  CC("EVAL");
    cfc0:	48 8d 3d b1 0d 00 00 	lea    0xdb1(%rip),%rdi        # dd78 <_IO_stdin_used+0x8b8>
    cfc7:	e8 88 48 ff ff       	callq  1854 <STR>
    cfcc:	48 8d 3d 2b 0c 00 00 	lea    0xc2b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cfd3:	e8 b7 47 ff ff       	callq  178f <CC>
STR("['] FQUIT CATCH SAVEERR");  CC("EVAL");
    cfd8:	48 8d 3d b5 0d 00 00 	lea    0xdb5(%rip),%rdi        # dd94 <_IO_stdin_used+0x8d4>
    cfdf:	e8 70 48 ff ff       	callq  1854 <STR>
    cfe4:	48 8d 3d 13 0c 00 00 	lea    0xc13(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    cfeb:	e8 9f 47 ff ff       	callq  178f <CC>
STR("DUP IF CR SOURCE TYPE CR FERR^ .\" :\" CURSTR @ . THEN");  CC("EVAL");
    cff0:	48 8d 3d b9 0d 00 00 	lea    0xdb9(%rip),%rdi        # ddb0 <_IO_stdin_used+0x8f0>
    cff7:	e8 58 48 ff ff       	callq  1854 <STR>
    cffc:	48 8d 3d fb 0b 00 00 	lea    0xbfb(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d003:	e8 87 47 ff ff       	callq  178f <CC>

STR("RP@ C/L + RP! R> CURSTR ! R> #TIB ! R> ATIB ! R> >IN ! R> SID ! THROW ;");  CC("EVAL");
    d008:	48 8d 3d d9 0d 00 00 	lea    0xdd9(%rip),%rdi        # dde8 <_IO_stdin_used+0x928>
    d00f:	e8 40 48 ff ff       	callq  1854 <STR>
    d014:	48 8d 3d e3 0b 00 00 	lea    0xbe3(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d01b:	e8 6f 47 ff ff       	callq  178f <CC>

STR(": INCLUDED");  CC("EVAL"); // ( c-addr u ---- )
    d020:	48 8d 3d 09 0e 00 00 	lea    0xe09(%rip),%rdi        # de30 <_IO_stdin_used+0x970>
    d027:	e8 28 48 ff ff       	callq  1854 <STR>
    d02c:	48 8d 3d cb 0b 00 00 	lea    0xbcb(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d033:	e8 57 47 ff ff       	callq  178f <CC>
// Open the file with name c-addr u and interpret all lines contained in it.
STR("R/O OPEN-FILE IF -38 THROW THEN");  CC("EVAL");
    d038:	48 8d 3d 01 0e 00 00 	lea    0xe01(%rip),%rdi        # de40 <_IO_stdin_used+0x980>
    d03f:	e8 10 48 ff ff       	callq  1854 <STR>
    d044:	48 8d 3d b3 0b 00 00 	lea    0xbb3(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d04b:	e8 3f 47 ff ff       	callq  178f <CC>
STR("DUP >R ['] INCLUDE-FILE CATCH");  CC("EVAL");
    d050:	48 8d 3d 09 0e 00 00 	lea    0xe09(%rip),%rdi        # de60 <_IO_stdin_used+0x9a0>
    d057:	e8 f8 47 ff ff       	callq  1854 <STR>
    d05c:	48 8d 3d 9b 0b 00 00 	lea    0xb9b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d063:	e8 27 47 ff ff       	callq  178f <CC>
STR("R> CLOSE-FILE DROP THROW ;");  CC("EVAL");
    d068:	48 8d 3d 0f 0e 00 00 	lea    0xe0f(%rip),%rdi        # de7e <_IO_stdin_used+0x9be>
    d06f:	e8 e0 47 ff ff       	callq  1854 <STR>
    d074:	48 8d 3d 83 0b 00 00 	lea    0xb83(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d07b:	e8 0f 47 ff ff       	callq  178f <CC>

STR(": FLOAD PARSE-NAME INCLUDED ;");  CC("EVAL");
    d080:	48 8d 3d 12 0e 00 00 	lea    0xe12(%rip),%rdi        # de99 <_IO_stdin_used+0x9d9>
    d087:	e8 c8 47 ff ff       	callq  1854 <STR>
    d08c:	48 8d 3d 6b 0b 00 00 	lea    0xb6b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d093:	e8 f7 46 ff ff       	callq  178f <CC>
STR("CREATE TATR 55 ALLOT TATR VATR DROP");  CC("EVAL");
    d098:	48 8d 3d 19 0e 00 00 	lea    0xe19(%rip),%rdi        # deb8 <_IO_stdin_used+0x9f8>
    d09f:	e8 b0 47 ff ff       	callq  1854 <STR>
    d0a4:	48 8d 3d 53 0b 00 00 	lea    0xb53(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d0ab:	e8 df 46 ff ff       	callq  178f <CC>
STR(": AUTOEXEC S\" autoexec.4\" ['] INCLUDED CATCH .\" ERR=\" . SP0 @ SP! STATE 0! ;"); CC("EVAL");
    d0b0:	48 8d 3d 29 0e 00 00 	lea    0xe29(%rip),%rdi        # dee0 <_IO_stdin_used+0xa20>
    d0b7:	e8 98 47 ff ff       	callq  1854 <STR>
    d0bc:	48 8d 3d 3b 0b 00 00 	lea    0xb3b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d0c3:	e8 c7 46 ff ff       	callq  178f <CC>
STR(": MAIN .\" MAIN\" CR  BEGIN STATE 0! ['] QUIT CATCH .\" ERR=\"  .  SP0 @ SP! AGAIN ;");  CC("EVAL");
    d0c8:	48 8d 3d 61 0e 00 00 	lea    0xe61(%rip),%rdi        # df30 <_IO_stdin_used+0xa70>
    d0cf:	e8 80 47 ff ff       	callq  1854 <STR>
    d0d4:	48 8d 3d 23 0b 00 00 	lea    0xb23(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d0db:	e8 af 46 ff ff       	callq  178f <CC>
STR(": TATRDO TATR COUNT ['] EVAL CATCH PERR  SP0 @ SP! STATE 0! MAIN ;"); CC("EVAL");
    d0e0:	48 8d 3d a1 0e 00 00 	lea    0xea1(%rip),%rdi        # df88 <_IO_stdin_used+0xac8>
    d0e7:	e8 68 47 ff ff       	callq  1854 <STR>
    d0ec:	48 8d 3d 0b 0b 00 00 	lea    0xb0b(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d0f3:	e8 97 46 ff ff       	callq  178f <CC>
STR("TATRDO"); CC("EVAL");
    d0f8:	48 8d 3d cc 0e 00 00 	lea    0xecc(%rip),%rdi        # dfcb <_IO_stdin_used+0xb0b>
    d0ff:	e8 50 47 ff ff       	callq  1854 <STR>
    d104:	48 8d 3d f3 0a 00 00 	lea    0xaf3(%rip),%rdi        # dbfe <_IO_stdin_used+0x73e>
    d10b:	e8 7f 46 ff ff       	callq  178f <CC>
 HERE=shere;
    d110:	48 8b 05 71 22 60 00 	mov    0x602271(%rip),%rax        # 60f388 <f_boot>
    d117:	48 05 20 01 00 00    	add    $0x120,%rax
    d11d:	89 c2                	mov    %eax,%edx
    d11f:	48 8b 05 62 22 60 00 	mov    0x602262(%rip),%rax        # 60f388 <f_boot>
    d126:	29 c2                	sub    %eax,%edx
    d128:	89 d0                	mov    %edx,%eax
    d12a:	89 c7                	mov    %eax,%edi
    d12c:	e8 3c 3d ff ff       	callq  e6d <v2r>
    d131:	48 89 c2             	mov    %rax,%rdx
    d134:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d137:	89 02                	mov    %eax,(%rdx)
}
    d139:	90                   	nop
    d13a:	48 83 c4 18          	add    $0x18,%rsp
    d13e:	5b                   	pop    %rbx
    d13f:	5d                   	pop    %rbp
    d140:	c3                   	retq   

000000000000d141 <vfm_do>:

void vfm_do()
{  int ii;
    d141:	55                   	push   %rbp
    d142:	48 89 e5             	mov    %rsp,%rbp
    d145:	48 83 ec 10          	sub    $0x10,%rsp
	DescriptorTable[0]= mem;
    d149:	48 8d 05 90 1f 20 00 	lea    0x201f90(%rip),%rax        # 20f0e0 <mem>
    d150:	48 89 05 e9 1e 20 00 	mov    %rax,0x201ee9(%rip)        # 20f040 <DescriptorTable>
	for(ii=1;ii<16;ii++)
    d157:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    d15e:	eb 20                	jmp    d180 <vfm_do+0x3f>
	DescriptorTable[ii] = (__u8 * ) 0;
    d160:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d163:	48 98                	cltq   
    d165:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d16c:	00 
    d16d:	48 8d 05 cc 1e 20 00 	lea    0x201ecc(%rip),%rax        # 20f040 <DescriptorTable>
    d174:	48 c7 04 02 00 00 00 	movq   $0x0,(%rdx,%rax,1)
    d17b:	00 
	for(ii=1;ii<16;ii++)
    d17c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    d180:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)
    d184:	7e da                	jle    d160 <vfm_do+0x1f>

	make_image();
    d186:	b8 00 00 00 00       	mov    $0x0,%eax
    d18b:	e8 ed d2 ff ff       	callq  a47d <make_image>
	  read_history("rlhistory.cfg");
    d190:	48 8d 3d 9c 03 00 00 	lea    0x39c(%rip),%rdi        # d533 <_IO_stdin_used+0x73>
    d197:	e8 64 3a ff ff       	callq  c00 <read_history@plt>
	printf("make_image ok\n");
    d19c:	48 8d 3d 2f 0e 00 00 	lea    0xe2f(%rip),%rdi        # dfd2 <_IO_stdin_used+0xb12>
    d1a3:	e8 08 3a ff ff       	callq  bb0 <puts@plt>
	virtual_machine();
    d1a8:	b8 00 00 00 00       	mov    $0x0,%eax
    d1ad:	e8 26 62 ff ff       	callq  33d8 <virtual_machine>
}
    d1b2:	90                   	nop
    d1b3:	c9                   	leaveq 
    d1b4:	c3                   	retq   

000000000000d1b5 <ttwrite>:
#include <stdlib.h>
#include <linux/types.h>
#include <unistd.h>

__u32 ttwrite ( int __fd, const void *__buf, size_t __n)
{
    d1b5:	55                   	push   %rbp
    d1b6:	48 89 e5             	mov    %rsp,%rbp
    d1b9:	48 83 ec 20          	sub    $0x20,%rsp
    d1bd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d1c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

 return write (__fd, __buf, __n);
    d1c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1d0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d1d3:	48 89 ce             	mov    %rcx,%rsi
    d1d6:	89 c7                	mov    %eax,%edi
    d1d8:	e8 f3 39 ff ff       	callq  bd0 <write@plt>
}
    d1dd:	c9                   	leaveq 
    d1de:	c3                   	retq   

000000000000d1df <ttgetchar>:

__u32 ttgetchar ()
{  return  getchar ();
    d1df:	55                   	push   %rbp
    d1e0:	48 89 e5             	mov    %rsp,%rbp
    d1e3:	e8 a8 3a ff ff       	callq  c90 <getchar@plt>
}   
    d1e8:	5d                   	pop    %rbp
    d1e9:	c3                   	retq   

000000000000d1ea <ttgetch>:

char * vatr;

__u32 ttgetch(int __fd)
{
    d1ea:	55                   	push   %rbp
    d1eb:	48 89 e5             	mov    %rsp,%rbp
    d1ee:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    d1f5:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
    d1fb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d202:	00 00 
    d204:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d208:	31 c0                	xor    %eax,%eax
	  char ch;
	  int n;
	  struct termios t1, t2;

	      tcgetattr(__fd, &t1);
    d20a:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d211:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d217:	48 89 d6             	mov    %rdx,%rsi
    d21a:	89 c7                	mov    %eax,%edi
    d21c:	e8 8f 3a ff ff       	callq  cb0 <tcgetattr@plt>
	      t2 = t1;
    d221:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d228:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    d22f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d233:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    d237:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d23b:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d23f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d243:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d247:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d24b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    d24f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d253:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d257:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d25b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d25f:	8b 45 a8             	mov    -0x58(%rbp),%eax
    d262:	89 45 e8             	mov    %eax,-0x18(%rbp)
	      t2.c_lflag &= ~ICANON;
    d265:	8b 45 bc             	mov    -0x44(%rbp),%eax
    d268:	83 e0 fd             	and    $0xfffffffd,%eax
    d26b:	89 45 bc             	mov    %eax,-0x44(%rbp)
	      t2.c_lflag &= ~ECHO;
    d26e:	8b 45 bc             	mov    -0x44(%rbp),%eax
    d271:	83 e0 f7             	and    $0xfffffff7,%eax
    d274:	89 45 bc             	mov    %eax,-0x44(%rbp)
	      t2.c_lflag |= ISIG;
    d277:	8b 45 bc             	mov    -0x44(%rbp),%eax
    d27a:	83 c8 01             	or     $0x1,%eax
    d27d:	89 45 bc             	mov    %eax,-0x44(%rbp)
	      t2.c_cc[VMIN] = 1;
    d280:	c6 45 c7 01          	movb   $0x1,-0x39(%rbp)
	      t2.c_cc[VTIME] = 0;
    d284:	c6 45 c6 00          	movb   $0x0,-0x3a(%rbp)
	      tcsetattr(__fd, TCSANOW, &t2);
    d288:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    d28c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d292:	be 00 00 00 00       	mov    $0x0,%esi
    d297:	89 c7                	mov    %eax,%edi
    d299:	e8 22 3a ff ff       	callq  cc0 <tcsetattr@plt>

		n = read(__fd, &ch, 1);
    d29e:	48 8d 8d 6b ff ff ff 	lea    -0x95(%rbp),%rcx
    d2a5:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d2ab:	ba 01 00 00 00       	mov    $0x1,%edx
    d2b0:	48 89 ce             	mov    %rcx,%rsi
    d2b3:	89 c7                	mov    %eax,%edi
    d2b5:	e8 b6 39 ff ff       	callq  c70 <read@plt>
    d2ba:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

	      tcsetattr(__fd, TCSANOW, &t1);
    d2c0:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d2c7:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d2cd:	be 00 00 00 00       	mov    $0x0,%esi
    d2d2:	89 c7                	mov    %eax,%edi
    d2d4:	e8 e7 39 ff ff       	callq  cc0 <tcsetattr@plt>

	  return ch;
    d2d9:	0f b6 85 6b ff ff ff 	movzbl -0x95(%rbp),%eax
    d2e0:	0f be c0             	movsbl %al,%eax
}
    d2e3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d2e7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    d2ee:	00 00 
    d2f0:	74 05                	je     d2f7 <ttgetch+0x10d>
    d2f2:	e8 19 39 ff ff       	callq  c10 <__stack_chk_fail@plt>
    d2f7:	c9                   	leaveq 
    d2f8:	c3                   	retq   

000000000000d2f9 <ttkbhit>:

__u32 ttkbhit(int __fd) {
    d2f9:	55                   	push   %rbp
    d2fa:	48 89 e5             	mov    %rsp,%rbp
    d2fd:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    d304:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%rbp)
    d30a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d311:	00 00 
    d313:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d317:	31 c0                	xor    %eax,%eax
	  struct termios t1, t2;
	    int bytesWaiting;

    tcgetattr(__fd, &t1);
    d319:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d320:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d326:	48 89 d6             	mov    %rdx,%rsi
    d329:	89 c7                	mov    %eax,%edi
    d32b:	e8 80 39 ff ff       	callq  cb0 <tcgetattr@plt>

      	t2 = t1;
    d330:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d337:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    d33e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d342:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    d346:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d34a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d34e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d352:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d356:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d35a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    d35e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d362:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d366:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d36a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d36e:	8b 45 a8             	mov    -0x58(%rbp),%eax
    d371:	89 45 e8             	mov    %eax,-0x18(%rbp)
        t2.c_lflag &= ~ICANON;
    d374:	8b 45 bc             	mov    -0x44(%rbp),%eax
    d377:	83 e0 fd             	and    $0xfffffffd,%eax
    d37a:	89 45 bc             	mov    %eax,-0x44(%rbp)

    tcsetattr(__fd, TCSANOW, &t2);
    d37d:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    d381:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d387:	be 00 00 00 00       	mov    $0x0,%esi
    d38c:	89 c7                	mov    %eax,%edi
    d38e:	e8 2d 39 ff ff       	callq  cc0 <tcsetattr@plt>

    	ioctl(__fd, FIONREAD, &bytesWaiting);
    d393:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    d39a:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d3a0:	be 1b 54 00 00       	mov    $0x541b,%esi
    d3a5:	89 c7                	mov    %eax,%edi
    d3a7:	b8 00 00 00 00       	mov    $0x0,%eax
    d3ac:	e8 8f 38 ff ff       	callq  c40 <ioctl@plt>

    tcsetattr(__fd, TCSANOW, &t1);
    d3b1:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d3b8:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    d3be:	be 00 00 00 00       	mov    $0x0,%esi
    d3c3:	89 c7                	mov    %eax,%edi
    d3c5:	e8 f6 38 ff ff       	callq  cc0 <tcsetattr@plt>

    return bytesWaiting;
    d3ca:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
}
    d3d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    d3d4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    d3db:	00 00 
    d3dd:	74 05                	je     d3e4 <ttkbhit+0xeb>
    d3df:	e8 2c 38 ff ff       	callq  c10 <__stack_chk_fail@plt>
    d3e4:	c9                   	leaveq 
    d3e5:	c3                   	retq   

000000000000d3e6 <ttputch>:


void ttputch(int __fd, int c)
{
    d3e6:	55                   	push   %rbp
    d3e7:	48 89 e5             	mov    %rsp,%rbp
    d3ea:	48 83 ec 20          	sub    $0x20,%rsp
    d3ee:	89 7d ec             	mov    %edi,-0x14(%rbp)
    d3f1:	89 75 e8             	mov    %esi,-0x18(%rbp)
    d3f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d3fb:	00 00 
    d3fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d401:	31 c0                	xor    %eax,%eax
	char k=c;
    d403:	8b 45 e8             	mov    -0x18(%rbp),%eax
    d406:	88 45 f7             	mov    %al,-0x9(%rbp)
	while(write(__fd,&k,1)<0);
    d409:	90                   	nop
    d40a:	48 8d 4d f7          	lea    -0x9(%rbp),%rcx
    d40e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d411:	ba 01 00 00 00       	mov    $0x1,%edx
    d416:	48 89 ce             	mov    %rcx,%rsi
    d419:	89 c7                	mov    %eax,%edi
    d41b:	e8 b0 37 ff ff       	callq  bd0 <write@plt>
    d420:	48 85 c0             	test   %rax,%rax
    d423:	78 e5                	js     d40a <ttputch+0x24>
}
    d425:	90                   	nop
    d426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d42a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    d431:	00 00 
    d433:	74 05                	je     d43a <ttputch+0x54>
    d435:	e8 d6 37 ff ff       	callq  c10 <__stack_chk_fail@plt>
    d43a:	c9                   	leaveq 
    d43b:	c3                   	retq   
    d43c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d440 <__libc_csu_init>:
    d440:	41 57                	push   %r15
    d442:	41 56                	push   %r14
    d444:	49 89 d7             	mov    %rdx,%r15
    d447:	41 55                	push   %r13
    d449:	41 54                	push   %r12
    d44b:	4c 8d 25 96 18 20 00 	lea    0x201896(%rip),%r12        # 20ece8 <__frame_dummy_init_array_entry>
    d452:	55                   	push   %rbp
    d453:	48 8d 2d 96 18 20 00 	lea    0x201896(%rip),%rbp        # 20ecf0 <__init_array_end>
    d45a:	53                   	push   %rbx
    d45b:	41 89 fd             	mov    %edi,%r13d
    d45e:	49 89 f6             	mov    %rsi,%r14
    d461:	4c 29 e5             	sub    %r12,%rbp
    d464:	48 83 ec 08          	sub    $0x8,%rsp
    d468:	48 c1 fd 03          	sar    $0x3,%rbp
    d46c:	e8 e7 36 ff ff       	callq  b58 <_init>
    d471:	48 85 ed             	test   %rbp,%rbp
    d474:	74 20                	je     d496 <__libc_csu_init+0x56>
    d476:	31 db                	xor    %ebx,%ebx
    d478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d47f:	00 
    d480:	4c 89 fa             	mov    %r15,%rdx
    d483:	4c 89 f6             	mov    %r14,%rsi
    d486:	44 89 ef             	mov    %r13d,%edi
    d489:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    d48d:	48 83 c3 01          	add    $0x1,%rbx
    d491:	48 39 dd             	cmp    %rbx,%rbp
    d494:	75 ea                	jne    d480 <__libc_csu_init+0x40>
    d496:	48 83 c4 08          	add    $0x8,%rsp
    d49a:	5b                   	pop    %rbx
    d49b:	5d                   	pop    %rbp
    d49c:	41 5c                	pop    %r12
    d49e:	41 5d                	pop    %r13
    d4a0:	41 5e                	pop    %r14
    d4a2:	41 5f                	pop    %r15
    d4a4:	c3                   	retq   
    d4a5:	90                   	nop
    d4a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d4ad:	00 00 00 

000000000000d4b0 <__libc_csu_fini>:
    d4b0:	f3 c3                	repz retq 

Disassembly of section .fini:

000000000000d4b4 <_fini>:
    d4b4:	48 83 ec 08          	sub    $0x8,%rsp
    d4b8:	48 83 c4 08          	add    $0x8,%rsp
    d4bc:	c3                   	retq   

Disassembly of section .rodata:

000000000000d4c0 <_IO_stdin_used>:
    d4c0:	01 00                	add    %eax,(%rax)
    d4c2:	02 00                	add    (%rax),%al
    d4c4:	00 00                	add    %al,(%rax)
    d4c6:	00 00                	add    %al,(%rax)
    d4c8:	48                   	rex.W
    d4c9:	4f                   	rex.WRXB
    d4ca:	4d                   	rex.WRB
    d4cb:	45 00 00             	add    %r8b,(%r8)
    d4ce:	7a 3d                	jp     d50d <_IO_stdin_used+0x4d>
    d4d0:	25 78 20 25 78       	and    $0x78252078,%eax
    d4d5:	20 25 64 0a 00 00    	and    %ah,0xa64(%rip)        # df3f <_IO_stdin_used+0xa7f>
    d4db:	00 00                	add    %al,(%rax)
    d4dd:	00 00                	add    %al,(%rax)
    d4df:	00 25 58 09 25 32    	add    %ah,0x32250958(%rip)        # 3225de3d <_end+0x31c4ca9d>
    d4e5:	58                   	pop    %rax
    d4e6:	20 25 32 58 20 25    	and    %ah,0x25205832(%rip)        # 25212d1e <_end+0x24c0197e>
    d4ec:	32 58 20             	xor    0x20(%rax),%bl
    d4ef:	25 32 58 20 25       	and    $0x25205832,%eax
    d4f4:	32 58 20             	xor    0x20(%rax),%bl
    d4f7:	25 32 58 20 25       	and    $0x25205832,%eax
    d4fc:	32 58 20             	xor    0x20(%rax),%bl
    d4ff:	25 32 58 20 20       	and    $0x20205832,%eax
    d504:	25 32 58 20 25       	and    $0x25205832,%eax
    d509:	32 58 20             	xor    0x20(%rax),%bl
    d50c:	25 32 58 20 25       	and    $0x25205832,%eax
    d511:	32 58 20             	xor    0x20(%rax),%bl
    d514:	25 32 58 20 25       	and    $0x25205832,%eax
    d519:	32 58 20             	xor    0x20(%rax),%bl
    d51c:	25 32 58 20 25       	and    $0x25205832,%eax
    d521:	32 58 20             	xor    0x20(%rax),%bl
    d524:	7c 20                	jl     d546 <_IO_stdin_used+0x86>
    d526:	00 2e                	add    %ch,(%rsi)
    d528:	00 0a                	add    %cl,(%rdx)
    d52a:	00 25 58 20 00 25    	add    %ah,0x25002058(%rip)        # 2500f588 <_end+0x249fe1e8>
    d530:	64 20 00             	and    %al,%fs:(%rax)
    d533:	72 6c                	jb     d5a1 <_IO_stdin_used+0xe1>
    d535:	68 69 73 74 6f       	pushq  $0x6f747369
    d53a:	72 79                	jb     d5b5 <_IO_stdin_used+0xf5>
    d53c:	2e 63 66 67          	movslq %cs:0x67(%rsi),%esp
    d540:	00 48 65             	add    %cl,0x65(%rax)
    d543:	6c                   	insb   (%dx),%es:(%rdi)
    d544:	6c                   	insb   (%dx),%es:(%rdi)
    d545:	6f                   	outsl  %ds:(%rsi),(%dx)
    d546:	21 21                	and    %esp,(%rcx)
    d548:	21 0a                	and    %ecx,(%rdx)
    d54a:	00 00                	add    %al,(%rax)
    d54c:	fd                   	std    
    d54d:	ce                   	(bad)  
    d54e:	ff                   	(bad)  
    d54f:	ff c1                	inc    %ecx
    d551:	60                   	(bad)  
    d552:	ff                   	(bad)  
    d553:	ff a1 61 ff ff ed    	jmpq   *-0x1200009f(%rcx)
    d559:	62                   	(bad)  
    d55a:	ff                   	(bad)  
    d55b:	ff                   	(bad)  
    d55c:	39 64 ff ff          	cmp    %esp,-0x1(%rdi,%rdi,8)
    d560:	ac                   	lods   %ds:(%rsi),%al
    d561:	64 ff                	fs (bad) 
    d563:	ff 1f                	lcall  *(%rdi)
    d565:	65 ff                	gs (bad) 
    d567:	ff 90 65 ff ff 03    	callq  *0x3ffff65(%rax)
    d56d:	66 ff                	data16 (bad) 
    d56f:	ff                   	(bad)  
    d570:	fd                   	std    
    d571:	66 ff                	data16 (bad) 
    d573:	ff f7                	push   %rdi
    d575:	67 ff                	addr32 (bad) 
    d577:	ff 63 68             	jmpq   *0x68(%rbx)
    d57a:	ff                   	(bad)  
    d57b:	ff cf                	dec    %edi
    d57d:	68 ff ff 41 69       	pushq  $0x6941ffff
    d582:	ff                   	(bad)  
    d583:	ff b6 69 ff ff 2b    	pushq  0x2bffff69(%rsi)
    d589:	6a ff                	pushq  $0xffffffffffffffff
    d58b:	ff 9f 6a ff ff d9    	lcall  *-0x26000096(%rdi)
    d591:	6a ff                	pushq  $0xffffffffffffffff
    d593:	ff 13                	callq  *(%rbx)
    d595:	6b ff ff             	imul   $0xffffffff,%edi,%edi
    d598:	4d 6b ff ff          	imul   $0xffffffffffffffff,%r15,%r15
    d59c:	87 6b ff             	xchg   %ebp,-0x1(%rbx)
    d59f:	ff c0                	inc    %eax
    d5a1:	6b ff ff             	imul   $0xffffffff,%edi,%edi
    d5a4:	32 6c ff ff          	xor    -0x1(%rdi,%rdi,8),%ch
    d5a8:	6b 6c ff ff 5f       	imul   $0x5f,-0x1(%rdi,%rdi,8),%ebp
    d5ad:	6d                   	insl   (%dx),%es:(%rdi)
    d5ae:	ff                   	(bad)  
    d5af:	ff 1c 6e             	lcall  *(%rsi,%rbp,2)
    d5b2:	ff                   	(bad)  
    d5b3:	ff 0f                	decl   (%rdi)
    d5b5:	6f                   	outsl  %ds:(%rsi),(%dx)
    d5b6:	ff                   	(bad)  
    d5b7:	ff cd                	dec    %ebp
    d5b9:	70 ff                	jo     d5ba <_IO_stdin_used+0xfa>
    d5bb:	ff 8b 72 ff ff c5    	decl   -0x3a00008e(%rbx)
    d5c1:	72 ff                	jb     d5c2 <_IO_stdin_used+0x102>
    d5c3:	ff                   	(bad)  
    d5c4:	ff 72 ff             	pushq  -0x1(%rdx)
    d5c7:	ff                   	(bad)  
    d5c8:	39 73 ff             	cmp    %esi,-0x1(%rbx)
    d5cb:	ff 73 73             	pushq  0x73(%rbx)
    d5ce:	ff                   	(bad)  
    d5cf:	ff 68 74             	ljmp   *0x74(%rax)
    d5d2:	ff                   	(bad)  
    d5d3:	ff 5d 75             	lcall  *0x75(%rbp)
    d5d6:	ff                   	(bad)  
    d5d7:	ff 52 76             	callq  *0x76(%rdx)
    d5da:	ff                   	(bad)  
    d5db:	ff 4c 77 ff          	decl   -0x1(%rdi,%rsi,2)
    d5df:	ff 48 78             	decl   0x78(%rax)
    d5e2:	ff                   	(bad)  
    d5e3:	ff 42 79             	incl   0x79(%rdx)
    d5e6:	ff                   	(bad)  
    d5e7:	ff                   	(bad)  
    d5e8:	3e 7a ff             	jp,pt  d5ea <_IO_stdin_used+0x12a>
    d5eb:	ff 93 7b ff ff e8    	callq  *-0x17000085(%rbx)
    d5f1:	7c ff                	jl     d5f2 <_IO_stdin_used+0x132>
    d5f3:	ff                   	(bad)  
    d5f4:	3f                   	(bad)  
    d5f5:	7e ff                	jle    d5f6 <_IO_stdin_used+0x136>
    d5f7:	ff 96 7f ff ff 55    	callq  *0x55ffff7f(%rsi)
    d5fd:	80 ff ff             	cmp    $0xff,%bh
    d600:	14 81                	adc    $0x81,%al
    d602:	ff                   	(bad)  
    d603:	ff                   	(bad)  
    d604:	3a 83 ff ff 53 86    	cmp    -0x79ac0001(%rbx),%al
    d60a:	ff                   	(bad)  
    d60b:	ff 15 88 ff ff 00    	callq  *0xffff88(%rip)        # 100d599 <_end+0x9fc1f9>
    d611:	8a ff                	mov    %bh,%bh
    d613:	ff 56 8a             	callq  *-0x76(%rsi)
    d616:	ff                   	(bad)  
    d617:	ff ac 8a ff ff 3f 8b 	ljmp   *-0x74c00001(%rdx,%rcx,4)
    d61e:	ff                   	(bad)  
    d61f:	ff d2                	callq  *%rdx
    d621:	8b ff                	mov    %edi,%edi
    d623:	ff 9a 8c ff ff 60    	lcall  *0x60ffff8c(%rdx)
    d629:	8d                   	(bad)  
    d62a:	ff                   	(bad)  
    d62b:	ff 24 8e             	jmpq   *(%rsi,%rcx,4)
    d62e:	ff                   	(bad)  
    d62f:	ff                   	(bad)  
    d630:	e9 8e ff ff b3       	jmpq   ffffffffb400d5c3 <_end+0xffffffffb39fc223>
    d635:	8f                   	(bad)  
    d636:	ff                   	(bad)  
    d637:	ff                   	(bad)  
    d638:	7d 90                	jge    d5ca <_IO_stdin_used+0x10a>
    d63a:	ff                   	(bad)  
    d63b:	ff 63 91             	jmpq   *-0x6f(%rbx)
    d63e:	ff                   	(bad)  
    d63f:	ff 6c 92 ff          	ljmp   *-0x1(%rdx,%rdx,4)
    d643:	ff                   	(bad)  
    d644:	fb                   	sti    
    d645:	92                   	xchg   %eax,%edx
    d646:	ff                   	(bad)  
    d647:	ff 74 93 ff          	pushq  -0x1(%rbx,%rdx,4)
    d64b:	ff 37                	pushq  (%rdi)
    d64d:	94                   	xchg   %eax,%esp
    d64e:	ff                   	(bad)  
    d64f:	ff b1 94 ff ff 73    	pushq  0x73ffff94(%rcx)
    d655:	98                   	cwtl   
    d656:	ff                   	(bad)  
    d657:	ff ab 98 ff ff 6a    	ljmp   *0x6affff98(%rbx)
    d65d:	99                   	cltd   
    d65e:	ff                   	(bad)  
    d65f:	ff 24 9a             	jmpq   *(%rdx,%rbx,4)
    d662:	ff                   	(bad)  
    d663:	ff e3                	jmpq   *%rbx
    d665:	9a                   	(bad)  
    d666:	ff                   	(bad)  
    d667:	ff 5c 9c ff          	lcall  *-0x1(%rsp,%rbx,4)
    d66b:	ff f7                	push   %rdi
    d66d:	9c                   	pushfq 
    d66e:	ff                   	(bad)  
    d66f:	ff 8d 9d ff ff 99    	decl   -0x66000063(%rbp)
    d675:	9d                   	popfq  
    d676:	ff                   	(bad)  
    d677:	ff                   	(bad)  
    d678:	ea                   	(bad)  
    d679:	9d                   	popfq  
    d67a:	ff                   	(bad)  
    d67b:	ff 8c 9e ff ff 72 9f 	decl   -0x608d0001(%rsi,%rbx,4)
    d682:	ff                   	(bad)  
    d683:	ff 53 a0             	callq  *-0x60(%rbx)
    d686:	ff                   	(bad)  
    d687:	ff 5f a0             	lcall  *-0x60(%rdi)
    d68a:	ff                   	(bad)  
    d68b:	ff 4c a1 ff          	decl   -0x1(%rcx,%riz,4)
    d68f:	ff e2                	jmpq   *%rdx
    d691:	a1 ff ff 84 a2 ff ff 	movabs 0xa28effffa284ffff,%eax
    d698:	8e a2 
    d69a:	ff                   	(bad)  
    d69b:	ff 1b                	lcall  *(%rbx)
    d69d:	a3 ff ff ab a3 ff ff 	movabs %eax,0xa43bffffa3abffff
    d6a4:	3b a4 
    d6a6:	ff                   	(bad)  
    d6a7:	ff                   	(bad)  
    d6a8:	e8 a4 ff ff 57       	callq  5800d651 <_end+0x579fc2b1>
    d6ad:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    d6ae:	ff                   	(bad)  
    d6af:	ff 02                	incl   (%rdx)
    d6b1:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    d6b2:	ff                   	(bad)  
    d6b3:	ff 8f a6 ff ff ad    	decl   -0x5200005a(%rdi)
    d6b9:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    d6ba:	ff                   	(bad)  
    d6bb:	ff                   	(bad)  
    d6bc:	fd                   	std    
    d6bd:	ce                   	(bad)  
    d6be:	ff                   	(bad)  
    d6bf:	ff 9e a6 ff ff 1e    	lcall  *0x1effffa6(%rsi)
    d6c5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    d6c6:	ff                   	(bad)  
    d6c7:	ff d1                	callq  *%rcx
    d6c9:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    d6ca:	ff                   	(bad)  
    d6cb:	ff 30                	pushq  (%rax)
    d6cd:	a8 ff                	test   $0xff,%al
    d6cf:	ff                   	(bad)  
    d6d0:	bf a8 ff ff 4b       	mov    $0x4bffffa8,%edi
    d6d5:	a9 ff ff 9a aa       	test   $0xaa9affff,%eax
    d6da:	ff                   	(bad)  
    d6db:	ff 66 ab             	jmpq   *-0x55(%rsi)
    d6de:	ff                   	(bad)  
    d6df:	ff                   	(bad)  
    d6e0:	fd                   	std    
    d6e1:	ce                   	(bad)  
    d6e2:	ff                   	(bad)  
    d6e3:	ff 4c ad ff          	decl   -0x1(%rbp,%rbp,4)
    d6e7:	ff 66 ad             	jmpq   *-0x53(%rsi)
    d6ea:	ff                   	(bad)  
    d6eb:	ff 0e                	decl   (%rsi)
    d6ed:	ae                   	scas   %es:(%rdi),%al
    d6ee:	ff                   	(bad)  
    d6ef:	ff 1d ae ff ff 2c    	lcall  *0x2cffffae(%rip)        # 2d00d6a3 <_end+0x2c9fc303>
    d6f5:	ae                   	scas   %es:(%rdi),%al
    d6f6:	ff                   	(bad)  
    d6f7:	ff                   	(bad)  
    d6f8:	3b ae ff ff 4a ae    	cmp    -0x51b50001(%rsi),%ebp
    d6fe:	ff                   	(bad)  
    d6ff:	ff 59 ae             	lcall  *-0x52(%rcx)
    d702:	ff                   	(bad)  
    d703:	ff 68 ae             	ljmp   *-0x52(%rax)
    d706:	ff                   	(bad)  
    d707:	ff 77 ae             	pushq  -0x52(%rdi)
    d70a:	ff                   	(bad)  
    d70b:	ff 86 ae ff ff c4    	incl   -0x3b000052(%rsi)
    d711:	af                   	scas   %es:(%rdi),%eax
    d712:	ff                   	(bad)  
    d713:	ff                   	(bad)  
    d714:	39 b0 ff ff 95 ae    	cmp    %esi,-0x516a0001(%rax)
    d71a:	ff                   	(bad)  
    d71b:	ff 2e                	ljmp   *(%rsi)
    d71d:	af                   	scas   %es:(%rdi),%eax
    d71e:	ff                   	(bad)  
    d71f:	ff ab b0 ff ff 64    	ljmp   *0x64ffffb0(%rbx)
    d725:	b1 ff                	mov    $0xff,%cl
    d727:	ff 5a b2             	lcall  *-0x4e(%rdx)
    d72a:	ff                   	(bad)  
    d72b:	ff 6b b3             	ljmp   *-0x4d(%rbx)
    d72e:	ff                   	(bad)  
    d72f:	ff 0c b4             	decl   (%rsp,%rsi,4)
    d732:	ff                   	(bad)  
    d733:	ff 0d b5 ff ff e2    	decl   -0x1d00004b(%rip)        # ffffffffe300d6ee <_end+0xffffffffe29fc34e>
    d739:	b5 ff                	mov    $0xff,%ch
    d73b:	ff f3                	push   %rbx
    d73d:	b6 ff                	mov    $0xff,%dh
    d73f:	ff                   	(bad)  
    d740:	fd                   	std    
    d741:	b6 ff                	mov    $0xff,%dh
    d743:	ff c7                	inc    %edi
    d745:	b7 ff                	mov    $0xff,%bh
    d747:	ff                   	(bad)  
    d748:	b9 b9 ff ff c8       	mov    $0xc8ffffb9,%ecx
    d74d:	b9 ff ff f4 bb       	mov    $0xbbf4ffff,%ecx
    d752:	ff                   	(bad)  
    d753:	ff 14 bd ff ff 69 bc 	callq  *-0x43960001(,%rdi,4)
    d75a:	ff                   	(bad)  
    d75b:	ff                   	(bad)  
    d75c:	39 bd ff ff c3 be    	cmp    %edi,-0x413c0001(%rbp)
    d762:	ff                   	(bad)  
    d763:	ff 1e                	lcall  *(%rsi)
    d765:	c2 ff ff             	retq   $0xffff
    d768:	86 c3                	xchg   %al,%bl
    d76a:	ff                   	(bad)  
    d76b:	ff 35 c5 ff ff 50    	pushq  0x50ffffc5(%rip)        # 5100d736 <_end+0x509fc396>
    d771:	c6                   	(bad)  
    d772:	ff                   	(bad)  
    d773:	ff ac c7 ff ff 3e c9 	ljmp   *-0x36c10001(%rdi,%rax,8)
    d77a:	ff                   	(bad)  
    d77b:	ff 4d c9             	decl   -0x37(%rbp)
    d77e:	ff                   	(bad)  
    d77f:	ff 5c c9 ff          	lcall  *-0x1(%rcx,%rcx,8)
    d783:	ff 6b c9             	ljmp   *-0x37(%rbx)
    d786:	ff                   	(bad)  
    d787:	ff 93 c9 ff ff 84    	callq  *-0x7b000037(%rbx)
    d78d:	c9                   	leaveq 
    d78e:	ff                   	(bad)  
    d78f:	ff b1 c9 ff ff a2    	pushq  -0x5d000037(%rcx)
    d795:	c9                   	leaveq 
    d796:	ff                   	(bad)  
    d797:	ff c0                	inc    %eax
    d799:	c9                   	leaveq 
    d79a:	ff                   	(bad)  
    d79b:	ff 8a ca ff ff 54    	decl   0x54ffffca(%rdx)
    d7a1:	cc                   	int3   
    d7a2:	ff                   	(bad)  
    d7a3:	ff 19                	lcall  *(%rcx)
    d7a5:	cd ff                	int    $0xff
    d7a7:	ff b7 cd ff ff 0d    	pushq  0xdffffcd(%rdi)
    d7ad:	ce                   	(bad)  
    d7ae:	ff                   	(bad)  
    d7af:	ff 44 ce ff          	incl   -0x1(%rsi,%rcx,8)
    d7b3:	ff                   	(bad)  
    d7b4:	d9 ce                	fxch   %st(6)
    d7b6:	ff                   	(bad)  
    d7b7:	ff 4e 4f             	decl   0x4f(%rsi)
    d7ba:	4f 50                	rex.WRXB push %r8
    d7bc:	00 43 48             	add    %al,0x48(%rbx)
    d7bf:	41 52                	push   %r10
    d7c1:	53                   	push   %rbx
    d7c2:	00 53 57             	add    %dl,0x57(%rbx)
    d7c5:	41 50                	push   %r8
    d7c7:	00 52 4f             	add    %dl,0x4f(%rdx)
    d7ca:	54                   	push   %rsp
    d7cb:	00 2d 52 4f 54 00    	add    %ch,0x544f52(%rip)        # 552723 <mem+0x343643>
    d7d1:	30 3d 00 30 3c 3e    	xor    %bh,0x3e3c3000(%rip)        # 3e3d07d7 <_end+0x3ddbf437>
    d7d7:	00 30                	add    %dh,(%rax)
    d7d9:	3c 00                	cmp    $0x0,%al
    d7db:	30 3e                	xor    %bh,(%rsi)
    d7dd:	00 3d 00 3c 3e 00    	add    %bh,0x3e3c00(%rip)        # 3f13e3 <mem+0x1e2303>
    d7e3:	4e                   	rex.WRX
    d7e4:	45                   	rex.RB
    d7e5:	47                   	rex.RXB
    d7e6:	41 54                	push   %r12
    d7e8:	45 00 49 4e          	add    %r9b,0x4e(%r9)
    d7ec:	56                   	push   %rsi
    d7ed:	45 52                	rex.RB push %r10
    d7ef:	54                   	push   %rsp
    d7f0:	00 55 4d             	add    %dl,0x4d(%rbp)
    d7f3:	2a 00                	sub    (%rax),%al
    d7f5:	43                   	rex.XB
    d7f6:	40 00 57 40          	add    %dl,0x40(%rdi)
    d7fa:	00 40 00             	add    %al,0x0(%rax)
    d7fd:	4f                   	rex.WRXB
    d7fe:	4e 00 30             	rex.WRX add %r14b,(%rax)
    d801:	21 00                	and    %eax,(%rax)
    d803:	31 2b                	xor    %ebp,(%rbx)
    d805:	00 32                	add    %dh,(%rdx)
    d807:	2b 00                	sub    (%rax),%eax
    d809:	31 2d 00 32 2d 00    	xor    %ebp,0x2d3200(%rip)        # 2e0a0f <mem+0xd192f>
    d80f:	32 2a                	xor    (%rdx),%ch
    d811:	00 32                	add    %dh,(%rdx)
    d813:	2f                   	(bad)  
    d814:	00 55 32             	add    %dl,0x32(%rbp)
    d817:	2f                   	(bad)  
    d818:	00 2b                	add    %ch,(%rbx)
    d81a:	00 2d 00 2a 00 2f    	add    %ch,0x2f002a00(%rip)        # 2f010220 <_end+0x2e9fee80>
    d820:	00 4d 4f             	add    %cl,0x4f(%rbp)
    d823:	44 00 43 45          	add    %r8b,0x45(%rbx)
    d827:	4c                   	rex.WR
    d828:	4c 2f                	rex.WR (bad) 
    d82a:	00 43 45             	add    %al,0x45(%rbx)
    d82d:	4c                   	rex.WR
    d82e:	4c 53                	rex.WR push %rbx
    d830:	00 43 45             	add    %al,0x45(%rbx)
    d833:	4c                   	rex.WR
    d834:	4c 2b 00             	sub    (%rax),%r8
    d837:	43                   	rex.XB
    d838:	45                   	rex.RB
    d839:	4c                   	rex.WR
    d83a:	4c 2d 00 41 4e 44    	rex.WR sub $0x444e4100,%rax
    d840:	00 4f 52             	add    %cl,0x52(%rdi)
    d843:	00 58 4f             	add    %bl,0x4f(%rax)
    d846:	52                   	push   %rdx
    d847:	00 55 3c             	add    %dl,0x3c(%rbp)
    d84a:	00 3c 00             	add    %bh,(%rax,%rax,1)
    d84d:	55                   	push   %rbp
    d84e:	3e 00 3e             	add    %bh,%ds:(%rsi)
    d851:	00 55 4d             	add    %dl,0x4d(%rbp)
    d854:	49                   	rex.WB
    d855:	4e 00 55 4d          	rex.WRX add %r10b,0x4d(%rbp)
    d859:	41 58                	pop    %r8
    d85b:	00 4d 49             	add    %cl,0x49(%rbp)
    d85e:	4e 00 4d 41          	rex.WRX add %r9b,0x41(%rbp)
    d862:	58                   	pop    %rax
    d863:	00 4c 53 48          	add    %cl,0x48(%rbx,%rdx,2)
    d867:	49                   	rex.WB
    d868:	46 54                	rex.RX push %rsp
    d86a:	00 52 53             	add    %dl,0x53(%rdx)
    d86d:	48                   	rex.W
    d86e:	49                   	rex.WB
    d86f:	46 54                	rex.RX push %rsp
    d871:	00 55 4d             	add    %dl,0x4d(%rbp)
    d874:	2f                   	(bad)  
    d875:	4d                   	rex.WRB
    d876:	4f                   	rex.WRXB
    d877:	44 00 2b             	add    %r13b,(%rbx)
    d87a:	43 59                	rex.XB pop %r9
    d87c:	00 44 2b 00          	add    %al,0x0(%rbx,%rbp,1)
    d880:	53                   	push   %rbx
    d881:	43                   	rex.XB
    d882:	41                   	rex.B
    d883:	4e 31 00             	rex.WRX xor %r8,(%rax)
    d886:	44 52                	rex.R push %rdx
    d888:	4f 50                	rex.WRXB push %r8
    d88a:	00 32                	add    %dh,(%rdx)
    d88c:	44 52                	rex.R push %rdx
    d88e:	4f 50                	rex.WRXB push %r8
    d890:	00 4d 4c             	add    %cl,0x4c(%rbp)
    d893:	49 54                	rex.WB push %r12
    d895:	2c 00                	sub    $0x0,%al
    d897:	2c 00                	sub    $0x0,%al
    d899:	57                   	push   %rdi
    d89a:	2c 00                	sub    $0x0,%al
    d89c:	43 2c 00             	rex.XB sub $0x0,%al
    d89f:	41                   	rex.B
    d8a0:	4c                   	rex.WR
    d8a1:	4c                   	rex.WR
    d8a2:	4f 54                	rex.WRXB push %r12
    d8a4:	00 50 45             	add    %dl,0x45(%rax)
    d8a7:	52                   	push   %rdx
    d8a8:	46                   	rex.RX
    d8a9:	4f 52                	rex.WRXB push %r10
    d8ab:	4d 00 45 58          	rex.WRB add %r8b,0x58(%r13)
    d8af:	45                   	rex.RB
    d8b0:	43 55                	rex.XB push %r13
    d8b2:	54                   	push   %rsp
    d8b3:	45 00 43 4f          	add    %r8b,0x4f(%r11)
    d8b7:	4d 50                	rex.WRB push %r8
    d8b9:	49                   	rex.WB
    d8ba:	4c                   	rex.WR
    d8bb:	45 2c 00             	rex.RB sub $0x0,%al
    d8be:	49                   	rex.WB
    d8bf:	4d                   	rex.WRB
    d8c0:	4d                   	rex.WRB
    d8c1:	45                   	rex.RB
    d8c2:	44                   	rex.R
    d8c3:	49                   	rex.WB
    d8c4:	41 54                	push   %r12
    d8c6:	45 00 4e 41          	add    %r9b,0x41(%r14)
    d8ca:	4d                   	rex.WRB
    d8cb:	45                   	rex.RB
    d8cc:	3e 00 3e             	add    %bh,%ds:(%rsi)
    d8cf:	42                   	rex.X
    d8d0:	4f                   	rex.WRXB
    d8d1:	44 59                	rex.R pop %rcx
    d8d3:	00 53 50             	add    %dl,0x50(%rbx)
    d8d6:	40 00 53 50          	add    %dl,0x50(%rbx)
    d8da:	21 00                	and    %eax,(%rax)
    d8dc:	52                   	push   %rdx
    d8dd:	50                   	push   %rax
    d8de:	40 00 52 50          	add    %dl,0x50(%rdx)
    d8e2:	21 00                	and    %eax,(%rax)
    d8e4:	54                   	push   %rsp
    d8e5:	48 52                	rex.W push %rdx
    d8e7:	4f 57                	rex.WRXB push %r15
    d8e9:	00 21                	add    %ah,(%rcx)
    d8eb:	00 2b                	add    %ch,(%rbx)
    d8ed:	21 00                	and    %eax,(%rax)
    d8ef:	43 21 00             	rex.XB and %eax,(%r8)
    d8f2:	57                   	push   %rdi
    d8f3:	21 00                	and    %eax,(%rax)
    d8f5:	32 21                	xor    (%rcx),%ah
    d8f7:	00 32                	add    %dh,(%rdx)
    d8f9:	40 00 32             	add    %sil,(%rdx)
    d8fc:	53                   	push   %rbx
    d8fd:	57                   	push   %rdi
    d8fe:	41 50                	push   %r8
    d900:	00 43 21             	add    %al,0x21(%rbx)
    d903:	41 00 56 46          	add    %dl,0x46(%r14)
    d907:	4d                   	rex.WRB
    d908:	41                   	rex.B
    d909:	44 52                	rex.R push %rdx
    d90b:	00 50 40             	add    %dl,0x40(%rax)
    d90e:	00 50 21             	add    %dl,0x21(%rax)
    d911:	00 50 43             	add    %dl,0x43(%rax)
    d914:	40 00 50 44          	add    %dl,0x44(%rax)
    d918:	55                   	push   %rbp
    d919:	4d 50                	rex.WRB push %r8
    d91b:	00 3f                	add    %bh,(%rdi)
    d91d:	44 55                	rex.R push %rbp
    d91f:	50                   	push   %rax
    d920:	00 44 55 50          	add    %al,0x50(%rbp,%rdx,2)
    d924:	00 32                	add    %dh,(%rdx)
    d926:	44 55                	rex.R push %rbp
    d928:	50                   	push   %rax
    d929:	00 4f 56             	add    %cl,0x56(%rdi)
    d92c:	45 52                	rex.RB push %r10
    d92e:	00 32                	add    %dh,(%rdx)
    d930:	4f 56                	rex.WRXB push %r14
    d932:	45 52                	rex.RB push %r10
    d934:	00 52 40             	add    %dl,0x40(%rdx)
    d937:	00 52 3e             	add    %dl,0x3e(%rdx)
    d93a:	00 52 44             	add    %dl,0x44(%rdx)
    d93d:	52                   	push   %rdx
    d93e:	4f 50                	rex.WRXB push %r8
    d940:	00 44 55 50          	add    %al,0x50(%rbp,%rdx,2)
    d944:	3e 52                	ds push %rdx
    d946:	00 3e                	add    %bh,(%rsi)
    d948:	52                   	push   %rdx
    d949:	00 32                	add    %dh,(%rdx)
    d94b:	52                   	push   %rdx
    d94c:	40 00 32             	add    %sil,(%rdx)
    d94f:	52                   	push   %rdx
    d950:	3e 00 32             	add    %dh,%ds:(%rdx)
    d953:	52                   	push   %rdx
    d954:	44 52                	rex.R push %rdx
    d956:	4f 50                	rex.WRXB push %r8
    d958:	00 32                	add    %dh,(%rdx)
    d95a:	3e 52                	ds push %rdx
    d95c:	00 4b 45             	add    %cl,0x45(%rbx)
    d95f:	59                   	pop    %rcx
    d960:	00 4b 45             	add    %cl,0x45(%rbx)
    d963:	59                   	pop    %rcx
    d964:	3f                   	(bad)  
    d965:	00 50 4f             	add    %dl,0x4f(%rax)
    d968:	52                   	push   %rdx
    d969:	54                   	push   %rsp
    d96a:	40 00 50 4f          	add    %dl,0x4f(%rax)
    d96e:	52                   	push   %rdx
    d96f:	54                   	push   %rsp
    d970:	3f                   	(bad)  
    d971:	00 45 4d             	add    %al,0x4d(%rbp)
    d974:	49 54                	rex.WB push %r12
    d976:	00 54 59 50          	add    %dl,0x50(%rcx,%rbx,2)
    d97a:	45 00 4d 53          	add    %r9b,0x53(%r13)
    d97e:	00 48 49             	add    %cl,0x49(%rax)
    d981:	00 48 2e             	add    %cl,0x2e(%rax)
    d984:	00 44 45 43          	add    %al,0x43(%rbp,%rax,2)
    d988:	2e 00 43 4f          	add    %al,%cs:0x4f(%rbx)
    d98c:	55                   	push   %rbp
    d98d:	4e 54                	rex.WRX push %rsp
    d98f:	00 53 4c             	add    %dl,0x4c(%rbx)
    d992:	49 54                	rex.WB push %r12
    d994:	2c 00                	sub    $0x0,%al
    d996:	53                   	push   %rbx
    d997:	22 2c 00             	and    (%rax,%rax,1),%ch
    d99a:	43                   	rex.XB
    d99b:	4f                   	rex.WRXB
    d99c:	4d 50                	rex.WRB push %r8
    d99e:	41 52                	push   %r10
    d9a0:	45 00 50 41          	add    %r10b,0x41(%r8)
    d9a4:	52                   	push   %rdx
    d9a5:	53                   	push   %rbx
    d9a6:	45 2d 4e 41 4d 45    	rex.RB sub $0x454d414e,%eax
    d9ac:	00 50 41             	add    %dl,0x41(%rax)
    d9af:	52                   	push   %rdx
    d9b0:	53                   	push   %rbx
    d9b1:	45 00 43 22          	add    %r8b,0x22(%r11)
    d9b5:	00 53 22             	add    %dl,0x22(%rbx)
    d9b8:	00 2e                	add    %ch,(%rsi)
    d9ba:	22 00                	and    (%rax),%al
    d9bc:	53                   	push   %rbx
    d9bd:	4f 55                	rex.WRXB push %r13
    d9bf:	52                   	push   %rdx
    d9c0:	43                   	rex.XB
    d9c1:	45 00 53 4f          	add    %r10b,0x4f(%r11)
    d9c5:	55                   	push   %rbp
    d9c6:	52                   	push   %rdx
    d9c7:	43                   	rex.XB
    d9c8:	45 21 00             	and    %r8d,(%r8)
    d9cb:	53                   	push   %rbx
    d9cc:	45                   	rex.RB
    d9cd:	41 52                	push   %r10
    d9cf:	43                   	rex.XB
    d9d0:	48 2d 57 4f 52 44    	sub    $0x44524f57,%rax
    d9d6:	4c                   	rex.WR
    d9d7:	49 53                	rex.WB push %r11
    d9d9:	54                   	push   %rsp
    d9da:	00 53 46             	add    %dl,0x46(%rbx)
    d9dd:	49                   	rex.WB
    d9de:	4e                   	rex.WRX
    d9df:	44 00 53 48          	add    %r10b,0x48(%rbx)
    d9e3:	45                   	rex.RB
    d9e4:	41                   	rex.B
    d9e5:	44                   	rex.R
    d9e6:	45 52                	rex.RB push %r10
    d9e8:	5f                   	pop    %rdi
    d9e9:	00 42 45             	add    %al,0x45(%rdx)
    d9ec:	47                   	rex.RXB
    d9ed:	49                   	rex.WB
    d9ee:	4e 00 41 47          	rex.WRX add %r8b,0x47(%rcx)
    d9f2:	41                   	rex.B
    d9f3:	49                   	rex.WB
    d9f4:	4e 00 55 4e          	rex.WRX add %r10b,0x4e(%rbp)
    d9f8:	54                   	push   %rsp
    d9f9:	49                   	rex.WB
    d9fa:	4c 00 41 48          	rex.WR add %r8b,0x48(%rcx)
    d9fe:	45                   	rex.RB
    d9ff:	41                   	rex.B
    da00:	44 00 49 46          	add    %r9b,0x46(%rcx)
    da04:	00 57 48             	add    %dl,0x48(%rdi)
    da07:	49                   	rex.WB
    da08:	4c                   	rex.WR
    da09:	45 00 54 48 45       	add    %r10b,0x45(%r8,%rcx,2)
    da0e:	4e 00 45 4c          	rex.WRX add %r8b,0x4c(%rbp)
    da12:	53                   	push   %rbx
    da13:	45 00 52 45          	add    %r10b,0x45(%r10)
    da17:	50                   	push   %rax
    da18:	45                   	rex.RB
    da19:	41 54                	push   %r12
    da1b:	00 4f 50             	add    %cl,0x50(%rdi)
    da1e:	45                   	rex.RB
    da1f:	4e 2d 46 49 4c 45    	rex.WRX sub $0x454c4946,%rax
    da25:	00 43 4c             	add    %al,0x4c(%rbx)
    da28:	4f 53                	rex.WRXB push %r11
    da2a:	45 2d 46 49 4c 45    	rex.RB sub $0x454c4946,%eax
    da30:	00 46 49             	add    %al,0x49(%rsi)
    da33:	4c                   	rex.WR
    da34:	45 32 45 52          	xor    0x52(%r13),%r8b
    da38:	52                   	push   %rdx
    da39:	00 46 45             	add    %al,0x45(%rsi)
    da3c:	2d 54 59 50 45       	sub    $0x45505954,%eax
    da41:	00 57 52             	add    %dl,0x52(%rdi)
    da44:	49 54                	rex.WB push %r12
    da46:	45 2d 4c 49 4e 45    	rex.RB sub $0x454e494c,%eax
    da4c:	00 52 45             	add    %dl,0x45(%rdx)
    da4f:	41                   	rex.B
    da50:	44 2d 4c 49 4e 45    	rex.R sub $0x454e494c,%eax
    da56:	00 57 52             	add    %dl,0x52(%rdi)
    da59:	49 54                	rex.WB push %r12
    da5b:	45 2d 46 49 4c 45    	rex.RB sub $0x454c4946,%eax
    da61:	00 52 45             	add    %dl,0x45(%rdx)
    da64:	41                   	rex.B
    da65:	44 2d 46 49 4c 45    	rex.R sub $0x454c4946,%eax
    da6b:	00 52 45             	add    %dl,0x45(%rdx)
    da6e:	50                   	push   %rax
    da6f:	4f 53                	rex.WRXB push %r11
    da71:	49 54                	rex.WB push %r12
    da73:	49                   	rex.WB
    da74:	4f                   	rex.WRXB
    da75:	4e 2d 46 49 4c 45    	rex.WRX sub $0x454c4946,%rax
    da7b:	00 46 49             	add    %al,0x49(%rsi)
    da7e:	4c                   	rex.WR
    da7f:	45 2d 50 4f 53 49    	rex.RB sub $0x49534f50,%eax
    da85:	54                   	push   %rsp
    da86:	49                   	rex.WB
    da87:	4f                   	rex.WRXB
    da88:	4e 00 46 49          	rex.WRX add %r8b,0x49(%rsi)
    da8c:	4c                   	rex.WR
    da8d:	45 2d 53 49 5a 45    	rex.RB sub $0x455a4953,%eax
    da93:	00 41 4c             	add    %al,0x4c(%rcx)
    da96:	4c                   	rex.WR
    da97:	4f                   	rex.WRXB
    da98:	43                   	rex.XB
    da99:	41 54                	push   %r12
    da9b:	45 00 46 52          	add    %r8b,0x52(%r14)
    da9f:	45                   	rex.RB
    daa0:	45 00 56 41          	add    %r10b,0x41(%r14)
    daa4:	54                   	push   %rsp
    daa5:	52                   	push   %rdx
    daa6:	00 46 4e             	add    %al,0x4e(%rsi)
    daa9:	54                   	push   %rsp
    daaa:	00 48 41             	add    %cl,0x41(%rax)
    daad:	4c 54                	rex.WR push %rsp
    daaf:	00 43 45             	add    %al,0x45(%rbx)
    dab2:	4c                   	rex.WR
    dab3:	4c 00 3e             	rex.WR add %r15b,(%rsi)
    dab6:	49                   	rex.WB
    dab7:	4e 00 53 54          	rex.WRX add %r10b,0x54(%rbx)
    dabb:	41 54                	push   %r12
    dabd:	45 00 5b 45          	add    %r11b,0x45(%r11)
    dac1:	58                   	pop    %rax
    dac2:	49 54                	rex.WB push %r12
    dac4:	5d                   	pop    %rbp
    dac5:	00 43 2f             	add    %al,0x2f(%rbx)
    dac8:	4c 00 41 54          	rex.WR add %r8b,0x54(%rcx)
    dacc:	49                   	rex.WB
    dacd:	42 00 54 54 49       	add    %dl,0x49(%rsp,%r10,2)
    dad2:	42 00 23             	rex.X add %spl,(%rbx)
    dad5:	54                   	push   %rsp
    dad6:	49                   	rex.WB
    dad7:	42 00 44 50 00       	add    %al,0x0(%rax,%r10,2)
    dadc:	43 55                	rex.XB push %r13
    dade:	52                   	push   %rdx
    dadf:	52                   	push   %rdx
    dae0:	45                   	rex.RB
    dae1:	4e 54                	rex.WRX push %rsp
    dae3:	00 43 4f             	add    %al,0x4f(%rbx)
    dae6:	4e 54                	rex.WRX push %rsp
    dae8:	45 58                	rex.RB pop %r8
    daea:	54                   	push   %rsp
    daeb:	00 4c 41 53          	add    %cl,0x53(%rcx,%rax,2)
    daef:	54                   	push   %rsp
    daf0:	00 46 4f             	add    %al,0x4f(%rsi)
    daf3:	52                   	push   %rdx
    daf4:	54                   	push   %rsp
    daf5:	48 2d 57 4f 52 44    	sub    $0x44524f57,%rax
    dafb:	4c                   	rex.WR
    dafc:	49 53                	rex.WB push %r11
    dafe:	54                   	push   %rsp
    daff:	00 43 52             	add    %al,0x52(%rbx)
    db02:	45                   	rex.RB
    db03:	41 54                	push   %r12
    db05:	45 2d 43 4f 44 45    	rex.RB sub $0x45444f43,%eax
    db0b:	00 43 4f             	add    %al,0x4f(%rbx)
    db0e:	4e 53                	rex.WRX push %rbx
    db10:	54                   	push   %rsp
    db11:	41                   	rex.B
    db12:	4e 54                	rex.WRX push %rsp
    db14:	2d 43 4f 44 45       	sub    $0x45444f43,%eax
    db19:	00 42 52             	add    %al,0x52(%rdx)
    db1c:	41                   	rex.B
    db1d:	4e                   	rex.WRX
    db1e:	43                   	rex.XB
    db1f:	48 2d 43 4f 44 45    	sub    $0x45444f43,%rax
    db25:	00 50 50             	add    %dl,0x50(%rax)
    db28:	50                   	push   %rax
    db29:	50                   	push   %rax
    db2a:	00 52 2f             	add    %dl,0x2f(%rdx)
    db2d:	4f 00 57 2f          	rex.WRXB add %r10b,0x2f(%r15)
    db31:	4f 00 52 2f          	rex.WRXB add %r10b,0x2f(%r10)
    db35:	57                   	push   %rdi
    db36:	00 4f 5f             	add    %cl,0x5f(%rdi)
    db39:	43 52                	rex.XB push %r10
    db3b:	45                   	rex.RB
    db3c:	41 54                	push   %r12
    db3e:	00 4f 5f             	add    %cl,0x5f(%rdi)
    db41:	54                   	push   %rsp
    db42:	52                   	push   %rdx
    db43:	55                   	push   %rbp
    db44:	4e                   	rex.WRX
    db45:	43 00 50 41          	rex.XB add %dl,0x41(%r8)
    db49:	44 00 44 50 4c       	add    %r8b,0x4c(%rax,%rdx,2)
    db4e:	00 42 41             	add    %al,0x41(%rdx)
    db51:	53                   	push   %rbx
    db52:	45 00 53 50          	add    %r10b,0x50(%r11)
    db56:	30 00                	xor    %al,(%rax)
    db58:	43 55                	rex.XB push %r13
    db5a:	52                   	push   %rdx
    db5b:	53                   	push   %rbx
    db5c:	54                   	push   %rsp
    db5d:	52                   	push   %rdx
    db5e:	00 53 41             	add    %dl,0x41(%rbx)
    db61:	56                   	push   %rsi
    db62:	45                   	rex.RB
    db63:	45 52                	rex.RB push %r10
    db65:	52                   	push   %rdx
    db66:	3f                   	(bad)  
    db67:	00 53 54             	add    %dl,0x54(%rbx)
    db6a:	44                   	rex.R
    db6b:	4f 55                	rex.WRXB push %r13
    db6d:	54                   	push   %rsp
    db6e:	00 53 54             	add    %dl,0x54(%rbx)
    db71:	44                   	rex.R
    db72:	49                   	rex.WB
    db73:	4e 00 53 49          	rex.WRX add %r10b,0x49(%rbx)
    db77:	44 00 4c 49 54       	add    %r9b,0x54(%rcx,%rcx,2)
    db7c:	2c 00                	sub    $0x0,%al
    db7e:	53                   	push   %rbx
    db7f:	48                   	rex.W
    db80:	45                   	rex.RB
    db81:	41                   	rex.B
    db82:	44                   	rex.R
    db83:	45 52                	rex.RB push %r10
    db85:	00 44 45 43          	add    %al,0x43(%rbp,%rax,2)
    db89:	49                   	rex.WB
    db8a:	4d                   	rex.WRB
    db8b:	41                   	rex.B
    db8c:	4c 00 48 45          	rex.WR add %r9b,0x45(%rax)
    db90:	58                   	pop    %rax
    db91:	00 5b 00             	add    %bl,0x0(%rbx)
    db94:	5d                   	pop    %rbp
    db95:	00 54 49 42          	add    %dl,0x42(%rcx,%rcx,2)
    db99:	00 43 41             	add    %al,0x41(%rbx)
    db9c:	54                   	push   %rsp
    db9d:	43                   	rex.XB
    db9e:	48 00 44 4e 45       	rex.W add %al,0x45(%rsi,%rcx,2)
    dba3:	47                   	rex.RXB
    dba4:	41 54                	push   %r12
    dba6:	45 00 44 49 47       	add    %r8b,0x47(%r9,%rcx,2)
    dbab:	49 54                	rex.WB push %r12
    dbad:	3f                   	(bad)  
    dbae:	00 3e                	add    %bh,(%rsi)
    dbb0:	4e 55                	rex.WRX push %rbp
    dbb2:	4d                   	rex.WRB
    dbb3:	42                   	rex.X
    dbb4:	45 52                	rex.RB push %r10
    dbb6:	00 43 4f             	add    %al,0x4f(%rbx)
    dbb9:	4e 56                	rex.WRX push %rsi
    dbbb:	45 52                	rex.RB push %r10
    dbbd:	54                   	push   %rsp
    dbbe:	00 4e 55             	add    %cl,0x55(%rsi)
    dbc1:	4d                   	rex.WRB
    dbc2:	42                   	rex.X
    dbc3:	45 52                	rex.RB push %r10
    dbc5:	3f                   	(bad)  
    dbc6:	00 44 45 50          	add    %al,0x50(%rbp,%rax,2)
    dbca:	54                   	push   %rsp
    dbcb:	48 00 3f             	rex.W add %dil,(%rdi)
    dbce:	53                   	push   %rbx
    dbcf:	54                   	push   %rsp
    dbd0:	41                   	rex.B
    dbd1:	43                   	rex.XB
    dbd2:	4b 00 3f             	rex.WXB add %dil,(%r15)
    dbd5:	53                   	push   %rbx
    dbd6:	4c                   	rex.WR
    dbd7:	49 54                	rex.WB push %r12
    dbd9:	45 52                	rex.RB push %r10
    dbdb:	41                   	rex.B
    dbdc:	4c 00 49 4e          	rex.WR add %r9b,0x4e(%rcx)
    dbe0:	54                   	push   %rsp
    dbe1:	45 52                	rex.RB push %r10
    dbe3:	50                   	push   %rax
    dbe4:	52                   	push   %rdx
    dbe5:	45 54                	rex.RB push %r12
    dbe7:	5f                   	pop    %rdi
    dbe8:	00 26                	add    %ah,(%rsi)
    dbea:	49                   	rex.WB
    dbeb:	4e 54                	rex.WRX push %rsp
    dbed:	45 52                	rex.RB push %r10
    dbef:	50                   	push   %rax
    dbf0:	52                   	push   %rdx
    dbf1:	45 54                	rex.RB push %r12
    dbf3:	00 49 4e             	add    %cl,0x4e(%rcx)
    dbf6:	54                   	push   %rsp
    dbf7:	45 52                	rex.RB push %r10
    dbf9:	50                   	push   %rax
    dbfa:	52                   	push   %rdx
    dbfb:	45 54                	rex.RB push %r12
    dbfd:	00 45 56             	add    %al,0x56(%rbp)
    dc00:	41                   	rex.B
    dc01:	4c 00 48 45          	rex.WR add %r9b,0x45(%rax)
    dc05:	52                   	push   %rdx
    dc06:	45 00 3a             	add    %r15b,(%r10)
    dc09:	00 45 58             	add    %al,0x58(%rbp)
    dc0c:	49 54                	rex.WB push %r12
    dc0e:	00 3b                	add    %bh,(%rbx)
    dc10:	00 43 52             	add    %al,0x52(%rbx)
    dc13:	45                   	rex.RB
    dc14:	41 54                	push   %r12
    dc16:	45 00 27             	add    %r12b,(%r15)
    dc19:	00 5b 27             	add    %bl,0x27(%rbx)
    dc1c:	5d                   	pop    %rbp
    dc1d:	00 2e                	add    %ch,(%rsi)
    dc1f:	28 00                	sub    %al,(%rax)
    dc21:	5c                   	pop    %rsp
    dc22:	00 43 52             	add    %al,0x52(%rbx)
    dc25:	00 53 50             	add    %dl,0x50(%rbx)
    dc28:	41                   	rex.B
    dc29:	43                   	rex.XB
    dc2a:	45 00 4d 55          	add    %r9b,0x55(%r13)
    dc2e:	2f                   	(bad)  
    dc2f:	4d                   	rex.WRB
    dc30:	4f                   	rex.WRXB
    dc31:	44 00 44 41 42       	add    %r8b,0x42(%rcx,%rax,2)
    dc36:	53                   	push   %rbx
    dc37:	00 48 4c             	add    %cl,0x4c(%rax)
    dc3a:	44 00 48 4f          	add    %r9b,0x4f(%rax)
    dc3e:	4c                   	rex.WR
    dc3f:	44 00 23             	add    %r12b,(%rbx)
    dc42:	00 23                	add    %ah,(%rbx)
    dc44:	53                   	push   %rbx
    dc45:	00 53 49             	add    %dl,0x49(%rbx)
    dc48:	47                   	rex.RXB
    dc49:	4e 00 3c 23          	rex.WRX add %r15b,(%rbx,%r12,1)
    dc4d:	00 23                	add    %ah,(%rbx)
    dc4f:	3e 00 28             	add    %ch,%ds:(%rax)
    dc52:	44                   	rex.R
    dc53:	2e 29 00             	sub    %eax,%cs:(%rax)
    dc56:	44                   	rex.R
    dc57:	2e 00 55 2e          	add    %dl,%cs:0x2e(%rbp)
    dc5b:	00 53 3e             	add    %dl,0x3e(%rbx)
    dc5e:	44 00 53 4f          	add    %r10b,0x4f(%rbx)
    dc62:	55                   	push   %rbp
    dc63:	52                   	push   %rdx
    dc64:	43                   	rex.XB
    dc65:	45 2d 49 44 00 41    	rex.RB sub $0x41004449,%eax
    dc6b:	43                   	rex.XB
    dc6c:	43                   	rex.XB
    dc6d:	45 50                	rex.RB push %r8
    dc6f:	54                   	push   %rsp
    dc70:	00 46 4f             	add    %al,0x4f(%rsi)
    dc73:	52                   	push   %rdx
    dc74:	50                   	push   %rax
    dc75:	52                   	push   %rdx
    dc76:	45 00 52 45          	add    %r10b,0x45(%r10)
    dc7a:	46                   	rex.RX
    dc7b:	49                   	rex.WB
    dc7c:	4c                   	rex.WR
    dc7d:	4c 00 28             	rex.WR add %r13b,(%rax)
    dc80:	00 46 51             	add    %al,0x51(%rsi)
    dc83:	55                   	push   %rbp
    dc84:	49 54                	rex.WB push %r12
    dc86:	00 51 55             	add    %dl,0x55(%rcx)
    dc89:	49 54                	rex.WB push %r12
    dc8b:	00 4f 4b             	add    %cl,0x4b(%rdi)
    dc8e:	00 54 53 54          	add    %dl,0x54(%rbx,%rdx,2)
    dc92:	00 54 53 54          	add    %dl,0x54(%rbx,%rdx,2)
    dc96:	3c 00                	cmp    $0x0,%al
    dc98:	3e 54                	ds push %rsp
    dc9a:	53                   	push   %rbx
    dc9b:	54                   	push   %rsp
    dc9c:	0a 00                	or     (%rax),%al
    dc9e:	45                   	rex.RB
    dc9f:	43                   	rex.XB
    dca0:	48                   	rex.W
    dca1:	4f 58                	rex.WRXB pop %r8
    dca3:	00 46 6f             	add    %al,0x6f(%rsi)
    dca6:	72 74                	jb     dd1c <_IO_stdin_used+0x85c>
    dca8:	68 00 20 73 79       	pushq  $0x79732000
    dcad:	73 0a                	jae    dcb9 <_IO_stdin_used+0x7f9>
    dcaf:	00 2e                	add    %ch,(%rsi)
    dcb1:	28 20                	sub    %ah,(%rax)
    dcb3:	44                   	rex.R
    dcb4:	45 50                	rex.RB push %r8
    dcb6:	54                   	push   %rsp
    dcb7:	48 3d 29 20 44 45    	cmp    $0x45442029,%rax
    dcbd:	50                   	push   %rax
    dcbe:	54                   	push   %rsp
    dcbf:	48 20 2e             	rex.W and %bpl,(%rsi)
    dcc2:	20 43 52             	and    %al,0x52(%rbx)
    dcc5:	00 00                	add    %al,(%rax)
    dcc7:	00 20                	add    %ah,(%rax)
    dcc9:	3a 20                	cmp    (%rax),%ah
    dccb:	43                   	rex.XB
    dccc:	44 55                	rex.R push %rbp
    dcce:	4d 50                	rex.WRB push %r8
    dcd0:	20 20                	and    %ah,(%rax)
    dcd2:	53                   	push   %rbx
    dcd3:	57                   	push   %rdi
    dcd4:	41 50                	push   %r8
    dcd6:	20 20                	and    %ah,(%rax)
    dcd8:	20 56 46             	and    %dl,0x46(%rsi)
    dcdb:	4d                   	rex.WRB
    dcdc:	41                   	rex.B
    dcdd:	44 52                	rex.R push %rdx
    dcdf:	20 2b                	and    %ch,(%rbx)
    dce1:	20 53 57             	and    %dl,0x57(%rbx)
    dce4:	41 50                	push   %r8
    dce6:	20 20                	and    %ah,(%rax)
    dce8:	50                   	push   %rax
    dce9:	44 55                	rex.R push %rbp
    dceb:	4d 50                	rex.WRB push %r8
    dced:	20 3b                	and    %bh,(%rbx)
    dcef:	20 00                	and    %al,(%rax)
    dcf1:	3a 20                	cmp    (%rax),%ah
    dcf3:	46                   	rex.RX
    dcf4:	45 52                	rex.RB push %r10
    dcf6:	52                   	push   %rdx
    dcf7:	5e                   	pop    %rsi
    dcf8:	20 4e 4f             	and    %cl,0x4f(%rsi)
    dcfb:	4f 50                	rex.WRXB push %r8
    dcfd:	20 3b                	and    %bh,(%rbx)
    dcff:	00 3a                	add    %bh,(%rdx)
    dd01:	20 50 45             	and    %dl,0x45(%rax)
    dd04:	52                   	push   %rdx
    dd05:	52                   	push   %rdx
    dd06:	20 2e                	and    %ch,(%rsi)
    dd08:	22 20                	and    (%rax),%ah
    dd0a:	76 20                	jbe    dd2c <_IO_stdin_used+0x86c>
    dd0c:	45 52                	rex.RB push %r10
    dd0e:	52                   	push   %rdx
    dd0f:	3d 22 2e 20 3b       	cmp    $0x3b202e22,%eax
    dd14:	00 3a                	add    %bh,(%rdx)
    dd16:	20 53 41             	and    %dl,0x41(%rbx)
    dd19:	56                   	push   %rsi
    dd1a:	45                   	rex.RB
    dd1b:	45 52                	rex.RB push %r10
    dd1d:	52                   	push   %rdx
    dd1e:	20 4e 4f             	and    %cl,0x4f(%rsi)
    dd21:	4f 50                	rex.WRXB push %r8
    dd23:	20 3b                	and    %bh,(%rbx)
    dd25:	00 3a                	add    %bh,(%rdx)
    dd27:	20 49 4e             	and    %cl,0x4e(%rcx)
    dd2a:	43                   	rex.XB
    dd2b:	4c 55                	rex.WR push %rbp
    dd2d:	44                   	rex.R
    dd2e:	45 2d 46 49 4c 45    	rex.RB sub $0x454c4946,%eax
    dd34:	00 00                	add    %al,(%rax)
    dd36:	00 00                	add    %al,(%rax)
    dd38:	53                   	push   %rbx
    dd39:	49                   	rex.WB
    dd3a:	44 20 40 20          	and    %r8b,0x20(%rax)
    dd3e:	3e 52                	ds push %rdx
    dd40:	20 3e                	and    %bh,(%rsi)
    dd42:	49                   	rex.WB
    dd43:	4e 20 40 20          	rex.WRX and %r8b,0x20(%rax)
    dd47:	3e 52                	ds push %rdx
    dd49:	20 41 54             	and    %al,0x54(%rcx)
    dd4c:	49                   	rex.WB
    dd4d:	42 20 40 20          	rex.X and %al,0x20(%rax)
    dd51:	3e 52                	ds push %rdx
    dd53:	20 23                	and    %ah,(%rbx)
    dd55:	54                   	push   %rsp
    dd56:	49                   	rex.WB
    dd57:	42 20 40 20          	rex.X and %al,0x20(%rax)
    dd5b:	3e 52                	ds push %rdx
    dd5d:	20 43 55             	and    %al,0x55(%rbx)
    dd60:	52                   	push   %rdx
    dd61:	53                   	push   %rbx
    dd62:	54                   	push   %rsp
    dd63:	52                   	push   %rdx
    dd64:	20 40 20             	and    %al,0x20(%rax)
    dd67:	3e 52                	ds push %rdx
    dd69:	20 52 50             	and    %dl,0x50(%rdx)
    dd6c:	40 20 43 2f          	and    %al,0x2f(%rbx)
    dd70:	4c 20 2d 20 52 50 21 	rex.WR and %r13b,0x21505220(%rip)        # 21512f97 <_end+0x20f01bf7>
    dd77:	00 53 49             	add    %dl,0x49(%rbx)
    dd7a:	44 20 21             	and    %r12b,(%rcx)
    dd7d:	20 52 50             	and    %dl,0x50(%rdx)
    dd80:	40 20 41 54          	and    %al,0x54(%rcx)
    dd84:	49                   	rex.WB
    dd85:	42 20 21             	rex.X and %spl,(%rcx)
    dd88:	20 43 55             	and    %al,0x55(%rbx)
    dd8b:	52                   	push   %rdx
    dd8c:	53                   	push   %rbx
    dd8d:	54                   	push   %rsp
    dd8e:	52                   	push   %rdx
    dd8f:	20 30                	and    %dh,(%rax)
    dd91:	21 20                	and    %esp,(%rax)
    dd93:	00 5b 27             	add    %bl,0x27(%rbx)
    dd96:	5d                   	pop    %rbp
    dd97:	20 46 51             	and    %al,0x51(%rsi)
    dd9a:	55                   	push   %rbp
    dd9b:	49 54                	rex.WB push %r12
    dd9d:	20 43 41             	and    %al,0x41(%rbx)
    dda0:	54                   	push   %rsp
    dda1:	43                   	rex.XB
    dda2:	48 20 53 41          	rex.W and %dl,0x41(%rbx)
    dda6:	56                   	push   %rsi
    dda7:	45                   	rex.RB
    dda8:	45 52                	rex.RB push %r10
    ddaa:	52                   	push   %rdx
    ddab:	00 00                	add    %al,(%rax)
    ddad:	00 00                	add    %al,(%rax)
    ddaf:	00 44 55 50          	add    %al,0x50(%rbp,%rdx,2)
    ddb3:	20 49 46             	and    %cl,0x46(%rcx)
    ddb6:	20 43 52             	and    %al,0x52(%rbx)
    ddb9:	20 53 4f             	and    %dl,0x4f(%rbx)
    ddbc:	55                   	push   %rbp
    ddbd:	52                   	push   %rdx
    ddbe:	43                   	rex.XB
    ddbf:	45 20 54 59 50       	and    %r10b,0x50(%r9,%rbx,2)
    ddc4:	45 20 43 52          	and    %r8b,0x52(%r11)
    ddc8:	20 46 45             	and    %al,0x45(%rsi)
    ddcb:	52                   	push   %rdx
    ddcc:	52                   	push   %rdx
    ddcd:	5e                   	pop    %rsi
    ddce:	20 2e                	and    %ch,(%rsi)
    ddd0:	22 20                	and    (%rax),%ah
    ddd2:	3a 22                	cmp    (%rdx),%ah
    ddd4:	20 43 55             	and    %al,0x55(%rbx)
    ddd7:	52                   	push   %rdx
    ddd8:	53                   	push   %rbx
    ddd9:	54                   	push   %rsp
    ddda:	52                   	push   %rdx
    dddb:	20 40 20             	and    %al,0x20(%rax)
    ddde:	2e 20 54 48 45       	and    %dl,%cs:0x45(%rax,%rcx,2)
    dde3:	4e 00 00             	rex.WRX add %r8b,(%rax)
    dde6:	00 00                	add    %al,(%rax)
    dde8:	52                   	push   %rdx
    dde9:	50                   	push   %rax
    ddea:	40 20 43 2f          	and    %al,0x2f(%rbx)
    ddee:	4c 20 2b             	rex.WR and %r13b,(%rbx)
    ddf1:	20 52 50             	and    %dl,0x50(%rdx)
    ddf4:	21 20                	and    %esp,(%rax)
    ddf6:	52                   	push   %rdx
    ddf7:	3e 20 43 55          	and    %al,%ds:0x55(%rbx)
    ddfb:	52                   	push   %rdx
    ddfc:	53                   	push   %rbx
    ddfd:	54                   	push   %rsp
    ddfe:	52                   	push   %rdx
    ddff:	20 21                	and    %ah,(%rcx)
    de01:	20 52 3e             	and    %dl,0x3e(%rdx)
    de04:	20 23                	and    %ah,(%rbx)
    de06:	54                   	push   %rsp
    de07:	49                   	rex.WB
    de08:	42 20 21             	rex.X and %spl,(%rcx)
    de0b:	20 52 3e             	and    %dl,0x3e(%rdx)
    de0e:	20 41 54             	and    %al,0x54(%rcx)
    de11:	49                   	rex.WB
    de12:	42 20 21             	rex.X and %spl,(%rcx)
    de15:	20 52 3e             	and    %dl,0x3e(%rdx)
    de18:	20 3e                	and    %bh,(%rsi)
    de1a:	49                   	rex.WB
    de1b:	4e 20 21             	rex.WRX and %r12b,(%rcx)
    de1e:	20 52 3e             	and    %dl,0x3e(%rdx)
    de21:	20 53 49             	and    %dl,0x49(%rbx)
    de24:	44 20 21             	and    %r12b,(%rcx)
    de27:	20 54 48 52          	and    %dl,0x52(%rax,%rcx,2)
    de2b:	4f 57                	rex.WRXB push %r15
    de2d:	20 3b                	and    %bh,(%rbx)
    de2f:	00 3a                	add    %bh,(%rdx)
    de31:	20 49 4e             	and    %cl,0x4e(%rcx)
    de34:	43                   	rex.XB
    de35:	4c 55                	rex.WR push %rbp
    de37:	44                   	rex.R
    de38:	45                   	rex.RB
    de39:	44 00 00             	add    %r8b,(%rax)
    de3c:	00 00                	add    %al,(%rax)
    de3e:	00 00                	add    %al,(%rax)
    de40:	52                   	push   %rdx
    de41:	2f                   	(bad)  
    de42:	4f 20 4f 50          	rex.WRXB and %r9b,0x50(%r15)
    de46:	45                   	rex.RB
    de47:	4e 2d 46 49 4c 45    	rex.WRX sub $0x454c4946,%rax
    de4d:	20 49 46             	and    %cl,0x46(%rcx)
    de50:	20 2d 33 38 20 54    	and    %ch,0x54203833(%rip)        # 54211689 <_end+0x53c002e9>
    de56:	48 52                	rex.W push %rdx
    de58:	4f 57                	rex.WRXB push %r15
    de5a:	20 54 48 45          	and    %dl,0x45(%rax,%rcx,2)
    de5e:	4e 00 44 55 50       	rex.WRX add %r8b,0x50(%rbp,%r10,2)
    de63:	20 3e                	and    %bh,(%rsi)
    de65:	52                   	push   %rdx
    de66:	20 5b 27             	and    %bl,0x27(%rbx)
    de69:	5d                   	pop    %rbp
    de6a:	20 49 4e             	and    %cl,0x4e(%rcx)
    de6d:	43                   	rex.XB
    de6e:	4c 55                	rex.WR push %rbp
    de70:	44                   	rex.R
    de71:	45 2d 46 49 4c 45    	rex.RB sub $0x454c4946,%eax
    de77:	20 43 41             	and    %al,0x41(%rbx)
    de7a:	54                   	push   %rsp
    de7b:	43                   	rex.XB
    de7c:	48 00 52 3e          	rex.W add %dl,0x3e(%rdx)
    de80:	20 43 4c             	and    %al,0x4c(%rbx)
    de83:	4f 53                	rex.WRXB push %r11
    de85:	45 2d 46 49 4c 45    	rex.RB sub $0x454c4946,%eax
    de8b:	20 44 52 4f          	and    %al,0x4f(%rdx,%rdx,2)
    de8f:	50                   	push   %rax
    de90:	20 54 48 52          	and    %dl,0x52(%rax,%rcx,2)
    de94:	4f 57                	rex.WRXB push %r15
    de96:	20 3b                	and    %bh,(%rbx)
    de98:	00 3a                	add    %bh,(%rdx)
    de9a:	20 46 4c             	and    %al,0x4c(%rsi)
    de9d:	4f                   	rex.WRXB
    de9e:	41                   	rex.B
    de9f:	44 20 50 41          	and    %r10b,0x41(%rax)
    dea3:	52                   	push   %rdx
    dea4:	53                   	push   %rbx
    dea5:	45 2d 4e 41 4d 45    	rex.RB sub $0x454d414e,%eax
    deab:	20 49 4e             	and    %cl,0x4e(%rcx)
    deae:	43                   	rex.XB
    deaf:	4c 55                	rex.WR push %rbp
    deb1:	44                   	rex.R
    deb2:	45                   	rex.RB
    deb3:	44 20 3b             	and    %r15b,(%rbx)
    deb6:	00 00                	add    %al,(%rax)
    deb8:	43 52                	rex.XB push %r10
    deba:	45                   	rex.RB
    debb:	41 54                	push   %r12
    debd:	45 20 54 41 54       	and    %r10b,0x54(%r9,%rax,2)
    dec2:	52                   	push   %rdx
    dec3:	20 35 35 20 41 4c    	and    %dh,0x4c412035(%rip)        # 4c41fefe <_end+0x4be0eb5e>
    dec9:	4c                   	rex.WR
    deca:	4f 54                	rex.WRXB push %r12
    decc:	20 54 41 54          	and    %dl,0x54(%rcx,%rax,2)
    ded0:	52                   	push   %rdx
    ded1:	20 56 41             	and    %dl,0x41(%rsi)
    ded4:	54                   	push   %rsp
    ded5:	52                   	push   %rdx
    ded6:	20 44 52 4f          	and    %al,0x4f(%rdx,%rdx,2)
    deda:	50                   	push   %rax
    dedb:	00 00                	add    %al,(%rax)
    dedd:	00 00                	add    %al,(%rax)
    dedf:	00 3a                	add    %bh,(%rdx)
    dee1:	20 41 55             	and    %al,0x55(%rcx)
    dee4:	54                   	push   %rsp
    dee5:	4f                   	rex.WRXB
    dee6:	45 58                	rex.RB pop %r8
    dee8:	45                   	rex.RB
    dee9:	43 20 53 22          	rex.XB and %dl,0x22(%r11)
    deed:	20 61 75             	and    %ah,0x75(%rcx)
    def0:	74 6f                	je     df61 <_IO_stdin_used+0xaa1>
    def2:	65 78 65             	gs js  df5a <_IO_stdin_used+0xa9a>
    def5:	63 2e                	movslq (%rsi),%ebp
    def7:	34 22                	xor    $0x22,%al
    def9:	20 5b 27             	and    %bl,0x27(%rbx)
    defc:	5d                   	pop    %rbp
    defd:	20 49 4e             	and    %cl,0x4e(%rcx)
    df00:	43                   	rex.XB
    df01:	4c 55                	rex.WR push %rbp
    df03:	44                   	rex.R
    df04:	45                   	rex.RB
    df05:	44 20 43 41          	and    %r8b,0x41(%rbx)
    df09:	54                   	push   %rsp
    df0a:	43                   	rex.XB
    df0b:	48 20 2e             	rex.W and %bpl,(%rsi)
    df0e:	22 20                	and    (%rax),%ah
    df10:	45 52                	rex.RB push %r10
    df12:	52                   	push   %rdx
    df13:	3d 22 20 2e 20       	cmp    $0x202e2022,%eax
    df18:	53                   	push   %rbx
    df19:	50                   	push   %rax
    df1a:	30 20                	xor    %ah,(%rax)
    df1c:	40 20 53 50          	and    %dl,0x50(%rbx)
    df20:	21 20                	and    %esp,(%rax)
    df22:	53                   	push   %rbx
    df23:	54                   	push   %rsp
    df24:	41 54                	push   %r12
    df26:	45 20 30             	and    %r14b,(%r8)
    df29:	21 20                	and    %esp,(%rax)
    df2b:	3b 00                	cmp    (%rax),%eax
    df2d:	00 00                	add    %al,(%rax)
    df2f:	00 3a                	add    %bh,(%rdx)
    df31:	20 4d 41             	and    %cl,0x41(%rbp)
    df34:	49                   	rex.WB
    df35:	4e 20 2e             	rex.WRX and %r13b,(%rsi)
    df38:	22 20                	and    (%rax),%ah
    df3a:	4d                   	rex.WRB
    df3b:	41                   	rex.B
    df3c:	49                   	rex.WB
    df3d:	4e 22 20             	rex.WRX and (%rax),%r12b
    df40:	43 52                	rex.XB push %r10
    df42:	20 20                	and    %ah,(%rax)
    df44:	42                   	rex.X
    df45:	45                   	rex.RB
    df46:	47                   	rex.RXB
    df47:	49                   	rex.WB
    df48:	4e 20 53 54          	rex.WRX and %r10b,0x54(%rbx)
    df4c:	41 54                	push   %r12
    df4e:	45 20 30             	and    %r14b,(%r8)
    df51:	21 20                	and    %esp,(%rax)
    df53:	5b                   	pop    %rbx
    df54:	27                   	(bad)  
    df55:	5d                   	pop    %rbp
    df56:	20 51 55             	and    %dl,0x55(%rcx)
    df59:	49 54                	rex.WB push %r12
    df5b:	20 43 41             	and    %al,0x41(%rbx)
    df5e:	54                   	push   %rsp
    df5f:	43                   	rex.XB
    df60:	48 20 2e             	rex.W and %bpl,(%rsi)
    df63:	22 20                	and    (%rax),%ah
    df65:	45 52                	rex.RB push %r10
    df67:	52                   	push   %rdx
    df68:	3d 22 20 20 2e       	cmp    $0x2e202022,%eax
    df6d:	20 20                	and    %ah,(%rax)
    df6f:	53                   	push   %rbx
    df70:	50                   	push   %rax
    df71:	30 20                	xor    %ah,(%rax)
    df73:	40 20 53 50          	and    %dl,0x50(%rbx)
    df77:	21 20                	and    %esp,(%rax)
    df79:	41                   	rex.B
    df7a:	47                   	rex.RXB
    df7b:	41                   	rex.B
    df7c:	49                   	rex.WB
    df7d:	4e 20 3b             	rex.WRX and %r15b,(%rbx)
	...
    df88:	3a 20                	cmp    (%rax),%ah
    df8a:	54                   	push   %rsp
    df8b:	41 54                	push   %r12
    df8d:	52                   	push   %rdx
    df8e:	44                   	rex.R
    df8f:	4f 20 54 41 54       	rex.WRXB and %r10b,0x54(%r9,%r8,2)
    df94:	52                   	push   %rdx
    df95:	20 43 4f             	and    %al,0x4f(%rbx)
    df98:	55                   	push   %rbp
    df99:	4e 54                	rex.WRX push %rsp
    df9b:	20 5b 27             	and    %bl,0x27(%rbx)
    df9e:	5d                   	pop    %rbp
    df9f:	20 45 56             	and    %al,0x56(%rbp)
    dfa2:	41                   	rex.B
    dfa3:	4c 20 43 41          	rex.WR and %r8b,0x41(%rbx)
    dfa7:	54                   	push   %rsp
    dfa8:	43                   	rex.XB
    dfa9:	48 20 50 45          	rex.W and %dl,0x45(%rax)
    dfad:	52                   	push   %rdx
    dfae:	52                   	push   %rdx
    dfaf:	20 20                	and    %ah,(%rax)
    dfb1:	53                   	push   %rbx
    dfb2:	50                   	push   %rax
    dfb3:	30 20                	xor    %ah,(%rax)
    dfb5:	40 20 53 50          	and    %dl,0x50(%rbx)
    dfb9:	21 20                	and    %esp,(%rax)
    dfbb:	53                   	push   %rbx
    dfbc:	54                   	push   %rsp
    dfbd:	41 54                	push   %r12
    dfbf:	45 20 30             	and    %r14b,(%r8)
    dfc2:	21 20                	and    %esp,(%rax)
    dfc4:	4d                   	rex.WRB
    dfc5:	41                   	rex.B
    dfc6:	49                   	rex.WB
    dfc7:	4e 20 3b             	rex.WRX and %r15b,(%rbx)
    dfca:	00 54 41 54          	add    %dl,0x54(%rcx,%rax,2)
    dfce:	52                   	push   %rdx
    dfcf:	44                   	rex.R
    dfd0:	4f 00 6d 61          	rex.WRXB add %r13b,0x61(%r13)
    dfd4:	6b 65 5f 69          	imul   $0x69,0x5f(%rbp),%esp
    dfd8:	6d                   	insl   (%dx),%es:(%rdi)
    dfd9:	61                   	(bad)  
    dfda:	67 65 20 6f 6b       	and    %ch,%gs:0x6b(%edi)
	...

Disassembly of section .eh_frame_hdr:

000000000000dfe0 <__GNU_EH_FRAME_HDR>:
    dfe0:	01 1b                	add    %ebx,(%rbx)
    dfe2:	03 3b                	add    (%rbx),%edi
    dfe4:	d4                   	(bad)  
    dfe5:	01 00                	add    %eax,(%rax)
    dfe7:	00 39                	add    %bh,(%rcx)
    dfe9:	00 00                	add    %al,(%rax)
    dfeb:	00 90 2b ff ff 20    	add    %dl,0x20ffff2b(%rax)
    dff1:	02 00                	add    (%rax),%al
    dff3:	00 30                	add    %dh,(%rax)
    dff5:	2d ff ff 48 02       	sub    $0x248ffff,%eax
    dffa:	00 00                	add    %al,(%rax)
    dffc:	40 2d ff ff f0 01    	rex sub $0x1f0ffff,%eax
    e002:	00 00                	add    %al,(%rax)
    e004:	4a                   	rex.WX
    e005:	2e ff                	cs (bad) 
    e007:	ff 60 02             	jmpq   *0x2(%rax)
    e00a:	00 00                	add    %al,(%rax)
    e00c:	8d 2e                	lea    (%rsi),%ebp
    e00e:	ff                   	(bad)  
    e00f:	ff 80 02 00 00 b7    	incl   -0x48fffffe(%rax)
    e015:	2e ff                	cs (bad) 
    e017:	ff a0 02 00 00 18    	jmpq   *0x18000002(%rax)
    e01d:	2f                   	(bad)  
    e01e:	ff                   	(bad)  
    e01f:	ff c0                	inc    %eax
    e021:	02 00                	add    (%rax),%al
    e023:	00 1d 30 ff ff e0    	add    %bl,-0x1f0000d0(%rip)        # ffffffffe100df59 <_end+0xffffffffe09fcbb9>
    e029:	02 00                	add    (%rax),%al
    e02b:	00 d7                	add    %dl,%bh
    e02d:	30 ff                	xor    %bh,%bh
    e02f:	ff 00                	incl   (%rax)
    e031:	03 00                	add    (%rax),%eax
    e033:	00 3f                	add    %bh,(%rdi)
    e035:	31 ff                	xor    %edi,%edi
    e037:	ff 20                	jmpq   *(%rax)
    e039:	03 00                	add    (%rax),%eax
    e03b:	00 ac 31 ff ff 40 03 	add    %ch,0x340ffff(%rcx,%rsi,1)
    e042:	00 00                	add    %al,(%rax)
    e044:	17                   	(bad)  
    e045:	32 ff                	xor    %bh,%bh
    e047:	ff 60 03             	jmpq   *0x3(%rax)
    e04a:	00 00                	add    %al,(%rax)
    e04c:	0c 33                	or     $0x33,%al
    e04e:	ff                   	(bad)  
    e04f:	ff 84 03 00 00 b4 33 	incl   0x33b40000(%rbx,%rax,1)
    e056:	ff                   	(bad)  
    e057:	ff a8 03 00 00 f2    	ljmp   *-0xdfffffd(%rax)
    e05d:	33 ff                	xor    %edi,%edi
    e05f:	ff c8                	dec    %eax
    e061:	03 00                	add    (%rax),%eax
    e063:	00 59 34             	add    %bl,0x34(%rcx)
    e066:	ff                   	(bad)  
    e067:	ff                   	(bad)  
    e068:	ec                   	in     (%dx),%al
    e069:	03 00                	add    (%rax),%eax
    e06b:	00 e3                	add    %ah,%bl
    e06d:	34 ff                	xor    $0xff,%al
    e06f:	ff 10                	callq  *(%rax)
    e071:	04 00                	add    $0x0,%al
    e073:	00 70 35             	add    %dh,0x35(%rax)
    e076:	ff                   	(bad)  
    e077:	ff 34 04             	pushq  (%rsp,%rax,1)
    e07a:	00 00                	add    %al,(%rax)
    e07c:	f0 35 ff ff 58 04    	lock xor $0x458ffff,%eax
    e082:	00 00                	add    %al,(%rax)
    e084:	15 36 ff ff 78       	adc    $0x78ffff36,%eax
    e089:	04 00                	add    $0x0,%al
    e08b:	00 b8 36 ff ff 9c    	add    %bh,-0x630000ca(%rax)
    e091:	04 00                	add    $0x0,%al
    e093:	00 32                	add    %dh,(%rdx)
    e095:	37                   	(bad)  
    e096:	ff                   	(bad)  
    e097:	ff c0                	inc    %eax
    e099:	04 00                	add    $0x0,%al
    e09b:	00 69 37             	add    %ch,0x37(%rcx)
    e09e:	ff                   	(bad)  
    e09f:	ff e0                	jmpq   *%rax
    e0a1:	04 00                	add    $0x0,%al
    e0a3:	00 af 37 ff ff 00    	add    %ch,0xffff37(%rdi)
    e0a9:	05 00 00 74 38       	add    $0x38740000,%eax
    e0ae:	ff                   	(bad)  
    e0af:	ff 20                	jmpq   *(%rax)
    e0b1:	05 00 00 41 39       	add    $0x39410000,%eax
    e0b6:	ff                   	(bad)  
    e0b7:	ff 44 05 00          	incl   0x0(%rbp,%rax,1)
    e0bb:	00 66 39             	add    %ah,0x39(%rsi)
    e0be:	ff                   	(bad)  
    e0bf:	ff 64 05 00          	jmpq   *0x0(%rbp,%rax,1)
    e0c3:	00 ce                	add    %cl,%dh
    e0c5:	39 ff                	cmp    %edi,%edi
    e0c7:	ff 88 05 00 00 81    	decl   -0x7efffffb(%rax)
    e0cd:	3a ff                	cmp    %bh,%bh
    e0cf:	ff ac 05 00 00 1a 3b 	ljmp   *0x3b1a0000(%rbp,%rax,1)
    e0d6:	ff                   	(bad)  
    e0d7:	ff cc                	dec    %esp
    e0d9:	05 00 00 b3 3b       	add    $0x3bb30000,%eax
    e0de:	ff                   	(bad)  
    e0df:	ff                   	(bad)  
    e0e0:	ec                   	in     (%dx),%al
    e0e1:	05 00 00 f5 3c       	add    $0x3cf50000,%eax
    e0e6:	ff                   	(bad)  
    e0e7:	ff 10                	callq  *(%rax)
    e0e9:	06                   	(bad)  
    e0ea:	00 00                	add    %al,(%rax)
    e0ec:	37                   	(bad)  
    e0ed:	3e ff                	ds (bad) 
    e0ef:	ff 34 06             	pushq  (%rsi,%rax,1)
    e0f2:	00 00                	add    %al,(%rax)
    e0f4:	27                   	(bad)  
    e0f5:	3f                   	(bad)  
    e0f6:	ff                   	(bad)  
    e0f7:	ff 58 06             	lcall  *0x6(%rax)
    e0fa:	00 00                	add    %al,(%rax)
    e0fc:	e3 3f                	jrcxz  e13d <__GNU_EH_FRAME_HDR+0x15d>
    e0fe:	ff                   	(bad)  
    e0ff:	ff                   	(bad)  
    e100:	7c 06                	jl     e108 <__GNU_EH_FRAME_HDR+0x128>
    e102:	00 00                	add    %al,(%rax)
    e104:	dd 40 ff             	fldl   -0x1(%rax)
    e107:	ff a0 06 00 00 f8    	jmpq   *-0x7fffffa(%rax)
    e10d:	40 ff                	rex (bad) 
    e10f:	ff c0                	inc    %eax
    e111:	06                   	(bad)  
    e112:	00 00                	add    %al,(%rax)
    e114:	1a 41 ff             	sbb    -0x1(%rcx),%al
    e117:	ff e0                	jmpq   *%rax
    e119:	06                   	(bad)  
    e11a:	00 00                	add    %al,(%rax)
    e11c:	26 43 ff             	es rex.XB (bad) 
    e11f:	ff 04 07             	incl   (%rdi,%rax,1)
    e122:	00 00                	add    %al,(%rax)
    e124:	43                   	rex.XB
    e125:	45 ff                	rex.RB (bad) 
    e127:	ff 28                	ljmp   *(%rax)
    e129:	07                   	(bad)  
    e12a:	00 00                	add    %al,(%rax)
    e12c:	e6 46                	out    %al,$0x46
    e12e:	ff                   	(bad)  
    e12f:	ff 48 07             	decl   0x7(%rax)
    e132:	00 00                	add    %al,(%rax)
    e134:	89 48 ff             	mov    %ecx,-0x1(%rax)
    e137:	ff 68 07             	ljmp   *0x7(%rax)
    e13a:	00 00                	add    %al,(%rax)
    e13c:	96                   	xchg   %eax,%esi
    e13d:	49 ff                	rex.WB (bad) 
    e13f:	ff 8c 07 00 00 e0 4a 	decl   0x4ae00000(%rdi,%rax,1)
    e146:	ff                   	(bad)  
    e147:	ff b0 07 00 00 21    	pushq  0x21000007(%rax)
    e14d:	4b ff                	rex.WXB (bad) 
    e14f:	ff d0                	callq  *%rax
    e151:	07                   	(bad)  
    e152:	00 00                	add    %al,(%rax)
    e154:	f8                   	clc    
    e155:	4e ff                	rex.WRX (bad) 
    e157:	ff f4                	push   %rsp
    e159:	07                   	(bad)  
    e15a:	00 00                	add    %al,(%rax)
    e15c:	89 53 ff             	mov    %edx,-0x1(%rbx)
    e15f:	ff 18                	lcall  *(%rax)
    e161:	08 00                	or     %al,(%rax)
    e163:	00 f8                	add    %bh,%al
    e165:	53                   	push   %rbx
    e166:	ff                   	(bad)  
    e167:	ff                   	(bad)  
    e168:	38 08                	cmp    %cl,(%rax)
    e16a:	00 00                	add    %al,(%rax)
    e16c:	9d                   	popfq  
    e16d:	c4                   	(bad)  
    e16e:	ff                   	(bad)  
    e16f:	ff 5c 08 00          	lcall  *0x0(%rax,%rcx,1)
    e173:	00 61 f1             	add    %ah,-0xf(%rcx)
    e176:	ff                   	(bad)  
    e177:	ff 80 08 00 00 d5    	incl   -0x2afffff8(%rax)
    e17d:	f1                   	icebp  
    e17e:	ff                   	(bad)  
    e17f:	ff a0 08 00 00 ff    	jmpq   *-0xfffff8(%rax)
    e185:	f1                   	icebp  
    e186:	ff                   	(bad)  
    e187:	ff c0                	inc    %eax
    e189:	08 00                	or     %al,(%rax)
    e18b:	00 0a                	add    %cl,(%rdx)
    e18d:	f2 ff                	repnz (bad) 
    e18f:	ff e0                	jmpq   *%rax
    e191:	08 00                	or     %al,(%rax)
    e193:	00 19                	add    %bl,(%rcx)
    e195:	f3 ff                	repz (bad) 
    e197:	ff 00                	incl   (%rax)
    e199:	09 00                	or     %eax,(%rax)
    e19b:	00 06                	add    %al,(%rsi)
    e19d:	f4                   	hlt    
    e19e:	ff                   	(bad)  
    e19f:	ff 20                	jmpq   *(%rax)
    e1a1:	09 00                	or     %eax,(%rax)
    e1a3:	00 60 f4             	add    %ah,-0xc(%rax)
    e1a6:	ff                   	(bad)  
    e1a7:	ff 40 09             	incl   0x9(%rax)
    e1aa:	00 00                	add    %al,(%rax)
    e1ac:	d0 f4                	shl    %ah
    e1ae:	ff                   	(bad)  
    e1af:	ff                   	.byte 0xff
    e1b0:	88 09                	mov    %cl,(%rcx)
	...

Disassembly of section .eh_frame:

000000000000e1b8 <__FRAME_END__-0x7c4>:
    e1b8:	14 00                	adc    $0x0,%al
    e1ba:	00 00                	add    %al,(%rax)
    e1bc:	00 00                	add    %al,(%rax)
    e1be:	00 00                	add    %al,(%rax)
    e1c0:	01 7a 52             	add    %edi,0x52(%rdx)
    e1c3:	00 01                	add    %al,(%rcx)
    e1c5:	78 10                	js     e1d7 <__GNU_EH_FRAME_HDR+0x1f7>
    e1c7:	01 1b                	add    %ebx,(%rbx)
    e1c9:	0c 07                	or     $0x7,%al
    e1cb:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    e1d1:	00 00                	add    %al,(%rax)
    e1d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e1d6:	00 00                	add    %al,(%rax)
    e1d8:	48 2b ff             	sub    %rdi,%rdi
    e1db:	ff 2b                	ljmp   *(%rbx)
	...
    e1e5:	00 00                	add    %al,(%rax)
    e1e7:	00 14 00             	add    %dl,(%rax,%rax,1)
    e1ea:	00 00                	add    %al,(%rax)
    e1ec:	00 00                	add    %al,(%rax)
    e1ee:	00 00                	add    %al,(%rax)
    e1f0:	01 7a 52             	add    %edi,0x52(%rdx)
    e1f3:	00 01                	add    %al,(%rcx)
    e1f5:	78 10                	js     e207 <__GNU_EH_FRAME_HDR+0x227>
    e1f7:	01 1b                	add    %ebx,(%rbx)
    e1f9:	0c 07                	or     $0x7,%al
    e1fb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    e201:	00 00                	add    %al,(%rax)
    e203:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e206:	00 00                	add    %al,(%rax)
    e208:	68 29 ff ff a0       	pushq  $0xffffffffa0ffff29
    e20d:	01 00                	add    %eax,(%rax)
    e20f:	00 00                	add    %al,(%rax)
    e211:	0e                   	(bad)  
    e212:	10 46 0e             	adc    %al,0xe(%rsi)
    e215:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    e218:	0b 77 08             	or     0x8(%rdi),%esi
    e21b:	80 00 3f             	addb   $0x3f,(%rax)
    e21e:	1a 3b                	sbb    (%rbx),%bh
    e220:	2a 33                	sub    (%rbx),%dh
    e222:	24 22                	and    $0x22,%al
    e224:	00 00                	add    %al,(%rax)
    e226:	00 00                	add    %al,(%rax)
    e228:	14 00                	adc    $0x0,%al
    e22a:	00 00                	add    %al,(%rax)
    e22c:	44 00 00             	add    %r8b,(%rax)
    e22f:	00 e0                	add    %ah,%al
    e231:	2a ff                	sub    %bh,%bh
    e233:	ff 08                	decl   (%rax)
	...
    e23d:	00 00                	add    %al,(%rax)
    e23f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e242:	00 00                	add    %al,(%rax)
    e244:	5c                   	pop    %rsp
    e245:	00 00                	add    %al,(%rax)
    e247:	00 e2                	add    %ah,%dl
    e249:	2b ff                	sub    %edi,%edi
    e24b:	ff 43 00             	incl   0x0(%rbx)
    e24e:	00 00                	add    %al,(%rax)
    e250:	00 41 0e             	add    %al,0xe(%rcx)
    e253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e259:	7e 0c                	jle    e267 <__GNU_EH_FRAME_HDR+0x287>
    e25b:	07                   	(bad)  
    e25c:	08 00                	or     %al,(%rax)
    e25e:	00 00                	add    %al,(%rax)
    e260:	1c 00                	sbb    $0x0,%al
    e262:	00 00                	add    %al,(%rax)
    e264:	7c 00                	jl     e266 <__GNU_EH_FRAME_HDR+0x286>
    e266:	00 00                	add    %al,(%rax)
    e268:	05 2c ff ff 2a       	add    $0x2affff2c,%eax
    e26d:	00 00                	add    %al,(%rax)
    e26f:	00 00                	add    %al,(%rax)
    e271:	41 0e                	rex.B (bad) 
    e273:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e279:	65 0c 07             	gs or  $0x7,%al
    e27c:	08 00                	or     %al,(%rax)
    e27e:	00 00                	add    %al,(%rax)
    e280:	1c 00                	sbb    $0x0,%al
    e282:	00 00                	add    %al,(%rax)
    e284:	9c                   	pushfq 
    e285:	00 00                	add    %al,(%rax)
    e287:	00 0f                	add    %cl,(%rdi)
    e289:	2c ff                	sub    $0xff,%al
    e28b:	ff 61 00             	jmpq   *0x0(%rcx)
    e28e:	00 00                	add    %al,(%rax)
    e290:	00 41 0e             	add    %al,0xe(%rcx)
    e293:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e299:	02 5c 0c 07          	add    0x7(%rsp,%rcx,1),%bl
    e29d:	08 00                	or     %al,(%rax)
    e29f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e2a2:	00 00                	add    %al,(%rax)
    e2a4:	bc 00 00 00 50       	mov    $0x50000000,%esp
    e2a9:	2c ff                	sub    $0xff,%al
    e2ab:	ff 05 01 00 00 00    	incl   0x1(%rip)        # e2b2 <__GNU_EH_FRAME_HDR+0x2d2>
    e2b1:	41 0e                	rex.B (bad) 
    e2b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e2b9:	03 00                	add    (%rax),%eax
    e2bb:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    e2be:	08 00                	or     %al,(%rax)
    e2c0:	1c 00                	sbb    $0x0,%al
    e2c2:	00 00                	add    %al,(%rax)
    e2c4:	dc 00                	faddl  (%rax)
    e2c6:	00 00                	add    %al,(%rax)
    e2c8:	35 2d ff ff ba       	xor    $0xbaffff2d,%eax
    e2cd:	00 00                	add    %al,(%rax)
    e2cf:	00 00                	add    %al,(%rax)
    e2d1:	41 0e                	rex.B (bad) 
    e2d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e2d9:	02 b5 0c 07 08 00    	add    0x8070c(%rbp),%dh
    e2df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e2e2:	00 00                	add    %al,(%rax)
    e2e4:	fc                   	cld    
    e2e5:	00 00                	add    %al,(%rax)
    e2e7:	00 cf                	add    %cl,%bh
    e2e9:	2d ff ff 68 00       	sub    $0x68ffff,%eax
    e2ee:	00 00                	add    %al,(%rax)
    e2f0:	00 41 0e             	add    %al,0xe(%rcx)
    e2f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e2f9:	02 63 0c             	add    0xc(%rbx),%ah
    e2fc:	07                   	(bad)  
    e2fd:	08 00                	or     %al,(%rax)
    e2ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e302:	00 00                	add    %al,(%rax)
    e304:	1c 01                	sbb    $0x1,%al
    e306:	00 00                	add    %al,(%rax)
    e308:	17                   	(bad)  
    e309:	2e ff                	cs (bad) 
    e30b:	ff 6d 00             	ljmp   *0x0(%rbp)
    e30e:	00 00                	add    %al,(%rax)
    e310:	00 41 0e             	add    %al,0xe(%rcx)
    e313:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e319:	02 68 0c             	add    0xc(%rax),%ch
    e31c:	07                   	(bad)  
    e31d:	08 00                	or     %al,(%rax)
    e31f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e322:	00 00                	add    %al,(%rax)
    e324:	3c 01                	cmp    $0x1,%al
    e326:	00 00                	add    %al,(%rax)
    e328:	64 2e ff             	fs cs (bad) 
    e32b:	ff 6b 00             	ljmp   *0x0(%rbx)
    e32e:	00 00                	add    %al,(%rax)
    e330:	00 41 0e             	add    %al,0xe(%rcx)
    e333:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e339:	02 66 0c             	add    0xc(%rsi),%ah
    e33c:	07                   	(bad)  
    e33d:	08 00                	or     %al,(%rax)
    e33f:	00 20                	add    %ah,(%rax)
    e341:	00 00                	add    %al,(%rax)
    e343:	00 5c 01 00          	add    %bl,0x0(%rcx,%rax,1)
    e347:	00 af 2e ff ff f5    	add    %ch,-0xa0000d2(%rdi)
    e34d:	00 00                	add    %al,(%rax)
    e34f:	00 00                	add    %al,(%rax)
    e351:	41 0e                	rex.B (bad) 
    e353:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e359:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e35d:	eb 0c                	jmp    e36b <__GNU_EH_FRAME_HDR+0x38b>
    e35f:	07                   	(bad)  
    e360:	08 00                	or     %al,(%rax)
    e362:	00 00                	add    %al,(%rax)
    e364:	20 00                	and    %al,(%rax)
    e366:	00 00                	add    %al,(%rax)
    e368:	80 01 00             	addb   $0x0,(%rcx)
    e36b:	00 80 2f ff ff a8    	add    %al,-0x570000d1(%rax)
    e371:	00 00                	add    %al,(%rax)
    e373:	00 00                	add    %al,(%rax)
    e375:	41 0e                	rex.B (bad) 
    e377:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e37d:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e381:	9e                   	sahf   
    e382:	0c 07                	or     $0x7,%al
    e384:	08 00                	or     %al,(%rax)
    e386:	00 00                	add    %al,(%rax)
    e388:	1c 00                	sbb    $0x0,%al
    e38a:	00 00                	add    %al,(%rax)
    e38c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    e38d:	01 00                	add    %eax,(%rax)
    e38f:	00 04 30             	add    %al,(%rax,%rsi,1)
    e392:	ff                   	(bad)  
    e393:	ff                   	(bad)  
    e394:	3e 00 00             	add    %al,%ds:(%rax)
    e397:	00 00                	add    %al,(%rax)
    e399:	41 0e                	rex.B (bad) 
    e39b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e3a1:	79 0c                	jns    e3af <__GNU_EH_FRAME_HDR+0x3cf>
    e3a3:	07                   	(bad)  
    e3a4:	08 00                	or     %al,(%rax)
    e3a6:	00 00                	add    %al,(%rax)
    e3a8:	20 00                	and    %al,(%rax)
    e3aa:	00 00                	add    %al,(%rax)
    e3ac:	c4 01 00 00          	(bad)  
    e3b0:	22 30                	and    (%rax),%dh
    e3b2:	ff                   	(bad)  
    e3b3:	ff 67 00             	jmpq   *0x0(%rdi)
    e3b6:	00 00                	add    %al,(%rax)
    e3b8:	00 41 0e             	add    %al,0xe(%rcx)
    e3bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e3c1:	41 83 03 02          	addl   $0x2,(%r11)
    e3c5:	61                   	(bad)  
    e3c6:	0c 07                	or     $0x7,%al
    e3c8:	08 00                	or     %al,(%rax)
    e3ca:	00 00                	add    %al,(%rax)
    e3cc:	20 00                	and    %al,(%rax)
    e3ce:	00 00                	add    %al,(%rax)
    e3d0:	e8 01 00 00 65       	callq  6500e3d6 <_end+0x649fd036>
    e3d5:	30 ff                	xor    %bh,%bh
    e3d7:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
    e3dd:	41 0e                	rex.B (bad) 
    e3df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e3e5:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e3e9:	80 0c 07 08          	orb    $0x8,(%rdi,%rax,1)
    e3ed:	00 00                	add    %al,(%rax)
    e3ef:	00 20                	add    %ah,(%rax)
    e3f1:	00 00                	add    %al,(%rax)
    e3f3:	00 0c 02             	add    %cl,(%rdx,%rax,1)
    e3f6:	00 00                	add    %al,(%rax)
    e3f8:	cb                   	lret   
    e3f9:	30 ff                	xor    %bh,%bh
    e3fb:	ff 8d 00 00 00 00    	decl   0x0(%rbp)
    e401:	41 0e                	rex.B (bad) 
    e403:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e409:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e40d:	83 0c 07 08          	orl    $0x8,(%rdi,%rax,1)
    e411:	00 00                	add    %al,(%rax)
    e413:	00 20                	add    %ah,(%rax)
    e415:	00 00                	add    %al,(%rax)
    e417:	00 30                	add    %dh,(%rax)
    e419:	02 00                	add    (%rax),%al
    e41b:	00 34 31             	add    %dh,(%rcx,%rsi,1)
    e41e:	ff                   	(bad)  
    e41f:	ff 80 00 00 00 00    	incl   0x0(%rax)
    e425:	41 0e                	rex.B (bad) 
    e427:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e42d:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e431:	76 0c                	jbe    e43f <__GNU_EH_FRAME_HDR+0x45f>
    e433:	07                   	(bad)  
    e434:	08 00                	or     %al,(%rax)
    e436:	00 00                	add    %al,(%rax)
    e438:	1c 00                	sbb    $0x0,%al
    e43a:	00 00                	add    %al,(%rax)
    e43c:	54                   	push   %rsp
    e43d:	02 00                	add    (%rax),%al
    e43f:	00 90 31 ff ff 25    	add    %dl,0x25ffff31(%rax)
    e445:	00 00                	add    %al,(%rax)
    e447:	00 00                	add    %al,(%rax)
    e449:	41 0e                	rex.B (bad) 
    e44b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e451:	60                   	(bad)  
    e452:	0c 07                	or     $0x7,%al
    e454:	08 00                	or     %al,(%rax)
    e456:	00 00                	add    %al,(%rax)
    e458:	20 00                	and    %al,(%rax)
    e45a:	00 00                	add    %al,(%rax)
    e45c:	74 02                	je     e460 <__GNU_EH_FRAME_HDR+0x480>
    e45e:	00 00                	add    %al,(%rax)
    e460:	95                   	xchg   %eax,%ebp
    e461:	31 ff                	xor    %edi,%edi
    e463:	ff a3 00 00 00 00    	jmpq   *0x0(%rbx)
    e469:	41 0e                	rex.B (bad) 
    e46b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e471:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e475:	99                   	cltd   
    e476:	0c 07                	or     $0x7,%al
    e478:	08 00                	or     %al,(%rax)
    e47a:	00 00                	add    %al,(%rax)
    e47c:	20 00                	and    %al,(%rax)
    e47e:	00 00                	add    %al,(%rax)
    e480:	98                   	cwtl   
    e481:	02 00                	add    (%rax),%al
    e483:	00 14 32             	add    %dl,(%rdx,%rsi,1)
    e486:	ff                   	(bad)  
    e487:	ff                   	(bad)  
    e488:	7a 00                	jp     e48a <__GNU_EH_FRAME_HDR+0x4aa>
    e48a:	00 00                	add    %al,(%rax)
    e48c:	00 41 0e             	add    %al,0xe(%rcx)
    e48f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e495:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e499:	70 0c                	jo     e4a7 <__GNU_EH_FRAME_HDR+0x4c7>
    e49b:	07                   	(bad)  
    e49c:	08 00                	or     %al,(%rax)
    e49e:	00 00                	add    %al,(%rax)
    e4a0:	1c 00                	sbb    $0x0,%al
    e4a2:	00 00                	add    %al,(%rax)
    e4a4:	bc 02 00 00 6a       	mov    $0x6a000002,%esp
    e4a9:	32 ff                	xor    %bh,%bh
    e4ab:	ff 37                	pushq  (%rdi)
    e4ad:	00 00                	add    %al,(%rax)
    e4af:	00 00                	add    %al,(%rax)
    e4b1:	41 0e                	rex.B (bad) 
    e4b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e4b9:	72 0c                	jb     e4c7 <__GNU_EH_FRAME_HDR+0x4e7>
    e4bb:	07                   	(bad)  
    e4bc:	08 00                	or     %al,(%rax)
    e4be:	00 00                	add    %al,(%rax)
    e4c0:	1c 00                	sbb    $0x0,%al
    e4c2:	00 00                	add    %al,(%rax)
    e4c4:	dc 02                	faddl  (%rdx)
    e4c6:	00 00                	add    %al,(%rax)
    e4c8:	81 32 ff ff 46 00    	xorl   $0x46ffff,(%rdx)
    e4ce:	00 00                	add    %al,(%rax)
    e4d0:	00 41 0e             	add    %al,0xe(%rcx)
    e4d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e4d9:	02 41 0c             	add    0xc(%rcx),%al
    e4dc:	07                   	(bad)  
    e4dd:	08 00                	or     %al,(%rax)
    e4df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e4e2:	00 00                	add    %al,(%rax)
    e4e4:	fc                   	cld    
    e4e5:	02 00                	add    (%rax),%al
    e4e7:	00 a7 32 ff ff c5    	add    %ah,-0x3a0000ce(%rdi)
    e4ed:	00 00                	add    %al,(%rax)
    e4ef:	00 00                	add    %al,(%rax)
    e4f1:	41 0e                	rex.B (bad) 
    e4f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e4f9:	02 c0                	add    %al,%al
    e4fb:	0c 07                	or     $0x7,%al
    e4fd:	08 00                	or     %al,(%rax)
    e4ff:	00 20                	add    %ah,(%rax)
    e501:	00 00                	add    %al,(%rax)
    e503:	00 1c 03             	add    %bl,(%rbx,%rax,1)
    e506:	00 00                	add    %al,(%rax)
    e508:	4c 33 ff             	xor    %rdi,%r15
    e50b:	ff cd                	dec    %ebp
    e50d:	00 00                	add    %al,(%rax)
    e50f:	00 00                	add    %al,(%rax)
    e511:	41 0e                	rex.B (bad) 
    e513:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e519:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e51d:	c3                   	retq   
    e51e:	0c 07                	or     $0x7,%al
    e520:	08 00                	or     %al,(%rax)
    e522:	00 00                	add    %al,(%rax)
    e524:	1c 00                	sbb    $0x0,%al
    e526:	00 00                	add    %al,(%rax)
    e528:	40 03 00             	rex add (%rax),%eax
    e52b:	00 f5                	add    %dh,%ch
    e52d:	33 ff                	xor    %edi,%edi
    e52f:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # e535 <__GNU_EH_FRAME_HDR+0x555>
    e535:	41 0e                	rex.B (bad) 
    e537:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e53d:	60                   	(bad)  
    e53e:	0c 07                	or     $0x7,%al
    e540:	08 00                	or     %al,(%rax)
    e542:	00 00                	add    %al,(%rax)
    e544:	20 00                	and    %al,(%rax)
    e546:	00 00                	add    %al,(%rax)
    e548:	60                   	(bad)  
    e549:	03 00                	add    (%rax),%eax
    e54b:	00 fa                	add    %bh,%dl
    e54d:	33 ff                	xor    %edi,%edi
    e54f:	ff 68 00             	ljmp   *0x0(%rax)
    e552:	00 00                	add    %al,(%rax)
    e554:	00 41 0e             	add    %al,0xe(%rcx)
    e557:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e55d:	41 83 03 02          	addl   $0x2,(%r11)
    e561:	62                   	(bad)  
    e562:	0c 07                	or     $0x7,%al
    e564:	08 00                	or     %al,(%rax)
    e566:	00 00                	add    %al,(%rax)
    e568:	20 00                	and    %al,(%rax)
    e56a:	00 00                	add    %al,(%rax)
    e56c:	84 03                	test   %al,(%rbx)
    e56e:	00 00                	add    %al,(%rax)
    e570:	3e 34 ff             	ds xor $0xff,%al
    e573:	ff b3 00 00 00 00    	pushq  0x0(%rbx)
    e579:	41 0e                	rex.B (bad) 
    e57b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e581:	41 83 03 02          	addl   $0x2,(%r11)
    e585:	ad                   	lods   %ds:(%rsi),%eax
    e586:	0c 07                	or     $0x7,%al
    e588:	08 00                	or     %al,(%rax)
    e58a:	00 00                	add    %al,(%rax)
    e58c:	1c 00                	sbb    $0x0,%al
    e58e:	00 00                	add    %al,(%rax)
    e590:	a8 03                	test   $0x3,%al
    e592:	00 00                	add    %al,(%rax)
    e594:	cd 34                	int    $0x34
    e596:	ff                   	(bad)  
    e597:	ff 99 00 00 00 00    	lcall  *0x0(%rcx)
    e59d:	41 0e                	rex.B (bad) 
    e59f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e5a5:	02 94 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%dl
    e5ac:	1c 00                	sbb    $0x0,%al
    e5ae:	00 00                	add    %al,(%rax)
    e5b0:	c8 03 00 00          	enterq $0x3,$0x0
    e5b4:	46 35 ff ff 99 00    	rex.RX xor $0x99ffff,%eax
    e5ba:	00 00                	add    %al,(%rax)
    e5bc:	00 41 0e             	add    %al,0xe(%rcx)
    e5bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e5c5:	02 94 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%dl
    e5cc:	20 00                	and    %al,(%rax)
    e5ce:	00 00                	add    %al,(%rax)
    e5d0:	e8 03 00 00 bf       	callq  ffffffffbf00e5d8 <_end+0xffffffffbe9fd238>
    e5d5:	35 ff ff 42 01       	xor    $0x142ffff,%eax
    e5da:	00 00                	add    %al,(%rax)
    e5dc:	00 41 0e             	add    %al,0xe(%rcx)
    e5df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e5e5:	41 83 03 03          	addl   $0x3,(%r11)
    e5e9:	3c 01                	cmp    $0x1,%al
    e5eb:	0c 07                	or     $0x7,%al
    e5ed:	08 00                	or     %al,(%rax)
    e5ef:	00 20                	add    %ah,(%rax)
    e5f1:	00 00                	add    %al,(%rax)
    e5f3:	00 0c 04             	add    %cl,(%rsp,%rax,1)
    e5f6:	00 00                	add    %al,(%rax)
    e5f8:	dd 36                	fnsave (%rsi)
    e5fa:	ff                   	(bad)  
    e5fb:	ff 42 01             	incl   0x1(%rdx)
    e5fe:	00 00                	add    %al,(%rax)
    e600:	00 41 0e             	add    %al,0xe(%rcx)
    e603:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e609:	41 83 03 03          	addl   $0x3,(%r11)
    e60d:	3c 01                	cmp    $0x1,%al
    e60f:	0c 07                	or     $0x7,%al
    e611:	08 00                	or     %al,(%rax)
    e613:	00 20                	add    %ah,(%rax)
    e615:	00 00                	add    %al,(%rax)
    e617:	00 30                	add    %dh,(%rax)
    e619:	04 00                	add    $0x0,%al
    e61b:	00 fb                	add    %bh,%bl
    e61d:	37                   	(bad)  
    e61e:	ff                   	(bad)  
    e61f:	ff f0                	push   %rax
    e621:	00 00                	add    %al,(%rax)
    e623:	00 00                	add    %al,(%rax)
    e625:	41 0e                	rex.B (bad) 
    e627:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e62d:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e631:	e6 0c                	out    %al,$0xc
    e633:	07                   	(bad)  
    e634:	08 00                	or     %al,(%rax)
    e636:	00 00                	add    %al,(%rax)
    e638:	20 00                	and    %al,(%rax)
    e63a:	00 00                	add    %al,(%rax)
    e63c:	54                   	push   %rsp
    e63d:	04 00                	add    $0x0,%al
    e63f:	00 c7                	add    %al,%bh
    e641:	38 ff                	cmp    %bh,%bh
    e643:	ff                   	(bad)  
    e644:	bc 00 00 00 00       	mov    $0x0,%esp
    e649:	41 0e                	rex.B (bad) 
    e64b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e651:	41 83 03 02          	addl   $0x2,(%r11)
    e655:	b6 0c                	mov    $0xc,%dh
    e657:	07                   	(bad)  
    e658:	08 00                	or     %al,(%rax)
    e65a:	00 00                	add    %al,(%rax)
    e65c:	20 00                	and    %al,(%rax)
    e65e:	00 00                	add    %al,(%rax)
    e660:	78 04                	js     e666 <__GNU_EH_FRAME_HDR+0x686>
    e662:	00 00                	add    %al,(%rax)
    e664:	5f                   	pop    %rdi
    e665:	39 ff                	cmp    %edi,%edi
    e667:	ff                   	(bad)  
    e668:	fa                   	cli    
    e669:	00 00                	add    %al,(%rax)
    e66b:	00 00                	add    %al,(%rax)
    e66d:	41 0e                	rex.B (bad) 
    e66f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e675:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    e679:	f0 0c 07             	lock or $0x7,%al
    e67c:	08 00                	or     %al,(%rax)
    e67e:	00 00                	add    %al,(%rax)
    e680:	1c 00                	sbb    $0x0,%al
    e682:	00 00                	add    %al,(%rax)
    e684:	9c                   	pushfq 
    e685:	04 00                	add    $0x0,%al
    e687:	00 35 3a ff ff 1b    	add    %dh,0x1bffff3a(%rip)        # 1c00e5c7 <_end+0x1b9fd227>
    e68d:	00 00                	add    %al,(%rax)
    e68f:	00 00                	add    %al,(%rax)
    e691:	41 0e                	rex.B (bad) 
    e693:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e699:	56                   	push   %rsi
    e69a:	0c 07                	or     $0x7,%al
    e69c:	08 00                	or     %al,(%rax)
    e69e:	00 00                	add    %al,(%rax)
    e6a0:	1c 00                	sbb    $0x0,%al
    e6a2:	00 00                	add    %al,(%rax)
    e6a4:	bc 04 00 00 30       	mov    $0x30000004,%esp
    e6a9:	3a ff                	cmp    %bh,%bh
    e6ab:	ff 22                	jmpq   *(%rdx)
    e6ad:	00 00                	add    %al,(%rax)
    e6af:	00 00                	add    %al,(%rax)
    e6b1:	41 0e                	rex.B (bad) 
    e6b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e6b9:	5d                   	pop    %rbp
    e6ba:	0c 07                	or     $0x7,%al
    e6bc:	08 00                	or     %al,(%rax)
    e6be:	00 00                	add    %al,(%rax)
    e6c0:	20 00                	and    %al,(%rax)
    e6c2:	00 00                	add    %al,(%rax)
    e6c4:	dc 04 00             	faddl  (%rax,%rax,1)
    e6c7:	00 32                	add    %dh,(%rdx)
    e6c9:	3a ff                	cmp    %bh,%bh
    e6cb:	ff 0c 02             	decl   (%rdx,%rax,1)
    e6ce:	00 00                	add    %al,(%rax)
    e6d0:	00 41 0e             	add    %al,0xe(%rcx)
    e6d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e6d9:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e6dd:	02 02                	add    (%rdx),%al
    e6df:	0c 07                	or     $0x7,%al
    e6e1:	08 00                	or     %al,(%rax)
    e6e3:	00 20                	add    %ah,(%rax)
    e6e5:	00 00                	add    %al,(%rax)
    e6e7:	00 00                	add    %al,(%rax)
    e6e9:	05 00 00 1a 3c       	add    $0x3c1a0000,%eax
    e6ee:	ff                   	(bad)  
    e6ef:	ff 1d 02 00 00 00    	lcall  *0x2(%rip)        # e6f7 <__GNU_EH_FRAME_HDR+0x717>
    e6f5:	41 0e                	rex.B (bad) 
    e6f7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e6fd:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e701:	13 02                	adc    (%rdx),%eax
    e703:	0c 07                	or     $0x7,%al
    e705:	08 00                	or     %al,(%rax)
    e707:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e70a:	00 00                	add    %al,(%rax)
    e70c:	24 05                	and    $0x5,%al
    e70e:	00 00                	add    %al,(%rax)
    e710:	13 3e                	adc    (%rsi),%edi
    e712:	ff                   	(bad)  
    e713:	ff a3 01 00 00 00    	jmpq   *0x1(%rbx)
    e719:	41 0e                	rex.B (bad) 
    e71b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e721:	03 9e 01 0c 07 08    	add    0x8070c01(%rsi),%ebx
    e727:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e72a:	00 00                	add    %al,(%rax)
    e72c:	44 05 00 00 96 3f    	rex.R add $0x3f960000,%eax
    e732:	ff                   	(bad)  
    e733:	ff a3 01 00 00 00    	jmpq   *0x1(%rbx)
    e739:	41 0e                	rex.B (bad) 
    e73b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e741:	03 9e 01 0c 07 08    	add    0x8070c01(%rsi),%ebx
    e747:	00 20                	add    %ah,(%rax)
    e749:	00 00                	add    %al,(%rax)
    e74b:	00 64 05 00          	add    %ah,0x0(%rbp,%rax,1)
    e74f:	00 19                	add    %bl,(%rcx)
    e751:	41 ff                	rex.B (bad) 
    e753:	ff 0d 01 00 00 00    	decl   0x1(%rip)        # e75a <__GNU_EH_FRAME_HDR+0x77a>
    e759:	41 0e                	rex.B (bad) 
    e75b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e761:	41 83 03 03          	addl   $0x3,(%r11)
    e765:	07                   	(bad)  
    e766:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    e769:	08 00                	or     %al,(%rax)
    e76b:	00 20                	add    %ah,(%rax)
    e76d:	00 00                	add    %al,(%rax)
    e76f:	00 88 05 00 00 02    	add    %cl,0x2000005(%rax)
    e775:	42 ff                	rex.X (bad) 
    e777:	ff 4a 01             	decl   0x1(%rdx)
    e77a:	00 00                	add    %al,(%rax)
    e77c:	00 41 0e             	add    %al,0xe(%rcx)
    e77f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e785:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e789:	40 01 0c 07          	rex add %ecx,(%rdi,%rax,1)
    e78d:	08 00                	or     %al,(%rax)
    e78f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e792:	00 00                	add    %al,(%rax)
    e794:	ac                   	lods   %ds:(%rsi),%al
    e795:	05 00 00 28 43       	add    $0x43280000,%eax
    e79a:	ff                   	(bad)  
    e79b:	ff 41 00             	incl   0x0(%rcx)
    e79e:	00 00                	add    %al,(%rax)
    e7a0:	00 41 0e             	add    %al,0xe(%rcx)
    e7a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e7a9:	7c 0c                	jl     e7b7 <__GNU_EH_FRAME_HDR+0x7d7>
    e7ab:	07                   	(bad)  
    e7ac:	08 00                	or     %al,(%rax)
    e7ae:	00 00                	add    %al,(%rax)
    e7b0:	20 00                	and    %al,(%rax)
    e7b2:	00 00                	add    %al,(%rax)
    e7b4:	cc                   	int3   
    e7b5:	05 00 00 49 43       	add    $0x43490000,%eax
    e7ba:	ff                   	(bad)  
    e7bb:	ff d7                	callq  *%rdi
    e7bd:	03 00                	add    (%rax),%eax
    e7bf:	00 00                	add    %al,(%rax)
    e7c1:	41 0e                	rex.B (bad) 
    e7c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e7c9:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e7cd:	cd 03                	int    $0x3
    e7cf:	0c 07                	or     $0x7,%al
    e7d1:	08 00                	or     %al,(%rax)
    e7d3:	00 20                	add    %ah,(%rax)
    e7d5:	00 00                	add    %al,(%rax)
    e7d7:	00 f0                	add    %dh,%al
    e7d9:	05 00 00 fc 46       	add    $0x46fc0000,%eax
    e7de:	ff                   	(bad)  
    e7df:	ff 91 04 00 00 00    	callq  *0x4(%rcx)
    e7e5:	41 0e                	rex.B (bad) 
    e7e7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e7ed:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e7f1:	87 04 0c             	xchg   %eax,(%rsp,%rcx,1)
    e7f4:	07                   	(bad)  
    e7f5:	08 00                	or     %al,(%rax)
    e7f7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e7fa:	00 00                	add    %al,(%rax)
    e7fc:	14 06                	adc    $0x6,%al
    e7fe:	00 00                	add    %al,(%rax)
    e800:	69 4b ff ff 6f 00 00 	imul   $0x6fff,-0x1(%rbx),%ecx
    e807:	00 00                	add    %al,(%rax)
    e809:	41 0e                	rex.B (bad) 
    e80b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e811:	02 6a 0c             	add    0xc(%rdx),%ch
    e814:	07                   	(bad)  
    e815:	08 00                	or     %al,(%rax)
    e817:	00 20                	add    %ah,(%rax)
    e819:	00 00                	add    %al,(%rax)
    e81b:	00 34 06             	add    %dh,(%rsi,%rax,1)
    e81e:	00 00                	add    %al,(%rax)
    e820:	b8 4b ff ff a5       	mov    $0xa5ffff4b,%eax
    e825:	70 00                	jo     e827 <__GNU_EH_FRAME_HDR+0x847>
    e827:	00 00                	add    %al,(%rax)
    e829:	41 0e                	rex.B (bad) 
    e82b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e831:	50                   	push   %rax
    e832:	8f 03                	popq   (%rbx)
    e834:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
    e83b:	07                   	(bad)  
    e83c:	20 00                	and    %al,(%rax)
    e83e:	00 00                	add    %al,(%rax)
    e840:	58                   	pop    %rax
    e841:	06                   	(bad)  
    e842:	00 00                	add    %al,(%rax)
    e844:	39 bc ff ff c4 2c 00 	cmp    %edi,0x2cc4ff(%rdi,%rdi,8)
    e84b:	00 00                	add    %al,(%rax)
    e84d:	41 0e                	rex.B (bad) 
    e84f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e855:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    e859:	ba 2c 0c 07 08       	mov    $0x8070c2c,%edx
    e85e:	00 00                	add    %al,(%rax)
    e860:	1c 00                	sbb    $0x0,%al
    e862:	00 00                	add    %al,(%rax)
    e864:	7c 06                	jl     e86c <__GNU_EH_FRAME_HDR+0x88c>
    e866:	00 00                	add    %al,(%rax)
    e868:	d9 e8                	fld1   
    e86a:	ff                   	(bad)  
    e86b:	ff 74 00 00          	pushq  0x0(%rax,%rax,1)
    e86f:	00 00                	add    %al,(%rax)
    e871:	41 0e                	rex.B (bad) 
    e873:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e879:	02 6f 0c             	add    0xc(%rdi),%ch
    e87c:	07                   	(bad)  
    e87d:	08 00                	or     %al,(%rax)
    e87f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e882:	00 00                	add    %al,(%rax)
    e884:	9c                   	pushfq 
    e885:	06                   	(bad)  
    e886:	00 00                	add    %al,(%rax)
    e888:	2d e9 ff ff 2a       	sub    $0x2affffe9,%eax
    e88d:	00 00                	add    %al,(%rax)
    e88f:	00 00                	add    %al,(%rax)
    e891:	41 0e                	rex.B (bad) 
    e893:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e899:	65 0c 07             	gs or  $0x7,%al
    e89c:	08 00                	or     %al,(%rax)
    e89e:	00 00                	add    %al,(%rax)
    e8a0:	1c 00                	sbb    $0x0,%al
    e8a2:	00 00                	add    %al,(%rax)
    e8a4:	bc 06 00 00 37       	mov    $0x37000006,%esp
    e8a9:	e9 ff ff 0b 00       	jmpq   ce8ad <__FRAME_END__+0xbff31>
    e8ae:	00 00                	add    %al,(%rax)
    e8b0:	00 41 0e             	add    %al,0xe(%rcx)
    e8b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e8b9:	46 0c 07             	rex.RX or $0x7,%al
    e8bc:	08 00                	or     %al,(%rax)
    e8be:	00 00                	add    %al,(%rax)
    e8c0:	1c 00                	sbb    $0x0,%al
    e8c2:	00 00                	add    %al,(%rax)
    e8c4:	dc 06                	faddl  (%rsi)
    e8c6:	00 00                	add    %al,(%rax)
    e8c8:	22 e9                	and    %cl,%ch
    e8ca:	ff                   	(bad)  
    e8cb:	ff 0f                	decl   (%rdi)
    e8cd:	01 00                	add    %eax,(%rax)
    e8cf:	00 00                	add    %al,(%rax)
    e8d1:	41 0e                	rex.B (bad) 
    e8d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e8d9:	03 0a                	add    (%rdx),%ecx
    e8db:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    e8de:	08 00                	or     %al,(%rax)
    e8e0:	1c 00                	sbb    $0x0,%al
    e8e2:	00 00                	add    %al,(%rax)
    e8e4:	fc                   	cld    
    e8e5:	06                   	(bad)  
    e8e6:	00 00                	add    %al,(%rax)
    e8e8:	11 ea                	adc    %ebp,%edx
    e8ea:	ff                   	(bad)  
    e8eb:	ff                   	(bad)  
    e8ec:	ed                   	in     (%dx),%eax
    e8ed:	00 00                	add    %al,(%rax)
    e8ef:	00 00                	add    %al,(%rax)
    e8f1:	41 0e                	rex.B (bad) 
    e8f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e8f9:	02 e8                	add    %al,%ch
    e8fb:	0c 07                	or     $0x7,%al
    e8fd:	08 00                	or     %al,(%rax)
    e8ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    e902:	00 00                	add    %al,(%rax)
    e904:	1c 07                	sbb    $0x7,%al
    e906:	00 00                	add    %al,(%rax)
    e908:	de ea                	fsubrp %st,%st(2)
    e90a:	ff                   	(bad)  
    e90b:	ff 56 00             	callq  *0x0(%rsi)
    e90e:	00 00                	add    %al,(%rax)
    e910:	00 41 0e             	add    %al,0xe(%rcx)
    e913:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    e919:	02 51 0c             	add    0xc(%rcx),%dl
    e91c:	07                   	(bad)  
    e91d:	08 00                	or     %al,(%rax)
    e91f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    e923:	00 3c 07             	add    %bh,(%rdi,%rax,1)
    e926:	00 00                	add    %al,(%rax)
    e928:	18 eb                	sbb    %ch,%bl
    e92a:	ff                   	(bad)  
    e92b:	ff 65 00             	jmpq   *0x0(%rbp)
    e92e:	00 00                	add    %al,(%rax)
    e930:	00 42 0e             	add    %al,0xe(%rdx)
    e933:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    e939:	8e 03                	mov    (%rbx),%es
    e93b:	45 0e                	rex.RB (bad) 
    e93d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    e943:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff8630f791 <_end+0xffffffff85cfe3f1>
    e949:	06                   	(bad)  
    e94a:	48 0e                	rex.W (bad) 
    e94c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
    e952:	72 0e                	jb     e962 <__GNU_EH_FRAME_HDR+0x982>
    e954:	38 41 0e             	cmp    %al,0xe(%rcx)
    e957:	30 41 0e             	xor    %al,0xe(%rcx)
    e95a:	28 42 0e             	sub    %al,0xe(%rdx)
    e95d:	20 42 0e             	and    %al,0xe(%rdx)
    e960:	18 42 0e             	sbb    %al,0xe(%rdx)
    e963:	10 42 0e             	adc    %al,0xe(%rdx)
    e966:	08 00                	or     %al,(%rax)
    e968:	10 00                	adc    %al,(%rax)
    e96a:	00 00                	add    %al,(%rax)
    e96c:	84 07                	test   %al,(%rdi)
    e96e:	00 00                	add    %al,(%rax)
    e970:	40 eb ff             	rex jmp e972 <__GNU_EH_FRAME_HDR+0x992>
    e973:	ff 02                	incl   (%rdx)
    e975:	00 00                	add    %al,(%rax)
    e977:	00 00                	add    %al,(%rax)
    e979:	00 00                	add    %al,(%rax)
	...

000000000000e97c <__FRAME_END__>:
    e97c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

000000000020ece8 <__frame_dummy_init_array_entry>:
  20ece8:	20 0e                	and    %cl,(%rsi)
  20ecea:	00 00                	add    %al,(%rax)
  20ecec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

000000000020ecf0 <__do_global_dtors_aux_fini_array_entry>:
  20ecf0:	e0 0d                	loopne 20ecff <_DYNAMIC+0x7>
  20ecf2:	00 00                	add    %al,(%rax)
  20ecf4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

000000000020ecf8 <_DYNAMIC>:
  20ecf8:	01 00                	add    %eax,(%rax)
  20ecfa:	00 00                	add    %al,(%rax)
  20ecfc:	00 00                	add    %al,(%rax)
  20ecfe:	00 00                	add    %al,(%rax)
  20ed00:	01 00                	add    %eax,(%rax)
  20ed02:	00 00                	add    %al,(%rax)
  20ed04:	00 00                	add    %al,(%rax)
  20ed06:	00 00                	add    %al,(%rax)
  20ed08:	01 00                	add    %eax,(%rax)
  20ed0a:	00 00                	add    %al,(%rax)
  20ed0c:	00 00                	add    %al,(%rax)
  20ed0e:	00 00                	add    %al,(%rax)
  20ed10:	93                   	xchg   %eax,%ebx
  20ed11:	00 00                	add    %al,(%rax)
  20ed13:	00 00                	add    %al,(%rax)
  20ed15:	00 00                	add    %al,(%rax)
  20ed17:	00 0c 00             	add    %cl,(%rax,%rax,1)
  20ed1a:	00 00                	add    %al,(%rax)
  20ed1c:	00 00                	add    %al,(%rax)
  20ed1e:	00 00                	add    %al,(%rax)
  20ed20:	58                   	pop    %rax
  20ed21:	0b 00                	or     (%rax),%eax
  20ed23:	00 00                	add    %al,(%rax)
  20ed25:	00 00                	add    %al,(%rax)
  20ed27:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 20ed2d <_DYNAMIC+0x35>
  20ed2d:	00 00                	add    %al,(%rax)
  20ed2f:	00 b4 d4 00 00 00 00 	add    %dh,0x0(%rsp,%rdx,8)
  20ed36:	00 00                	add    %al,(%rax)
  20ed38:	19 00                	sbb    %eax,(%rax)
  20ed3a:	00 00                	add    %al,(%rax)
  20ed3c:	00 00                	add    %al,(%rax)
  20ed3e:	00 00                	add    %al,(%rax)
  20ed40:	e8 ec 20 00 00       	callq  210e31 <mem+0x1d51>
  20ed45:	00 00                	add    %al,(%rax)
  20ed47:	00 1b                	add    %bl,(%rbx)
  20ed49:	00 00                	add    %al,(%rax)
  20ed4b:	00 00                	add    %al,(%rax)
  20ed4d:	00 00                	add    %al,(%rax)
  20ed4f:	00 08                	add    %cl,(%rax)
  20ed51:	00 00                	add    %al,(%rax)
  20ed53:	00 00                	add    %al,(%rax)
  20ed55:	00 00                	add    %al,(%rax)
  20ed57:	00 1a                	add    %bl,(%rdx)
  20ed59:	00 00                	add    %al,(%rax)
  20ed5b:	00 00                	add    %al,(%rax)
  20ed5d:	00 00                	add    %al,(%rax)
  20ed5f:	00 f0                	add    %dh,%al
  20ed61:	ec                   	in     (%dx),%al
  20ed62:	20 00                	and    %al,(%rax)
  20ed64:	00 00                	add    %al,(%rax)
  20ed66:	00 00                	add    %al,(%rax)
  20ed68:	1c 00                	sbb    $0x0,%al
  20ed6a:	00 00                	add    %al,(%rax)
  20ed6c:	00 00                	add    %al,(%rax)
  20ed6e:	00 00                	add    %al,(%rax)
  20ed70:	08 00                	or     %al,(%rax)
  20ed72:	00 00                	add    %al,(%rax)
  20ed74:	00 00                	add    %al,(%rax)
  20ed76:	00 00                	add    %al,(%rax)
  20ed78:	f5                   	cmc    
  20ed79:	fe                   	(bad)  
  20ed7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ed7d:	00 00                	add    %al,(%rax)
  20ed7f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  20ed85:	00 00                	add    %al,(%rax)
  20ed87:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 20ed8d <_DYNAMIC+0x95>
  20ed8d:	00 00                	add    %al,(%rax)
  20ed8f:	00 30                	add    %dh,(%rax)
  20ed91:	06                   	(bad)  
  20ed92:	00 00                	add    %al,(%rax)
  20ed94:	00 00                	add    %al,(%rax)
  20ed96:	00 00                	add    %al,(%rax)
  20ed98:	06                   	(bad)  
  20ed99:	00 00                	add    %al,(%rax)
  20ed9b:	00 00                	add    %al,(%rax)
  20ed9d:	00 00                	add    %al,(%rax)
  20ed9f:	00 d0                	add    %dl,%al
  20eda1:	02 00                	add    (%rax),%al
  20eda3:	00 00                	add    %al,(%rax)
  20eda5:	00 00                	add    %al,(%rax)
  20eda7:	00 0a                	add    %cl,(%rdx)
  20eda9:	00 00                	add    %al,(%rax)
  20edab:	00 00                	add    %al,(%rax)
  20edad:	00 00                	add    %al,(%rax)
  20edaf:	00 7d 01             	add    %bh,0x1(%rbp)
  20edb2:	00 00                	add    %al,(%rax)
  20edb4:	00 00                	add    %al,(%rax)
  20edb6:	00 00                	add    %al,(%rax)
  20edb8:	0b 00                	or     (%rax),%eax
  20edba:	00 00                	add    %al,(%rax)
  20edbc:	00 00                	add    %al,(%rax)
  20edbe:	00 00                	add    %al,(%rax)
  20edc0:	18 00                	sbb    %al,(%rax)
  20edc2:	00 00                	add    %al,(%rax)
  20edc4:	00 00                	add    %al,(%rax)
  20edc6:	00 00                	add    %al,(%rax)
  20edc8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  20edd5:	00 00                	add    %al,(%rax)
  20edd7:	00 03                	add    %al,(%rbx)
  20edd9:	00 00                	add    %al,(%rax)
  20eddb:	00 00                	add    %al,(%rax)
  20eddd:	00 00                	add    %al,(%rax)
  20eddf:	00 f8                	add    %bh,%al
  20ede1:	ee                   	out    %al,(%dx)
  20ede2:	20 00                	and    %al,(%rax)
  20ede4:	00 00                	add    %al,(%rax)
  20ede6:	00 00                	add    %al,(%rax)
  20ede8:	02 00                	add    (%rax),%al
  20edea:	00 00                	add    %al,(%rax)
  20edec:	00 00                	add    %al,(%rax)
  20edee:	00 00                	add    %al,(%rax)
  20edf0:	58                   	pop    %rax
  20edf1:	02 00                	add    (%rax),%al
  20edf3:	00 00                	add    %al,(%rax)
  20edf5:	00 00                	add    %al,(%rax)
  20edf7:	00 14 00             	add    %dl,(%rax,%rax,1)
  20edfa:	00 00                	add    %al,(%rax)
  20edfc:	00 00                	add    %al,(%rax)
  20edfe:	00 00                	add    %al,(%rax)
  20ee00:	07                   	(bad)  
  20ee01:	00 00                	add    %al,(%rax)
  20ee03:	00 00                	add    %al,(%rax)
  20ee05:	00 00                	add    %al,(%rax)
  20ee07:	00 17                	add    %dl,(%rdi)
	...
  20ee11:	09 00                	or     %eax,(%rax)
  20ee13:	00 00                	add    %al,(%rax)
  20ee15:	00 00                	add    %al,(%rax)
  20ee17:	00 07                	add    %al,(%rdi)
  20ee19:	00 00                	add    %al,(%rax)
  20ee1b:	00 00                	add    %al,(%rax)
  20ee1d:	00 00                	add    %al,(%rax)
  20ee1f:	00 28                	add    %ch,(%rax)
  20ee21:	08 00                	or     %al,(%rax)
  20ee23:	00 00                	add    %al,(%rax)
  20ee25:	00 00                	add    %al,(%rax)
  20ee27:	00 08                	add    %cl,(%rax)
  20ee29:	00 00                	add    %al,(%rax)
  20ee2b:	00 00                	add    %al,(%rax)
  20ee2d:	00 00                	add    %al,(%rax)
  20ee2f:	00 d8                	add    %bl,%al
  20ee31:	00 00                	add    %al,(%rax)
  20ee33:	00 00                	add    %al,(%rax)
  20ee35:	00 00                	add    %al,(%rax)
  20ee37:	00 09                	add    %cl,(%rcx)
  20ee39:	00 00                	add    %al,(%rax)
  20ee3b:	00 00                	add    %al,(%rax)
  20ee3d:	00 00                	add    %al,(%rax)
  20ee3f:	00 18                	add    %bl,(%rax)
  20ee41:	00 00                	add    %al,(%rax)
  20ee43:	00 00                	add    %al,(%rax)
  20ee45:	00 00                	add    %al,(%rax)
  20ee47:	00 1e                	add    %bl,(%rsi)
  20ee49:	00 00                	add    %al,(%rax)
  20ee4b:	00 00                	add    %al,(%rax)
  20ee4d:	00 00                	add    %al,(%rax)
  20ee4f:	00 08                	add    %cl,(%rax)
  20ee51:	00 00                	add    %al,(%rax)
  20ee53:	00 00                	add    %al,(%rax)
  20ee55:	00 00                	add    %al,(%rax)
  20ee57:	00 fb                	add    %bh,%bl
  20ee59:	ff                   	(bad)  
  20ee5a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ee5d:	00 00                	add    %al,(%rax)
  20ee5f:	00 01                	add    %al,(%rcx)
  20ee61:	00 00                	add    %al,(%rax)
  20ee63:	08 00                	or     %al,(%rax)
  20ee65:	00 00                	add    %al,(%rax)
  20ee67:	00 fe                	add    %bh,%dh
  20ee69:	ff                   	(bad)  
  20ee6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ee6d:	00 00                	add    %al,(%rax)
  20ee6f:	00 f8                	add    %bh,%al
  20ee71:	07                   	(bad)  
  20ee72:	00 00                	add    %al,(%rax)
  20ee74:	00 00                	add    %al,(%rax)
  20ee76:	00 00                	add    %al,(%rax)
  20ee78:	ff                   	(bad)  
  20ee79:	ff                   	(bad)  
  20ee7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ee7d:	00 00                	add    %al,(%rax)
  20ee7f:	00 01                	add    %al,(%rcx)
  20ee81:	00 00                	add    %al,(%rax)
  20ee83:	00 00                	add    %al,(%rax)
  20ee85:	00 00                	add    %al,(%rax)
  20ee87:	00 f0                	add    %dh,%al
  20ee89:	ff                   	(bad)  
  20ee8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ee8d:	00 00                	add    %al,(%rax)
  20ee8f:	00 ae 07 00 00 00    	add    %ch,0x7(%rsi)
  20ee95:	00 00                	add    %al,(%rax)
  20ee97:	00 f9                	add    %bh,%cl
  20ee99:	ff                   	(bad)  
  20ee9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  20ee9d:	00 00                	add    %al,(%rax)
  20ee9f:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

000000000020eef8 <_GLOBAL_OFFSET_TABLE_>:
  20eef8:	f8                   	clc    
  20eef9:	ec                   	in     (%dx),%al
  20eefa:	20 00                	and    %al,(%rax)
	...
  20ef10:	86 0b                	xchg   %cl,(%rbx)
  20ef12:	00 00                	add    %al,(%rax)
  20ef14:	00 00                	add    %al,(%rax)
  20ef16:	00 00                	add    %al,(%rax)
  20ef18:	96                   	xchg   %eax,%esi
  20ef19:	0b 00                	or     (%rax),%eax
  20ef1b:	00 00                	add    %al,(%rax)
  20ef1d:	00 00                	add    %al,(%rax)
  20ef1f:	00 a6 0b 00 00 00    	add    %ah,0xb(%rsi)
  20ef25:	00 00                	add    %al,(%rax)
  20ef27:	00 b6 0b 00 00 00    	add    %dh,0xb(%rsi)
  20ef2d:	00 00                	add    %al,(%rax)
  20ef2f:	00 c6                	add    %al,%dh
  20ef31:	0b 00                	or     (%rax),%eax
  20ef33:	00 00                	add    %al,(%rax)
  20ef35:	00 00                	add    %al,(%rax)
  20ef37:	00 d6                	add    %dl,%dh
  20ef39:	0b 00                	or     (%rax),%eax
  20ef3b:	00 00                	add    %al,(%rax)
  20ef3d:	00 00                	add    %al,(%rax)
  20ef3f:	00 e6                	add    %ah,%dh
  20ef41:	0b 00                	or     (%rax),%eax
  20ef43:	00 00                	add    %al,(%rax)
  20ef45:	00 00                	add    %al,(%rax)
  20ef47:	00 f6                	add    %dh,%dh
  20ef49:	0b 00                	or     (%rax),%eax
  20ef4b:	00 00                	add    %al,(%rax)
  20ef4d:	00 00                	add    %al,(%rax)
  20ef4f:	00 06                	add    %al,(%rsi)
  20ef51:	0c 00                	or     $0x0,%al
  20ef53:	00 00                	add    %al,(%rax)
  20ef55:	00 00                	add    %al,(%rax)
  20ef57:	00 16                	add    %dl,(%rsi)
  20ef59:	0c 00                	or     $0x0,%al
  20ef5b:	00 00                	add    %al,(%rax)
  20ef5d:	00 00                	add    %al,(%rax)
  20ef5f:	00 26                	add    %ah,(%rsi)
  20ef61:	0c 00                	or     $0x0,%al
  20ef63:	00 00                	add    %al,(%rax)
  20ef65:	00 00                	add    %al,(%rax)
  20ef67:	00 36                	add    %dh,(%rsi)
  20ef69:	0c 00                	or     $0x0,%al
  20ef6b:	00 00                	add    %al,(%rax)
  20ef6d:	00 00                	add    %al,(%rax)
  20ef6f:	00 46 0c             	add    %al,0xc(%rsi)
  20ef72:	00 00                	add    %al,(%rax)
  20ef74:	00 00                	add    %al,(%rax)
  20ef76:	00 00                	add    %al,(%rax)
  20ef78:	56                   	push   %rsi
  20ef79:	0c 00                	or     $0x0,%al
  20ef7b:	00 00                	add    %al,(%rax)
  20ef7d:	00 00                	add    %al,(%rax)
  20ef7f:	00 66 0c             	add    %ah,0xc(%rsi)
  20ef82:	00 00                	add    %al,(%rax)
  20ef84:	00 00                	add    %al,(%rax)
  20ef86:	00 00                	add    %al,(%rax)
  20ef88:	76 0c                	jbe    20ef96 <_GLOBAL_OFFSET_TABLE_+0x9e>
  20ef8a:	00 00                	add    %al,(%rax)
  20ef8c:	00 00                	add    %al,(%rax)
  20ef8e:	00 00                	add    %al,(%rax)
  20ef90:	86 0c 00             	xchg   %cl,(%rax,%rax,1)
  20ef93:	00 00                	add    %al,(%rax)
  20ef95:	00 00                	add    %al,(%rax)
  20ef97:	00 96 0c 00 00 00    	add    %dl,0xc(%rsi)
  20ef9d:	00 00                	add    %al,(%rax)
  20ef9f:	00 a6 0c 00 00 00    	add    %ah,0xc(%rsi)
  20efa5:	00 00                	add    %al,(%rax)
  20efa7:	00 b6 0c 00 00 00    	add    %dh,0xc(%rsi)
  20efad:	00 00                	add    %al,(%rax)
  20efaf:	00 c6                	add    %al,%dh
  20efb1:	0c 00                	or     $0x0,%al
  20efb3:	00 00                	add    %al,(%rax)
  20efb5:	00 00                	add    %al,(%rax)
  20efb7:	00 d6                	add    %dl,%dh
  20efb9:	0c 00                	or     $0x0,%al
  20efbb:	00 00                	add    %al,(%rax)
  20efbd:	00 00                	add    %al,(%rax)
  20efbf:	00 e6                	add    %ah,%dh
  20efc1:	0c 00                	or     $0x0,%al
  20efc3:	00 00                	add    %al,(%rax)
  20efc5:	00 00                	add    %al,(%rax)
  20efc7:	00 f6                	add    %dh,%dh
  20efc9:	0c 00                	or     $0x0,%al
  20efcb:	00 00                	add    %al,(%rax)
  20efcd:	00 00                	add    %al,(%rax)
  20efcf:	00 06                	add    %al,(%rsi)
  20efd1:	0d 00 00 00 00       	or     $0x0,%eax
	...

Disassembly of section .data:

000000000020f000 <__data_start>:
	...

000000000020f008 <__dso_handle>:
  20f008:	08 f0                	or     %dh,%al
  20f00a:	20 00                	and    %al,(%rax)
  20f00c:	00 00                	add    %al,(%rax)
	...

000000000020f010 <HPATH>:
char * HPATH="HOME";
  20f010:	c8 d4 00 00          	enterq $0xd4,$0x0
  20f014:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000020f020 <completed.7696>:
	...

000000000020f028 <line_read>:
	...

000000000020f030 <vatr>:
	...

000000000020f040 <DescriptorTable>:
	...

000000000020f0c0 <save_ip>:
	...

000000000020f0e0 <mem>:
	...

000000000060f0e8 <interrupt>:
	...

000000000060f100 <FNBI>:
	...

000000000060f180 <FileErrName>:
	...

000000000060f280 <filename>:
	...

000000000060f380 <FNBCount>:
	...

000000000060f388 <f_boot>:
	...

000000000060f3a0 <FNB>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xae0>
   a:	74 75                	je     81 <_init-0xad7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 36 75 62    	xor    %ch,0x62753631(%rip)        # 62753648 <_end+0x621422a8>
  17:	75 6e                	jne    87 <_init-0xad1>
  19:	74 75                	je     90 <_init-0xac8>
  1b:	33 29                	xor    (%rcx),%ebp
  1d:	20 37                	and    %dh,(%rdi)
  1f:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  22:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	2a 0e                	sub    (%rsi),%cl
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	43 00 00             	rex.XB add %al,(%r8)
	...
  2f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  32:	00 00                	add    %al,(%rax)
  34:	02 00                	add    (%rax),%al
  36:	b2 00                	mov    $0x0,%dl
  38:	00 00                	add    %al,(%rax)
  3a:	08 00                	or     %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	6d                   	insl   (%dx),%es:(%rdi)
  41:	0e                   	(bad)  
  42:	00 00                	add    %al,(%rax)
  44:	00 00                	add    %al,(%rax)
  46:	00 00                	add    %al,(%rax)
  48:	48 c3                	rex.W retq 
	...
  5e:	00 00                	add    %al,(%rax)
  60:	2c 00                	sub    $0x0,%al
  62:	00 00                	add    %al,(%rax)
  64:	02 00                	add    (%rax),%al
  66:	65 21 00             	and    %eax,%gs:(%rax)
  69:	00 08                	add    %cl,(%rax)
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 b5 d1 00 00 00    	add    %dh,0xd1(%rbp)
  75:	00 00                	add    %al,(%rax)
  77:	00 87 02 00 00 00    	add    %al,0x2(%rdi)
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	ae                   	scas   %es:(%rdi),%al
       1:	00 00                	add    %al,(%rax)
       3:	00 04 00             	add    %al,(%rax,%rax,1)
       6:	00 00                	add    %al,(%rax)
       8:	00 00                	add    %al,(%rax)
       a:	08 01                	or     %al,(%rcx)
       c:	00 00                	add    %al,(%rax)
       e:	00 00                	add    %al,(%rax)
      10:	0c 56                	or     $0x56,%al
      12:	00 00                	add    %al,(%rax)
      14:	00 6a 00             	add    %ch,0x0(%rdx)
      17:	00 00                	add    %al,(%rax)
      19:	2a 0e                	sub    (%rsi),%cl
      1b:	00 00                	add    %al,(%rax)
      1d:	00 00                	add    %al,(%rax)
      1f:	00 00                	add    %al,(%rax)
      21:	43 00 00             	rex.XB add %al,(%r8)
	...
      2c:	00 02                	add    %al,(%rdx)
      2e:	b8 06 00 00 01       	mov    $0x1000006,%eax
      33:	02 42 00             	add    0x0(%rdx),%al
      36:	00 00                	add    %al,(%rax)
      38:	09 03                	or     %eax,(%rbx)
      3a:	30 f0                	xor    %dh,%al
      3c:	20 00                	and    %al,(%rax)
      3e:	00 00                	add    %al,(%rax)
      40:	00 00                	add    %al,(%rax)
      42:	03 08                	add    (%rax),%ecx
      44:	48 00 00             	rex.W add %al,(%rax)
      47:	00 04 01             	add    %al,(%rcx,%rax,1)
      4a:	06                   	(bad)  
      4b:	48 05 00 00 05 65    	add    $0x65050000,%rax
      51:	00 00                	add    %al,(%rax)
      53:	00 01                	add    %al,(%rcx)
      55:	04 a4                	add    $0xa4,%al
      57:	00 00                	add    %al,(%rax)
      59:	00 2a                	add    %ch,(%rdx)
      5b:	0e                   	(bad)  
      5c:	00 00                	add    %al,(%rax)
      5e:	00 00                	add    %al,(%rax)
      60:	00 00                	add    %al,(%rax)
      62:	43 00 00             	rex.XB add %al,(%r8)
      65:	00 00                	add    %al,(%rax)
      67:	00 00                	add    %al,(%rax)
      69:	00 01                	add    %al,(%rcx)
      6b:	9c                   	pushfq 
      6c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
      6d:	00 00                	add    %al,(%rax)
      6f:	00 06                	add    %al,(%rsi)
      71:	fd                   	std    
      72:	08 00                	or     %al,(%rax)
      74:	00 01                	add    %al,(%rcx)
      76:	04 a4                	add    $0xa4,%al
      78:	00 00                	add    %al,(%rax)
      7a:	00 02                	add    %al,(%rdx)
      7c:	91                   	xchg   %eax,%ecx
      7d:	6c                   	insb   (%dx),%es:(%rdi)
      7e:	06                   	(bad)  
      7f:	47 00 00             	rex.RXB add %r8b,(%r8)
      82:	00 01                	add    %al,(%rcx)
      84:	04 ab                	add    $0xab,%al
      86:	00 00                	add    %al,(%rax)
      88:	00 02                	add    %al,(%rdx)
      8a:	91                   	xchg   %eax,%ecx
      8b:	60                   	(bad)  
      8c:	07                   	(bad)  
      8d:	69 69 00 01 05 48 00 	imul   $0x480501,0x0(%rcx),%ebp
      94:	00 00                	add    %al,(%rax)
      96:	08 4f 00             	or     %cl,0x0(%rdi)
      99:	00 00                	add    %al,(%rax)
      9b:	01 0d a4 00 00 00    	add    %ecx,0xa4(%rip)        # 145 <_init-0xa13>
      a1:	09 00                	or     %eax,(%rax)
      a3:	00 0a                	add    %cl,(%rdx)
      a5:	04 05                	add    $0x5,%al
      a7:	69 6e 74 00 03 08 42 	imul   $0x42080300,0x74(%rsi),%ebp
      ae:	00 00                	add    %al,(%rax)
      b0:	00 00                	add    %al,(%rax)
      b2:	af                   	scas   %es:(%rdi),%eax
      b3:	20 00                	and    %al,(%rax)
      b5:	00 04 00             	add    %al,(%rax,%rax,1)
      b8:	92                   	xchg   %eax,%edx
      b9:	00 00                	add    %al,(%rax)
      bb:	00 08                	add    %cl,(%rax)
      bd:	01 00                	add    %eax,(%rax)
      bf:	00 00                	add    %al,(%rax)
      c1:	00 0c 83             	add    %cl,(%rbx,%rax,4)
      c4:	13 00                	adc    (%rax),%eax
      c6:	00 d0                	add    %dl,%al
      c8:	01 00                	add    %eax,(%rax)
      ca:	00 6d 0e             	add    %ch,0xe(%rbp)
      cd:	00 00                	add    %al,(%rax)
      cf:	00 00                	add    %al,(%rax)
      d1:	00 00                	add    %al,(%rax)
      d3:	48 c3                	rex.W retq 
      d5:	00 00                	add    %al,(%rax)
      d7:	00 00                	add    %al,(%rax)
      d9:	00 00                	add    %al,(%rax)
      db:	46 00 00             	rex.RX add %r8b,(%rax)
      de:	00 02                	add    %al,(%rdx)
      e0:	f5                   	cmc    
      e1:	00 00                	add    %al,(%rax)
      e3:	00 02                	add    %al,(%rdx)
      e5:	d8 38                	fdivrs (%rax)
      e7:	00 00                	add    %al,(%rax)
      e9:	00 03                	add    %al,(%rbx)
      eb:	08 07                	or     %al,(%rdi)
      ed:	2a 0e                	sub    (%rsi),%cl
      ef:	00 00                	add    %al,(%rax)
      f1:	03 01                	add    (%rcx),%eax
      f3:	08 3f                	or     %bh,(%rdi)
      f5:	05 00 00 04 3f       	add    $0x3f040000,%eax
      fa:	00 00                	add    %al,(%rax)
      fc:	00 03                	add    %al,(%rbx)
      fe:	02 07                	add    (%rdi),%al
     100:	13 14 00             	adc    (%rax,%rax,1),%edx
     103:	00 03                	add    %al,(%rbx)
     105:	04 07                	add    $0x7,%al
     107:	2f                   	(bad)  
     108:	0e                   	(bad)  
     109:	00 00                	add    %al,(%rax)
     10b:	03 01                	add    (%rcx),%eax
     10d:	06                   	(bad)  
     10e:	41 05 00 00 03 02    	rex.B add $0x2030000,%eax
     114:	05 ba 11 00 00       	add    $0x11ba,%eax
     119:	02 63 14             	add    0x14(%rbx),%ah
     11c:	00 00                	add    %al,(%rax)
     11e:	03 28                	add    (%rax),%ebp
     120:	72 00                	jb     122 <_init-0xa36>
     122:	00 00                	add    %al,(%rax)
     124:	05 04 05 69 6e       	add    $0x6e690504,%eax
     129:	74 00                	je     12b <_init-0xa2d>
     12b:	03 08                	add    (%rax),%ecx
     12d:	05 66 0a 00 00       	add    $0xa66,%eax
     132:	02 98 0e 00 00 03    	add    0x300000e(%rax),%bl
     138:	8c 79 00             	mov    %?,0x0(%rcx)
     13b:	00 00                	add    %al,(%rax)
     13d:	02 78 10             	add    0x10(%rax),%bh
     140:	00 00                	add    %al,(%rax)
     142:	03 8d 79 00 00 00    	add    0x79(%rbp),%ecx
     148:	06                   	(bad)  
     149:	08 07                	or     %al,(%rdi)
     14b:	08 9e 00 00 00 03    	or     %bl,0x3000000(%rsi)
     151:	01 06                	add    %eax,(%rsi)
     153:	48 05 00 00 04 9e    	add    $0xffffffff9e040000,%rax
     159:	00 00                	add    %al,(%rax)
     15b:	00 08                	add    %cl,(%rax)
     15d:	cf                   	iret   
     15e:	04 00                	add    $0x0,%al
     160:	00 d8                	add    %bl,%al
     162:	04 f5                	add    $0xf5,%al
     164:	2a 02                	sub    (%rdx),%al
     166:	00 00                	add    %al,(%rax)
     168:	09 02                	or     %eax,(%rdx)
     16a:	0c 00                	or     $0x0,%al
     16c:	00 04 f6             	add    %al,(%rsi,%rsi,8)
     16f:	72 00                	jb     171 <_init-0x9e7>
     171:	00 00                	add    %al,(%rax)
     173:	00 09                	add    %cl,(%rcx)
     175:	a8 06                	test   $0x6,%al
     177:	00 00                	add    %al,(%rax)
     179:	04 fb                	add    $0xfb,%al
     17b:	98                   	cwtl   
     17c:	00 00                	add    %al,(%rax)
     17e:	00 08                	add    %cl,(%rax)
     180:	09 06                	or     %eax,(%rsi)
     182:	13 00                	adc    (%rax),%eax
     184:	00 04 fc             	add    %al,(%rsp,%rdi,8)
     187:	98                   	cwtl   
     188:	00 00                	add    %al,(%rax)
     18a:	00 10                	add    %dl,(%rax)
     18c:	09 4e 09             	or     %ecx,0x9(%rsi)
     18f:	00 00                	add    %al,(%rax)
     191:	04 fd                	add    $0xfd,%al
     193:	98                   	cwtl   
     194:	00 00                	add    %al,(%rax)
     196:	00 18                	add    %bl,(%rax)
     198:	09 0a                	or     %ecx,(%rdx)
     19a:	02 00                	add    (%rax),%al
     19c:	00 04 fe             	add    %al,(%rsi,%rdi,8)
     19f:	98                   	cwtl   
     1a0:	00 00                	add    %al,(%rax)
     1a2:	00 20                	add    %ah,(%rax)
     1a4:	09 4d 14             	or     %ecx,0x14(%rbp)
     1a7:	00 00                	add    %al,(%rax)
     1a9:	04 ff                	add    $0xff,%al
     1ab:	98                   	cwtl   
     1ac:	00 00                	add    %al,(%rax)
     1ae:	00 28                	add    %ch,(%rax)
     1b0:	0a c6                	or     %dh,%al
     1b2:	0a 00                	or     (%rax),%al
     1b4:	00 04 00             	add    %al,(%rax,%rax,1)
     1b7:	01 98 00 00 00 30    	add    %ebx,0x30000000(%rax)
     1bd:	0a 2e                	or     (%rsi),%ch
     1bf:	0b 00                	or     (%rax),%eax
     1c1:	00 04 01             	add    %al,(%rcx,%rax,1)
     1c4:	01 98 00 00 00 38    	add    %ebx,0x38000000(%rax)
     1ca:	0a e5                	or     %ch,%ah
     1cc:	10 00                	adc    %al,(%rax)
     1ce:	00 04 02             	add    %al,(%rdx,%rax,1)
     1d1:	01 98 00 00 00 40    	add    %ebx,0x40000000(%rax)
     1d7:	0a 8b 02 00 00 04    	or     0x4000002(%rbx),%cl
     1dd:	04 01                	add    $0x1,%al
     1df:	98                   	cwtl   
     1e0:	00 00                	add    %al,(%rax)
     1e2:	00 48 0a             	add    %cl,0xa(%rax)
     1e5:	e0 0f                	loopne 1f6 <_init-0x962>
     1e7:	00 00                	add    %al,(%rax)
     1e9:	04 05                	add    $0x5,%al
     1eb:	01 98 00 00 00 50    	add    %ebx,0x50000000(%rax)
     1f1:	0a 93 01 00 00 04    	or     0x4000001(%rbx),%dl
     1f7:	06                   	(bad)  
     1f8:	01 98 00 00 00 58    	add    %ebx,0x58000000(%rax)
     1fe:	0a 6c 07 00          	or     0x0(%rdi,%rax,1),%ch
     202:	00 04 08             	add    %al,(%rax,%rcx,1)
     205:	01 6d 02             	add    %ebp,0x2(%rbp)
     208:	00 00                	add    %al,(%rax)
     20a:	60                   	(bad)  
     20b:	0a 39                	or     (%rcx),%bh
     20d:	03 00                	add    (%rax),%eax
     20f:	00 04 0a             	add    %al,(%rdx,%rcx,1)
     212:	01 73 02             	add    %esi,0x2(%rbx)
     215:	00 00                	add    %al,(%rax)
     217:	68 0a 6f 13 00       	pushq  $0x136f0a
     21c:	00 04 0c             	add    %al,(%rsp,%rcx,1)
     21f:	01 72 00             	add    %esi,0x0(%rdx)
     222:	00 00                	add    %al,(%rax)
     224:	70 0a                	jo     230 <_init-0x928>
     226:	39 09                	cmp    %ecx,(%rcx)
     228:	00 00                	add    %al,(%rax)
     22a:	04 10                	add    $0x10,%al
     22c:	01 72 00             	add    %esi,0x0(%rdx)
     22f:	00 00                	add    %al,(%rax)
     231:	74 0a                	je     23d <_init-0x91b>
     233:	e5 09                	in     $0x9,%eax
     235:	00 00                	add    %al,(%rax)
     237:	04 12                	add    $0x12,%al
     239:	01 80 00 00 00 78    	add    %eax,0x78000000(%rax)
     23f:	0a 46 03             	or     0x3(%rsi),%al
     242:	00 00                	add    %al,(%rax)
     244:	04 16                	add    $0x16,%al
     246:	01 4b 00             	add    %ecx,0x0(%rbx)
     249:	00 00                	add    %al,(%rax)
     24b:	80 0a 01             	orb    $0x1,(%rdx)
     24e:	12 00                	adc    (%rax),%al
     250:	00 04 17             	add    %al,(%rdi,%rdx,1)
     253:	01 59 00             	add    %ebx,0x0(%rcx)
     256:	00 00                	add    %al,(%rax)
     258:	82                   	(bad)  
     259:	0a f0                	or     %al,%dh
     25b:	0f 00 00             	sldt   (%rax)
     25e:	04 18                	add    $0x18,%al
     260:	01 79 02             	add    %edi,0x2(%rcx)
     263:	00 00                	add    %al,(%rax)
     265:	83 0a 3f             	orl    $0x3f,(%rdx)
     268:	02 00                	add    (%rax),%al
     26a:	00 04 1c             	add    %al,(%rsp,%rbx,1)
     26d:	01 89 02 00 00 88    	add    %ecx,-0x77fffffe(%rcx)
     273:	0a e9                	or     %cl,%ch
     275:	09 00                	or     %eax,(%rax)
     277:	00 04 25 01 8b 00 00 	add    %al,0x8b01
     27e:	00 90 0a 9f 0b 00    	add    %dl,0xb9f0a(%rax)
     284:	00 04 2d 01 96 00 00 	add    %al,0x9601(,%rbp,1)
     28b:	00 98 0a a6 0b 00    	add    %bl,0xba60a(%rax)
     291:	00 04 2e             	add    %al,(%rsi,%rbp,1)
     294:	01 96 00 00 00 a0    	add    %edx,-0x60000000(%rsi)
     29a:	0a ad 0b 00 00 04    	or     0x400000b(%rbp),%ch
     2a0:	2f                   	(bad)  
     2a1:	01 96 00 00 00 a8    	add    %edx,-0x58000000(%rsi)
     2a7:	0a b4 0b 00 00 04 30 	or     0x30040000(%rbx,%rcx,1),%dh
     2ae:	01 96 00 00 00 b0    	add    %edx,-0x50000000(%rsi)
     2b4:	0a bb 0b 00 00 04    	or     0x400000b(%rbx),%bh
     2ba:	32 01                	xor    (%rcx),%al
     2bc:	2d 00 00 00 b8       	sub    $0xb8000000,%eax
     2c1:	0a 0f                	or     (%rdi),%cl
     2c3:	11 00                	adc    %eax,(%rax)
     2c5:	00 04 33             	add    %al,(%rbx,%rsi,1)
     2c8:	01 72 00             	add    %esi,0x0(%rdx)
     2cb:	00 00                	add    %al,(%rax)
     2cd:	c0 0a 87             	rorb   $0x87,(%rdx)
     2d0:	09 00                	or     %eax,(%rax)
     2d2:	00 04 35 01 8f 02 00 	add    %al,0x28f01(,%rsi,1)
     2d9:	00 c4                	add    %al,%ah
     2db:	00 02                	add    %al,(%rdx)
     2dd:	d3 04 00             	roll   %cl,(%rax,%rax,1)
     2e0:	00 05 07 aa 00 00    	add    %al,0xaa07(%rip)        # aced <make_image+0x870>
     2e6:	00 0b                	add    %cl,(%rbx)
     2e8:	f8                   	clc    
     2e9:	05 00 00 04 9a       	add    $0x9a040000,%eax
     2ee:	08 24 04             	or     %ah,(%rsp,%rax,1)
     2f1:	00 00                	add    %al,(%rax)
     2f3:	18 04 a0             	sbb    %al,(%rax,%riz,4)
     2f6:	6d                   	insl   (%dx),%es:(%rdi)
     2f7:	02 00                	add    (%rax),%al
     2f9:	00 09                	add    %cl,(%rcx)
     2fb:	72 10                	jb     30d <_init-0x84b>
     2fd:	00 00                	add    %al,(%rax)
     2ff:	04 a1                	add    $0xa1,%al
     301:	6d                   	insl   (%dx),%es:(%rdi)
     302:	02 00                	add    (%rax),%al
     304:	00 00                	add    %al,(%rax)
     306:	09 c2                	or     %eax,%edx
     308:	0b 00                	or     (%rax),%eax
     30a:	00 04 a2             	add    %al,(%rdx,%riz,4)
     30d:	73 02                	jae    311 <_init-0x847>
     30f:	00 00                	add    %al,(%rax)
     311:	08 09                	or     %cl,(%rcx)
     313:	fc                   	cld    
     314:	06                   	(bad)  
     315:	00 00                	add    %al,(%rax)
     317:	04 a6                	add    $0xa6,%al
     319:	72 00                	jb     31b <_init-0x83d>
     31b:	00 00                	add    %al,(%rax)
     31d:	10 00                	adc    %al,(%rax)
     31f:	07                   	(bad)  
     320:	08 3c 02             	or     %bh,(%rdx,%rax,1)
     323:	00 00                	add    %al,(%rax)
     325:	07                   	(bad)  
     326:	08 aa 00 00 00 0c    	or     %ch,0xc000000(%rdx)
     32c:	9e                   	sahf   
     32d:	00 00                	add    %al,(%rax)
     32f:	00 89 02 00 00 0d    	add    %cl,0xd000002(%rcx)
     335:	38 00                	cmp    %al,(%rax)
     337:	00 00                	add    %al,(%rax)
     339:	00 00                	add    %al,(%rax)
     33b:	07                   	(bad)  
     33c:	08 35 02 00 00 0c    	or     %dh,0xc000002(%rip)        # c000344 <_end+0xb9eefa4>
     342:	9e                   	sahf   
     343:	00 00                	add    %al,(%rax)
     345:	00 9f 02 00 00 0d    	add    %bl,0xd000002(%rdi)
     34b:	38 00                	cmp    %al,(%rax)
     34d:	00 00                	add    %al,(%rax)
     34f:	13 00                	adc    (%rax),%eax
     351:	0e                   	(bad)  
     352:	98                   	cwtl   
     353:	05 00 00 0f eb       	add    $0xeb0f0000,%eax
     358:	08 00                	or     %al,(%rax)
     35a:	00 04 3f             	add    %al,(%rdi,%rdi,1)
     35d:	01 9f 02 00 00 0f    	add    %ebx,0xf000002(%rdi)
     363:	07                   	(bad)  
     364:	10 00                	adc    %al,(%rax)
     366:	00 04 40             	add    %al,(%rax,%rax,2)
     369:	01 9f 02 00 00 0f    	add    %ebx,0xf000002(%rdi)
     36f:	61                   	(bad)  
     370:	01 00                	add    %eax,(%rax)
     372:	00 04 41             	add    %al,(%rcx,%rax,2)
     375:	01 9f 02 00 00 07    	add    %ebx,0x7000002(%rdi)
     37b:	08 a5 00 00 00 04    	or     %ah,0x4000000(%rbp)
     381:	c8 02 00 00          	enterq $0x2,$0x0
     385:	02 9a 0e 00 00 06    	add    0x600000e(%rdx),%bl
     38b:	39 80 00 00 00 10    	cmp    %eax,0x10000000(%rax)
     391:	01 07                	add    %eax,(%rdi)
     393:	00 00                	add    %al,(%rax)
     395:	06                   	(bad)  
     396:	87 73 02             	xchg   %esi,0x2(%rbx)
     399:	00 00                	add    %al,(%rax)
     39b:	10 26                	adc    %ah,(%rsi)
     39d:	14 00                	adc    $0x0,%al
     39f:	00 06                	add    %al,(%rsi)
     3a1:	88 73 02             	mov    %dh,0x2(%rbx)
     3a4:	00 00                	add    %al,(%rax)
     3a6:	10 b3 11 00 00 06    	adc    %dh,0x6000011(%rbx)
     3ac:	89 73 02             	mov    %esi,0x2(%rbx)
     3af:	00 00                	add    %al,(%rax)
     3b1:	10 52 03             	adc    %dl,0x3(%rdx)
     3b4:	00 00                	add    %al,(%rax)
     3b6:	07                   	(bad)  
     3b7:	1a 72 00             	sbb    0x0(%rdx),%dh
     3ba:	00 00                	add    %al,(%rax)
     3bc:	0c ce                	or     $0xce,%al
     3be:	02 00                	add    (%rax),%al
     3c0:	00 15 03 00 00 11    	add    %dl,0x11000003(%rip)        # 110003c9 <_end+0x109ef029>
     3c6:	00 04 0a             	add    %al,(%rdx,%rcx,1)
     3c9:	03 00                	add    (%rax),%eax
     3cb:	00 10                	add    %dl,(%rax)
     3cd:	43 07                	rex.XB (bad) 
     3cf:	00 00                	add    %al,(%rax)
     3d1:	07                   	(bad)  
     3d2:	1b 15 03 00 00 02    	sbb    0x2000003(%rip),%edx        # 20003db <_end+0x19ef03b>
     3d8:	65 14 00             	gs adc $0x0,%al
     3db:	00 08                	add    %cl,(%rax)
     3dd:	1a 67 00             	sbb    0x0(%rdi),%ah
     3e0:	00 00                	add    %al,(%rax)
     3e2:	02 cb                	add    %bl,%cl
     3e4:	01 00                	add    %eax,(%rax)
     3e6:	00 09                	add    %cl,(%rcx)
     3e8:	15 3f 00 00 00       	adc    $0x3f,%eax
     3ed:	02 aa 01 00 00 09    	add    0x9000001(%rdx),%ch
     3f3:	18 4b 00             	sbb    %cl,0x0(%rbx)
     3f6:	00 00                	add    %al,(%rax)
     3f8:	02 40 03             	add    0x3(%rax),%al
     3fb:	00 00                	add    %al,(%rax)
     3fd:	09 1b                	or     %ebx,(%rbx)
     3ff:	52                   	push   %rdx
     400:	00 00                	add    %al,(%rax)
     402:	00 03                	add    %al,(%rbx)
     404:	08 05 61 0a 00 00    	or     %al,0xa61(%rip)        # e6b <main+0x41>
     40a:	02 f2                	add    %dl,%dh
     40c:	04 00                	add    $0x0,%al
     40e:	00 09                	add    %cl,(%rcx)
     410:	1f                   	(bad)  
     411:	63 03                	movslq (%rbx),%eax
     413:	00 00                	add    %al,(%rax)
     415:	03 08                	add    (%rax),%ecx
     417:	07                   	(bad)  
     418:	25 0e 00 00 12       	and    $0x1200000e,%eax
     41d:	75 03                	jne    422 <_init-0x736>
     41f:	00 00                	add    %al,(%rax)
     421:	13 72 00             	adc    0x0(%rdx),%esi
     424:	00 00                	add    %al,(%rax)
     426:	00 07                	add    %al,(%rdi)
     428:	08 98 00 00 00 02    	or     %bl,0x2000000(%rax)
     42e:	d8 0d 00 00 0a 36    	fmuls  0x360a0000(%rip)        # 360a0434 <_end+0x35a8f094>
     434:	86 03                	xchg   %al,(%rbx)
     436:	00 00                	add    %al,(%rax)
     438:	14 72                	adc    $0x72,%al
     43a:	00 00                	add    %al,(%rax)
     43c:	00 9a 03 00 00 13    	add    %bl,0x13000003(%rdx)
     442:	72 00                	jb     444 <_init-0x714>
     444:	00 00                	add    %al,(%rax)
     446:	13 72 00             	adc    0x0(%rdx),%esi
     449:	00 00                	add    %al,(%rax)
     44b:	00 02                	add    %al,(%rdx)
     44d:	ed                   	in     (%dx),%eax
     44e:	11 00                	adc    %eax,(%rax)
     450:	00 0a                	add    %cl,(%rdx)
     452:	39 a5 03 00 00 14    	cmp    %esp,0x14000003(%rbp)
     458:	98                   	cwtl   
     459:	00 00                	add    %al,(%rax)
     45b:	00 b9 03 00 00 13    	add    %bh,0x13000003(%rcx)
     461:	c8 02 00 00          	enterq $0x2,$0x0
     465:	13 72 00             	adc    0x0(%rdx),%esi
     468:	00 00                	add    %al,(%rax)
     46a:	00 02                	add    %al,(%rdx)
     46c:	15 01 00 00 0a       	adc    $0xa000001,%eax
     471:	3a c4                	cmp    %ah,%al
     473:	03 00                	add    (%rax),%eax
     475:	00 14 75 03 00 00 dd 	add    %dl,-0x22fffffd(,%rsi,2)
     47c:	03 00                	add    (%rax),%eax
     47e:	00 13                	add    %dl,(%rbx)
     480:	c8 02 00 00          	enterq $0x2,$0x0
     484:	13 72 00             	adc    0x0(%rdx),%esi
     487:	00 00                	add    %al,(%rax)
     489:	13 72 00             	adc    0x0(%rdx),%esi
     48c:	00 00                	add    %al,(%rax)
     48e:	00 02                	add    %al,(%rdx)
     490:	61                   	(bad)  
     491:	0d 00 00 0a 3c       	or     $0x3c0a0000,%eax
     496:	e8 03 00 00 14       	callq  1400049e <_end+0x139ef0fe>
     49b:	98                   	cwtl   
     49c:	00 00                	add    %al,(%rax)
     49e:	00 01                	add    %al,(%rcx)
     4a0:	04 00                	add    $0x0,%al
     4a2:	00 13                	add    %dl,(%rbx)
     4a4:	98                   	cwtl   
     4a5:	00 00                	add    %al,(%rax)
     4a7:	00 13                	add    %dl,(%rbx)
     4a9:	72 00                	jb     4ab <_init-0x6ad>
     4ab:	00 00                	add    %al,(%rax)
     4ad:	13 98 00 00 00 00    	adc    0x0(%rax),%ebx
     4b3:	02 7d 06             	add    0x6(%rbp),%bh
     4b6:	00 00                	add    %al,(%rax)
     4b8:	0a 3d 0c 04 00 00    	or     0x40c(%rip),%bh        # 8ca <_init-0x28e>
     4be:	14 98                	adc    $0x98,%al
     4c0:	00 00                	add    %al,(%rax)
     4c2:	00 20                	add    %ah,(%rax)
     4c4:	04 00                	add    $0x0,%al
     4c6:	00 13                	add    %dl,(%rbx)
     4c8:	98                   	cwtl   
     4c9:	00 00                	add    %al,(%rax)
     4cb:	00 13                	add    %dl,(%rbx)
     4cd:	72 00                	jb     4cf <_init-0x689>
     4cf:	00 00                	add    %al,(%rax)
     4d1:	00 02                	add    %al,(%rdx)
     4d3:	3b 15 00 00 0a 3f    	cmp    0x3f0a0000(%rip),%edx        # 3f0a04d9 <_end+0x3ea8f139>
     4d9:	2b 04 00             	sub    (%rax,%rax,1),%eax
     4dc:	00 14 72             	add    %dl,(%rdx,%rsi,2)
     4df:	00 00                	add    %al,(%rax)
     4e1:	00 3a                	add    %bh,(%rdx)
     4e3:	04 00                	add    $0x0,%al
     4e5:	00 13                	add    %dl,(%rbx)
     4e7:	75 03                	jne    4ec <_init-0x66c>
     4e9:	00 00                	add    %al,(%rax)
     4eb:	00 02                	add    %al,(%rdx)
     4ed:	26 11 00             	adc    %eax,%es:(%rax)
     4f0:	00 0a                	add    %cl,(%rdx)
     4f2:	41                   	rex.B
     4f3:	45 04 00             	rex.RB add $0x0,%al
     4f6:	00 12                	add    %dl,(%rdx)
     4f8:	5a                   	pop    %rdx
     4f9:	04 00                	add    $0x0,%al
     4fb:	00 13                	add    %dl,(%rbx)
     4fd:	75 03                	jne    502 <_init-0x656>
     4ff:	00 00                	add    %al,(%rax)
     501:	13 72 00             	adc    0x0(%rdx),%esi
     504:	00 00                	add    %al,(%rax)
     506:	13 72 00             	adc    0x0(%rdx),%esi
     509:	00 00                	add    %al,(%rax)
     50b:	00 02                	add    %al,(%rdx)
     50d:	c9                   	leaveq 
     50e:	0e                   	(bad)  
     50f:	00 00                	add    %al,(%rax)
     511:	0a 44 65 04          	or     0x4(%rbp,%riz,2),%al
     515:	00 00                	add    %al,(%rax)
     517:	15 72 00 00 00       	adc    $0x72,%eax
     51c:	02 06                	add    (%rsi),%al
     51e:	0b 00                	or     (%rax),%eax
     520:	00 0a                	add    %cl,(%rdx)
     522:	47 75 04             	rex.RXB jne 529 <_init-0x62f>
     525:	00 00                	add    %al,(%rax)
     527:	14 72                	adc    $0x72,%al
     529:	00 00                	add    %al,(%rax)
     52b:	00 84 04 00 00 13 84 	add    %al,-0x7bed0000(%rsp,%rax,1)
     532:	04 00                	add    $0x0,%al
     534:	00 00                	add    %al,(%rax)
     536:	07                   	(bad)  
     537:	08 2a                	or     %ch,(%rdx)
     539:	02 00                	add    (%rax),%al
     53b:	00 02                	add    %al,(%rdx)
     53d:	d9 08                	(bad)  (%rax)
     53f:	00 00                	add    %al,(%rax)
     541:	0a 4c 95 04          	or     0x4(%rbp,%rdx,4),%cl
     545:	00 00                	add    %al,(%rax)
     547:	14 72                	adc    $0x72,%al
     549:	00 00                	add    %al,(%rax)
     54b:	00 a9 04 00 00 13    	add    %ch,0x13000004(%rcx)
     551:	98                   	cwtl   
     552:	00 00                	add    %al,(%rax)
     554:	00 13                	add    %dl,(%rbx)
     556:	72 00                	jb     558 <_init-0x600>
     558:	00 00                	add    %al,(%rax)
     55a:	00 02                	add    %al,(%rdx)
     55c:	34 08                	xor    $0x8,%al
     55e:	00 00                	add    %al,(%rax)
     560:	0a 52 2b             	or     0x2b(%rdx),%dl
     563:	04 00                	add    $0x0,%al
     565:	00 02                	add    %al,(%rdx)
     567:	20 15 00 00 0a 54    	and    %dl,0x540a0000(%rip)        # 540a056d <_end+0x53a8f1cd>
     56d:	bf 04 00 00 16       	mov    $0x16000004,%edi
     572:	02 73 14             	add    0x14(%rbx),%dh
     575:	00 00                	add    %al,(%rax)
     577:	0a 55 6a             	or     0x6a(%rbp),%dl
     57a:	03 00                	add    (%rax),%eax
     57c:	00 02                	add    %al,(%rdx)
     57e:	ea                   	(bad)  
     57f:	0d 00 00 0a 59       	or     $0x590a0000,%eax
     584:	d6                   	(bad)  
     585:	04 00                	add    $0x0,%al
     587:	00 15 98 00 00 00    	add    %dl,0x98(%rip)        # 625 <_init-0x533>
     58d:	14 98                	adc    $0x98,%al
     58f:	00 00                	add    %al,(%rax)
     591:	00 ea                	add    %ch,%dl
     593:	04 00                	add    $0x0,%al
     595:	00 13                	add    %dl,(%rbx)
     597:	98                   	cwtl   
     598:	00 00                	add    %al,(%rax)
     59a:	00 00                	add    %al,(%rax)
     59c:	08 39                	or     %bh,(%rcx)
     59e:	0d 00 00 10 0b       	or     $0xb100000,%eax
     5a3:	2c 0f                	sub    $0xf,%al
     5a5:	05 00 00 09 06       	add    $0x6090000,%eax
     5aa:	05 00 00 0b 2d       	add    $0x2d0b0000,%eax
     5af:	9e                   	sahf   
     5b0:	00 00                	add    %al,(%rax)
     5b2:	00 00                	add    %al,(%rax)
     5b4:	09 63 08             	or     %esp,0x8(%rbx)
     5b7:	00 00                	add    %al,(%rax)
     5b9:	0b 2e                	or     (%rsi),%ebp
     5bb:	0f 05                	syscall 
     5bd:	00 00                	add    %al,(%rax)
     5bf:	08 00                	or     %al,(%rax)
     5c1:	07                   	(bad)  
     5c2:	08 7b 03             	or     %bh,0x3(%rbx)
     5c5:	00 00                	add    %al,(%rax)
     5c7:	02 e8                	add    %al,%ch
     5c9:	00 00                	add    %al,(%rax)
     5cb:	00 0b                	add    %cl,(%rbx)
     5cd:	2f                   	(bad)  
     5ce:	ea                   	(bad)  
     5cf:	04 00                	add    $0x0,%al
     5d1:	00 02                	add    %al,(%rdx)
     5d3:	89 10                	mov    %edx,(%rax)
     5d5:	00 00                	add    %al,(%rax)
     5d7:	0b 37                	or     (%rdi),%esi
     5d9:	2b 05 00 00 0c 15    	sub    0x150c0000(%rip),%eax        # 150c05df <_end+0x14aaf23f>
     5df:	05 00 00 3c 05       	add    $0x53c0000,%eax
     5e4:	00 00                	add    %al,(%rax)
     5e6:	17                   	(bad)  
     5e7:	38 00                	cmp    %al,(%rax)
     5e9:	00 00                	add    %al,(%rax)
     5eb:	00 01                	add    %al,(%rcx)
     5ed:	00 02                	add    %al,(%rdx)
     5ef:	90                   	nop
     5f0:	14 00                	adc    $0x0,%al
     5f2:	00 0b                	add    %cl,(%rbx)
     5f4:	38 47 05             	cmp    %al,0x5(%rdi)
     5f7:	00 00                	add    %al,(%rax)
     5f9:	07                   	(bad)  
     5fa:	08 15 05 00 00 10    	or     %dl,0x10000005(%rip)        # 10000605 <_end+0xf9ef265>
     600:	bd 06 00 00 0b       	mov    $0xb000006,%ebp
     605:	3f                   	(bad)  
     606:	20 05 00 00 10 7f    	and    %al,0x7f100000(%rip)        # 7f10060c <_end+0x7eaef26c>
     60c:	04 00                	add    $0x0,%al
     60e:	00 0b                	add    %cl,(%rbx)
     610:	3f                   	(bad)  
     611:	20 05 00 00 10 5d    	and    %al,0x5d100000(%rip)        # 5d100617 <_end+0x5caef277>
     617:	13 00                	adc    (%rax),%eax
     619:	00 0b                	add    %cl,(%rbx)
     61b:	3f                   	(bad)  
     61c:	20 05 00 00 10 2b    	and    %al,0x2b100000(%rip)        # 2b100622 <_end+0x2aaef282>
     622:	0c 00                	or     $0x0,%al
     624:	00 0b                	add    %cl,(%rbx)
     626:	40 20 05 00 00 10 bc 	and    %al,-0x43f00000(%rip)        # ffffffffbc10062d <_end+0xffffffffbbaef28d>
     62d:	05 00 00 0b 40       	add    $0x400b0000,%eax
     632:	20 05 00 00 02 65    	and    %al,0x65020000(%rip)        # 65020638 <_end+0x64a0f298>
     638:	0b 00                	or     (%rax),%eax
     63a:	00 0c 2a             	add    %cl,(%rdx,%rbp,1)
     63d:	db 04 00             	fildl  (%rax,%rax,1)
     640:	00 10                	add    %dl,(%rax)
     642:	47 10 00             	rex.RXB adc %r8b,(%r8)
     645:	00 0c 30             	add    %cl,(%rax,%rsi,1)
     648:	9a                   	(bad)  
     649:	05 00 00 07 08       	add    $0x8070000,%eax
     64e:	84 05 00 00 10 2f    	test   %al,0x2f100000(%rip)        # 2f100654 <_end+0x2eaef2b4>
     654:	04 00                	add    $0x0,%al
     656:	00 0c 36             	add    %cl,(%rsi,%rsi,1)
     659:	9a                   	(bad)  
     65a:	05 00 00 10 8f       	add    $0x8f100000,%eax
     65f:	0c 00                	or     $0x0,%al
     661:	00 0c 3b             	add    %cl,(%rbx,%rdi,1)
     664:	75 03                	jne    669 <_init-0x4ef>
     666:	00 00                	add    %al,(%rax)
     668:	10 cf                	adc    %cl,%bh
     66a:	0c 00                	or     $0x0,%al
     66c:	00 0c 40             	add    %cl,(%rax,%rax,2)
     66f:	75 03                	jne    674 <_init-0x4e4>
     671:	00 00                	add    %al,(%rax)
     673:	18 5b 07             	sbb    %bl,0x7(%rbx)
     676:	00 00                	add    %al,(%rax)
     678:	07                   	(bad)  
     679:	04 52                	add    $0x52,%al
     67b:	00 00                	add    %al,(%rax)
     67d:	00 0d 37 eb 05 00    	add    %cl,0x5eb37(%rip)        # 5f1ba <__FRAME_END__+0x5083e>
     683:	00 19                	add    %bl,(%rcx)
     685:	59                   	pop    %rcx
     686:	0b 00                	or     (%rax),%eax
     688:	00 00                	add    %al,(%rax)
     68a:	19 10                	sbb    %edx,(%rax)
     68c:	08 00                	or     %al,(%rax)
     68e:	00 01                	add    %al,(%rcx)
     690:	19 d8                	sbb    %ebx,%eax
     692:	0b 00                	or     (%rax),%eax
     694:	00 02                	add    %al,(%rdx)
     696:	19 9d 08 00 00 03    	sbb    %ebx,0x3000008(%rbp)
     69c:	00 08                	add    %cl,(%rax)
     69e:	bd 04 00 00 20       	mov    $0x20000004,%ebp
     6a3:	0d 3a 34 06 00       	or     $0x6343a,%eax
     6a8:	00 09                	add    %cl,(%rcx)
     6aa:	73 10                	jae    6bc <_init-0x49c>
     6ac:	00 00                	add    %al,(%rax)
     6ae:	0d 3b 34 06 00       	or     $0x6343b,%eax
     6b3:	00 00                	add    %al,(%rax)
     6b5:	09 fc                	or     %edi,%esp
     6b7:	00 00                	add    %al,(%rax)
     6b9:	00 0d 3c 72 00 00    	add    %cl,0x723c(%rip)        # 78fb <virtual_machine+0x4523>
     6bf:	00 08                	add    %cl,(%rax)
     6c1:	1a 65 6e             	sbb    0x6e(%rbp),%ah
     6c4:	64 00 0d 3c 72 00 00 	add    %cl,%fs:0x723c(%rip)        # 7907 <virtual_machine+0x452f>
     6cb:	00 0c 09             	add    %cl,(%rcx,%rcx,1)
     6ce:	4f 07                	rex.WRXB (bad) 
     6d0:	00 00                	add    %al,(%rax)
     6d2:	0d 3d 98 00 00       	or     $0x983d,%eax
     6d7:	00 10                	add    %dl,(%rax)
     6d9:	09 3c 0e             	or     %edi,(%rsi,%rcx,1)
     6dc:	00 00                	add    %al,(%rax)
     6de:	0d 3e c1 05 00       	or     $0x5c13e,%eax
     6e3:	00 18                	add    %bl,(%rax)
     6e5:	00 07                	add    %al,(%rdi)
     6e7:	08 eb                	or     %ch,%bl
     6e9:	05 00 00 02 95       	add    $0x95020000,%eax
     6ee:	0b 00                	or     (%rax),%eax
     6f0:	00 0d 3f eb 05 00    	add    %cl,0x5eb3f(%rip)        # 5f235 <__FRAME_END__+0x508b9>
     6f6:	00 10                	add    %dl,(%rax)
     6f8:	ba 04 00 00 0d       	mov    $0xd000004,%edx
     6fd:	42 50                	rex.X push %rax
     6ff:	06                   	(bad)  
     700:	00 00                	add    %al,(%rax)
     702:	07                   	(bad)  
     703:	08 3a                	or     %bh,(%rdx)
     705:	06                   	(bad)  
     706:	00 00                	add    %al,(%rax)
     708:	08 6a 05             	or     %ch,0x5(%rdx)
     70b:	00 00                	add    %al,(%rax)
     70d:	10 0d 45 7b 06 00    	adc    %cl,0x67b45(%rip)        # 68258 <__FRAME_END__+0x598dc>
     713:	00 09                	add    %cl,(%rcx)
     715:	2d 13 00 00 0d       	sub    $0xd000013,%eax
     71a:	46 c8 02 00 00       	rex.RX enterq $0x2,$0x0
     71f:	00 09                	add    %cl,(%rcx)
     721:	63 08                	movslq (%rax),%ecx
     723:	00 00                	add    %al,(%rax)
     725:	0d 47 0f 05 00       	or     $0x50f47,%eax
     72a:	00 08                	add    %cl,(%rax)
     72c:	00 02                	add    %al,(%rdx)
     72e:	51                   	push   %rcx
     72f:	11 00                	adc    %eax,(%rax)
     731:	00 0d 48 56 06 00    	add    %cl,0x65648(%rip)        # 65d7f <__FRAME_END__+0x57403>
     737:	00 10                	add    %dl,(%rax)
     739:	6b 05 00 00 0d 4a 91 	imul   $0xffffff91,0x4a0d0000(%rip),%eax        # 4a0d0740 <_end+0x49abf3a0>
     740:	06                   	(bad)  
     741:	00 00                	add    %al,(%rax)
     743:	07                   	(bad)  
     744:	08 97 06 00 00 07    	or     %dl,0x7000006(%rdi)
     74a:	08 7b 06             	or     %bh,0x6(%rbx)
     74d:	00 00                	add    %al,(%rax)
     74f:	0f 41 0e             	cmovno (%rsi),%ecx
     752:	00 00                	add    %al,(%rax)
     754:	0d ee 01 c8 02       	or     $0x2c801ee,%eax
     759:	00 00                	add    %al,(%rax)
     75b:	0f 93 0f             	setae  (%rdi)
     75e:	00 00                	add    %al,(%rax)
     760:	0d ef 01 72 00       	or     $0x7201ef,%eax
     765:	00 00                	add    %al,(%rax)
     767:	0f 7f 08             	movq   %mm1,(%rax)
     76a:	00 00                	add    %al,(%rax)
     76c:	0d f2 01 72 00       	or     $0x7201f2,%eax
     771:	00 00                	add    %al,(%rax)
     773:	0f 22 08             	mov    %rax,%cr1
     776:	00 00                	add    %al,(%rax)
     778:	0d f5 01 38 00       	or     $0x3801f5,%eax
     77d:	00 00                	add    %al,(%rax)
     77f:	0f 05                	syscall 
     781:	11 00                	adc    %eax,(%rax)
     783:	00 0d f9 01 72 00    	add    %cl,0x7201f9(%rip)        # 720982 <_end+0x10f5e2>
     789:	00 00                	add    %al,(%rax)
     78b:	0f eb 0b             	por    (%rbx),%mm1
     78e:	00 00                	add    %al,(%rax)
     790:	0d fd 01 72 00       	or     $0x7201fd,%eax
     795:	00 00                	add    %al,(%rax)
     797:	0f ff 07             	ud0    (%rdi),%eax
     79a:	00 00                	add    %al,(%rax)
     79c:	0d 01 02 c8 02       	or     $0x2c80201,%eax
     7a1:	00 00                	add    %al,(%rax)
     7a3:	0f a3 12             	bt     %edx,(%rdx)
     7a6:	00 00                	add    %al,(%rax)
     7a8:	0d 05 02 98 00       	or     $0x980205,%eax
     7ad:	00 00                	add    %al,(%rax)
     7af:	0f 07                	sysret 
     7b1:	07                   	(bad)  
     7b2:	00 00                	add    %al,(%rax)
     7b4:	0d 09 02 98 00       	or     $0x980209,%eax
     7b9:	00 00                	add    %al,(%rax)
     7bb:	0f 81 14 00 00 0d    	jno    d0007d5 <_end+0xc9ef435>
     7c1:	0c 02                	or     $0x2,%al
     7c3:	98                   	cwtl   
     7c4:	00 00                	add    %al,(%rax)
     7c6:	00 0f                	add    %cl,(%rdi)
     7c8:	1d 11 00 00 0d       	sbb    $0xd000011,%eax
     7cd:	0f 02 72 00          	lar    0x0(%rdx),%esi
     7d1:	00 00                	add    %al,(%rax)
     7d3:	0f 82 10 00 00 0d    	jb     d0007e9 <_end+0xc9ef449>
     7d9:	10 02                	adc    %al,(%rdx)
     7db:	72 00                	jb     7dd <_init-0x37b>
     7dd:	00 00                	add    %al,(%rax)
     7df:	0f 32                	rdmsr  
     7e1:	13 00                	adc    (%rax),%eax
     7e3:	00 0d 13 02 72 00    	add    %cl,0x720213(%rip)        # 7209fc <_end+0x10f65c>
     7e9:	00 00                	add    %al,(%rax)
     7eb:	0f 8b 01 00 00 0d    	jnp    d0007f2 <_end+0xc9ef452>
     7f1:	17                   	(bad)  
     7f2:	02 72 00             	add    0x0(%rdx),%dh
     7f5:	00 00                	add    %al,(%rax)
     7f7:	0f 69 11             	punpckhwd (%rcx),%mm2
     7fa:	00 00                	add    %al,(%rax)
     7fc:	0d 1a 02 72 00       	or     $0x72021a,%eax
     801:	00 00                	add    %al,(%rax)
     803:	0f 70 0f 00          	pshufw $0x0,(%rdi),%mm1
     807:	00 0d 1f 02 72 00    	add    %cl,0x72021f(%rip)        # 720a2c <_end+0x10f68c>
     80d:	00 00                	add    %al,(%rax)
     80f:	0f 99 02             	setns  (%rdx)
     812:	00 00                	add    %al,(%rax)
     814:	0d 23 02 72 00       	or     $0x720223,%eax
     819:	00 00                	add    %al,(%rax)
     81b:	0f 73                	(bad)  
     81d:	09 00                	or     %eax,(%rax)
     81f:	00 0d 26 02 72 00    	add    %cl,0x720226(%rip)        # 720a4b <_end+0x10f6ab>
     825:	00 00                	add    %al,(%rax)
     827:	0f 7f 0f             	movq   %mm1,(%rdi)
     82a:	00 00                	add    %al,(%rax)
     82c:	0d 29 02 0f 05       	or     $0x50f0229,%eax
     831:	00 00                	add    %al,(%rax)
     833:	0f c0 0d 00 00 0d 2c 	xadd   %cl,0x2c0d0000(%rip)        # 2c0d083a <_end+0x2babf49a>
     83a:	02 c8                	add    %al,%cl
     83c:	02 00                	add    (%rax),%al
     83e:	00 0f                	add    %cl,(%rdi)
     840:	be 15 00 00 0d       	mov    $0xd000015,%esi
     845:	2f                   	(bad)  
     846:	02 84 04 00 00 0f a6 	add    -0x59f10000(%rsp,%rax,1),%al
     84d:	08 00                	or     %al,(%rax)
     84f:	00 0d 30 02 84 04    	add    %cl,0x4840230(%rip)        # 4840a85 <_end+0x422f6e5>
     855:	00 00                	add    %al,(%rax)
     857:	0f 95 11             	setne  (%rcx)
     85a:	00 00                	add    %al,(%rax)
     85c:	0d 35 02 72 00       	or     $0x720235,%eax
     861:	00 00                	add    %al,(%rax)
     863:	0f d8 00             	psubusb (%rax),%mm0
     866:	00 00                	add    %al,(%rax)
     868:	0d 39 02 bd 07       	or     $0x7bd0239,%eax
     86d:	00 00                	add    %al,(%rax)
     86f:	07                   	(bad)  
     870:	08 5a 04             	or     %bl,0x4(%rdx)
     873:	00 00                	add    %al,(%rax)
     875:	0f ac 15 00 00 0d 3e 	shrd   $0x2,%edx,0x3e0d0000(%rip)        # 3e0d087d <_end+0x3dabf4dd>
     87c:	02 
     87d:	bd 07 00 00 0f       	mov    $0xf000007,%ebp
     882:	65 09 00             	or     %eax,%gs:(%rax)
     885:	00 0d 42 02 bd 07    	add    %cl,0x7bd0242(%rip)        # 7bd0acd <_end+0x75bf72d>
     88b:	00 00                	add    %al,(%rax)
     88d:	0f 3f                	(bad)  
     88f:	0c 00                	or     $0x0,%al
     891:	00 0d 45 02 bd 07    	add    %cl,0x7bd0245(%rip)        # 7bd0adc <_end+0x75bf73c>
     897:	00 00                	add    %al,(%rax)
     899:	0f ad 14 00          	shrd   %cl,%edx,(%rax,%rax,1)
     89d:	00 0d 49 02 bd 07    	add    %cl,0x7bd0249(%rip)        # 7bd0aec <_end+0x75bf74c>
     8a3:	00 00                	add    %al,(%rax)
     8a5:	0f 5b 08             	cvtdq2ps (%rax),%xmm1
     8a8:	00 00                	add    %al,(%rax)
     8aa:	0d 4d 02 ff 07       	or     $0x7ff024d,%eax
     8af:	00 00                	add    %al,(%rax)
     8b1:	07                   	(bad)  
     8b2:	08 6a 04             	or     %ch,0x4(%rdx)
     8b5:	00 00                	add    %al,(%rax)
     8b7:	0f                   	(bad)  
     8b8:	0f 0e                	femms  
     8ba:	00 00                	add    %al,(%rax)
     8bc:	0d 4f 02 11 08       	or     $0x811024f,%eax
     8c1:	00 00                	add    %al,(%rax)
     8c3:	07                   	(bad)  
     8c4:	08 b4 04 00 00 0f 5d 	or     %dh,0x5d0f0000(%rsp,%rax,1)
     8cb:	04 00                	add    $0x0,%al
     8cd:	00 0d 51 02 23 08    	add    %cl,0x8230251(%rip)        # 8230b24 <_end+0x7c1f784>
     8d3:	00 00                	add    %al,(%rax)
     8d5:	07                   	(bad)  
     8d6:	08 c0                	or     %al,%al
     8d8:	04 00                	add    $0x0,%al
     8da:	00 0f                	add    %cl,(%rdi)
     8dc:	39 11                	cmp    %edx,(%rcx)
     8de:	00 00                	add    %al,(%rax)
     8e0:	0d 52 02 11 08       	or     $0x8110252,%eax
     8e5:	00 00                	add    %al,(%rax)
     8e7:	0f bd 08             	bsr    (%rax),%ecx
     8ea:	00 00                	add    %al,(%rax)
     8ec:	0d 55 02 3c 05       	or     $0x53c0255,%eax
     8f1:	00 00                	add    %al,(%rax)
     8f3:	0f b7 0e             	movzwl (%rsi),%ecx
     8f6:	00 00                	add    %al,(%rax)
     8f8:	0d 56 02 3c 05       	or     $0x53c0256,%eax
     8fd:	00 00                	add    %al,(%rax)
     8ff:	0f 4c 04 00          	cmovl  (%rax,%rax,1),%eax
     903:	00 0d 58 02 72 00    	add    %cl,0x720258(%rip)        # 720b61 <_end+0x10f7c1>
     909:	00 00                	add    %al,(%rax)
     90b:	0f cc                	bswap  %esp
     90d:	0f 00 00             	sldt   (%rax)
     910:	0d 59 02 98 00       	or     $0x980259,%eax
     915:	00 00                	add    %al,(%rax)
     917:	0f b5 0f             	lgs    (%rdi),%ecx
     91a:	00 00                	add    %al,(%rax)
     91c:	0d 5a 02 72 00       	or     $0x72025a,%eax
     921:	00 00                	add    %al,(%rax)
     923:	0f 2c 12             	cvttps2pi (%rdx),%mm2
     926:	00 00                	add    %al,(%rax)
     928:	0d 60 02 72 00       	or     $0x720260,%eax
     92d:	00 00                	add    %al,(%rax)
     92f:	0f 25                	(bad)  
     931:	09 00                	or     %eax,(%rax)
     933:	00 0d 65 02 72 00    	add    %cl,0x720265(%rip)        # 720b9e <_end+0x10f7fe>
     939:	00 00                	add    %al,(%rax)
     93b:	0f 5b 0f             	cvtdq2ps (%rdi),%xmm1
     93e:	00 00                	add    %al,(%rax)
     940:	0d 69 02 72 00       	or     $0x720269,%eax
     945:	00 00                	add    %al,(%rax)
     947:	0f b8                	(bad)  
     949:	01 00                	add    %eax,(%rax)
     94b:	00 0d 6c 02 98 00    	add    %cl,0x98026c(%rip)        # 980bbd <_end+0x36f81d>
     951:	00 00                	add    %al,(%rax)
     953:	0f                   	maskmovq (bad),%mm1
     954:	f7 0d 00 00 0d 71 02 	testl  $0x7202,0x710d0000(%rip)        # 710d095e <_end+0x70abf5be>
     95b:	72 00 00 
     95e:	00 0f                	add    %cl,(%rdi)
     960:	42 08 00             	rex.X or %al,(%rax)
     963:	00 0d 78 02 72 00    	add    %cl,0x720278(%rip)        # 720be1 <_end+0x10f841>
     969:	00 00                	add    %al,(%rax)
     96b:	0f e6                	(bad)  
     96d:	06                   	(bad)  
     96e:	00 00                	add    %al,(%rax)
     970:	0d 7c 02 72 00       	or     $0x72027c,%eax
     975:	00 00                	add    %al,(%rax)
     977:	0f e2 07             	psrad  (%rdi),%mm0
     97a:	00 00                	add    %al,(%rax)
     97c:	0d 82 02 d1 08       	or     $0x8d10282,%eax
     981:	00 00                	add    %al,(%rax)
     983:	07                   	(bad)  
     984:	08 9a 03 00 00 0f    	or     %bl,0xf000003(%rdx)
     98a:	e9 0c 00 00 0d       	jmpq   d00099b <_end+0xc9ef5fb>
     98f:	86 02                	xchg   %al,(%rdx)
     991:	d1 08                	rorl   (%rax)
     993:	00 00                	add    %al,(%rax)
     995:	0f 51 06             	sqrtps (%rsi),%xmm0
     998:	00 00                	add    %al,(%rax)
     99a:	0d 8e 02 ef 08       	or     $0x8ef028e,%eax
     99f:	00 00                	add    %al,(%rax)
     9a1:	07                   	(bad)  
     9a2:	08 20                	or     %ah,(%rax)
     9a4:	04 00                	add    $0x0,%al
     9a6:	00 0f                	add    %cl,(%rdi)
     9a8:	c5 13 00             	(bad)  
     9ab:	00 0d 97 02 01 09    	add    %cl,0x9010297(%rip)        # 9010c48 <_end+0x89ff8a8>
     9b1:	00 00                	add    %al,(%rax)
     9b3:	07                   	(bad)  
     9b4:	08 b9 03 00 00 0f    	or     %bh,0xf000003(%rcx)
     9ba:	ee                   	out    %al,(%dx)
     9bb:	13 00                	adc    (%rax),%eax
     9bd:	00 0d 9c 02 c8 02    	add    %cl,0x2c8029c(%rip)        # 2c80c5f <_end+0x266f8bf>
     9c3:	00 00                	add    %al,(%rax)
     9c5:	0f e7 02             	movntq %mm0,(%rdx)
     9c8:	00 00                	add    %al,(%rax)
     9ca:	0d a1 02 98 00       	or     $0x9802a1,%eax
     9cf:	00 00                	add    %al,(%rax)
     9d1:	0f 20 10             	mov    %cr2,%rax
     9d4:	00 00                	add    %al,(%rax)
     9d6:	0d a6 02 2b 09       	or     $0x92b02a6,%eax
     9db:	00 00                	add    %al,(%rax)
     9dd:	07                   	(bad)  
     9de:	08 cb                	or     %cl,%bl
     9e0:	04 00                	add    $0x0,%al
     9e2:	00 0f                	add    %cl,(%rdi)
     9e4:	c7                   	(bad)  
     9e5:	09 00                	or     %eax,(%rax)
     9e7:	00 0d ac 02 c8 02    	add    %cl,0x2c802ac(%rip)        # 2c80c99 <_end+0x266f8f9>
     9ed:	00 00                	add    %al,(%rax)
     9ef:	0f 77                	emms   
     9f1:	12 00                	adc    (%rax),%al
     9f3:	00 0d af 02 c8 02    	add    %cl,0x2c802af(%rip)        # 2c80ca8 <_end+0x266f908>
     9f9:	00 00                	add    %al,(%rax)
     9fb:	0f 16 06             	movhps (%rsi),%xmm0
     9fe:	00 00                	add    %al,(%rax)
     a00:	0d b2 02 c8 02       	or     $0x2c802b2,%eax
     a05:	00 00                	add    %al,(%rax)
     a07:	0f 4d 05 00 00 0d b7 	cmovge -0x48f30000(%rip),%eax        # ffffffffb70d0a0e <_end+0xffffffffb6abf66e>
     a0e:	02 c8                	add    %al,%cl
     a10:	02 00                	add    (%rax),%al
     a12:	00 0f                	add    %cl,(%rdi)
     a14:	7b 0e                	jnp    a24 <_init-0x134>
     a16:	00 00                	add    %al,(%rax)
     a18:	0d c2 02 6d 09       	or     $0x96d02c2,%eax
     a1d:	00 00                	add    %al,(%rax)
     a1f:	07                   	(bad)  
     a20:	08 a9 04 00 00 0f    	or     %ch,0xf000004(%rcx)
     a26:	ad                   	lods   %ds:(%rsi),%eax
     a27:	07                   	(bad)  
     a28:	00 00                	add    %al,(%rax)
     a2a:	0d cf 02 6d 09       	or     $0x96d02cf,%eax
     a2f:	00 00                	add    %al,(%rax)
     a31:	0f 72                	(bad)  
     a33:	05 00 00 0d d6       	add    $0xd60d0000,%eax
     a38:	02 6d 09             	add    0x9(%rbp),%ch
     a3b:	00 00                	add    %al,(%rax)
     a3d:	0f 8f 06 00 00 0d    	jg     d000a49 <_end+0xc9ef6a9>
     a43:	e1 02                	loope  a47 <_init-0x111>
     a45:	97                   	xchg   %eax,%edi
     a46:	09 00                	or     %eax,(%rax)
     a48:	00 07                	add    %al,(%rdi)
     a4a:	08 01                	or     %al,(%rcx)
     a4c:	04 00                	add    $0x0,%al
     a4e:	00 0f                	add    %cl,(%rdi)
     a50:	7a 15                	jp     a67 <_init-0xf1>
     a52:	00 00                	add    %al,(%rax)
     a54:	0d ed 02 a9 09       	or     $0x9a902ed,%eax
     a59:	00 00                	add    %al,(%rax)
     a5b:	07                   	(bad)  
     a5c:	08 3a                	or     %bh,(%rdx)
     a5e:	04 00                	add    $0x0,%al
     a60:	00 0f                	add    %cl,(%rdi)
     a62:	19 07                	sbb    %eax,(%rdi)
     a64:	00 00                	add    %al,(%rax)
     a66:	0d f2 02 72 00       	or     $0x7202f2,%eax
     a6b:	00 00                	add    %al,(%rax)
     a6d:	0f 96 03             	setbe  (%rbx)
     a70:	00 00                	add    %al,(%rax)
     a72:	0d f9 02 72 00       	or     $0x7202f9,%eax
     a77:	00 00                	add    %al,(%rax)
     a79:	0f 16 0d 00 00 0d ff 	movhps -0xf30000(%rip),%xmm1        # ffffffffff0d0a80 <_end+0xfffffffffeabf6e0>
     a80:	02 d3                	add    %bl,%dl
     a82:	09 00                	or     %eax,(%rax)
     a84:	00 07                	add    %al,(%rdi)
     a86:	08 dd                	or     %bl,%ch
     a88:	03 00                	add    (%rax),%eax
     a8a:	00 0f                	add    %cl,(%rdi)
     a8c:	c8 02 00 00          	enterq $0x2,$0x0
     a90:	0d 04 03 97 09       	or     $0x9970304,%eax
     a95:	00 00                	add    %al,(%rax)
     a97:	0f 41 13             	cmovno (%rbx),%edx
     a9a:	00 00                	add    %al,(%rax)
     a9c:	0d 09 03 f1 09       	or     $0x9f10309,%eax
     aa1:	00 00                	add    %al,(%rax)
     aa3:	07                   	(bad)  
     aa4:	08 8a 04 00 00 0f    	or     %cl,0xf000004(%rdx)
     aaa:	0c 0a                	or     $0xa,%al
     aac:	00 00                	add    %al,(%rax)
     aae:	0d 0d 03 72 00       	or     $0x72030d,%eax
     ab3:	00 00                	add    %al,(%rax)
     ab5:	0f f8 04 00          	psubb  (%rax,%rax,1),%mm0
     ab9:	00 0d 12 03 72 00    	add    %cl,0x720312(%rip)        # 720dd1 <_end+0x10fa31>
     abf:	00 00                	add    %al,(%rax)
     ac1:	0f f1 09             	psllw  (%rcx),%mm1
     ac4:	00 00                	add    %al,(%rax)
     ac6:	0d 15 03 72 00       	or     $0x720315,%eax
     acb:	00 00                	add    %al,(%rax)
     acd:	0f d5 12             	pmullw (%rdx),%mm2
     ad0:	00 00                	add    %al,(%rax)
     ad2:	0d 1a 03 72 00       	or     $0x72031a,%eax
     ad7:	00 00                	add    %al,(%rax)
     ad9:	0f a9                	popq   %gs
     adb:	02 00                	add    (%rax),%al
     add:	00 0d 1e 03 72 00    	add    %cl,0x72031e(%rip)        # 720e01 <_end+0x10fa61>
     ae3:	00 00                	add    %al,(%rax)
     ae5:	0f b1 0c 00          	cmpxchg %ecx,(%rax,%rax,1)
     ae9:	00 0d 22 03 72 00    	add    %cl,0x720322(%rip)        # 720e11 <_end+0x10fa71>
     aef:	00 00                	add    %al,(%rax)
     af1:	0f 14 03             	unpcklps (%rbx),%xmm0
     af4:	00 00                	add    %al,(%rax)
     af6:	0d 26 03 72 00       	or     $0x720326,%eax
     afb:	00 00                	add    %al,(%rax)
     afd:	0f 2a 01             	cvtpi2ps (%rcx),%xmm0
     b00:	00 00                	add    %al,(%rax)
     b02:	0d 2a 03 72 00       	or     $0x72032a,%eax
     b07:	00 00                	add    %al,(%rax)
     b09:	0f 80 0d 00 00 0d    	jo     d000b1c <_end+0xc9ef77c>
     b0f:	2f                   	(bad)  
     b10:	03 72 00             	add    0x0(%rdx),%esi
     b13:	00 00                	add    %al,(%rax)
     b15:	0f a1                	popq   %fs
     b17:	13 00                	adc    (%rax),%eax
     b19:	00 0d 32 03 72 00    	add    %cl,0x720332(%rip)        # 720e51 <_end+0x10fab1>
     b1f:	00 00                	add    %al,(%rax)
     b21:	0f d4 03             	paddq  (%rbx),%mm0
     b24:	00 00                	add    %al,(%rax)
     b26:	0d 3d 03 72 00       	or     $0x72033d,%eax
     b2b:	00 00                	add    %al,(%rax)
     b2d:	0f a4 10 00          	shld   $0x0,%edx,(%rax)
     b31:	00 0d 40 03 72 00    	add    %cl,0x720340(%rip)        # 720e77 <_end+0x10fad7>
     b37:	00 00                	add    %al,(%rax)
     b39:	0f b9 03             	ud1    (%rbx),%eax
     b3c:	00 00                	add    %al,(%rax)
     b3e:	0d 44 03 72 00       	or     $0x720344,%eax
     b43:	00 00                	add    %al,(%rax)
     b45:	0f 5c 15 00 00 0d 4c 	subps  0x4c0d0000(%rip),%xmm2        # 4c0d0b4c <_end+0x4babf7ac>
     b4c:	03 72 00             	add    0x0(%rdx),%esi
     b4f:	00 00                	add    %al,(%rax)
     b51:	0c 98                	or     $0x98,%al
     b53:	00 00                	add    %al,(%rax)
     b55:	00 af 0a 00 00 0d    	add    %ch,0xd00000a(%rdi)
     b5b:	38 00                	cmp    %al,(%rax)
     b5d:	00 00                	add    %al,(%rax)
     b5f:	01 00                	add    %eax,(%rax)
     b61:	10 8f 05 00 00 0e    	adc    %cl,0xe000005(%rdi)
     b67:	9f                   	lahf   
     b68:	9f                   	lahf   
     b69:	0a 00                	or     (%rax),%al
     b6b:	00 10                	add    %dl,(%rax)
     b6d:	91                   	xchg   %eax,%ecx
     b6e:	12 00                	adc    (%rax),%al
     b70:	00 0e                	add    %cl,(%rsi)
     b72:	a0 72 00 00 00 10 de 	movabs 0x4de1000000072,%al
     b79:	04 00 
     b7b:	00 0e                	add    %cl,(%rsi)
     b7d:	a1 79 00 00 00 10 91 	movabs 0x5911000000079,%eax
     b84:	05 00 
     b86:	00 0e                	add    %cl,(%rsi)
     b88:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     b89:	9f                   	lahf   
     b8a:	0a 00                	or     (%rax),%al
     b8c:	00 10                	add    %dl,(%rax)
     b8e:	93                   	xchg   %eax,%ebx
     b8f:	12 00                	adc    (%rax),%al
     b91:	00 0e                	add    %cl,(%rsi)
     b93:	ae                   	scas   %es:(%rdi),%al
     b94:	72 00                	jb     b96 <strcpy@plt+0x6>
     b96:	00 00                	add    %al,(%rax)
     b98:	10 e0                	adc    %ah,%al
     b9a:	04 00                	add    $0x0,%al
     b9c:	00 0e                	add    %cl,(%rsi)
     b9e:	af                   	scas   %es:(%rdi),%eax
     b9f:	79 00                	jns    ba1 <toupper@plt+0x1>
     ba1:	00 00                	add    %al,(%rax)
     ba3:	10 47 0d             	adc    %al,0xd(%rdi)
     ba6:	00 00                	add    %al,(%rax)
     ba8:	0f f9 72 00          	psubw  0x0(%rdx),%mm6
     bac:	00 00                	add    %al,(%rax)
     bae:	10 71 0d             	adc    %dh,0xd(%rcx)
     bb1:	00 00                	add    %al,(%rax)
     bb3:	0f fa 72 00          	psubd  0x0(%rdx),%mm6
     bb7:	00 00                	add    %al,(%rax)
     bb9:	10 92 07 00 00 0f    	adc    %dl,0xf000007(%rdx)
     bbf:	fb                   	sti    
     bc0:	72 00                	jb     bc2 <add_history@plt+0x2>
     bc2:	00 00                	add    %al,(%rax)
     bc4:	10 86 0b 00 00 0f    	adc    %al,0xf00000b(%rsi)
     bca:	fc                   	cld    
     bcb:	72 00                	jb     bcd <add_history@plt+0xd>
     bcd:	00 00                	add    %al,(%rax)
     bcf:	10 0c 0f             	adc    %cl,(%rdi,%rcx,1)
     bd2:	00 00                	add    %al,(%rax)
     bd4:	0f fe 72 00          	paddd  0x0(%rdx),%mm6
     bd8:	00 00                	add    %al,(%rax)
     bda:	10 ea                	adc    %ch,%dl
     bdc:	14 00                	adc    $0x0,%al
     bde:	00 0f                	add    %cl,(%rdi)
     be0:	ff 72 00             	pushq  0x0(%rdx)
     be3:	00 00                	add    %al,(%rax)
     be5:	0f a0                	pushq  %fs
     be7:	0e                   	(bad)  
     be8:	00 00                	add    %al,(%rax)
     bea:	0f 01 01             	sgdt   (%rcx)
     bed:	9e                   	sahf   
     bee:	00 00                	add    %al,(%rax)
     bf0:	00 0f                	add    %cl,(%rdi)
     bf2:	03 09                	add    (%rcx),%ecx
     bf4:	00 00                	add    %al,(%rax)
     bf6:	0f 02 01             	lar    (%rcx),%eax
     bf9:	9e                   	sahf   
     bfa:	00 00                	add    %al,(%rax)
     bfc:	00 0f                	add    %cl,(%rdi)
     bfe:	08 15 00 00 0f 03    	or     %dl,0x30f0000(%rip)        # 30f0c04 <_end+0x2adf864>
     c04:	01 98 00 00 00 0f    	add    %ebx,0xf000000(%rax)
     c0a:	4c 0a 00             	rex.WR or (%rax),%r8b
     c0d:	00 0f                	add    %cl,(%rdi)
     c0f:	04 01                	add    $0x1,%al
     c11:	9e                   	sahf   
     c12:	00 00                	add    %al,(%rax)
     c14:	00 0f                	add    %cl,(%rdi)
     c16:	59                   	pop    %rcx
     c17:	02 00                	add    (%rax),%al
     c19:	00 0f                	add    %cl,(%rdi)
     c1b:	05 01 98 00 00       	add    $0x9801,%eax
     c20:	00 0f                	add    %cl,(%rdi)
     c22:	9f                   	lahf   
     c23:	0a 00                	or     (%rax),%al
     c25:	00 0f                	add    %cl,(%rdi)
     c27:	06                   	(bad)  
     c28:	01 98 00 00 00 0f    	add    %ebx,0xf000000(%rax)
     c2e:	54                   	push   %rsp
     c2f:	0e                   	(bad)  
     c30:	00 00                	add    %al,(%rax)
     c32:	0f 07                	sysret 
     c34:	01 72 00             	add    %esi,0x0(%rdx)
     c37:	00 00                	add    %al,(%rax)
     c39:	0f 64 03             	pcmpgtb (%rbx),%mm0
     c3c:	00 00                	add    %al,(%rax)
     c3e:	0f 09                	wbinvd 
     c40:	01 72 00             	add    %esi,0x0(%rdx)
     c43:	00 00                	add    %al,(%rax)
     c45:	0f b4 12             	lfs    (%rdx),%edx
     c48:	00 00                	add    %al,(%rax)
     c4a:	0f 0c                	(bad)  
     c4c:	01 72 00             	add    %esi,0x0(%rdx)
     c4f:	00 00                	add    %al,(%rax)
     c51:	0f 9b 04 00          	setnp  (%rax,%rax,1)
     c55:	00 0f                	add    %cl,(%rdi)
     c57:	0d 01 72 00 00       	or     $0x7201,%eax
     c5c:	00 0f                	add    %cl,(%rdi)
     c5e:	33 06                	xor    (%rsi),%eax
     c60:	00 00                	add    %al,(%rax)
     c62:	0f 10 01             	movups (%rcx),%xmm0
     c65:	72 00                	jb     c67 <close@plt+0x7>
     c67:	00 00                	add    %al,(%rax)
     c69:	0f 29 0f             	movaps %xmm1,(%rdi)
     c6c:	00 00                	add    %al,(%rax)
     c6e:	0f 15 01             	unpckhps (%rcx),%xmm0
     c71:	f1                   	icebp  
     c72:	09 00                	or     %eax,(%rax)
     c74:	00 1b                	add    %bl,(%rbx)
     c76:	80 01 01             	addb   $0x1,(%rcx)
     c79:	1e                   	(bad)  
     c7a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     c7b:	0c 00                	or     $0x0,%al
     c7d:	00 09                	add    %cl,(%rcx)
     c7f:	8c 0f                	mov    %cs,(%rdi)
     c81:	00 00                	add    %al,(%rax)
     c83:	01 1f                	add    %ebx,(%rdi)
     c85:	46 03 00             	rex.RX add (%rax),%r8d
     c88:	00 00                	add    %al,(%rax)
     c8a:	1a 6f 53             	sbb    0x53(%rdi),%ch
     c8d:	50                   	push   %rax
     c8e:	00 01                	add    %al,(%rcx)
     c90:	20 46 03             	and    %al,0x3(%rsi)
     c93:	00 00                	add    %al,(%rax)
     c95:	04 09                	add    $0x9,%al
     c97:	58                   	pop    %rax
     c98:	11 00                	adc    %eax,(%rax)
     c9a:	00 01                	add    %al,(%rcx)
     c9c:	21 46 03             	and    %eax,0x3(%rsi)
     c9f:	00 00                	add    %al,(%rax)
     ca1:	08 09                	or     %cl,(%rcx)
     ca3:	89 03                	mov    %eax,(%rbx)
     ca5:	00 00                	add    %al,(%rax)
     ca7:	01 22                	add    %esp,(%rdx)
     ca9:	46 03 00             	rex.RX add (%rax),%r8d
     cac:	00 0c 09             	add    %cl,(%rcx,%rcx,1)
     caf:	fc                   	cld    
     cb0:	03 00                	add    (%rax),%eax
     cb2:	00 01                	add    %al,(%rcx)
     cb4:	23 a5 0c 00 00 10    	and    0x1000000c(%rbp),%esp
     cba:	1c 53                	sbb    $0x53,%al
     cbc:	0b 00                	or     (%rax),%eax
     cbe:	00 01                	add    %al,(%rcx)
     cc0:	24 46                	and    $0x46,%al
     cc2:	03 00                	add    (%rax),%eax
     cc4:	00 10                	add    %dl,(%rax)
     cc6:	01 1c 78             	add    %ebx,(%rax,%rdi,2)
     cc9:	02 00                	add    (%rax),%al
     ccb:	00 01                	add    %al,(%rcx)
     ccd:	25 46 03 00 00       	and    $0x346,%eax
     cd2:	14 01                	adc    $0x1,%al
     cd4:	1c 17                	sbb    $0x17,%al
     cd6:	10 00                	adc    %al,(%rax)
     cd8:	00 01                	add    %al,(%rcx)
     cda:	26 46 03 00          	rex.RX add %es:(%rax),%r8d
     cde:	00 18                	add    %bl,(%rax)
     ce0:	01 1c 22             	add    %ebx,(%rdx,%riz,1)
     ce3:	02 00                	add    (%rax),%al
     ce5:	00 01                	add    %al,(%rcx)
     ce7:	27                   	(bad)  
     ce8:	46 03 00             	rex.RX add (%rax),%r8d
     ceb:	00 1c 01             	add    %bl,(%rcx,%rax,1)
     cee:	1c b0                	sbb    $0xb0,%al
     cf0:	01 00                	add    %eax,(%rax)
     cf2:	00 01                	add    %al,(%rcx)
     cf4:	28 46 03             	sub    %al,0x3(%rsi)
     cf7:	00 00                	add    %al,(%rax)
     cf9:	20 01                	and    %al,(%rcx)
     cfb:	1c 89                	sbb    $0x89,%al
     cfd:	0c 00                	or     $0x0,%al
     cff:	00 01                	add    %al,(%rcx)
     d01:	29 46 03             	sub    %eax,0x3(%rsi)
     d04:	00 00                	add    %al,(%rax)
     d06:	24 01                	and    $0x1,%al
     d08:	1c 78                	sbb    $0x78,%al
     d0a:	0a 00                	or     (%rax),%al
     d0c:	00 01                	add    %al,(%rcx)
     d0e:	2a 46 03             	sub    0x3(%rsi),%al
     d11:	00 00                	add    %al,(%rax)
     d13:	28 01                	sub    %al,(%rcx)
     d15:	1c a9                	sbb    $0xa9,%al
     d17:	0c 00                	or     $0x0,%al
     d19:	00 01                	add    %al,(%rcx)
     d1b:	2b 46 03             	sub    0x3(%rsi),%eax
     d1e:	00 00                	add    %al,(%rax)
     d20:	2c 01                	sub    $0x1,%al
     d22:	1c 82                	sbb    $0x82,%al
     d24:	01 00                	add    %eax,(%rax)
     d26:	00 01                	add    %al,(%rcx)
     d28:	2c b5                	sub    $0xb5,%al
     d2a:	0c 00                	or     $0x0,%al
     d2c:	00 30                	add    %dh,(%rax)
     d2e:	01 1c ab             	add    %ebx,(%rbx,%rbp,4)
     d31:	05 00 00 01 2d       	add    $0x2d010000,%eax
     d36:	46 03 00             	rex.RX add (%rax),%r8d
     d39:	00 74 01 1c          	add    %dh,0x1c(%rcx,%rax,1)
     d3d:	80 0a 00             	orb    $0x0,(%rdx)
     d40:	00 01                	add    %al,(%rcx)
     d42:	2e 46 03 00          	rex.RX add %cs:(%rax),%r8d
     d46:	00 78 01             	add    %bh,0x1(%rax)
     d49:	1c 54                	sbb    $0x54,%al
     d4b:	08 00                	or     %al,(%rax)
     d4d:	00 01                	add    %al,(%rcx)
     d4f:	2f                   	(bad)  
     d50:	46 03 00             	rex.RX add (%rax),%r8d
     d53:	00 7c 01 00          	add    %bh,0x0(%rcx,%rax,1)
     d57:	0c 30                	or     $0x30,%al
     d59:	03 00                	add    (%rax),%eax
     d5b:	00 b5 0c 00 00 0d    	add    %dh,0xd00000c(%rbp)
     d61:	38 00                	cmp    %al,(%rax)
     d63:	00 00                	add    %al,(%rax)
     d65:	ff 00                	incl   (%rax)
     d67:	0c 46                	or     $0x46,%al
     d69:	03 00                	add    (%rax),%eax
     d6b:	00 c5                	add    %al,%ch
     d6d:	0c 00                	or     $0x0,%al
     d6f:	00 0d 38 00 00 00    	add    %cl,0x38(%rip)        # dad <register_tm_clones+0x1d>
     d75:	10 00                	adc    %al,(%rax)
     d77:	02 19                	add    (%rcx),%bl
     d79:	02 00                	add    (%rax),%al
     d7b:	00 01                	add    %al,(%rcx)
     d7d:	34 c3                	xor    $0xc3,%al
     d7f:	0b 00                	or     (%rax),%eax
     d81:	00 1d d1 0d 00 00    	add    %bl,0xdd1(%rip)        # 1b58 <UNTIL+0x5e>
     d87:	01 36                	add    %esi,(%rsi)
     d89:	e5 0c                	in     $0xc,%eax
     d8b:	00 00                	add    %al,(%rax)
     d8d:	09 03                	or     %eax,(%rbx)
     d8f:	88 f3                	mov    %dh,%bl
     d91:	60                   	(bad)  
     d92:	00 00                	add    %al,(%rax)
     d94:	00 00                	add    %al,(%rax)
     d96:	00 07                	add    %al,(%rdi)
     d98:	08 c5                	or     %al,%ch
     d9a:	0c 00                	or     $0x0,%al
     d9c:	00 0c 30             	add    %cl,(%rax,%rsi,1)
     d9f:	03 00                	add    (%rax),%eax
     da1:	00 fe                	add    %bh,%dh
     da3:	0c 00                	or     $0x0,%al
     da5:	00 1e                	add    %bl,(%rsi)
     da7:	38 00                	cmp    %al,(%rax)
     da9:	00 00                	add    %al,(%rax)
     dab:	06                   	(bad)  
     dac:	00 40 00             	add    %al,0x0(%rax)
     daf:	00 1f                	add    %bl,(%rdi)
     db1:	6d                   	insl   (%dx),%es:(%rdi)
     db2:	65 6d                	gs insl (%dx),%es:(%rdi)
     db4:	00 01                	add    %al,(%rcx)
     db6:	51                   	push   %rcx
     db7:	eb 0c                	jmp    dc5 <register_tm_clones+0x35>
     db9:	00 00                	add    %al,(%rax)
     dbb:	09 03                	or     %eax,(%rbx)
     dbd:	e0 f0                	loopne daf <register_tm_clones+0x1f>
     dbf:	20 00                	and    %al,(%rax)
     dc1:	00 00                	add    %al,(%rax)
     dc3:	00 00                	add    %al,(%rax)
     dc5:	0c 23                	or     $0x23,%al
     dc7:	0d 00 00 23 0d       	or     $0xd230000,%eax
     dcc:	00 00                	add    %al,(%rax)
     dce:	0d 38 00 00 00       	or     $0x38,%eax
     dd3:	0f 00 07             	sldt   (%rdi)
     dd6:	08 30                	or     %dh,(%rax)
     dd8:	03 00                	add    (%rax),%eax
     dda:	00 1d 97 14 00 00    	add    %bl,0x1497(%rip)        # 2277 <NextWord+0x17d>
     de0:	01 53 13             	add    %edx,0x13(%rbx)
     de3:	0d 00 00 09 03       	or     $0x3090000,%eax
     de8:	40                   	rex
     de9:	f0 20 00             	lock and %al,(%rax)
     dec:	00 00                	add    %al,(%rax)
     dee:	00 00                	add    %al,(%rax)
     df0:	1d 06 0f 00 00       	sbb    $0xf06,%eax
     df5:	01 61 98             	add    %esp,-0x68(%rcx)
     df8:	00 00                	add    %al,(%rax)
     dfa:	00 09                	add    %cl,(%rcx)
     dfc:	03 10                	add    (%rax),%edx
     dfe:	f0 20 00             	lock and %al,(%rax)
     e01:	00 00                	add    %al,(%rax)
     e03:	00 00                	add    %al,(%rax)
     e05:	1d 55 13 00 00       	sbb    $0x1355,%eax
     e0a:	01 71 46             	add    %esi,0x46(%rcx)
     e0d:	03 00                	add    (%rax),%eax
     e0f:	00 09                	add    %cl,(%rcx)
     e11:	03 c0                	add    %eax,%eax
     e13:	f0 20 00             	lock and %al,(%rax)
     e16:	00 00                	add    %al,(%rax)
     e18:	00 00                	add    %al,(%rax)
     e1a:	1d 8b 13 00 00       	sbb    $0x138b,%eax
     e1f:	01 71 46             	add    %esi,0x46(%rcx)
     e22:	03 00                	add    (%rax),%eax
     e24:	00 09                	add    %cl,(%rcx)
     e26:	03 e8                	add    %eax,%ebp
     e28:	f0 60                	lock (bad) 
     e2a:	00 00                	add    %al,(%rax)
     e2c:	00 00                	add    %al,(%rax)
     e2e:	00 10                	add    %dl,(%rax)
     e30:	b8 06 00 00 01       	mov    $0x1000006,%eax
     e35:	72 98                	jb     dcf <register_tm_clones+0x3f>
     e37:	00 00                	add    %al,(%rax)
     e39:	00 0c 9e             	add    %cl,(%rsi,%rbx,4)
     e3c:	00 00                	add    %al,(%rax)
     e3e:	00 98 0d 00 00 0d    	add    %bl,0xd00000d(%rax)
     e44:	38 00                	cmp    %al,(%rax)
     e46:	00 00                	add    %al,(%rax)
     e48:	ff 00                	incl   (%rax)
     e4a:	1d e9 04 00 00       	sbb    $0x4e9,%eax
     e4f:	01 74 88 0d          	add    %esi,0xd(%rax,%rcx,4)
     e53:	00 00                	add    %al,(%rax)
     e55:	09 03                	or     %eax,(%rbx)
     e57:	80 f2 60             	xor    $0x60,%dl
     e5a:	00 00                	add    %al,(%rax)
     e5c:	00 00                	add    %al,(%rax)
     e5e:	00 1d 45 06 00 00    	add    %bl,0x645(%rip)        # 14a9 <PRIM+0x70>
     e64:	01 75 88             	add    %esi,-0x78(%rbp)
     e67:	0d 00 00 09 03       	or     $0x3090000,%eax
     e6c:	80 f1 60             	xor    $0x60,%cl
{
     e6f:	00 00                	add    %al,(%rax)
     e71:	00 00                	add    %al,(%rax)
     e73:	00 0c 46             	add    %cl,(%rsi,%rax,2)
	return &  (DescriptorTable [ VAddr >> (32-4) ])[VAddr];
     e76:	03 00                	add    (%rax),%eax
     e78:	00 d2                	add    %dl,%dl
     e7a:	0d 00 00 0d 38       	or     $0x380d0000,%eax
     e7f:	00 00                	add    %al,(%rax)
     e81:	00 1f                	add    %bl,(%rdi)
     e83:	00 1d 75 07 00 00    	add    %bl,0x775(%rip)        # 15fe <memcasecmp+0x9>
     e89:	01 88 c2 0d 00 00    	add    %ecx,0xdc2(%rax)
     e8f:	09 03                	or     %eax,(%rbx)
     e91:	00 f1                	add    %dh,%cl
     e93:	60                   	(bad)  
     e94:	00 00                	add    %al,(%rax)
}
     e96:	00 00                	add    %al,(%rax)
{
     e98:	00 0c 30             	add    %cl,(%rax,%rsi,1)
     e9b:	03 00                	add    (%rax),%eax
     e9d:	00 fd                	add    %bh,%ch
     e9f:	0d 00 00 0d 38       	or     $0x380d0000,%eax
 for(i=0;i<len && i<256;i++) {
     ea4:	00 00                	add    %al,(%rax)
     ea6:	00 1f                	add    %bl,(%rdi)
     ea8:	0d 38 00 00 00       	or     $0x38,%eax
    filename[i]=addr[i];
     ead:	ff 00                	incl   (%rax)
     eaf:	1f                   	(bad)  
     eb0:	46                   	rex.RX
     eb1:	4e                   	rex.WRX
     eb2:	42 00 01             	rex.X add %al,(%rcx)
     eb5:	8a e7                	mov    %bh,%ah
     eb7:	0d 00 00 09 03       	or     $0x3090000,%eax
     ebc:	a0 f3 60 00 00 00 00 	movabs 0x1d000000000060f3,%al
     ec3:	00 1d 
     ec5:	89 07                	mov    %eax,(%rdi)
     ec7:	00 00                	add    %al,(%rax)
     ec9:	01 8b 46 03 00 00    	add    %ecx,0x346(%rbx)
 for(i=0;i<len && i<256;i++) {
     ecf:	09 03                	or     %eax,(%rbx)
     ed1:	80 f3 60             	xor    $0x60,%bl
     ed4:	00 00                	add    %al,(%rax)
     ed6:	00 00                	add    %al,(%rax)
     ed8:	00 20                	add    %ah,(%rax)
     eda:	07                   	(bad)  
     edb:	04 52                	add    $0x52,%al
     edd:	00 00                	add    %al,(%rax)
     edf:	00 01                	add    %al,(%rcx)
 filename[i]='\0';
     ee1:	c4                   	(bad)  
     ee2:	d7                   	xlat   %ds:(%rbx)
     ee3:	11 00                	adc    %eax,(%rax)
     ee5:	00 19                	add    %bl,(%rcx)
     ee7:	ff 0a                	decl   (%rdx)
     ee9:	00 00                	add    %al,(%rax)
     eeb:	00 19                	add    %bl,(%rcx)
     eed:	09 0c 00             	or     %ecx,(%rax,%rax,1)
     ef0:	00 01                	add    %al,(%rcx)
 return 1;
     ef2:	19 c7                	sbb    %eax,%edi
     ef4:	07                   	(bad)  
     ef5:	00 00                	add    %al,(%rax)
}
     ef7:	02 19                	add    (%rcx),%bl
{
     ef9:	26 0b 00             	or     %es:(%rax),%eax
     efc:	00 03                	add    %al,(%rbx)
     efe:	19 59 0d             	sbb    %ebx,0xd(%rcx)
     f01:	00 00                	add    %al,(%rax)
     f03:	04 19                	add    $0x19,%al
     f05:	d4                   	(bad)  
     f06:	0a 00                	or     (%rax),%al
     f08:	00 05 19 ad 12 00    	add    %al,0x12ad19(%rip)        # 12bc27 <__FRAME_END__+0x11d2ab>
     f0e:	00 06                	add    %al,(%rsi)
     f10:	19 ff                	sbb    %edi,%edi
     f12:	0e                   	(bad)  
     f13:	00 00                	add    %al,(%rax)
     f15:	07                   	(bad)  
     f16:	19 fe                	sbb    %edi,%esi
 ah=*a>>16;al=*a&0xffff;
     f18:	10 00                	adc    %al,(%rax)
     f1a:	00 08                	add    %cl,(%rax)
     f1c:	19 e2                	sbb    %esp,%edx
     f1e:	14 00                	adc    $0x0,%al
     f20:	00 09                	add    %cl,(%rcx)
     f22:	19 15 0b 00 00 0a    	sbb    %edx,0xa00000b(%rip)        # a000f33 <_end+0x99efb93>
     f28:	19 35 02 00 00 0b    	sbb    %esi,0xb000002(%rip)        # b000f30 <_end+0xa9efb90>
     f2e:	19 61 05             	sbb    %esp,0x5(%rcx)
 bh=*b>>16;bl=*b&0xffff;
     f31:	00 00                	add    %al,(%rax)
     f33:	0c 19                	or     $0x19,%al
     f35:	0b 05 00 00 0d 19    	or     0x190d0000(%rip),%eax        # 190d0f3b <_end+0x18abfb9b>
     f3b:	5b                   	pop    %rbx
     f3c:	03 00                	add    (%rax),%eax
     f3e:	00 0e                	add    %cl,(%rsi)
     f40:	19 aa 09 00 00 0f    	sbb    %ebp,0xf000009(%rdx)
     f46:	19 e6                	sbb    %esp,%esi
     f48:	13 00                	adc    (%rax),%eax
     f4a:	00 10                	add    %dl,(%rax)
 pl=al*bl;
     f4c:	19 41 09             	sbb    %eax,0x9(%rcx)
     f4f:	00 00                	add    %al,(%rax)
     f51:	11 19                	adc    %ebx,(%rcx)
     f53:	f0 05 00 00 12 19    	lock add $0x19120000,%eax
 if((ah|bh)==0) {
     f59:	5b                   	pop    %rbx
     f5a:	0c 00                	or     $0x0,%al
     f5c:	00 13                	add    %dl,(%rbx)
     f5e:	19 d1                	sbb    %edx,%ecx
  ph=0;
     f60:	08 00                	or     %al,(%rax)
     f62:	00 14 19             	add    %dl,(%rcx,%rbx,1)
     f65:	c7 04 00 00 15 19 36 	movl   $0x36191500,(%rax,%rax,1)
  pm1=al*bh;
     f6c:	05 00 00 16 19       	add    $0x19160000,%eax
     f71:	1f                   	(bad)  
  pm2=ah*bl;
     f72:	0b 00                	or     (%rax),%eax
     f74:	00 17                	add    %dl,(%rdi)
     f76:	19 7a 07             	sbb    %edi,0x7(%rdx)
     f79:	00 00                	add    %al,(%rax)
     f7b:	18 19                	sbb    %bl,(%rcx)
  ph=ah*bh;
     f7d:	ee                   	out    %al,(%dx)
     f7e:	0a 00                	or     (%rax),%al
     f80:	00 19                	add    %bl,(%rcx)
     f82:	19 54 07 00          	sbb    %edx,0x0(%rdi,%rax,1)
  pl=pl+(pm1<<16);
     f86:	00 1a                	add    %bl,(%rdx)
     f88:	19 65 07             	sbb    %esp,0x7(%rbp)
     f8b:	00 00                	add    %al,(%rax)
     f8d:	1b 19                	sbb    (%rcx),%ebx
  ph+=(pl<(pm1<<16));
     f8f:	dd 0a                	fisttpll (%rdx)
     f91:	00 00                	add    %al,(%rax)
     f93:	1c 19                	sbb    $0x19,%al
     f95:	43 0a 00             	rex.XB or (%r8),%al
     f98:	00 1d 19 3a 0a 00    	add    %bl,0xa3a19(%rip)        # a49b7 <__FRAME_END__+0x9603b>
     f9e:	00 1e                	add    %bl,(%rsi)
     fa0:	19 31                	sbb    %esi,(%rcx)
  pl=pl+(pm2<<16);
     fa2:	0a 00                	or     (%rax),%al
     fa4:	00 1f                	add    %bl,(%rdi)
     fa6:	19 ce                	sbb    %ecx,%esi
     fa8:	12 00                	adc    (%rax),%al
  ph+=(pl<(pm2<<16));
     faa:	00 20                	add    %ah,(%rax)
     fac:	19 52 01             	sbb    %edx,0x1(%rdx)
     faf:	00 00                	add    %al,(%rax)
     fb1:	21 19                	and    %ebx,(%rcx)
     fb3:	47 0b 00             	rex.RXB or (%r8),%r8d
     fb6:	00 22                	add    %ah,(%rdx)
     fb8:	19 c4                	sbb    %eax,%esp
     fba:	10 00                	adc    %al,(%rax)
  ph=ph+(pm1>>16)+(pm2>>16);
     fbc:	00 23                	add    %ah,(%rbx)
     fbe:	19 67 12             	sbb    %esp,0x12(%rdi)
     fc1:	00 00                	add    %al,(%rax)
     fc3:	24 19                	and    $0x19,%al
     fc5:	82                   	(bad)  
     fc6:	0c 00                	or     $0x0,%al
     fc8:	00 25 19 75 0e 00    	add    %ah,0xe7519(%rip)        # e84e7 <__FRAME_END__+0xd9b6b>
     fce:	00 26                	add    %ah,(%rsi)
     fd0:	19 5f 12             	sbb    %ebx,0x12(%rdi)
     fd3:	00 00                	add    %al,(%rax)
 *a=ph;*b=pl;
     fd5:	27                   	(bad)  
     fd6:	19 fa                	sbb    %edi,%edx
     fd8:	0b 00                	or     (%rax),%eax
     fda:	00 28                	add    %ch,(%rax)
     fdc:	19 b2 03 00 00 29    	sbb    %esi,0x29000003(%rdx)
     fe2:	19 f8                	sbb    %edi,%eax
     fe4:	12 00                	adc    (%rax),%al
}
     fe6:	00 2a                	add    %ch,(%rdx)
     fe8:	19 5f 11             	sbb    %ebx,0x11(%rdi)
     feb:	00 00                	add    %al,(%rax)
     fed:	2b 19                	sub    (%rcx),%ebx
     fef:	d0 11                	rclb   (%rcx)
     ff1:	00 00                	add    %al,(%rax)
     ff3:	2c 19                	sub    $0x19,%al
     ff5:	6d                   	insl   (%dx),%es:(%rdi)
     ff6:	0c 00                	or     $0x0,%al
     ff8:	00 2d 19 76 08 00    	add    %ch,0x87619(%rip)        # 88617 <__FRAME_END__+0x79c9b>
{
     ffe:	00 2e                	add    %ch,(%rsi)
    1000:	19 be 0a 00 00 2f    	sbb    %edi,0x2f00000a(%rsi)
    1006:	19 8c 11 00 00 30 19 	sbb    %ecx,0x19300000(%rcx,%rdx,1)
 qh=*b;ql=*c;d=*a;
    100d:	29 0a                	sub    %ecx,(%rdx)
    100f:	00 00                	add    %al,(%rax)
    1011:	31 19                	xor    %ebx,(%rcx)
    1013:	ef                   	out    %eax,(%dx)
    1014:	12 00                	adc    (%rax),%al
    1016:	00 32                	add    %dh,(%rdx)
    1018:	19 4c 01 00          	sbb    %ecx,0x0(%rcx,%rax,1)
    101c:	00 33                	add    %dh,(%rbx)
    101e:	19 32                	sbb    %esi,(%rdx)
    1020:	03 00                	add    (%rax),%eax
    1022:	00 34 19             	add    %dh,(%rcx,%rbx,1)
    1025:	85 02                	test   %eax,(%rdx)
    1027:	00 00                	add    %al,(%rax)
 if(qh==0) {
    1029:	35 19 10 12 00       	xor    $0x121019,%eax
  *b=ql/d;
    102e:	00 36                	add    %dh,(%rsi)
    1030:	19 1b                	sbb    %ebx,(%rbx)
    1032:	0c 00                	or     $0x0,%al
    1034:	00 37                	add    %dh,(%rdi)
    1036:	19 16                	sbb    %edx,(%rsi)
    1038:	09 00                	or     %eax,(%rax)
    103a:	00 38                	add    %bh,(%rax)
    103c:	19 88 0a 00 00 39    	sbb    %ecx,0x3900000a(%rax)
  *c=ql%d;
    1042:	19 4b 12             	sbb    %ecx,0x12(%rbx)
    1045:	00 00                	add    %al,(%rax)
    1047:	3a 19                	cmp    (%rcx),%bl
    1049:	cf                   	iret   
    104a:	00 00                	add    %al,(%rax)
    104c:	00 3b                	add    %bh,(%rbx)
    104e:	19 e0                	sbb    %esp,%eax
    1050:	11 00                	adc    %eax,(%rax)
}
    1052:	00 3c 19             	add    %bh,(%rcx,%rbx,1)
  for(i=0;i<32;i++) {
    1055:	e3 0e                	jrcxz  1065 <udiv+0x68>
    1057:	00 00                	add    %al,(%rax)
    1059:	3d 19 79 01 00       	cmp    $0x17919,%eax
   cy=qh&0x80000000;
    105e:	00 3e                	add    %bh,(%rsi)
    1060:	19 88 05 00 00 3f    	sbb    %ecx,0x3f000005(%rax)
    1066:	19 d8                	sbb    %ebx,%eax
   qh<<=1;
    1068:	07                   	(bad)  
    1069:	00 00                	add    %al,(%rax)
   if(ql&0x80000000)qh++;
    106b:	40 19 22             	rex sbb %esp,(%rdx)
    106e:	0c 00                	or     $0x0,%al
    1070:	00 41 19             	add    %al,0x19(%rcx)
    1073:	1d 09 00 00 42       	sbb    $0x42000009,%eax
   ql<<=1;
    1078:	19 4c 0f 00          	sbb    %ecx,0x0(%rdi,%rcx,1)
   if(qh>=d||cy) {
    107c:	00 43 19             	add    %al,0x19(%rbx)
    107f:	e3 0b                	jrcxz  108c <udiv+0x8f>
    1081:	00 00                	add    %al,(%rax)
    1083:	44 19 97 0a 00 00 45 	sbb    %r10d,0x4500000a(%rdi)
    qh-=d;
    108a:	19 bc 13 00 00 46 19 	sbb    %edi,0x19460000(%rbx,%rdx,1)
    cy=0;
    1091:	2d 14 00 00 47       	sub    $0x47000014,%eax
    1096:	19 0e                	sbb    %ecx,(%rsi)
   *c=qh;
    1098:	01 00                	add    %eax,(%rax)
    109a:	00 48 19             	add    %cl,0x19(%rax)
    109d:	1b 04 00             	sbb    (%rax,%rax,1),%eax
    10a0:	00 49 19             	add    %cl,0x19(%rcx)
   *b=ql;
    10a3:	b0 04                	mov    $0x4,%al
    10a5:	00 00                	add    %al,(%rax)
    10a7:	4a 19 f1             	rex.WX sbb %rsi,%rcx
  for(i=0;i<32;i++) {
    10aa:	10 00                	adc    %al,(%rax)
    10ac:	00 4b 19             	add    %cl,0x19(%rbx)
    10af:	11 04 00             	adc    %eax,(%rax,%rax,1)
    10b2:	00 4c 19 20          	add    %cl,0x20(%rcx,%rbx,1)
}
    10b6:	13 00                	adc    (%rax),%eax
{ 
    10b8:	00 4d 19             	add    %cl,0x19(%rbp)
    10bb:	91                   	xchg   %eax,%ecx
    10bc:	04 00                	add    $0x0,%al
    10be:	00 4e 19             	add    %cl,0x19(%rsi)
    10c1:	9d                   	popfq  
 CELL(HERE)=dd;
    10c2:	0d 00 00 4f 19       	or     $0x194f0000,%eax
    10c7:	da 11                	ficoml (%rcx)
    10c9:	00 00                	add    %al,(%rax)
    10cb:	50                   	push   %rax
    10cc:	19 46 14             	sbb    %eax,0x14(%rsi)
    10cf:	00 00                	add    %al,(%rax)
    10d1:	51                   	push   %rcx
    10d2:	19 38                	sbb    %edi,(%rax)
    10d4:	07                   	(bad)  
    10d5:	00 00                	add    %al,(%rax)
    10d7:	52                   	push   %rdx
    10d8:	19 75 06             	sbb    %esi,0x6(%rbp)
    10db:	00 00                	add    %al,(%rax)
    10dd:	53                   	push   %rbx
    10de:	19 c5                	sbb    %eax,%ebp
    10e0:	14 00                	adc    $0x0,%al
    10e2:	00 54 19 2c          	add    %dl,0x2c(%rcx,%rbx,1)
    10e6:	02 00                	add    (%rax),%al
    10e8:	00 55 19             	add    %dl,0x19(%rbp)
    10eb:	5c                   	pop    %rsp
    10ec:	09 00                	or     %eax,(%rax)
    10ee:	00 56 19             	add    %dl,0x19(%rsi)
    10f1:	d8 0e                	fmuls  (%rsi)
    10f3:	00 00                	add    %al,(%rax)
HERE+=4;
    10f5:	57                   	push   %rdi
    10f6:	19 cd                	sbb    %ecx,%ebp
    10f8:	0b 00                	or     (%rax),%eax
    10fa:	00 58 19             	add    %bl,0x19(%rax)
    10fd:	77 0c                	ja     110b <COM+0x54>
    10ff:	00 00                	add    %al,(%rax)
    1101:	59                   	pop    %rcx
    1102:	19 e3                	sbb    %esp,%ebx
    1104:	05 00 00 5a 19       	add    $0x195a0000,%eax
    1109:	50                   	push   %rax
    110a:	15 00 00 5b 19       	adc    $0x195b0000,%eax
    110f:	3a 13                	cmp    (%rbx),%dl
    1111:	00 00                	add    %al,(%rax)
    1113:	5c                   	pop    %rsp
    1114:	19 15 11 00 00 5d    	sbb    %edx,0x5d000011(%rip)        # 5d00112b <_end+0x5c9efd8b>
    111a:	19 03                	sbb    %eax,(%rbx)
}
    111c:	06                   	(bad)  
    111d:	00 00                	add    %al,(%rax)
{ 
    111f:	5e                   	pop    %rsi
    1120:	19 1c 05 00 00 5f 19 	sbb    %ebx,0x195f0000(,%rax,1)
    1127:	ce                   	(bad)  
    1128:	07                   	(bad)  
    1129:	00 00                	add    %al,(%rax)
    112b:	60                   	(bad)  
    112c:	19 ab 11 00 00 61    	sbb    %ebp,0x61000011(%rbx)
	WCELL(HERE)=dd;
    1132:	19 77 13             	sbb    %esi,0x13(%rdi)
    1135:	00 00                	add    %al,(%rax)
    1137:	62                   	(bad)  
    1138:	19 d7                	sbb    %edx,%edi
    113a:	10 00                	adc    %al,(%rax)
    113c:	00 63 19             	add    %ah,0x19(%rbx)
    113f:	b7 0d                	mov    $0xd,%bh
    1141:	00 00                	add    %al,(%rax)
    1143:	64 19 73 04          	sbb    %esi,%fs:0x4(%rbx)
    1147:	00 00                	add    %al,(%rax)
    1149:	65 19 f5             	gs sbb %esi,%ebp
    114c:	0a 00                	or     (%rax),%al
    114e:	00 66 19             	add    %ah,0x19(%rsi)
    1151:	40 12 00             	adc    (%rax),%al
    1154:	00 67 19             	add    %ah,0x19(%rdi)
    1157:	83 11 00             	adcl   $0x0,(%rcx)
    115a:	00 68 19             	add    %ch,0x19(%rax)
    115d:	69 10 00 00 69 19    	imul   $0x19690000,(%rax),%edx
	HERE+=2;
    1163:	58                   	pop    %rax
    1164:	01 00                	add    %eax,(%rax)
    1166:	00 6a 19             	add    %ch,0x19(%rdx)
    1169:	7a 11                	jp     117c <WCOM+0x5d>
    116b:	00 00                	add    %al,(%rax)
    116d:	6b 19 a7             	imul   $0xffffffa7,(%rcx),%ebx
    1170:	0f 00 00             	sldt   (%rax)
    1173:	6c                   	insb   (%dx),%es:(%rdi)
    1174:	19 7d 0b             	sbb    %edi,0xb(%rbp)
    1177:	00 00                	add    %al,(%rax)
    1179:	6d                   	insl   (%dx),%es:(%rdi)
    117a:	19 44 01 00          	sbb    %eax,0x0(%rcx,%rax,1)
    117e:	00 6e 19             	add    %ch,0x19(%rsi)
    1181:	14 05                	adc    $0x5,%al
    1183:	00 00                	add    %al,(%rax)
    1185:	6f                   	outsl  %ds:(%rsi),(%dx)
    1186:	19 b3 08 00 00 70    	sbb    %esi,0x70000008(%rbx)
{ 
    118c:	19 71 01             	sbb    %esi,0x1(%rcx)
    118f:	00 00                	add    %al,(%rax)
    1191:	71 19                	jno    11ac <CCOM+0x20>
    1193:	a3 15 00 00 72 19 54 	movabs %eax,0xc541972000015
    119a:	0c 00 
 BYTE(HERE)=dd;
    119c:	00 73 19             	add    %dh,0x19(%rbx)
    119f:	53                   	push   %rbx
    11a0:	0f 00 00             	sldt   (%rax)
    11a3:	74 19                	je     11be <CCOM+0x32>
    11a5:	9c                   	pushfq 
    11a6:	10 00                	adc    %al,(%rax)
    11a8:	00 75 19             	add    %dh,0x19(%rbp)
    11ab:	ca 15 00             	lret   $0x15
    11ae:	00 76 19             	add    %dh,0x19(%rsi)
    11b1:	b4 05                	mov    $0x5,%ah
    11b3:	00 00                	add    %al,(%rax)
    11b5:	77 19                	ja     11d0 <CCOM+0x44>
    11b7:	22 12                	and    (%rdx),%dl
    11b9:	00 00                	add    %al,(%rax)
    11bb:	78 19                	js     11d6 <CCOM+0x4a>
    11bd:	fa                   	cli    
    11be:	08 00                	or     %al,(%rax)
    11c0:	00 79 19             	add    %bh,0x19(%rcx)
    11c3:	81 07 00 00 7a 19    	addl   $0x197a0000,(%rdi)
    11c9:	f8                   	clc    
    11ca:	0e                   	(bad)  
    11cb:	00 00                	add    %al,(%rax)
  HERE+=1;
    11cd:	7b 19                	jnp    11e8 <CCOM+0x5c>
    11cf:	cb                   	lret   
    11d0:	10 00                	adc    %al,(%rax)
    11d2:	00 7c 19 0b          	add    %bh,0xb(%rcx,%rbx,1)
    11d6:	0d 00 00 7d 19       	or     $0x197d0000,%eax
    11db:	d8 05 00 00 7e 19    	fadds  0x197e0000(%rip)        # 197e11e1 <_end+0x191cfe41>
    11e1:	91                   	xchg   %eax,%ecx
    11e2:	08 00                	or     %al,(%rax)
    11e4:	00 7f 19             	add    %bh,0x19(%rdi)
    11e7:	02 01                	add    (%rcx),%al
    11e9:	00 00                	add    %al,(%rax)
    11eb:	80 19 d9             	sbbb   $0xd9,(%rcx)
    11ee:	06                   	(bad)  
    11ef:	00 00                	add    %al,(%rax)
    11f1:	81 19 02 04 00 00    	sbbl   $0x402,(%rcx)
{ __u32 addr1,addr0;
    11f7:	82                   	(bad)  
    11f8:	19 7d 03             	sbb    %edi,0x3(%rbp)
    11fb:	00 00                	add    %al,(%rax)
    11fd:	83 19 2e             	sbbl   $0x2e,(%rcx)
    1200:	15 00 00 84 19       	adc    $0x19840000,%eax
    1205:	95                   	xchg   %eax,%ebp
    1206:	13 00                	adc    (%rax),%eax
addr0=HERE;
    1208:	00 85 19 13 13 00    	add    %al,0x131319(%rbp)
    120e:	00 86 19 c4 11 00    	add    %al,0x11c419(%rsi)
    1214:	00 87 19 98 09 00    	add    %al,0x99819(%rdi)
    121a:	00 88 19 b2 09 00    	add    %cl,0x9b219(%rax)
    1220:	00 89 19 ab 0d 00    	add    %cl,0xdab19(%rcx)
    1226:	00 8a 19 19 12 00    	add    %cl,0x121919(%rdx)
    122c:	00 8b 19 77 0b 00    	add    %cl,0xb7719(%rbx)
addr1=addr0+1;
    1232:	00 8c 19 7f 02 00 00 	add    %cl,0x27f(%rcx,%rbx,1)
	   BYTE(addr1++)=*word++;
    1239:	8d 19                	lea    (%rcx),%ebx
    123b:	9d                   	popfq  
    123c:	15 00 00 8e 19       	adc    $0x198e0000,%eax
    1241:	6d                   	insl   (%dx),%es:(%rdi)
    1242:	12 00                	adc    (%rax),%al
    1244:	00 8f 19 3b 0b 00    	add    %cl,0xb3b19(%rdi)
    124a:	00 90 19 3e 10 00    	add    %dl,0x103e19(%rax)
    1250:	00 91 19 24 05 00    	add    %dl,0x52419(%rcx)
    1256:	00 92 19 ed 0e 00    	add    %dl,0xeed19(%rdx)
while(size--)
    125c:	00 93 19 cf 05 00    	add    %dl,0x5cf19(%rbx)
    1262:	00 94 19 f4 03 00 00 	add    %dl,0x3f4(%rcx,%rbx,1)
BYTE(addr0)=addr1-addr0-1;
    1269:	95                   	xchg   %eax,%ebp
    126a:	19 b5 06 00 00 96    	sbb    %esi,-0x69fffffa(%rbp)
    1270:	19 6c 08 00          	sbb    %ebp,0x0(%rax,%rcx,1)
    1274:	00 97 19 da 14 00    	add    %dl,0x14da19(%rdi)
    127a:	00 98 19 6d 14 00    	add    %bl,0x146d19(%rax)
    1280:	00 99 19 f8 10 00    	add    %bl,0x10f819(%rcx)
    1286:	00 9a 00 21 0a 03    	add    %bl,0x30a2100(%rdx)
HERE=addr1;
    128c:	00 00                	add    %al,(%rax)
    128e:	01 db                	add    %ebx,%ebx
    1290:	02 98 00 00 00 09    	add    0x9000000(%rax),%bl
    1296:	03 28                	add    (%rax),%ebp
    1298:	f0 20 00             	lock and %al,(%rax)
    129b:	00 00                	add    %al,(%rax)
    129d:	00 00                	add    %al,(%rax)
    129f:	22 4f 00             	and    0x0(%rdi),%cl
    12a2:	00 00                	add    %al,(%rax)
    12a4:	01 3c 07             	add    %edi,(%rdi,%rax,1)
    12a7:	41 d1 00             	roll   (%r8)
    12aa:	00 00                	add    %al,(%rax)
    12ac:	00 00                	add    %al,(%rax)
    12ae:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
if(HERE&1)CCOM(0);
    12b2:	00 00                	add    %al,(%rax)
    12b4:	00 00                	add    %al,(%rax)
    12b6:	00 01                	add    %al,(%rcx)
    12b8:	9c                   	pushfq 
    12b9:	1a 12                	sbb    (%rdx),%dl
    12bb:	00 00                	add    %al,(%rax)
    12bd:	23 69 69             	and    0x69(%rcx),%ebp
    12c0:	00 01                	add    %al,(%rcx)
    12c2:	3d 07 72 00 00       	cmp    $0x7207,%eax
    12c7:	00 02                	add    %al,(%rdx)
    12c9:	91                   	xchg   %eax,%ecx
    12ca:	6c                   	insb   (%dx),%es:(%rdi)
    12cb:	00 24 45 02 00 00 01 	add    %ah,0x1000002(,%rax,2)
    12d2:	de 04 72             	fiadds (%rdx,%rsi,2)
    12d5:	00 00                	add    %al,(%rax)
    12d7:	00 7d a4             	add    %bh,-0x5c(%rbp)
    12da:	00 00                	add    %al,(%rax)
    12dc:	00 00                	add    %al,(%rax)
    12de:	00 00                	add    %al,(%rax)
    12e0:	c4                   	(bad)  
    12e1:	2c 00                	sub    $0x0,%al
    12e3:	00 00                	add    %al,(%rax)
}
    12e5:	00 00                	add    %al,(%rax)
    12e7:	00 01                	add    %al,(%rcx)
    12e9:	9c                   	pushfq 
    12ea:	4c 12 00             	rex.WR adc (%rax),%r8b
{ //    if(   size  & ( ~0xff  )  )	 printf(  "\nSHEADER size = %d\n",size );
    12ed:	00 21                	add    %ah,(%rcx)
    12ef:	01 10                	add    %edx,(%rax)
    12f1:	00 00                	add    %al,(%rax)
    12f3:	01 e0                	add    %esp,%eax
    12f5:	04 46                	add    $0x46,%al
    12f7:	03 00                	add    (%rax),%eax
    12f9:	00 02                	add    %al,(%rdx)
    12fb:	91                   	xchg   %eax,%ecx
	COM(current);
    12fc:	5c                   	pop    %rsp
    12fd:	00 22                	add    %ah,(%rdx)
    12ff:	36 14 00             	ss adc $0x0,%al
    1302:	00 01                	add    %al,(%rcx)
    1304:	f4                   	hlt    
    1305:	02 d8                	add    %al,%bl
    1307:	33 00                	xor    (%rax),%eax
    1309:	00 00                	add    %al,(%rax)
    130b:	00 00                	add    %al,(%rax)
    130d:	00 a5 70 00 00 00    	add    %ah,0x70(%rbp)
    1313:	00 00                	add    %al,(%rax)
    1315:	00 01                	add    %al,(%rcx)
    1317:	9c                   	pushfq 
    1318:	61                   	(bad)  
    1319:	16                   	(bad)  
    131a:	00 00                	add    %al,(%rax)
    131c:	23 72 70             	and    0x70(%rdx),%esi
    131f:	00 01                	add    %al,(%rcx)
    1321:	f7 02 46 03 00 00    	testl  $0x346,(%rdx)
    1327:	03 91 cc 7c 23 69    	add    0x69237ccc(%rcx),%edx
    132d:	70 00                	jo     132f <SHEADER+0x43>
   	last=HERE;
    132f:	01 f7                	add    %esi,%edi
    1331:	02 46 03             	add    0x3(%rsi),%al
    1334:	00 00                	add    %al,(%rax)
    1336:	03 91 d0 7c 21 82    	add    -0x7dde8330(%rcx),%edx
    133c:	09 00                	or     %eax,(%rax)
    133e:	00 01                	add    %al,(%rcx)
    1340:	f7 02 46 03 00 00    	testl  $0x346,(%rdx)
    1346:	03 91 ec 7c 23 74    	add    0x74237cec(%rcx),%edx
    134c:	00 01                	add    %al,(%rcx)
    134e:	f7 02 46 03 00 00    	testl  $0x346,(%rdx)
    1354:	03 91 d4 7c 23 74    	add    0x74237cd4(%rcx),%edx
    135a:	6d                   	insl   (%dx),%es:(%rdi)
    135b:	70 00                	jo     135d <SHEADER+0x71>
    135d:	01 f7                	add    %esi,%edi
    135f:	02 46 03             	add    0x3(%rsi),%al
    1362:	00 00                	add    %al,(%rax)
    1364:	03 91 9c 7d 21 1d    	add    0x1d217d9c(%rcx),%edx
    136a:	08 00                	or     %al,(%rax)
    136c:	00 01                	add    %al,(%rcx)
    136e:	f8                   	clc    
    136f:	02 46 03             	add    0x3(%rsi),%al
    1372:	00 00                	add    %al,(%rax)
    1374:	03 91 80 7d 23 6c    	add    0x6c237d80(%rcx),%edx
    137a:	65 6e                	outsb  %gs:(%rsi),(%dx)
	StrComp(word,size);
    137c:	00 01                	add    %al,(%rcx)
    137e:	f8                   	clc    
    137f:	02 46 03             	add    0x3(%rsi),%al
    1382:	00 00                	add    %al,(%rax)
    1384:	03 91 d8 7c 23 66    	add    0x66237cd8(%rcx),%edx
    138a:	70 00                	jo     138c <SHEADER+0xa0>
}
    138c:	01 f8                	add    %edi,%eax
    138e:	02 46 03             	add    0x3(%rsi),%al
    1391:	00 00                	add    %al,(%rax)
    1393:	03 91 f4 7c 23 69    	add    0x69237cf4(%rcx),%edx
{  
    1399:	6f                   	outsl  %ds:(%rsi),(%dx)
    139a:	72 00                	jb     139c <HEADER+0x8>
    139c:	01 f8                	add    %edi,%eax
    139e:	02 46 03             	add    0x3(%rsi),%al
    for (i = 0; word[i] != 0; i ++);
    13a1:	00 00                	add    %al,(%rax)
    13a3:	03 91 fc 7c 23 72    	add    0x72237cfc(%rcx),%edx
    13a9:	65 73 00             	gs jae 13ac <HEADER+0x18>
    13ac:	01 f9                	add    %edi,%ecx
    13ae:	02 46 03             	add    0x3(%rsi),%al
    13b1:	00 00                	add    %al,(%rax)
    13b3:	03 91 dc 7c 23 63    	add    0x63237cdc(%rcx),%edx
    13b9:	63 00                	movslq (%rax),%eax
    13bb:	01 fa                	add    %edi,%edx
    13bd:	02 61 16             	add    0x16(%rcx),%ah
	SHEADER(word,i);
    13c0:	00 00                	add    %al,(%rax)
    13c2:	03 91 d0 7d 21 49    	add    0x49217dd0(%rcx),%edx
    13c8:	09 00                	or     %eax,(%rax)
    13ca:	00 01                	add    %al,(%rcx)
    13cc:	fb                   	sti    
    13cd:	02 46 03             	add    0x3(%rsi),%al
}
    13d0:	00 00                	add    %al,(%rax)
{       
    13d2:	03 91 e8 7c 21 c8    	add    -0x37de8318(%rcx),%edx
	BYTE(last)=BYTE(last)|0x80;
    13d8:	0b 00                	or     (%rax),%eax
    13da:	00 01                	add    %al,(%rcx)
    13dc:	fc                   	cld    
    13dd:	02 58 03             	add    0x3(%rax),%bl
    13e0:	00 00                	add    %al,(%rax)
    13e2:	03 91 c0 7d 25 0d    	add    0xd257dc0(%rcx),%edx
    13e8:	36 00 00             	add    %al,%ss:(%rax)
    13eb:	00 00                	add    %al,(%rax)
    13ed:	00 00                	add    %al,(%rax)
    13ef:	3c 6e                	cmp    $0x6e,%al
    13f1:	00 00                	add    %al,(%rax)
    13f3:	00 00                	add    %al,(%rax)
    13f5:	00 00                	add    %al,(%rax)
    13f7:	26 5b                	es pop %rbx
    13f9:	14 00                	adc    $0x0,%al
    13fb:	00 01                	add    %al,(%rcx)
    13fd:	02 04 72             	add    (%rdx,%rsi,2),%al
    1400:	00 00                	add    %al,(%rax)
    1402:	00 57 13             	add    %dl,0x13(%rdi)
    1405:	00 00                	add    %al,(%rax)
    1407:	27                   	(bad)  
    1408:	00 26                	add    %ah,(%rsi)
    140a:	e8 0a 00 00 01       	callq  1001419 <_end+0x9f0079>
    140f:	40 04 72             	add    $0x72,%al
    1412:	00 00                	add    %al,(%rax)
    1414:	00 69 13             	add    %ch,0x13(%rcx)
    1417:	00 00                	add    %al,(%rax)
    1419:	27                   	(bad)  
    141a:	00 26                	add    %ah,(%rsi)
    141c:	66 16                	data16 (bad) 
    141e:	00 00                	add    %al,(%rax)
    1420:	01 4f 04             	add    %ecx,0x4(%rdi)
    1423:	72 00                	jb     1425 <IMMED+0x53>
    1425:	00 00                	add    %al,(%rax)
    1427:	7b 13                	jnp    143c <PRIM+0x3>
    1429:	00 00                	add    %al,(%rax)
    142b:	27                   	(bad)  
    142c:	00 26                	add    %ah,(%rsi)
    142e:	0f 03 00             	lsl    (%rax),%eax
    1431:	00 01                	add    %al,(%rcx)
    1433:	5f                   	pop    %rdi
    1434:	04 72                	add    $0x72,%al
}
    1436:	00 00                	add    %al,(%rax)
    1438:	00 8d 13 00 00 27    	add    %cl,0x27000013(%rbp)
{	
    143e:	00 26                	add    %ah,(%rsi)
    1440:	33 0d 00 00 01 85    	xor    -0x7aff0000(%rip),%ecx        # ffffffff85011446 <_end+0xffffffff84a000a6>
    1446:	04 72                	add    $0x72,%al
    1448:	00 00                	add    %al,(%rax)
	HEADER(word);
    144a:	00 9f 13 00 00 27    	add    %bl,0x27000013(%rdi)
    1450:	00 28                	add    %ch,(%rax)
    1452:	cf                   	iret   
    1453:	03 00                	add    (%rax),%eax
	current=last;
    1455:	00 10                	add    %dl,(%rax)
    1457:	00 b0 13 00 00 13    	add    %dh,0x13000013(%rax)
    145d:	72 00                	jb     145f <PRIM+0x26>
    145f:	00 00                	add    %al,(%rax)
    1461:	00 26                	add    %ah,(%rsi)
    1463:	8f 03                	popq   (%rbx)
    1465:	00 00                	add    %al,(%rax)
    1467:	01 cd                	add    %ecx,%ebp
    1469:	04 72                	add    $0x72,%al
    146b:	00 00                	add    %al,(%rax)
    146d:	00 c2                	add    %al,%dl
    146f:	13 00                	adc    (%rax),%eax
    1471:	00 27                	add    %ah,(%rdi)
    1473:	00 29                	add    %ch,(%rcx)
    1475:	00 00                	add    %al,(%rax)
    1477:	00 00                	add    %al,(%rax)
    1479:	dc 13                	fcoml  (%rbx)
    147b:	00 00                	add    %al,(%rax)
    147d:	23 73 75             	and    0x75(%rbx),%esi
    1480:	6d                   	insl   (%dx),%es:(%rdi)
    1481:	00 01                	add    %al,(%rcx)
    1483:	52                   	push   %rdx
    1484:	03 46 03             	add    0x3(%rsi),%eax
    1487:	00 00                	add    %al,(%rax)
    1489:	03 91 a4 7d 00 2a    	add    0x2a007da4(%rcx),%edx
    148f:	9f                   	lahf   
    1490:	5b                   	pop    %rbx
    1491:	00 00                	add    %al,(%rax)
    1493:	00 00                	add    %al,(%rax)
    1495:	00 00                	add    %al,(%rax)
    1497:	c2 01 00             	retq   $0x1
    149a:	00 00                	add    %al,(%rax)
    149c:	00 00                	add    %al,(%rax)
    149e:	00 02                	add    %al,(%rdx)
    14a0:	14 00                	adc    $0x0,%al
    14a2:	00 23                	add    %ah,(%rbx)
    14a4:	73 75                	jae    151b <CONSTANT+0x58>
    14a6:	6d                   	insl   (%dx),%es:(%rdi)
    14a7:	00 01                	add    %al,(%rcx)
    14a9:	5f                   	pop    %rdi
	COM(cod<<1|0x8001);
    14aa:	03 58 03             	add    0x3(%rax),%ebx
    14ad:	00 00                	add    %al,(%rax)
    14af:	03 91 c8 7d 00 2a    	add    0x2a007dc8(%rcx),%edx
    14b5:	fd                   	std    
    14b6:	69 00 00 00 00 00    	imul   $0x0,(%rax),%eax
}
    14bc:	00 bd 03 00 00 00    	add    %bh,0x3(%rbp)
    14c2:	00 00                	add    %al,(%rax)
{	
    14c4:	00 47 14             	add    %al,0x14(%rdi)
    14c7:	00 00                	add    %al,(%rax)
    14c9:	23 42 42             	and    0x42(%rdx),%eax
    14cc:	00 01                	add    %al,(%rcx)
    14ce:	8f 03                	popq   (%rbx)
    14d0:	23 0d 00 00 03 91    	and    -0x6efd0000(%rip),%ecx        # ffffffff910314d6 <_end+0xffffffff90a20136>
	HEADER(word);
    14d6:	a8 7d                	test   $0x7d,%al
    14d8:	21 89 14 00 00 01    	and    %ecx,0x1000014(%rcx)
    14de:	8f 03                	popq   (%rbx)
	current=last;
    14e0:	71 16                	jno    14f8 <CONSTANT+0x35>
    14e2:	00 00                	add    %al,(%rax)
    14e4:	03 91 d0 7d 23 6c    	add    0x6c237dd0(%rcx),%edx
    14ea:	65 6e                	outsb  %gs:(%rsi),(%dx)
    14ec:	00 01                	add    %al,(%rcx)
    14ee:	8f 03                	popq   (%rbx)
    14f0:	72 00                	jb     14f2 <CONSTANT+0x2f>
    14f2:	00 00                	add    %al,(%rax)
    14f4:	03 91 e0 7c 00 2a    	add    0x2a007ce0(%rcx),%edx
    14fa:	65 81 00 00 00 00 00 	addl   $0x0,%gs:(%rax)
    1501:	00 33                	add    %dh,(%rbx)
    1503:	01 00                	add    %eax,(%rax)
    1505:	00 00                	add    %al,(%rax)
    1507:	00 00                	add    %al,(%rax)
    1509:	00 6d 14             	add    %ch,0x14(%rbp)
    150c:	00 00                	add    %al,(%rax)
    150e:	21 ff                	and    %edi,%edi
    1510:	12 00                	adc    (%rax),%al
    1512:	00 01                	add    %al,(%rcx)
    1514:	e8 03 46 03 00       	callq  35b1c <__FRAME_END__+0x271a0>
    1519:	00 03                	add    %al,(%rbx)
    151b:	91                   	xchg   %eax,%ecx
    151c:	a0 7d 00 2a a6 87 00 	movabs 0x87a62a007d,%al
    1523:	00 00 
    1525:	00 00                	add    %al,(%rax)
    1527:	00 bb 00 00 00 00    	add    %bh,0x0(%rbx)
    152d:	00 00                	add    %al,(%rax)
    152f:	00 93 14 00 00 21    	add    %dl,0x21000014(%rbx)
	COM(sw_lit<<1|0x4001);
    1535:	89 14 00             	mov    %edx,(%rax,%rax,1)
    1538:	00 01                	add    %al,(%rcx)
    153a:	0f 04                	(bad)  
    153c:	61                   	(bad)  
    153d:	16                   	(bad)  
	COM(dd);
    153e:	00 00                	add    %al,(%rax)
    1540:	03 91 d0 7d 00 2a    	add    0x2a007dd0(%rcx),%edx
    1546:	b7 88                	mov    $0x88,%bh
}
    1548:	00 00                	add    %al,(%rax)
    154a:	00 00                	add    %al,(%rax)
    154c:	00 00                	add    %al,(%rax)
    154e:	4b 00 00             	rex.WXB add %al,(%r8)
	{	
    1551:	00 00                	add    %al,(%rax)
    1553:	00 00                	add    %al,(%rax)
    1555:	00 b9 14 00 00 21    	add    %bh,0x21000014(%rcx)
    155b:	89 14 00             	mov    %edx,(%rax,%rax,1)
	HEADER(word);
    155e:	00 01                	add    %al,(%rcx)
    1560:	17                   	(bad)  
    1561:	04 61                	add    $0x61,%al
    1563:	16                   	(bad)  
    1564:	00 00                	add    %al,(%rax)
    1566:	03 91 d0 7d 00 2a    	add    0x2a007dd0(%rcx),%edx
	current=last;
    156c:	13 8d 00 00 00 00    	adc    0x0(%rbp),%ecx
    1572:	00 00                	add    %al,(%rax)
    1574:	f2 01 00             	repnz add %eax,(%rax)
    1577:	00 00                	add    %al,(%rax)
    1579:	00 00                	add    %al,(%rax)
    157b:	00 0f                	add    %cl,(%rdi)
    157d:	15 00 00 21 ce       	adc    $0xce210000,%eax
    1582:	14 00                	adc    $0x0,%al
    1584:	00 01                	add    %al,(%rcx)
    1586:	2b 04 72             	sub    (%rdx,%rsi,2),%eax
    1589:	00 00                	add    %al,(%rax)
    158b:	00 03                	add    %al,(%rbx)
    158d:	91                   	xchg   %eax,%ecx
    158e:	90                   	nop
    158f:	7d 21                	jge    15b2 <CREATE+0x62>
    1591:	11 0c 00             	adc    %ecx,(%rax,%rax,1)
    1594:	00 01                	add    %al,(%rcx)
    1596:	2b 04 72             	sub    (%rdx,%rsi,2),%eax
    1599:	00 00                	add    %al,(%rax)
    159b:	00 03                	add    %al,(%rbx)
    159d:	91                   	xchg   %eax,%ecx
    159e:	8c 7d 21             	mov    %?,0x21(%rbp)
    15a1:	d4                   	(bad)  
    15a2:	14 00                	adc    $0x0,%al
    15a4:	00 01                	add    %al,(%rcx)
    15a6:	2b 04 72             	sub    (%rdx,%rsi,2),%eax
    15a9:	00 00                	add    %al,(%rax)
    15ab:	00 03                	add    %al,(%rbx)
    15ad:	91                   	xchg   %eax,%ecx
    15ae:	98                   	cwtl   
    15af:	7d 21                	jge    15d2 <VARIABLE+0x2>
    15b1:	16                   	(bad)  
    15b2:	0c 00                	or     $0x0,%al
    15b4:	00 01                	add    %al,(%rcx)
    15b6:	2b 04 72             	sub    (%rdx,%rsi,2),%eax
    15b9:	00 00                	add    %al,(%rax)
    15bb:	00 03                	add    %al,(%rbx)
    15bd:	91                   	xchg   %eax,%ecx
	COM(sw_ip<<1|0x4001);
    15be:	94                   	xchg   %eax,%esp
    15bf:	7d 00                	jge    15c1 <CREATE+0x71>
    15c1:	2a 0f                	sub    (%rdi),%cl
    15c3:	94                   	xchg   %eax,%esp
    15c4:	00 00                	add    %al,(%rax)
    15c6:	00 00                	add    %al,(%rax)
}
    15c8:	00 00                	add    %al,(%rax)
    15ca:	56                   	push   %rsi
    15cb:	03 00                	add    (%rax),%eax
    15cd:	00 00                	add    %al,(%rax)
    15cf:	00 00                	add    %al,(%rax)
{	
    15d1:	00 9d 15 00 00 23    	add    %bl,0x23000015(%rbp)
    15d7:	69 6f 72 00 01 54 04 	imul   $0x4540100,0x72(%rdi),%ebp
	CREATE(word);
    15de:	46 03 00             	rex.RX add (%rax),%r8d
    15e1:	00 03                	add    %al,(%rbx)
    15e3:	91                   	xchg   %eax,%ecx
    15e4:	88 7d 2b             	mov    %bh,0x2b(%rbp)
    15e7:	72 72                	jb     165b <memcasecmp+0x66>
	COM(0);
    15e9:	72 00                	jb     15eb <VARIABLE+0x1b>
    15eb:	01 56 04             	add    %edx,0x4(%rsi)
    15ee:	46 03 00             	rex.RX add (%rax),%r8d
    15f1:	00 29                	add    %ch,(%rcx)
}
    15f3:	30 00                	xor    %al,(%rax)
{
    15f5:	00 00                	add    %al,(%rax)
    15f7:	7a 15                	jp     160e <memcasecmp+0x19>
    15f9:	00 00                	add    %al,(%rax)
    15fb:	23 72 72             	and    0x72(%rdx),%esi
    15fe:	72 00                	jb     1600 <memcasecmp+0xb>
    1600:	01 5e 04             	add    %ebx,0x4(%rsi)
    1603:	72 00                	jb     1605 <memcasecmp+0x10>
    1605:	00 00                	add    %al,(%rax)
    1607:	03 91 84 7d 25 dd    	add    -0x22da827c(%rcx),%edx
  unsigned char const *s1 = (unsigned char const *) vs1;
    160d:	94                   	xchg   %eax,%esp
    160e:	00 00                	add    %al,(%rax)
    1610:	00 00                	add    %al,(%rax)
  unsigned char const *s2 = (unsigned char const *) vs2;
    1612:	00 00                	add    %al,(%rax)
    1614:	38 00                	cmp    %al,(%rax)
    1616:	00 00                	add    %al,(%rax)
    1618:	00 00                	add    %al,(%rax)
  for (i = 0; i < n; i++)
    161a:	00 00                	add    %al,(%rax)
    161c:	2c 0f                	sub    $0xf,%al
    161e:	03 00                	add    (%rax),%eax
    1620:	00 01                	add    %al,(%rcx)
      unsigned char u1 = *s1++;
    1622:	5f                   	pop    %rdi
    1623:	04 72                	add    $0x72,%al
    1625:	00 00                	add    %al,(%rax)
    1627:	00 27                	add    %ah,(%rdi)
    1629:	00 00                	add    %al,(%rax)
    162b:	00 25 76 95 00 00    	add    %ah,0x9576(%rip)        # aba7 <make_image+0x72a>
    1631:	00 00                	add    %al,(%rax)
    1633:	00 00                	add    %al,(%rax)
      unsigned char u2 = *s2++;
    1635:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1636:	00 00                	add    %al,(%rax)
    1638:	00 00                	add    %al,(%rax)
    163a:	00 00                	add    %al,(%rax)
    163c:	00 23                	add    %ah,(%rbx)
    163e:	7a 7a                	jp     16ba <SEARCH+0x22>
    1640:	7a 00                	jp     1642 <memcasecmp+0x4d>
    1642:	01 66 04             	add    %esp,0x4(%rsi)
    1645:	98                   	cwtl   
      if (toupper (u1) != toupper (u2))
    1646:	00 00                	add    %al,(%rax)
    1648:	00 03                	add    %al,(%rbx)
    164a:	91                   	xchg   %eax,%ecx
    164b:	b0 7d                	mov    $0x7d,%al
    164d:	00 00                	add    %al,(%rax)
    164f:	2a 82 9d 00 00 00    	sub    0x9d(%rdx),%al
    1655:	00 00                	add    %al,(%rax)
    1657:	00 03                	add    %al,(%rbx)
    1659:	01 00                	add    %eax,(%rax)
    165b:	00 00                	add    %al,(%rax)
    165d:	00 00                	add    %al,(%rax)
    165f:	00 c3                	add    %al,%bl
    1661:	15 00 00 23 66       	adc    $0x66230000,%eax
        return toupper (u1) - toupper (u2);
    1666:	70 74                	jo     16dc <SEARCH+0x44>
    1668:	00 01                	add    %al,(%rcx)
    166a:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
    166d:	00 00                	add    %al,(%rax)
    166f:	00 03                	add    %al,(%rbx)
    1671:	91                   	xchg   %eax,%ecx
    1672:	f8                   	clc    
    1673:	7c 00                	jl     1675 <memcasecmp+0x80>
    1675:	29 60 00             	sub    %esp,0x0(%rax)
    1678:	00 00                	add    %al,(%rax)
    167a:	1f                   	(bad)  
    167b:	16                   	(bad)  
    167c:	00 00                	add    %al,(%rax)
    167e:	23 69 69             	and    0x69(%rcx),%ebp
  for (i = 0; i < n; i++)
    1681:	00 01                	add    %al,(%rcx)
    1683:	a2 04 72 00 00 00 03 	movabs %al,0xe491030000007204
    168a:	91 e4 
  return 0;
    168c:	7c 21                	jl     16af <SEARCH+0x17>
    168e:	08 0e                	or     %cl,(%rsi)
    1690:	00 00                	add    %al,(%rax)
}
    1692:	01 a3 04 46 03 00    	add    %esp,0x34604(%rbx)
{ __u32 addr=wid;
    1698:	00 03                	add    %al,(%rbx)
    169a:	91                   	xchg   %eax,%ecx
    169b:	f0 7c 25             	lock jl 16c3 <SEARCH+0x2b>
    169e:	de a0 00 00 00 00    	fisubs 0x0(%rax)
    16a4:	00 00                	add    %al,(%rax)
    16a6:	bd 00 00 00 00       	mov    $0x0,%ebp
    16ab:	00 00                	add    %al,(%rax)
    16ad:	00 21                	add    %ah,(%rcx)
  {	if( !memcasecmp(word,&BYTE(addr+1),BYTE(addr)&0x7F) )
    16af:	9c                   	pushfq 
    16b0:	12 00                	adc    (%rax),%al
    16b2:	00 01                	add    %al,(%rcx)
    16b4:	ac                   	lods   %ds:(%rsi),%al
    16b5:	04 23                	add    $0x23,%al
    16b7:	0d 00 00 03 91       	or     $0x91030000,%eax
    16bc:	b8 7d 2d a6 07       	mov    $0x7a62d7d,%eax
    16c1:	00 00                	add    %al,(%rax)
    16c3:	10 00                	adc    %al,(%rax)
    16c5:	96                   	xchg   %eax,%esi
    16c6:	00 00                	add    %al,(%rax)
    16c8:	00 13                	add    %dl,(%rbx)
    16ca:	38 00                	cmp    %al,(%rax)
    16cc:	00 00                	add    %al,(%rax)
    16ce:	00 00                	add    %al,(%rax)
    16d0:	00 2a                	add    %ch,(%rdx)
    16d2:	a0 a1 00 00 00 00 00 	movabs 0xc0000000000000a1,%al
    16d9:	00 c0 
    16db:	00 00                	add    %al,(%rax)
    16dd:	00 00                	add    %al,(%rax)
    16df:	00 00                	add    %al,(%rax)
    16e1:	00 51 16             	add    %dl,0x16(%rcx)
    16e4:	00 00                	add    %al,(%rax)
    16e6:	23 69 69             	and    0x69(%rcx),%ebp
	return addr;
    16e9:	00 01                	add    %al,(%rcx)
    16eb:	b6 04                	mov    $0x4,%dh
	addr-=4;
    16ed:	30 03                	xor    %al,(%rbx)
    16ef:	00 00                	add    %al,(%rax)
	addr=CELL(addr);
    16f1:	03 91 cb 7c 2e f7    	add    -0x8d18335(%rcx),%edx
    16f7:	03 00                	add    (%rax),%eax
    16f9:	00 10                	add    %dl,(%rax)
    16fb:	00 13                	add    %dl,(%rbx)
    16fd:	96                   	xchg   %eax,%esi
    16fe:	00 00                	add    %al,(%rax)
	if(!addr) return 0;
    1700:	00 00                	add    %al,(%rax)
    1702:	00 2f                	add    %ch,(%rdi)
    1704:	30 0d 06 00 00 01    	xor    %cl,0x1000006(%rip)        # 1001710 <_end+0x9f0370>
    170a:	c2 04 81             	retq   $0x8104
}
    170d:	16                   	(bad)  
    170e:	00 00                	add    %al,(%rax)
    1710:	00 00                	add    %al,(%rax)
{ 
    1712:	00 0c 9e             	add    %cl,(%rsi,%rbx,4)
    1715:	00 00                	add    %al,(%rax)
    1717:	00 71 16             	add    %dh,0x16(%rcx)
    171a:	00 00                	add    %al,(%rax)
    171c:	0d 38 00 00 00       	or     $0x38,%eax
 addr+=(BYTE(addr)&0x7f)+1;
    1721:	2b 00                	sub    (%rax),%eax
    1723:	0c 9e                	or     $0x9e,%al
    1725:	00 00                	add    %al,(%rax)
    1727:	00 81 16 00 00 0d    	add    %al,0xd000016(%rcx)
    172d:	38 00                	cmp    %al,(%rax)
    172f:	00 00                	add    %al,(%rax)
    1731:	6e                   	outsb  %ds:(%rsi),(%dx)
    1732:	00 0c 9e             	add    %cl,(%rsi,%rbx,4)
    1735:	00 00                	add    %al,(%rax)
  if(addr&1)addr++;
    1737:	00 91 16 00 00 0d    	add    %dl,0xd000016(%rcx)
    173d:	38 00                	cmp    %al,(%rax)
    173f:	00 00                	add    %al,(%rax)
    1741:	dd 00                	fldl   (%rax)
    1743:	24 ad                	and    $0xad,%al
  return addr;
    1745:	0f 00 00             	sldt   (%rax)
}
    1748:	01 df                	add    %ebx,%edi
{	__u32 cod;
    174a:	02 98 00 00 00 69    	add    0x69000000(%rax),%bl
    1750:	33 00                	xor    (%rax),%eax
    1752:	00 00                	add    %al,(%rax)
	  cod=CELL(addr);
    1754:	00 00                	add    %al,(%rax)
    1756:	00 6f 00             	add    %ch,0x0(%rdi)
    1759:	00 00                	add    %al,(%rax)
    175b:	00 00                	add    %al,(%rax)
    175d:	00 00                	add    %al,(%rax)
    175f:	01 9c d3 16 00 00 25 	add    %ebx,0x25000016(%rbx,%rdx,8)
	  if((cod&0x8001)==0x8001)
    1766:	79 33                	jns    179b <CC+0xc>
    1768:	00 00                	add    %al,(%rax)
    176a:	00 00                	add    %al,(%rax)
    176c:	00 00                	add    %al,(%rax)
    176e:	1a 00                	sbb    (%rax),%al
    1770:	00 00                	add    %al,(%rax)
		  {COM(cod&0x3FFF); return;}
    1772:	00 00                	add    %al,(%rax)
    1774:	00 00                	add    %al,(%rax)
    1776:	2e f7 03 00 00 10 00 	testl  $0x100000,%cs:(%rbx)
    177d:	13 96 00 00 00 00    	adc    0x0(%rsi),%edx
	  COM(addr);
    1783:	00 00                	add    %al,(%rax)
    1785:	22 41 10             	and    0x10(%rcx),%al
    1788:	00 00                	add    %al,(%rax)
    178a:	01 c5                	add    %eax,%ebp
    178c:	02 d8                	add    %al,%bl
}
    178e:	2e 00 00             	add    %al,%cs:(%rax)
{       
    1791:	00 00                	add    %al,(%rax)
    1793:	00 00                	add    %al,(%rax)
    1795:	91                   	xchg   %eax,%ecx
    1796:	04 00                	add    $0x0,%al
    1798:	00 00                	add    %al,(%rax)
    179a:	00 00                	add    %al,(%rax)
	__u32 addr=current;
    179c:	00 01                	add    %al,(%rcx)
    179e:	9c                   	pushfq 
    179f:	01 17                	add    %edx,(%rdi)
    17a1:	00 00                	add    %al,(%rax)
    17a3:	23 76 6f             	and    0x6f(%rsi),%esi
    17a6:	63 00                	movslq (%rax),%eax
    17a8:	01 c6                	add    %eax,%esi
    17aa:	02 72 00             	add    0x0(%rdx),%dh
    17ad:	00 00                	add    %al,(%rax)
    17af:	02 91 5c 00 22 27    	add    0x2722005c(%rcx),%dl
    17b5:	05 00 00 01 a1       	add    $0xa1010000,%eax
    17ba:	02 01                	add    (%rcx),%al
    17bc:	2b 00                	sub    (%rax),%eax
    17be:	00 00                	add    %al,(%rax)
    17c0:	00 00                	add    %al,(%rax)
    17c2:	00 d7                	add    %dl,%bh
    17c4:	03 00                	add    (%rax),%eax
    17c6:	00 00                	add    %al,(%rax)
    17c8:	00 00                	add    %al,(%rax)
	for (size = 0; word[size] != 0; size ++);
    17ca:	00 01                	add    %al,(%rcx)
    17cc:	9c                   	pushfq 
    17cd:	4d 17                	rex.WRB (bad) 
    17cf:	00 00                	add    %al,(%rax)
    17d1:	21 1d 08 00 00 01    	and    %ebx,0x1000008(%rip)        # 10017df <_end+0x9f043f>
    17d7:	a3 02 46 03 00 00 02 	movabs %eax,0x5491020000034602
    17de:	91 54 
    17e0:	21 0a                	and    %ecx,(%rdx)
    17e2:	0e                   	(bad)  
    17e3:	00 00                	add    %al,(%rax)
    17e5:	01 a4 02 30 03 00 00 	add    %esp,0x330(%rdx,%rax,1)
		addr=SEARCH(addr,word);
    17ec:	02 91 53 21 54 0d    	add    0xd542153(%rcx),%dl
    17f2:	00 00                	add    %al,(%rax)
    17f4:	01 a5 02 23 0d 00    	add    %esp,0xd2302(%rbp)
    17fa:	00 02                	add    %al,(%rdx)
    17fc:	91                   	xchg   %eax,%ecx
    17fd:	58                   	pop    %rax
    17fe:	00 31                	add    %dh,(%rcx)
	   	if((BYTE(addr)&0x3f)==size ) break;
    1800:	53                   	push   %rbx
    1801:	15 00 00 01 9a       	adc    $0x9a010000,%eax
    1806:	02 46 03             	add    0x3(%rsi),%al
    1809:	00 00                	add    %al,(%rax)
    180b:	c0 2a 00             	shrb   $0x0,(%rdx)
    180e:	00 00                	add    %al,(%rax)
    1810:	00 00                	add    %al,(%rax)
    1812:	00 41 00             	add    %al,0x0(%rcx)
    1815:	00 00                	add    %al,(%rax)
    1817:	00 00                	add    %al,(%rax)
    1819:	00 00                	add    %al,(%rax)
    181b:	01 9c 8e 17 00 00 32 	add    %ebx,0x32000017(%rsi,%rcx,4)
		addr=CELL(addr-4);
    1822:	1d 08 00 00 01       	sbb    $0x1000008,%eax
    1827:	9a                   	(bad)  
    1828:	02 46 03             	add    0x3(%rsi),%al
    182b:	00 00                	add    %al,(%rax)
    182d:	02 91 5c 23 69 78    	add    0x7869235c(%rcx),%dl
	}while(addr);
    1833:	74 00                	je     1835 <CC+0xa6>
    1835:	01 9b 02 46 03 00    	add    %ebx,0x34602(%rbx)
	  if(!addr)
    183b:	00 02                	add    %al,(%rdx)
    183d:	91                   	xchg   %eax,%ecx
	    for(;;);
    183e:	6c                   	insb   (%dx),%es:(%rdi)
    183f:	00 22                	add    %ah,(%rdx)
	  Compile(FromName_(addr));
    1841:	3e 0b 00             	or     %ds:(%rax),%eax
    1844:	00 01                	add    %al,(%rcx)
    1846:	91                   	xchg   %eax,%ecx
    1847:	02 76 29             	add    0x29(%rsi),%dh
    184a:	00 00                	add    %al,(%rax)
    184c:	00 00                	add    %al,(%rax)
    184e:	00 00                	add    %al,(%rax)
    1850:	4a 01 00             	rex.WX add %rax,(%rax)
}
    1853:	00 00                	add    %al,(%rax)
{	
    1855:	00 00                	add    %al,(%rax)
    1857:	00 01                	add    %al,(%rcx)
    1859:	9c                   	pushfq 
    185a:	cb                   	lret   
    185b:	17                   	(bad)  
    185c:	00 00                	add    %al,(%rax)
    185e:	23 6c 65 6e          	and    0x6e(%rbp,%riz,2),%ebp
	char * str0=str;
    1862:	00 01                	add    %al,(%rcx)
    1864:	93                   	xchg   %eax,%ebx
    1865:	02 46 03             	add    0x3(%rsi),%al
    1868:	00 00                	add    %al,(%rax)
	COM(sw_str<<1|1);
    186a:	02 91 60 21 1d 08    	add    0x81d2160(%rcx),%dl
    1870:	00 00                	add    %al,(%rax)
    1872:	01 93 02 46 03 00    	add    %edx,0x34602(%rbx)
	addr0=HERE;
    1878:	00 02                	add    %al,(%rdx)
    187a:	91                   	xchg   %eax,%ecx
    187b:	64 00 33             	add    %dh,%fs:(%rbx)
    187e:	70 12                	jo     1892 <STR+0x3e>
    1880:	00 00                	add    %al,(%rax)
    1882:	01 8a 02 69 28 00    	add    %ecx,0x286902(%rdx)
    1888:	00 00                	add    %al,(%rax)
    188a:	00 00                	add    %al,(%rax)
    188c:	00 0d 01 00 00 00    	add    %cl,0x1(%rip)        # 1893 <STR+0x3f>
    1892:	00 00                	add    %al,(%rax)
    1894:	00 01                	add    %al,(%rcx)
    1896:	9c                   	pushfq 
    1897:	34 43                	xor    $0x43,%al
	CCOM(0);
    1899:	51                   	push   %rcx
    189a:	00 01                	add    %al,(%rcx)
    189c:	7b 02                	jnp    18a0 <STR+0x4c>
    189e:	c6                   	(bad)  
    189f:	26 00 00             	add    %al,%es:(%rax)
    18a2:	00 00                	add    %al,(%rax)
	while(*str)  CCOM(*str++);
    18a4:	00 00                	add    %al,(%rax)
    18a6:	a3 01 00 00 00 00 00 	movabs %eax,0x100000000000001
    18ad:	00 01 
    18af:	9c                   	pushfq 
    18b0:	33 18                	xor    (%rax),%ebx
    18b2:	00 00                	add    %al,(%rax)
    18b4:	25 88 27 00 00       	and    $0x2788,%eax
    18b9:	00 00                	add    %al,(%rax)
    18bb:	00 00                	add    %al,(%rax)
    18bd:	de 00                	fiadds (%rax)
    18bf:	00 00                	add    %al,(%rax)
    18c1:	00 00                	add    %al,(%rax)
    18c3:	00 00                	add    %al,(%rax)
    18c5:	21 1d 08 00 00 01    	and    %ebx,0x1000008(%rip)        # 10018d3 <_end+0x9f0533>
        BYTE(addr0)=(__u8)(str-str0);
    18cb:	7f 02                	jg     18cf <STR+0x7b>
    18cd:	46 03 00             	rex.RX add (%rax),%r8d
    18d0:	00 02                	add    %al,(%rdx)
    18d2:	91                   	xchg   %eax,%ecx
    18d3:	68 21 0a 0e 00       	pushq  $0xe0a21
    18d8:	00 01                	add    %al,(%rcx)
    18da:	7f 02                	jg     18de <STR+0x8a>
    18dc:	46 03 00             	rex.RX add (%rax),%r8d
    18df:	00 02                	add    %al,(%rdx)
    18e1:	91                   	xchg   %eax,%ecx
    18e2:	6c                   	insb   (%dx),%es:(%rdi)
    18e3:	00 00                	add    %al,(%rax)
	if(HERE&1)CCOM(0);
    18e5:	34 53                	xor    $0x53,%al
    18e7:	51                   	push   %rcx
    18e8:	00 01                	add    %al,(%rcx)
    18ea:	6d                   	insl   (%dx),%es:(%rdi)
    18eb:	02 23                	add    (%rbx),%ah
    18ed:	25 00 00 00 00       	and    $0x0,%eax
    18f2:	00 00                	add    %al,(%rax)
    18f4:	a3 01 00 00 00 00 00 	movabs %eax,0x100000000000001
    18fb:	00 01 
    18fd:	9c                   	pushfq 
    18fe:	81 18 00 00 25 e5    	sbbl   $0xe5250000,(%rax)
    1904:	25 00 00 00 00       	and    $0x0,%eax
    1909:	00 00                	add    %al,(%rax)
    190b:	de 00                	fiadds (%rax)
    190d:	00 00                	add    %al,(%rax)
    190f:	00 00                	add    %al,(%rax)
    1911:	00 00                	add    %al,(%rax)
    1913:	21 1d 08 00 00 01    	and    %ebx,0x1000008(%rip)        # 1001921 <_end+0x9f0581>
}
    1919:	71 02                	jno    191d <STR+0xc9>
    191b:	46 03 00             	rex.RX add (%rax),%r8d
    191e:	00 02                	add    %al,(%rdx)
    1920:	91                   	xchg   %eax,%ecx
{ 
    1921:	68 21 0a 0e 00       	pushq  $0xe0a21
    1926:	00 01                	add    %al,(%rcx)
    1928:	71 02                	jno    192c <TP+0xb>
    192a:	46 03 00             	rex.RX add (%rax),%r8d
 STR(str);
    192d:	00 02                	add    %al,(%rdx)
    192f:	91                   	xchg   %eax,%ecx
    1930:	6c                   	insb   (%dx),%es:(%rdi)
    1931:	00 00                	add    %al,(%rax)
    1933:	22 1c 12             	and    (%rdx,%rdx,1),%bl
    1936:	00 00                	add    %al,(%rax)
    1938:	01 5e 02             	add    %ebx,0x2(%rsi)
 COM(sw_type<<1|1);
    193b:	06                   	(bad)  
    193c:	23 00                	and    (%rax),%eax
    193e:	00 00                	add    %al,(%rax)
    1940:	00 00                	add    %al,(%rax)
    1942:	00 1d 02 00 00 00    	add    %bl,0x2(%rip)        # 194a <F_END+0x4>
{	
    1948:	00 00                	add    %al,(%rax)
    194a:	00 01                	add    %al,(%rcx)
	COM(0x8001);
    194c:	9c                   	pushfq 
    194d:	db 18                	fistpl (%rax)
    194f:	00 00                	add    %al,(%rax)
    1951:	21 1d 08 00 00 01    	and    %ebx,0x1000008(%rip)        # 100195f <_end+0x9f05bf>
	current=last;
    1957:	60                   	(bad)  
    1958:	02 46 03             	add    0x3(%rsi),%al
    195b:	00 00                	add    %al,(%rax)
    195d:	02 91 5c 21 a5 0d    	add    0xda5215c(%rcx),%dl
    1963:	00 00                	add    %al,(%rax)
    1965:	01 60 02             	add    %esp,0x2(%rax)
    1968:	46 03 00             	rex.RX add (%rax),%r8d
    196b:	00 02                	add    %al,(%rdx)
    196d:	91                   	xchg   %eax,%ecx
    196e:	64 21 1c 08          	and    %ebx,%fs:(%rax,%rcx,1)
    1972:	00 00                	add    %al,(%rax)
    1974:	01 60 02             	add    %esp,0x2(%rax)
    1977:	46 03 00             	rex.RX add (%rax),%r8d
    197a:	00 02                	add    %al,(%rdx)
    197c:	91                   	xchg   %eax,%ecx
    197d:	60                   	(bad)  
    197e:	23 63 68             	and    0x68(%rbx),%esp
    1981:	00 01                	add    %al,(%rcx)
    1983:	61                   	(bad)  
    1984:	02 30                	add    (%rax),%dh
    1986:	03 00                	add    (%rax),%eax
    1988:	00 02                	add    %al,(%rdx)
    198a:	91                   	xchg   %eax,%ecx
    198b:	5b                   	pop    %rbx
    198c:	00 22                	add    %ah,(%rdx)
    198e:	94                   	xchg   %eax,%esp
    198f:	08 00                	or     %al,(%rax)
    1991:	00 01                	add    %al,(%rcx)
    1993:	50                   	push   %rax
    1994:	02 fa                	add    %dl,%bh
    1996:	20 00                	and    %al,(%rax)
    1998:	00 00                	add    %al,(%rax)
    199a:	00 00                	add    %al,(%rax)
    199c:	00 0c 02             	add    %cl,(%rdx,%rax,1)
    199f:	00 00                	add    %al,(%rax)
    19a1:	00 00                	add    %al,(%rax)
    19a3:	00 00                	add    %al,(%rax)
    19a5:	01 9c 27 19 00 00 21 	add    %ebx,0x21000019(%rdi,%riz,1)
}
    19ac:	1d 08 00 00 01       	sbb    $0x1000008,%eax
{	
    19b1:	52                   	push   %rdx
    19b2:	02 46 03             	add    0x3(%rsi),%al
	sp-=4;CELL(sp)=HERE;
    19b5:	00 00                	add    %al,(%rax)
    19b7:	02 91 5c 21 a5 0d    	add    0xda5215c(%rcx),%dl
    19bd:	00 00                	add    %al,(%rax)
    19bf:	01 52 02             	add    %edx,0x2(%rdx)
    19c2:	46 03 00             	rex.RX add (%rax),%r8d
    19c5:	00 02                	add    %al,(%rdx)
    19c7:	91                   	xchg   %eax,%ecx
    19c8:	64 21 1c 08          	and    %ebx,%fs:(%rax,%rcx,1)
    19cc:	00 00                	add    %al,(%rax)
    19ce:	01 52 02             	add    %edx,0x2(%rdx)
    19d1:	46 03 00             	rex.RX add (%rax),%r8d
    19d4:	00 02                	add    %al,(%rdx)
    19d6:	91                   	xchg   %eax,%ecx
    19d7:	60                   	(bad)  
    19d8:	00 35 4c 49 54 00    	add    %dh,0x54494c(%rip)        # 54632a <mem+0x33724a>
    19de:	01 4a 02             	add    %ecx,0x2(%rdx)
    19e1:	d8 20                	fsubs  (%rax)
    19e3:	00 00                	add    %al,(%rax)
    19e5:	00 00                	add    %al,(%rax)
    19e7:	00 00                	add    %al,(%rax)
    19e9:	22 00                	and    (%rax),%al
    19eb:	00 00                	add    %al,(%rax)
    19ed:	00 00                	add    %al,(%rax)
    19ef:	00 00                	add    %al,(%rax)
    19f1:	01 9c 54 19 00 00 36 	add    %ebx,0x36000019(%rsp,%rdx,2)
    19f8:	64 64 00 01          	fs add %al,%fs:(%rcx)
    19fc:	4a 02 46 03          	rex.WX add 0x3(%rsi),%al
    1a00:	00 00                	add    %al,(%rax)
    1a02:	02 91 6c 00 33 b6    	add    -0x49ccff94(%rcx),%dl
    1a08:	08 00                	or     %al,(%rax)
    1a0a:	00 01                	add    %al,(%rcx)
    1a0c:	44 02 bd 20 00 00 00 	add    0x20(%rbp),%r15b
    1a13:	00 00                	add    %al,(%rax)
    1a15:	00 1b                	add    %bl,(%rbx)
    1a17:	00 00                	add    %al,(%rax)
    1a19:	00 00                	add    %al,(%rax)
    1a1b:	00 00                	add    %al,(%rax)
    1a1d:	00 01                	add    %al,(%rcx)
    1a1f:	9c                   	pushfq 
    1a20:	22 17                	and    (%rdi),%dl
    1a22:	05 00 00 01 3a       	add    $0x3a010000,%eax
    1a27:	02 c3                	add    %bl,%al
    1a29:	1f                   	(bad)  
    1a2a:	00 00                	add    %al,(%rax)
    1a2c:	00 00                	add    %al,(%rax)
    1a2e:	00 00                	add    %al,(%rax)
    1a30:	fa                   	cli    
    1a31:	00 00                	add    %al,(%rax)
    1a33:	00 00                	add    %al,(%rax)
    1a35:	00 00                	add    %al,(%rax)
    1a37:	00 01                	add    %al,(%rcx)
    1a39:	9c                   	pushfq 
    1a3a:	9a                   	(bad)  
    1a3b:	19 00                	sbb    %eax,(%rax)
    1a3d:	00 23                	add    %ah,(%rbx)
    1a3f:	74 00                	je     1a41 <BEGIN+0x93>
    1a41:	01 3c 02             	add    %edi,(%rdx,%rax,1)
    1a44:	46 03 00             	rex.RX add (%rax),%r8d
    1a47:	00 02                	add    %al,(%rdx)
    1a49:	91                   	xchg   %eax,%ecx
    1a4a:	64 00 33             	add    %dh,%fs:(%rbx)
    1a4d:	47 01 00             	rex.RXB add %r8d,(%r8)
    1a50:	00 01                	add    %al,(%rcx)
    1a52:	34 02                	xor    $0x2,%al
    1a54:	07                   	(bad)  
    1a55:	1f                   	(bad)  
    1a56:	00 00                	add    %al,(%rax)
    1a58:	00 00                	add    %al,(%rax)
    1a5a:	00 00                	add    %al,(%rax)
    1a5c:	bc 00 00 00 00       	mov    $0x0,%esp
{	
    1a61:	00 00                	add    %al,(%rax)
    1a63:	00 01                	add    %al,(%rcx)
	COM(sw_branch<<1|1);
    1a65:	9c                   	pushfq 
    1a66:	22 80 0b 00 00 01    	and    0x100000b(%rax),%al
    1a6c:	2b 02                	sub    (%rdx),%eax
    1a6e:	17                   	(bad)  
	COM(CELL(sp));
    1a6f:	1e                   	(bad)  
    1a70:	00 00                	add    %al,(%rax)
    1a72:	00 00                	add    %al,(%rax)
    1a74:	00 00                	add    %al,(%rax)
    1a76:	f0 00 00             	lock add %al,(%rax)
    1a79:	00 00                	add    %al,(%rax)
    1a7b:	00 00                	add    %al,(%rax)
    1a7d:	00 01                	add    %al,(%rcx)
    1a7f:	9c                   	pushfq 
    1a80:	e0 19                	loopne 1a9b <AGAIN+0x3a>
    1a82:	00 00                	add    %al,(%rax)
    1a84:	23 74 00 01          	and    0x1(%rax,%rax,1),%esi
    1a88:	2d 02 46 03 00       	sub    $0x34602,%eax
    1a8d:	00 02                	add    %al,(%rdx)
    1a8f:	91                   	xchg   %eax,%ecx
    1a90:	64 00 37             	add    %dh,%fs:(%rdi)
    1a93:	49                   	rex.WB
    1a94:	46 00 01             	rex.RX add %r8b,(%rcx)
    1a97:	24 02                	and    $0x2,%al
    1a99:	d5                   	(bad)  
    1a9a:	1c 00                	sbb    $0x0,%al
    1a9c:	00 00                	add    %al,(%rax)
    1a9e:	00 00                	add    %al,(%rax)
    1aa0:	00 42 01             	add    %al,0x1(%rdx)
    1aa3:	00 00                	add    %al,(%rax)
    1aa5:	00 00                	add    %al,(%rax)
	sp+=4;
    1aa7:	00 00                	add    %al,(%rax)
    1aa9:	01 9c 33 7d 11 00 00 	add    %ebx,0x117d(%rbx,%rsi,1)
    1ab0:	01 1d 02 93 1b 00    	add    %ebx,0x1b9302(%rip)        # 1badb8 <__FRAME_END__+0x1ac43c>
    1ab6:	00 00                	add    %al,(%rax)
    1ab8:	00 00                	add    %al,(%rax)
    1aba:	00 42 01             	add    %al,0x1(%rdx)
    1abd:	00 00                	add    %al,(%rax)
    1abf:	00 00                	add    %al,(%rax)
    1ac1:	00 00                	add    %al,(%rax)
    1ac3:	01 9c 33 5b 01 00 00 	add    %ebx,0x15b(%rbx,%rsi,1)
    1aca:	01 16                	add    %edx,(%rsi)
    1acc:	02 fa                	add    %dl,%bh
    1ace:	1a 00                	sbb    (%rax),%al
    1ad0:	00 00                	add    %al,(%rax)
    1ad2:	00 00                	add    %al,(%rax)
    1ad4:	00 99 00 00 00 00    	add    %bl,0x0(%rcx)
    1ada:	00 00                	add    %al,(%rax)
    1adc:	00 01                	add    %al,(%rcx)
    1ade:	9c                   	pushfq 
    1adf:	33 6c 10 00          	xor    0x0(%rax,%rdx,1),%ebp
    1ae3:	00 01                	add    %al,(%rcx)
    1ae5:	0f 02 61 1a          	lar    0x1a(%rcx),%esp
    1ae9:	00 00                	add    %al,(%rax)
    1aeb:	00 00                	add    %al,(%rax)
    1aed:	00 00                	add    %al,(%rax)
    1aef:	99                   	cltd   
    1af0:	00 00                	add    %al,(%rax)
    1af2:	00 00                	add    %al,(%rax)
    1af4:	00 00                	add    %al,(%rax)
    1af6:	00 01                	add    %al,(%rcx)
}
    1af8:	9c                   	pushfq 
    1af9:	33 dd                	xor    %ebp,%ebx
{	
    1afb:	0b 00                	or     (%rax),%eax
    1afd:	00 01                	add    %al,(%rcx)
	COM(sw_0branch<<1|1);
    1aff:	0a 02                	or     (%rdx),%al
    1b01:	ae                   	scas   %es:(%rdi),%al
    1b02:	19 00                	sbb    %eax,(%rax)
    1b04:	00 00                	add    %al,(%rax)
    1b06:	00 00                	add    %al,(%rax)
	COM(CELL(sp));
    1b08:	00 b3 00 00 00 00    	add    %dh,0x0(%rbx)
    1b0e:	00 00                	add    %al,(%rax)
    1b10:	00 01                	add    %al,(%rcx)
    1b12:	9c                   	pushfq 
    1b13:	33 d8                	xor    %eax,%ebx
    1b15:	04 00                	add    $0x0,%al
    1b17:	00 01                	add    %al,(%rcx)
    1b19:	04 02                	add    $0x2,%al
    1b1b:	46 19 00             	rex.RX sbb %r8d,(%rax)
    1b1e:	00 00                	add    %al,(%rax)
    1b20:	00 00                	add    %al,(%rax)
    1b22:	00 68 00             	add    %ch,0x0(%rax)
    1b25:	00 00                	add    %al,(%rax)
    1b27:	00 00                	add    %al,(%rax)
    1b29:	00 00                	add    %al,(%rax)
    1b2b:	01 9c 35 54 50 00 01 	add    %ebx,0x1005054(%rbp,%rsi,1)
    1b32:	fe 01                	incb   (%rcx)
    1b34:	21 19                	and    %ebx,(%rcx)
    1b36:	00 00                	add    %al,(%rax)
    1b38:	00 00                	add    %al,(%rax)
    1b3a:	00 00                	add    %al,(%rax)
    1b3c:	25 00 00 00 00       	and    $0x0,%eax
	sp+=4;
    1b41:	00 00                	add    %al,(%rax)
    1b43:	00 01                	add    %al,(%rcx)
    1b45:	9c                   	pushfq 
    1b46:	a8 1a                	test   $0x1a,%al
    1b48:	00 00                	add    %al,(%rax)
    1b4a:	36 73 74             	ss jae 1bc1 <AHEAD+0x2e>
    1b4d:	72 00                	jb     1b4f <UNTIL+0x55>
    1b4f:	01 fe                	add    %edi,%esi
    1b51:	01 98 00 00 00 02    	add    %ebx,0x2000000(%rax)
    1b57:	91                   	xchg   %eax,%ecx
    1b58:	68 00 35 53 54       	pushq  $0x54533500
    1b5d:	52                   	push   %rdx
    1b5e:	00 01                	add    %al,(%rcx)
    1b60:	f2 01 54 18 00       	repnz add %edx,0x0(%rax,%rbx,1)
    1b65:	00 00                	add    %al,(%rax)
    1b67:	00 00                	add    %al,(%rax)
    1b69:	00 cd                	add    %cl,%ch
    1b6b:	00 00                	add    %al,(%rax)
    1b6d:	00 00                	add    %al,(%rax)
    1b6f:	00 00                	add    %al,(%rax)
    1b71:	00 01                	add    %al,(%rcx)
    1b73:	9c                   	pushfq 
    1b74:	f4                   	hlt    
    1b75:	1a 00                	sbb    (%rax),%al
    1b77:	00 36                	add    %dh,(%rsi)
    1b79:	73 74                	jae    1bef <AHEAD+0x5c>
    1b7b:	72 00                	jb     1b7d <UNTIL+0x83>
    1b7d:	01 f2                	add    %esi,%edx
    1b7f:	01 98 00 00 00 02    	add    %ebx,0x2000000(%rax)
    1b85:	91                   	xchg   %eax,%ecx
    1b86:	50                   	push   %rax
    1b87:	21 68 0c             	and    %ebp,0xc(%rax)
    1b8a:	00 00                	add    %al,(%rax)
    1b8c:	01 f4                	add    %esi,%esp
    1b8e:	01 98 00 00 00 02    	add    %ebx,0x2000000(%rax)
{       
    1b94:	91                   	xchg   %eax,%ecx
    1b95:	60                   	(bad)  
    1b96:	21 0d 14 00 00 01    	and    %ecx,0x1000014(%rip)        # 1001bb0 <_end+0x9f0810>
	sp-=4;CELL(sp)=0;
    1b9c:	f5                   	cmc    
    1b9d:	01 46 03             	add    %eax,0x3(%rsi)
    1ba0:	00 00                	add    %al,(%rax)
    1ba2:	02 91 5c 00 35 43    	add    0x4335005c(%rcx),%dl
    1ba8:	43 00 01             	rex.XB add %al,(%r9)
    1bab:	df 01                	filds  (%rcx)
    1bad:	8f                   	(bad)  
    1bae:	17                   	(bad)  
    1baf:	00 00                	add    %al,(%rax)
    1bb1:	00 00                	add    %al,(%rax)
    1bb3:	00 00                	add    %al,(%rax)
    1bb5:	c5 00 00             	(bad)  
    1bb8:	00 00                	add    %al,(%rax)
    1bba:	00 00                	add    %al,(%rax)
    1bbc:	00 01                	add    %al,(%rcx)
    1bbe:	9c                   	pushfq 
    1bbf:	3f                   	(bad)  
    1bc0:	1b 00                	sbb    (%rax),%eax
    1bc2:	00 32                	add    %dh,(%rdx)
    1bc4:	54                   	push   %rsp
    1bc5:	0d 00 00 01 df       	or     $0xdf010000,%eax
    1bca:	01 23                	add    %esp,(%rbx)
    1bcc:	0d 00 00 02 91       	or     $0x91020000,%eax
    1bd1:	58                   	pop    %rax
    1bd2:	21 1d 08 00 00 01    	and    %ebx,0x1000008(%rip)        # 1001be0 <_end+0x9f0840>
    1bd8:	e1 01                	loope  1bdb <AHEAD+0x48>
    1bda:	46 03 00             	rex.RX add (%rax),%r8d
    1bdd:	00 02                	add    %al,(%rdx)
    1bdf:	91                   	xchg   %eax,%ecx
    1be0:	6c                   	insb   (%dx),%es:(%rdi)
    1be1:	21 0a                	and    %ecx,(%rdx)
    1be3:	0e                   	(bad)  
    1be4:	00 00                	add    %al,(%rax)
    1be6:	01 e2                	add    %esp,%edx
    1be8:	01 30                	add    %esi,(%rax)
    1bea:	03 00                	add    (%rax),%eax
    1bec:	00 02                	add    %al,(%rdx)
    1bee:	91                   	xchg   %eax,%ecx
    1bef:	6b 00 38             	imul   $0x38,(%rax),%eax
    1bf2:	8f 0a 00 00          	(bad)  
    1bf6:	01 d4                	add    %edx,%esp
    1bf8:	01 49 17             	add    %ecx,0x17(%rcx)
    1bfb:	00 00                	add    %al,(%rax)
    1bfd:	00 00                	add    %al,(%rax)
    1bff:	00 00                	add    %al,(%rax)
    1c01:	46 00 00             	rex.RX add %r8b,(%rax)
    1c04:	00 00                	add    %al,(%rax)
    1c06:	00 00                	add    %al,(%rax)
    1c08:	00 01                	add    %al,(%rcx)
    1c0a:	9c                   	pushfq 
    1c0b:	7c 1b                	jl     1c28 <AHEAD+0x95>
    1c0d:	00 00                	add    %al,(%rax)
    1c0f:	32 1d 08 00 00 01    	xor    0x1000008(%rip),%bl        # 1001c1d <_end+0x9f087d>
    1c15:	d4                   	(bad)  
    1c16:	01 46 03             	add    %eax,0x3(%rsi)
    1c19:	00 00                	add    %al,(%rax)
    1c1b:	02 91 5c 23 63 6f    	add    0x6f63235c(%rcx),%dl
	AGAIN();
    1c21:	64 00 01             	add    %al,%fs:(%rcx)
    1c24:	d5                   	(bad)  
    1c25:	01 46 03             	add    %eax,0x3(%rsi)
	sp-=4;CELL(sp)=HERE-4;
    1c28:	00 00                	add    %al,(%rax)
    1c2a:	02 91 6c 00 31 a0    	add    -0x5fceff94(%rcx),%dl
    1c30:	01 00                	add    %eax,(%rax)
    1c32:	00 01                	add    %al,(%rcx)
    1c34:	cd 01                	int    $0x1
    1c36:	46 03 00             	rex.RX add (%rax),%r8d
    1c39:	00 12                	add    %dl,(%rdx)
    1c3b:	17                   	(bad)  
    1c3c:	00 00                	add    %al,(%rax)
    1c3e:	00 00                	add    %al,(%rax)
    1c40:	00 00                	add    %al,(%rax)
    1c42:	37                   	(bad)  
    1c43:	00 00                	add    %al,(%rax)
    1c45:	00 00                	add    %al,(%rax)
    1c47:	00 00                	add    %al,(%rax)
    1c49:	00 01                	add    %al,(%rcx)
    1c4b:	9c                   	pushfq 
    1c4c:	ae                   	scas   %es:(%rdi),%al
    1c4d:	1b 00                	sbb    (%rax),%eax
    1c4f:	00 32                	add    %dh,(%rdx)
    1c51:	1d 08 00 00 01       	sbb    $0x1000008,%eax
    1c56:	cd 01                	int    $0x1
    1c58:	46 03 00             	rex.RX add (%rax),%r8d
    1c5b:	00 02                	add    %al,(%rdx)
    1c5d:	91                   	xchg   %eax,%ecx
    1c5e:	6c                   	insb   (%dx),%es:(%rdi)
    1c5f:	00 31                	add    %dh,(%rcx)
    1c61:	71 02                	jno    1c65 <AHEAD+0xd2>
    1c63:	00 00                	add    %al,(%rax)
    1c65:	01 c2                	add    %eax,%edx
    1c67:	01 46 03             	add    %eax,0x3(%rsi)
    1c6a:	00 00                	add    %al,(%rax)
    1c6c:	98                   	cwtl   
    1c6d:	16                   	(bad)  
    1c6e:	00 00                	add    %al,(%rax)
    1c70:	00 00                	add    %al,(%rax)
    1c72:	00 00                	add    %al,(%rax)
    1c74:	7a 00                	jp     1c76 <AHEAD+0xe3>
    1c76:	00 00                	add    %al,(%rax)
    1c78:	00 00                	add    %al,(%rax)
    1c7a:	00 00                	add    %al,(%rax)
    1c7c:	01 9c fe 1b 00 00 36 	add    %ebx,0x3600001b(%rsi,%rdi,8)
    1c83:	77 69                	ja     1cee <IF+0x19>
    1c85:	64 00 01             	add    %al,%fs:(%rcx)
    1c88:	c2 01 46             	retq   $0x4601
    1c8b:	03 00                	add    (%rax),%eax
    1c8d:	00 02                	add    %al,(%rdx)
    1c8f:	91                   	xchg   %eax,%ecx
    1c90:	4c 32 54 0d 00       	rex.WR xor 0x0(%rbp,%rcx,1),%r10b
    1c95:	00 01                	add    %al,(%rcx)
    1c97:	c2 01 23             	retq   $0x2301
    1c9a:	0d 00 00 02 91       	or     $0x91020000,%eax
    1c9f:	40 21 1d 08 00 00 01 	rex and %ebx,0x1000008(%rip)        # 1001cae <_end+0x9f090e>
    1ca6:	c3                   	retq   
    1ca7:	01 46 03             	add    %eax,0x3(%rsi)
    1caa:	00 00                	add    %al,(%rax)
    1cac:	02 91 5c 00 31 54    	add    0x5431005c(%rcx),%dl
    1cb2:	12 00                	adc    (%rax),%al
    1cb4:	00 01                	add    %al,(%rcx)
    1cb6:	b2 01                	mov    $0x1,%dl
    1cb8:	46 03 00             	rex.RX add (%rax),%r8d
    1cbb:	00 f5                	add    %dh,%ch
    1cbd:	15 00 00 00 00       	adc    $0x0,%eax
    1cc2:	00 00                	add    %al,(%rax)
    1cc4:	a3 00 00 00 00 00 00 	movabs %eax,0x100000000000000
    1ccb:	00 01 
    1ccd:	9c                   	pushfq 
    1cce:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1ccf:	1c 00                	sbb    $0x0,%al
}
    1cd1:	00 36                	add    %dh,(%rsi)
    1cd3:	76 73                	jbe    1d48 <IF+0x73>
{       
    1cd5:	31 00                	xor    %eax,(%rax)
    1cd7:	01 b2 01 a6 1c 00    	add    %esi,0x1ca601(%rdx)
	sp-=4;CELL(sp)=0;
    1cdd:	00 03                	add    %al,(%rbx)
    1cdf:	91                   	xchg   %eax,%ecx
    1ce0:	b8 7f 36 76 73       	mov    $0x7376367f,%eax
    1ce5:	32 00                	xor    (%rax),%al
    1ce7:	01 b2 01 a6 1c 00    	add    %esi,0x1ca601(%rdx)
    1ced:	00 03                	add    %al,(%rbx)
    1cef:	91                   	xchg   %eax,%ecx
    1cf0:	b0 7f                	mov    $0x7f,%al
    1cf2:	36 6e                	outsb  %ss:(%rsi),(%dx)
    1cf4:	00 01                	add    %al,(%rcx)
    1cf6:	b2 01                	mov    $0x1,%dl
    1cf8:	46 03 00             	rex.RX add (%rax),%r8d
    1cfb:	00 03                	add    %al,(%rbx)
    1cfd:	91                   	xchg   %eax,%ecx
    1cfe:	ac                   	lods   %ds:(%rsi),%al
    1cff:	7f 23                	jg     1d24 <IF+0x4f>
    1d01:	69 00 01 b4 01 52    	imul   $0x5201b401,(%rax),%eax
    1d07:	00 00                	add    %al,(%rax)
    1d09:	00 02                	add    %al,(%rdx)
    1d0b:	91                   	xchg   %eax,%ecx
    1d0c:	4c 23 73 31          	and    0x31(%rbx),%r14
    1d10:	00 01                	add    %al,(%rcx)
    1d12:	b5 01                	mov    $0x1,%ch
    1d14:	ad                   	lods   %ds:(%rsi),%eax
    1d15:	1c 00                	sbb    $0x0,%al
    1d17:	00 02                	add    %al,(%rdx)
    1d19:	91                   	xchg   %eax,%ecx
    1d1a:	50                   	push   %rax
    1d1b:	23 73 32             	and    0x32(%rbx),%esi
    1d1e:	00 01                	add    %al,(%rcx)
    1d20:	b6 01                	mov    $0x1,%dh
    1d22:	ad                   	lods   %ds:(%rsi),%eax
    1d23:	1c 00                	sbb    $0x0,%al
    1d25:	00 02                	add    %al,(%rdx)
    1d27:	91                   	xchg   %eax,%ecx
    1d28:	58                   	pop    %rax
    1d29:	25 22 16 00 00       	and    $0x1622,%eax
    1d2e:	00 00                	add    %al,(%rax)
    1d30:	00 00                	add    %al,(%rax)
    1d32:	5e                   	pop    %rsi
    1d33:	00 00                	add    %al,(%rax)
    1d35:	00 00                	add    %al,(%rax)
    1d37:	00 00                	add    %al,(%rax)
    1d39:	00 23                	add    %ah,(%rbx)
    1d3b:	75 31                	jne    1d6e <IF+0x99>
    1d3d:	00 01                	add    %al,(%rcx)
    1d3f:	b9 01 3f 00 00       	mov    $0x3f01,%ecx
    1d44:	00 02                	add    %al,(%rdx)
    1d46:	91                   	xchg   %eax,%ecx
    1d47:	4a 23 75 32          	rex.WX and 0x32(%rbp),%rsi
    1d4b:	00 01                	add    %al,(%rcx)
    1d4d:	ba 01 3f 00 00       	mov    $0x3f01,%edx
    1d52:	00 02                	add    %al,(%rdx)
    1d54:	91                   	xchg   %eax,%ecx
    1d55:	4b 00 00             	rex.WXB add %al,(%r8)
    1d58:	07                   	(bad)  
    1d59:	08 ac 1c 00 00 39 07 	or     %ch,0x7390000(%rsp,%rbx,1)
	UNTIL();
    1d60:	08 46 00             	or     %al,0x0(%rsi)
    1d63:	00 00                	add    %al,(%rax)
    1d65:	38 50 02             	cmp    %dl,0x2(%rax)
    1d68:	00 00                	add    %al,(%rax)
	sp-=4;CELL(sp)=HERE-4;
    1d6a:	01 ab 01 d0 15 00    	add    %ebp,0x15d001(%rbx)
    1d70:	00 00                	add    %al,(%rax)
    1d72:	00 00                	add    %al,(%rax)
    1d74:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # 1d7a <IF+0xa5>
    1d7a:	00 00                	add    %al,(%rax)
    1d7c:	00 01                	add    %al,(%rcx)
    1d7e:	9c                   	pushfq 
    1d7f:	e1 1c                	loope  1d9d <IF+0xc8>
    1d81:	00 00                	add    %al,(%rax)
    1d83:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
    1d87:	00 01                	add    %al,(%rcx)
    1d89:	ab                   	stos   %eax,%es:(%rdi)
    1d8a:	01 23                	add    %esp,(%rbx)
    1d8c:	0d 00 00 02 91       	or     $0x91020000,%eax
    1d91:	68 00 38 fa 0f       	pushq  $0xffa3800
    1d96:	00 00                	add    %al,(%rax)
    1d98:	01 a4 01 50 15 00 00 	add    %esp,0x1550(%rcx,%rax,1)
    1d9f:	00 00                	add    %al,(%rax)
    1da1:	00 00                	add    %al,(%rax)
    1da3:	80 00 00             	addb   $0x0,(%rax)
    1da6:	00 00                	add    %al,(%rax)
    1da8:	00 00                	add    %al,(%rax)
    1daa:	00 01                	add    %al,(%rcx)
    1dac:	9c                   	pushfq 
    1dad:	0f 1d 00             	nopl   (%rax)
    1db0:	00 32                	add    %dh,(%rdx)
    1db2:	54                   	push   %rsp
    1db3:	0d 00 00 01 a4       	or     $0xa4010000,%eax
    1db8:	01 23                	add    %esp,(%rbx)
    1dba:	0d 00 00 02 91       	or     $0x91020000,%eax
    1dbf:	60                   	(bad)  
    1dc0:	00 38                	add    %bh,(%rax)
    1dc2:	6f                   	outsl  %ds:(%rsi),(%dx)
    1dc3:	0a 00                	or     (%rax),%al
    1dc5:	00 01                	add    %al,(%rcx)
    1dc7:	9c                   	pushfq 
    1dc8:	01 c3                	add    %eax,%ebx
    1dca:	14 00                	adc    $0x0,%al
    1dcc:	00 00                	add    %al,(%rax)
    1dce:	00 00                	add    %al,(%rax)
    1dd0:	00 8d 00 00 00 00    	add    %cl,0x0(%rbp)
    1dd6:	00 00                	add    %al,(%rax)
    1dd8:	00 01                	add    %al,(%rcx)
    1dda:	9c                   	pushfq 
    1ddb:	4b 1d 00 00 32 54    	rex.WXB sbb $0x54320000,%rax
    1de1:	0d 00 00 01 9c       	or     $0x9c010000,%eax
    1de6:	01 23                	add    %esp,(%rbx)
    1de8:	0d 00 00 02 91       	or     $0x91020000,%eax
    1ded:	60                   	(bad)  
    1dee:	36 64 64 00 01       	ss fs add %al,%fs:(%rcx)
    1df3:	9c                   	pushfq 
    1df4:	01 46 03             	add    %eax,0x3(%rsi)
    1df7:	00 00                	add    %al,(%rax)
    1df9:	02 91 5c 00 38 63    	add    0x6338005c(%rcx),%dl
    1dff:	0c 00                	or     $0x0,%al
    1e01:	00 01                	add    %al,(%rcx)
    1e03:	95                   	xchg   %eax,%ebp
    1e04:	01 39                	add    %edi,(%rcx)
    1e06:	14 00                	adc    $0x0,%al
    1e08:	00 00                	add    %al,(%rax)
    1e0a:	00 00                	add    %al,(%rax)
    1e0c:	00 8a 00 00 00 00    	add    %cl,0x0(%rdx)
    1e12:	00 00                	add    %al,(%rax)
}
    1e14:	00 01                	add    %al,(%rcx)
    1e16:	9c                   	pushfq 
{ 
    1e17:	88 1d 00 00 32 54    	mov    %bl,0x54320000(%rip)        # 54321e1d <_end+0x53d10a7d>
    1e1d:	0d 00 00 01 95       	or     $0x95010000,%eax
	IF();
    1e22:	01 23                	add    %esp,(%rbx)
    1e24:	0d 00 00 02 91       	or     $0x91020000,%eax
    1e29:	60                   	(bad)  
	t=CELL(sp);
    1e2a:	36 63 6f 64          	movslq %ss:0x64(%rdi),%ebp
    1e2e:	00 01                	add    %al,(%rcx)
    1e30:	95                   	xchg   %eax,%ebp
    1e31:	01 46 03             	add    %eax,0x3(%rsi)
    1e34:	00 00                	add    %al,(%rax)
    1e36:	02 91 5c 00 33 a7    	add    -0x58ccffa4(%rcx),%dl
    1e3c:	14 00                	adc    $0x0,%al
    1e3e:	00 01                	add    %al,(%rcx)
    1e40:	90                   	nop
    1e41:	01 d2                	add    %edx,%edx
    1e43:	13 00                	adc    (%rax),%eax
    1e45:	00 00                	add    %al,(%rax)
    1e47:	00 00                	add    %al,(%rax)
    1e49:	00 67 00             	add    %ah,0x0(%rdi)
    1e4c:	00 00                	add    %al,(%rax)
    1e4e:	00 00                	add    %al,(%rax)
    1e50:	00 00                	add    %al,(%rax)
    1e52:	01 9c 38 91 09 00 00 	add    %ebx,0x991(%rax,%rdi,1)
    1e59:	01 89 01 94 13 00    	add    %ecx,0x139401(%rcx)
	CELL(sp)=CELL(sp+4);
    1e5f:	00 00                	add    %al,(%rax)
    1e61:	00 00                	add    %al,(%rax)
    1e63:	00 3e                	add    %bh,(%rsi)
    1e65:	00 00                	add    %al,(%rax)
    1e67:	00 00                	add    %al,(%rax)
    1e69:	00 00                	add    %al,(%rax)
    1e6b:	00 01                	add    %al,(%rcx)
    1e6d:	9c                   	pushfq 
    1e6e:	dd 1d 00 00 32 54    	fstpl  0x54320000(%rip)        # 54321e74 <_end+0x53d10ad4>
    1e74:	0d 00 00 01 89       	or     $0x89010000,%eax
    1e79:	01 23                	add    %esp,(%rbx)
    1e7b:	0d 00 00 02 91       	or     $0x91020000,%eax
    1e80:	58                   	pop    %rax
    1e81:	23 69 00             	and    0x0(%rcx),%ebp
    1e84:	01 8b 01 46 03 00    	add    %ecx,0x34601(%rbx)
    1e8a:	00 02                	add    %al,(%rdx)
    1e8c:	91                   	xchg   %eax,%ecx
    1e8d:	6c                   	insb   (%dx),%es:(%rdi)
    1e8e:	00 38                	add    %bh,(%rax)
    1e90:	90                   	nop
    1e91:	09 00                	or     %eax,(%rax)
    1e93:	00 01                	add    %al,(%rcx)
    1e95:	81 01 ec 12 00 00    	addl   $0x12ec,(%rcx)
    1e9b:	00 00                	add    %al,(%rax)
    1e9d:	00 00                	add    %al,(%rax)
    1e9f:	a8 00                	test   $0x0,%al
    1ea1:	00 00                	add    %al,(%rax)
    1ea3:	00 00                	add    %al,(%rax)
    1ea5:	00 00                	add    %al,(%rax)
    1ea7:	01 9c 1a 1e 00 00 32 	add    %ebx,0x3200001e(%rdx,%rbx,1)
    1eae:	54                   	push   %rsp
    1eaf:	0d 00 00 01 81       	or     $0x81010000,%eax
    1eb4:	01 23                	add    %esp,(%rbx)
    1eb6:	0d 00 00 02 91       	or     $0x91020000,%eax
    1ebb:	60                   	(bad)  
    1ebc:	32 0a                	xor    (%rdx),%cl
    1ebe:	0e                   	(bad)  
    1ebf:	00 00                	add    %al,(%rax)
    1ec1:	01 81 01 46 03 00    	add    %eax,0x34601(%rcx)
	CELL(sp+4)=t;
    1ec7:	00 02                	add    %al,(%rdx)
    1ec9:	91                   	xchg   %eax,%ecx
    1eca:	5c                   	pop    %rsp
    1ecb:	00 38                	add    %bh,(%rax)
    1ecd:	0e                   	(bad)  
    1ece:	0d 00 00 01 75       	or     $0x75010000,%eax
    1ed3:	01 f7                	add    %esi,%edi
    1ed5:	11 00                	adc    %eax,(%rax)
    1ed7:	00 00                	add    %al,(%rax)
    1ed9:	00 00                	add    %al,(%rax)
    1edb:	00 f5                	add    %dh,%ch
    1edd:	00 00                	add    %al,(%rax)
    1edf:	00 00                	add    %al,(%rax)
    1ee1:	00 00                	add    %al,(%rax)
    1ee3:	00 01                	add    %al,(%rcx)
    1ee5:	9c                   	pushfq 
    1ee6:	75 1e                	jne    1f06 <WHILE+0xef>
    1ee8:	00 00                	add    %al,(%rax)
    1eea:	32 54 0d 00          	xor    0x0(%rbp,%rcx,1),%dl
    1eee:	00 01                	add    %al,(%rcx)
    1ef0:	75 01                	jne    1ef3 <WHILE+0xdc>
    1ef2:	23 0d 00 00 02 91    	and    -0x6efe0000(%rip),%ecx        # ffffffff91021ef8 <_end+0xffffffff90a10b58>
    1ef8:	50                   	push   %rax
    1ef9:	32 0a                	xor    (%rdx),%cl
    1efb:	0e                   	(bad)  
    1efc:	00 00                	add    %al,(%rax)
    1efe:	01 75 01             	add    %esi,0x1(%rbp)
}
    1f01:	46 03 00             	rex.RX add (%rax),%r8d
    1f04:	00 02                	add    %al,(%rdx)
    1f06:	91                   	xchg   %eax,%ecx
{       
    1f07:	4c 21 ce             	and    %r9,%rsi
    1f0a:	14 00                	adc    $0x0,%al
	CELL(CELL(sp))=HERE;
    1f0c:	00 01                	add    %al,(%rcx)
    1f0e:	76 01                	jbe    1f11 <THEN+0xa>
    1f10:	46 03 00             	rex.RX add (%rax),%r8d
    1f13:	00 02                	add    %al,(%rdx)
    1f15:	91                   	xchg   %eax,%ecx
    1f16:	60                   	(bad)  
    1f17:	21 0d 14 00 00 01    	and    %ecx,0x1000014(%rip)        # 1001f31 <_end+0x9f0b91>
    1f1d:	76 01                	jbe    1f20 <THEN+0x19>
    1f1f:	46 03 00             	rex.RX add (%rax),%r8d
    1f22:	00 02                	add    %al,(%rdx)
    1f24:	91                   	xchg   %eax,%ecx
    1f25:	64 00 38             	add    %bh,%fs:(%rax)
    1f28:	c2 09 00             	retq   $0x9
    1f2b:	00 01                	add    %al,(%rcx)
    1f2d:	6f                   	outsl  %ds:(%rsi),(%dx)
    1f2e:	01 8c 11 00 00 00 00 	add    %ecx,0x0(%rcx,%rdx,1)
    1f35:	00 00                	add    %al,(%rax)
    1f37:	6b 00 00             	imul   $0x0,(%rax),%eax
    1f3a:	00 00                	add    %al,(%rax)
    1f3c:	00 00                	add    %al,(%rax)
    1f3e:	00 01                	add    %al,(%rcx)
    1f40:	9c                   	pushfq 
    1f41:	a2 1e 00 00 36 64 64 	movabs %al,0x10064643600001e
    1f48:	00 01 
    1f4a:	6f                   	outsl  %ds:(%rsi),(%dx)
    1f4b:	01 30                	add    %esi,(%rax)
    1f4d:	03 00                	add    (%rax),%eax
    1f4f:	00 02                	add    %al,(%rdx)
    1f51:	91                   	xchg   %eax,%ecx
    1f52:	6c                   	insb   (%dx),%es:(%rdi)
    1f53:	00 38                	add    %bh,(%rax)
    1f55:	4e 0b 00             	rex.WRX or (%rax),%r8
    1f58:	00 01                	add    %al,(%rcx)
    1f5a:	69 01 1f 11 00 00    	imul   $0x111f,(%rcx),%eax
    1f60:	00 00                	add    %al,(%rax)
    1f62:	00 00                	add    %al,(%rax)
    1f64:	6d                   	insl   (%dx),%es:(%rdi)
    1f65:	00 00                	add    %al,(%rax)
    1f67:	00 00                	add    %al,(%rax)
    1f69:	00 00                	add    %al,(%rax)
    1f6b:	00 01                	add    %al,(%rcx)
    1f6d:	9c                   	pushfq 
	sp+=4;
    1f6e:	cf                   	iret   
    1f6f:	1e                   	(bad)  
    1f70:	00 00                	add    %al,(%rax)
    1f72:	36 64 64 00 01       	ss fs add %al,%fs:(%rcx)
    1f77:	69 01 3b 03 00 00    	imul   $0x33b,(%rcx),%eax
    1f7d:	02 91 6c 00 35 43    	add    0x4335006c(%rcx),%dl
    1f83:	4f                   	rex.WRXB
    1f84:	4d 00 01             	rex.WRB add %r8b,(%r9)
    1f87:	63 01                	movslq (%rcx),%eax
    1f89:	b7 10                	mov    $0x10,%bh
    1f8b:	00 00                	add    %al,(%rax)
    1f8d:	00 00                	add    %al,(%rax)
    1f8f:	00 00                	add    %al,(%rax)
    1f91:	68 00 00 00 00       	pushq  $0x0
    1f96:	00 00                	add    %al,(%rax)
    1f98:	00 01                	add    %al,(%rcx)
    1f9a:	9c                   	pushfq 
    1f9b:	fc                   	cld    
    1f9c:	1e                   	(bad)  
    1f9d:	00 00                	add    %al,(%rax)
    1f9f:	36 64 64 00 01       	ss fs add %al,%fs:(%rcx)
    1fa4:	63 01                	movslq (%rcx),%eax
    1fa6:	46 03 00             	rex.RX add (%rax),%r8d
    1fa9:	00 02                	add    %al,(%rdx)
    1fab:	91                   	xchg   %eax,%ecx
    1fac:	6c                   	insb   (%dx),%es:(%rdi)
    1fad:	00 3a                	add    %bh,(%rdx)
    1faf:	e8 11 00 00 01       	callq  1001fc5 <_end+0x9f0c25>
    1fb4:	ab                   	stos   %eax,%es:(%rdi)
    1fb5:	fd                   	std    
    1fb6:	0f 00 00             	sldt   (%rax)
    1fb9:	00 00                	add    %al,(%rax)
    1fbb:	00 00                	add    %al,(%rax)
    1fbd:	ba 00 00 00 00       	mov    $0x0,%edx
}
    1fc2:	00 00                	add    %al,(%rax)
{ 
    1fc4:	00 01                	add    %al,(%rcx)
    1fc6:	9c                   	pushfq 
    1fc7:	7e 1f                	jle    1fe8 <ELSE+0x25>
    1fc9:	00 00                	add    %al,(%rax)
    1fcb:	3b 61 00             	cmp    0x0(%rcx),%esp
	AHEAD();
    1fce:	01 ab 7e 1f 00 00    	add    %ebp,0x1f7e(%rbx)
    1fd4:	02 91 48 3b 62 00    	add    0x623b48(%rcx),%dl
	t=CELL(sp);
    1fda:	01 ab 7e 1f 00 00    	add    %ebp,0x1f7e(%rbx)
    1fe0:	02 91 40 3b 63 00    	add    0x633b40(%rcx),%dl
    1fe6:	01 ab 7e 1f 00 00    	add    %ebp,0x1f7e(%rbx)
    1fec:	03 91 b8 7f 3c 64    	add    0x643c7fb8(%rcx),%edx
    1ff2:	00 01                	add    %al,(%rcx)
    1ff4:	ad                   	lods   %ds:(%rsi),%eax
    1ff5:	46 03 00             	rex.RX add (%rax),%r8d
    1ff8:	00 02                	add    %al,(%rdx)
    1ffa:	91                   	xchg   %eax,%ecx
    1ffb:	68 3c 71 68 00       	pushq  $0x68713c
    2000:	01 ad 46 03 00 00    	add    %ebp,0x346(%rbp)
    2006:	02 91 5c 3c 71 6c    	add    0x6c713c5c(%rcx),%dl
	CELL(sp)=CELL(sp+4);
    200c:	00 01                	add    %al,(%rcx)
    200e:	ad                   	lods   %ds:(%rsi),%eax
    200f:	46 03 00             	rex.RX add (%rax),%r8d
    2012:	00 02                	add    %al,(%rdx)
    2014:	91                   	xchg   %eax,%ecx
    2015:	60                   	(bad)  
    2016:	3c 69                	cmp    $0x69,%al
    2018:	00 01                	add    %al,(%rcx)
    201a:	ae                   	scas   %es:(%rdi),%al
    201b:	72 00                	jb     201d <ELSE+0x5a>
    201d:	00 00                	add    %al,(%rax)
    201f:	02 91 64 3c 63 79    	add    0x79633c64(%rcx),%dl
    2025:	00 01                	add    %al,(%rcx)
    2027:	ae                   	scas   %es:(%rdi),%al
    2028:	72 00                	jb     202a <ELSE+0x67>
    202a:	00 00                	add    %al,(%rax)
    202c:	02 91 6c 00 07 08    	add    0x807006c(%rcx),%dl
    2032:	46 03 00             	rex.RX add (%rax),%r8d
    2035:	00 3d a6 05 00 00    	add    %bh,0x5a6(%rip)        # 25e1 <SQ+0xbe>
    203b:	01 90 f8 0e 00 00    	add    %edx,0xef8(%rax)
    2041:	00 00                	add    %al,(%rax)
    2043:	00 00                	add    %al,(%rax)
    2045:	05 01 00 00 00       	add    $0x1,%eax
    204a:	00 00                	add    %al,(%rax)
    204c:	00 01                	add    %al,(%rcx)
    204e:	9c                   	pushfq 
    204f:	3c 20                	cmp    $0x20,%al
    2051:	00 00                	add    %al,(%rax)
    2053:	3b 61 00             	cmp    0x0(%rcx),%esp
    2056:	01 90 7e 1f 00 00    	add    %edx,0x1f7e(%rax)
    205c:	03 91 88 7f 3b 62    	add    0x623b7f88(%rcx),%edx
    2062:	00 01                	add    %al,(%rcx)
    2064:	90                   	nop
    2065:	7e 1f                	jle    2086 <ELSE+0xc3>
    2067:	00 00                	add    %al,(%rax)
    2069:	03 91 80 7f 3c 61    	add    0x613c7f80(%rcx),%edx
    206f:	68 00 01 92 46       	pushq  $0x46920100
	CELL(sp+4)=t;
    2074:	03 00                	add    (%rax),%eax
    2076:	00 03                	add    %al,(%rbx)
    2078:	91                   	xchg   %eax,%ecx
    2079:	98                   	cwtl   
    207a:	7f 3c                	jg     20b8 <ELSE+0xf5>
    207c:	61                   	(bad)  
    207d:	6c                   	insb   (%dx),%es:(%rdi)
    207e:	00 01                	add    %al,(%rcx)
    2080:	92                   	xchg   %eax,%edx
    2081:	46 03 00             	rex.RX add (%rax),%r8d
    2084:	00 03                	add    %al,(%rbx)
    2086:	91                   	xchg   %eax,%ecx
    2087:	9c                   	pushfq 
    2088:	7f 3c                	jg     20c6 <REPEAT+0x9>
    208a:	62                   	(bad)  
    208b:	68 00 01 92 46       	pushq  $0x46920100
    2090:	03 00                	add    (%rax),%eax
    2092:	00 03                	add    %al,(%rbx)
    2094:	91                   	xchg   %eax,%ecx
    2095:	a0 7f 3c 62 6c 00 01 	movabs 0x469201006c623c7f,%al
    209c:	92 46 
    209e:	03 00                	add    (%rax),%eax
    20a0:	00 03                	add    %al,(%rbx)
    20a2:	91                   	xchg   %eax,%ecx
    20a3:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    20a4:	7f 3c                	jg     20e2 <LIT+0xa>
    20a6:	70 68                	jo     2110 <NextWord+0x16>
    20a8:	00 01                	add    %al,(%rcx)
    20aa:	92                   	xchg   %eax,%edx
	THEN();
    20ab:	46 03 00             	rex.RX add (%rax),%r8d
    20ae:	00 03                	add    %al,(%rbx)
    20b0:	91                   	xchg   %eax,%ecx
    20b1:	90                   	nop
    20b2:	7f 3c                	jg     20f0 <LIT+0x18>
    20b4:	70 6d                	jo     2123 <NextWord+0x29>
}
    20b6:	31 00                	xor    %eax,(%rax)
    20b8:	01 92 46 03 00 00    	add    %edx,0x346(%rdx)
{	
    20be:	03 91 a8 7f 3c 70    	add    0x703c7fa8(%rcx),%edx
	AGAIN();
    20c4:	6d                   	insl   (%dx),%es:(%rdi)
    20c5:	32 00                	xor    (%rax),%al
    20c7:	01 92 46 03 00 00    	add    %edx,0x346(%rdx)
	THEN();
    20cd:	03 91 ac 7f 3c 70    	add    0x703c7fac(%rcx),%edx
    20d3:	6c                   	insb   (%dx),%es:(%rdi)
    20d4:	00 01                	add    %al,(%rcx)
}
    20d6:	92                   	xchg   %eax,%edx
    20d7:	46 03 00             	rex.RX add (%rax),%r8d
{	
    20da:	00 03                	add    %al,(%rbx)
    20dc:	91                   	xchg   %eax,%ecx
    20dd:	94                   	xchg   %eax,%esp
    20de:	7f 3c                	jg     211c <NextWord+0x22>
    20e0:	63 63 00             	movslq 0x0(%rbx),%esp
	COM(sw_lit<<1|1);
    20e3:	01 93 61 16 00 00    	add    %edx,0x1661(%rbx)
    20e9:	03 91 b0 7f 00 3e    	add    0x3e007fb0(%rcx),%edx
	COM(dd);
    20ef:	28 13                	sub    %dl,(%rbx)
    20f1:	00 00                	add    %al,(%rax)
    20f3:	01 77 72             	add    %esi,0x72(%rdi)
    20f6:	00 00                	add    %al,(%rax)
}
    20f8:	00 97 0e 00 00 00    	add    %dl,0xe(%rdi)
{ 
    20fe:	00 00                	add    %al,(%rax)
    2100:	00 61 00             	add    %ah,0x0(%rcx)
addr=CELL(TO_IN) + TIB ;
    2103:	00 00                	add    %al,(%rax)
    2105:	00 00                	add    %al,(%rax)
    2107:	00 00                	add    %al,(%rax)
    2109:	01 9c 86 20 00 00 3f 	add    %ebx,0x3f000020(%rsi,%rax,4)
    2110:	1d 08 00 00 01       	sbb    $0x1000008,%eax
    2115:	77 98                	ja     20af <ELSE+0xec>
    2117:	00 00                	add    %al,(%rax)
    2119:	00 02                	add    %al,(%rdx)
    211b:	91                   	xchg   %eax,%ecx
    211c:	58                   	pop    %rax
    211d:	3b 6c 65 6e          	cmp    0x6e(%rbp,%riz,2),%ebp
    2121:	00 01                	add    %al,(%rcx)
    2123:	77 46                	ja     216b <NextWord+0x71>
    2125:	03 00                	add    (%rax),%eax
    2127:	00 02                	add    %al,(%rdx)
    2129:	91                   	xchg   %eax,%ecx
    212a:	54                   	push   %rsp
    212b:	3c 69                	cmp    $0x69,%al
    212d:	00 01                	add    %al,(%rcx)
    212f:	79 72                	jns    21a3 <NextWord+0xa9>
    2131:	00 00                	add    %al,(%rax)
    2133:	00 02                	add    %al,(%rdx)
    2135:	91                   	xchg   %eax,%ecx
    2136:	6c                   	insb   (%dx),%es:(%rdi)
    2137:	00 40 76             	add    %al,0x76(%rax)
    213a:	32 72 00             	xor    0x0(%rdx),%dh
    213d:	01 55 23             	add    %edx,0x23(%rbp)
    2140:	0d 00 00 6d 0e       	or     $0xe6d0000,%eax
    2145:	00 00                	add    %al,(%rax)
    2147:	00 00                	add    %al,(%rax)
    2149:	00 00                	add    %al,(%rax)
    214b:	2a 00                	sub    (%rax),%al
Eaddr=TIB+CELL(NTIB);
    214d:	00 00                	add    %al,(%rax)
    214f:	00 00                	add    %al,(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	01 9c 3f d3 06 00 00 	add    %ebx,0x6d3(%rdi,%rdi,1)
    215a:	01 55 46             	add    %edx,0x46(%rbp)
    215d:	03 00                	add    (%rax),%eax
    215f:	00 02                	add    %al,(%rdx)
    2161:	91                   	xchg   %eax,%ecx
    2162:	6c                   	insb   (%dx),%es:(%rdi)
    2163:	00 00                	add    %al,(%rax)
    2165:	7a 05                	jp     216c <NextWord+0x72>
    2167:	00 00                	add    %al,(%rax)
    2169:	04 00                	add    $0x0,%al
    216b:	4a 04 00             	rex.WX add $0x0,%al
    216e:	00 08                	add    %cl,(%rax)
    2170:	01 00                	add    %eax,(%rax)
    2172:	00 00                	add    %al,(%rax)
    2174:	00 0c fe             	add    %cl,(%rsi,%rdi,8)
    2177:	15 00 00 d0 01       	adc    $0x1d00000,%eax
    217c:	00 00                	add    %al,(%rax)
    217e:	b5 d1                	mov    $0xd1,%ch
    2180:	00 00                	add    %al,(%rax)
    2182:	00 00                	add    %al,(%rax)
    2184:	00 00                	add    %al,(%rax)
    2186:	87 02                	xchg   %eax,(%rdx)
    2188:	00 00                	add    %al,(%rax)
    218a:	00 00                	add    %al,(%rax)
    218c:	00 00                	add    %al,(%rax)
    218e:	a2 0d 00 00 02 01 08 	movabs %al,0x53f08010200000d
    2195:	3f 05 
sp-=8;
    2197:	00 00                	add    %al,(%rax)
    2199:	02 02                	add    (%rdx),%al
    219b:	07                   	(bad)  
    219c:	13 14 00             	adc    (%rax,%rax,1),%edx
    219f:	00 02                	add    %al,(%rdx)
    21a1:	04 07                	add    $0x7,%al
    21a3:	2f                   	(bad)  
    21a4:	0e                   	(bad)  
    21a5:	00 00                	add    %al,(%rax)
    21a7:	02 08                	add    (%rax),%cl
    21a9:	07                   	(bad)  
    21aa:	2a 0e                	sub    (%rsi),%cl
    21ac:	00 00                	add    %al,(%rax)
    21ae:	02 01                	add    (%rcx),%al
    21b0:	06                   	(bad)  
    21b1:	41 05 00 00 02 02    	rex.B add $0x2020000,%eax
    21b7:	05 ba 11 00 00       	add    $0x11ba,%eax
    21bc:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
    21c3:	02 08                	add    (%rax),%cl
    21c5:	05 66 0a 00 00       	add    $0xa66,%eax
    21ca:	04 98                	add    $0x98,%al
    21cc:	0e                   	(bad)  
    21cd:	00 00                	add    %al,(%rax)
    21cf:	02 8c 5e 00 00 00 04 	add    0x4000000(%rsi,%rbx,2),%cl
    21d6:	78 10                	js     21e8 <NextWord+0xee>
    21d8:	00 00                	add    %al,(%rax)
    21da:	02 8d 5e 00 00 00    	add    0x5e(%rbp),%cl
    21e0:	05 08 06 08 83       	add    $0x83080608,%eax
    21e5:	00 00                	add    %al,(%rax)
	while ( (BYTE(addr) <= ' ') & (addr<Eaddr ) )addr++;
    21e7:	00 02                	add    %al,(%rdx)
    21e9:	01 06                	add    %eax,(%rsi)
    21eb:	48 05 00 00 07 83    	add    $0xffffffff83070000,%rax
    21f1:	00 00                	add    %al,(%rax)
    21f3:	00 04 74             	add    %al,(%rsp,%rsi,2)
    21f6:	16                   	(bad)  
    21f7:	00 00                	add    %al,(%rax)
    21f9:	03 17                	add    (%rdi),%edx
    21fb:	2d 00 00 00 04       	sub    $0x4000000,%eax
    2200:	5c                   	pop    %rsp
    2201:	16                   	(bad)  
    2202:	00 00                	add    %al,(%rax)
    2204:	03 18                	add    (%rax),%ebx
    2206:	3b 00                	cmp    (%rax),%eax
    2208:	00 00                	add    %al,(%rax)
    220a:	04 88                	add    $0x88,%al
    220c:	16                   	(bad)  
	CELL(sp+4)=Waddr=addr;
    220d:	00 00                	add    %al,(%rax)
    220f:	03 19                	add    (%rcx),%ebx
    2211:	3b 00                	cmp    (%rax),%eax
    2213:	00 00                	add    %al,(%rax)
    2215:	08 3b                	or     %bh,(%rbx)
    2217:	16                   	(bad)  
    2218:	00 00                	add    %al,(%rax)
    221a:	3c 03                	cmp    $0x3,%al
    221c:	1c 1d                	sbb    $0x1d,%al
    221e:	01 00                	add    %eax,(%rax)
    2220:	00 09                	add    %cl,(%rcx)
    2222:	6c                   	insb   (%dx),%es:(%rdi)
    2223:	16                   	(bad)  
    2224:	00 00                	add    %al,(%rax)
    2226:	03 1e                	add    (%rsi),%ebx
    2228:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    2229:	00 00                	add    %al,(%rax)
    222b:	00 00                	add    %al,(%rax)
    222d:	09 79 16             	or     %edi,0x16(%rcx)
    2230:	00 00                	add    %al,(%rax)
    2232:	03 1f                	add    (%rdi),%ebx
    2234:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    2235:	00 00                	add    %al,(%rax)
    2237:	00 04 09             	add    %al,(%rcx,%rcx,1)
    223a:	43 16                	rex.XB (bad) 
    223c:	00 00                	add    %al,(%rax)
    223e:	03 20                	add    (%rax),%esp
    2240:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 08                	add    %cl,(%rax)
    2245:	09 33                	or     %esi,(%rbx)
    2247:	16                   	(bad)  
    2248:	00 00                	add    %al,(%rax)
    224a:	03 21                	add    (%rcx),%esp
	while ( (BYTE(addr++)  > ' ') & (addr<=Eaddr )	);
    224c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 0c 09             	add    %cl,(%rcx,%rcx,1)
    2252:	f7 15 00 00 03 22    	notl   0x22030000(%rip)        # 22032258 <_end+0x21a20eb8>
    2258:	8f 00                	popq   (%rax)
    225a:	00 00                	add    %al,(%rax)
    225c:	10 09                	adc    %cl,(%rcx)
    225e:	e9 15 00 00 03       	jmpq   3002278 <_end+0x29f0ed8>
    2263:	23 1d 01 00 00 11    	and    0x11000001(%rip),%ebx        # 1100226a <_end+0x109f0eca>
    2269:	09 ee                	or     %ebp,%esi
    226b:	15 00 00 03 24       	adc    $0x24030000,%eax
    2270:	9a                   	(bad)  
    2271:	00 00                	add    %al,(%rax)
    2273:	00 34 09             	add    %dh,(%rcx,%rcx,1)
	CELL(sp)=addr-Waddr-1;
    2276:	d2 15 00 00 03 25    	rclb   %cl,0x25030000(%rip)        # 2503227c <_end+0x24a20edc>
    227c:	9a                   	(bad)  
    227d:	00 00                	add    %al,(%rax)
    227f:	00 38                	add    %bh,(%rax)
    2281:	00 0a                	add    %cl,(%rdx)
    2283:	8f 00                	popq   (%rax)
    2285:	00 00                	add    %al,(%rax)
    2287:	2d 01 00 00 0b       	sub    $0xb000001,%eax
    228c:	42 00 00             	rex.X add %al,(%rax)
    228f:	00 1f                	add    %bl,(%rdi)
    2291:	00 04 f5 00 00 00 04 	add    %al,0x4000000(,%rsi,8)
    2298:	d8 42 00             	fadds  0x0(%rdx)
    229b:	00 00                	add    %al,(%rax)
    229d:	08 cf                	or     %cl,%bh
    229f:	04 00                	add    $0x0,%al
    22a1:	00 d8                	add    %bl,%al
    22a3:	05 f5 b8 02 00       	add    $0x2b8f5,%eax
    22a8:	00 09                	add    %cl,(%rcx)
    22aa:	02 0c 00             	add    (%rax,%rax,1),%cl
    22ad:	00 05 f6 57 00 00    	add    %al,0x57f6(%rip)        # 7aa9 <virtual_machine+0x46d1>
	CELL(TO_IN)=addr - TIB;
    22b3:	00 00                	add    %al,(%rax)
    22b5:	09 a8 06 00 00 05    	or     %ebp,0x5000006(%rax)
    22bb:	fb                   	sti    
    22bc:	7d 00                	jge    22be <NextWord+0x1c4>
    22be:	00 00                	add    %al,(%rax)
    22c0:	08 09                	or     %cl,(%rcx)
    22c2:	06                   	(bad)  
    22c3:	13 00                	adc    (%rax),%eax
    22c5:	00 05 fc 7d 00 00    	add    %al,0x7dfc(%rip)        # a0c7 <virtual_machine+0x6cef>
    22cb:	00 10                	add    %dl,(%rax)
    22cd:	09 4e 09             	or     %ecx,0x9(%rsi)
    22d0:	00 00                	add    %al,(%rax)
    22d2:	05 fd 7d 00 00       	add    $0x7dfd,%eax
    22d7:	00 18                	add    %bl,(%rax)
    22d9:	09 0a                	or     %ecx,(%rdx)
    22db:	02 00                	add    (%rax),%al
    22dd:	00 05 fe 7d 00 00    	add    %al,0x7dfe(%rip)        # a0e1 <virtual_machine+0x6d09>
    22e3:	00 20                	add    %ah,(%rax)
    22e5:	09 4d 14             	or     %ecx,0x14(%rbp)
    22e8:	00 00                	add    %al,(%rax)
    22ea:	05 ff 7d 00 00       	add    $0x7dff,%eax
    22ef:	00 28                	add    %ch,(%rax)
    22f1:	0c c6                	or     $0xc6,%al
    22f3:	0a 00                	or     (%rax),%al
    22f5:	00 05 00 01 7d 00    	add    %al,0x7d0100(%rip)        # 7d23fb <_end+0x1c105b>
    22fb:	00 00                	add    %al,(%rax)
    22fd:	30 0c 2e             	xor    %cl,(%rsi,%rbp,1)
}
    2300:	0b 00                	or     (%rax),%eax
    2302:	00 05 01 01 7d 00    	add    %al,0x7d0101(%rip)        # 7d2409 <_end+0x1c1069>
{ 
    2308:	00 00                	add    %al,(%rax)
    230a:	38 0c e5 10 00 00 05 	cmp    %cl,0x5000010(,%riz,8)
addr=CELL(TO_IN) + TIB ;
    2311:	02 01                	add    (%rcx),%al
    2313:	7d 00                	jge    2315 <Parse+0xf>
    2315:	00 00                	add    %al,(%rax)
    2317:	40 0c 8b             	or     $0x8b,%al
    231a:	02 00                	add    (%rax),%al
    231c:	00 05 04 01 7d 00    	add    %al,0x7d0104(%rip)        # 7d2426 <_end+0x1c1086>
    2322:	00 00                	add    %al,(%rax)
    2324:	48 0c e0             	rex.W or $0xe0,%al
    2327:	0f 00 00             	sldt   (%rax)
    232a:	05 05 01 7d 00       	add    $0x7d0105,%eax
    232f:	00 00                	add    %al,(%rax)
    2331:	50                   	push   %rax
    2332:	0c 93                	or     $0x93,%al
    2334:	01 00                	add    %eax,(%rax)
    2336:	00 05 06 01 7d 00    	add    %al,0x7d0106(%rip)        # 7d2442 <_end+0x1c10a2>
    233c:	00 00                	add    %al,(%rax)
    233e:	58                   	pop    %rax
    233f:	0c 6c                	or     $0x6c,%al
    2341:	07                   	(bad)  
    2342:	00 00                	add    %al,(%rax)
    2344:	05 08 01 f0 02       	add    $0x2f00108,%eax
    2349:	00 00                	add    %al,(%rax)
    234b:	60                   	(bad)  
    234c:	0c 39                	or     $0x39,%al
    234e:	03 00                	add    (%rax),%eax
    2350:	00 05 0a 01 f6 02    	add    %al,0x2f6010a(%rip)        # 2f62460 <_end+0x29510c0>
    2356:	00 00                	add    %al,(%rax)
Eaddr=TIB+CELL(NTIB);
    2358:	68 0c 6f 13 00       	pushq  $0x136f0c
    235d:	00 05 0c 01 57 00    	add    %al,0x57010c(%rip)        # 57246f <mem+0x36338f>
    2363:	00 00                	add    %al,(%rax)
    2365:	70 0c                	jo     2373 <Parse+0x6d>
    2367:	39 09                	cmp    %ecx,(%rcx)
    2369:	00 00                	add    %al,(%rax)
    236b:	05 10 01 57 00       	add    $0x570110,%eax
    2370:	00 00                	add    %al,(%rax)
    2372:	74 0c                	je     2380 <Parse+0x7a>
    2374:	e5 09                	in     $0x9,%eax
    2376:	00 00                	add    %al,(%rax)
    2378:	05 12 01 65 00       	add    $0x650112,%eax
    237d:	00 00                	add    %al,(%rax)
    237f:	78 0c                	js     238d <Parse+0x87>
    2381:	46 03 00             	rex.RX add (%rax),%r8d
    2384:	00 05 16 01 34 00    	add    %al,0x340116(%rip)        # 3424a0 <mem+0x1333c0>
    238a:	00 00                	add    %al,(%rax)
    238c:	80 0c 01 12          	orb    $0x12,(%rcx,%rax,1)
    2390:	00 00                	add    %al,(%rax)
    2392:	05 17 01 49 00       	add    $0x490117,%eax
    2397:	00 00                	add    %al,(%rax)
    2399:	82                   	(bad)  
    239a:	0c f0                	or     $0xf0,%al
    239c:	0f 00 00             	sldt   (%rax)
    239f:	05 18 01 fc 02       	add    $0x2fc0118,%eax
ch=BYTE(sp);
    23a4:	00 00                	add    %al,(%rax)
    23a6:	83 0c 3f 02          	orl    $0x2,(%rdi,%rdi,1)
    23aa:	00 00                	add    %al,(%rax)
    23ac:	05 1c 01 0c 03       	add    $0x30c011c,%eax
    23b1:	00 00                	add    %al,(%rax)
    23b3:	88 0c e9             	mov    %cl,(%rcx,%rbp,8)
    23b6:	09 00                	or     %eax,(%rax)
    23b8:	00 05 25 01 70 00    	add    %al,0x700125(%rip)        # 7024e3 <_end+0xf1143>
    23be:	00 00                	add    %al,(%rax)
    23c0:	90                   	nop
    23c1:	0c 9f                	or     $0x9f,%al
    23c3:	0b 00                	or     (%rax),%eax
    23c5:	00 05 2d 01 7b 00    	add    %al,0x7b012d(%rip)        # 7b24f8 <_end+0x1a1158>
    23cb:	00 00                	add    %al,(%rax)
    23cd:	98                   	cwtl   
    23ce:	0c a6                	or     $0xa6,%al
    23d0:	0b 00                	or     (%rax),%eax
    23d2:	00 05 2e 01 7b 00    	add    %al,0x7b012e(%rip)        # 7b2506 <_end+0x1a1166>
sp-=4;
    23d8:	00 00                	add    %al,(%rax)
    23da:	a0 0c ad 0b 00 00 05 	movabs 0x12f0500000bad0c,%al
    23e1:	2f 01 
    23e3:	7b 00                	jnp    23e5 <Parse+0xdf>
    23e5:	00 00                	add    %al,(%rax)
    23e7:	a8 0c                	test   $0xc,%al
    23e9:	b4 0b                	mov    $0xb,%ah
    23eb:	00 00                	add    %al,(%rax)
    23ed:	05 30 01 7b 00       	add    $0x7b0130,%eax
    23f2:	00 00                	add    %al,(%rax)
    23f4:	b0 0c                	mov    $0xc,%al
    23f6:	bb 0b 00 00 05       	mov    $0x500000b,%ebx
    23fb:	32 01                	xor    (%rcx),%al
    23fd:	2d 01 00 00 b8       	sub    $0xb8000001,%eax
    2402:	0c 0f                	or     $0xf,%al
    2404:	11 00                	adc    %eax,(%rax)
    2406:	00 05 33 01 57 00    	add    %al,0x570133(%rip)        # 57253f <mem+0x36345f>
    240c:	00 00                	add    %al,(%rax)
    240e:	c0 0c 87 09          	rorb   $0x9,(%rdi,%rax,4)
    2412:	00 00                	add    %al,(%rax)
    2414:	05 35 01 12 03       	add    $0x3120135,%eax
    2419:	00 00                	add    %al,(%rax)
    241b:	c4                   	(bad)  
    241c:	00 0d f8 05 00 00    	add    %cl,0x5f8(%rip)        # 2a1a <SourceST+0xa4>
    2422:	05 9a 08 24 04       	add    $0x424089a,%eax
	CELL(sp+4)=Waddr=addr;
    2427:	00 00                	add    %al,(%rax)
    2429:	18 05 a0 f0 02 00    	sbb    %al,0x2f0a0(%rip)        # 314cf <__FRAME_END__+0x22b53>
    242f:	00 09                	add    %cl,(%rcx)
    2431:	72 10                	jb     2443 <Parse+0x13d>
    2433:	00 00                	add    %al,(%rax)
    2435:	05 a1 f0 02 00       	add    $0x2f0a1,%eax
    243a:	00 00                	add    %al,(%rax)
    243c:	09 c2                	or     %eax,%edx
    243e:	0b 00                	or     (%rax),%eax
    2440:	00 05 a2 f6 02 00    	add    %al,0x2f6a2(%rip)        # 31ae8 <__FRAME_END__+0x2316c>
    2446:	00 08                	add    %cl,(%rax)
    2448:	09 fc                	or     %edi,%esp
    244a:	06                   	(bad)  
    244b:	00 00                	add    %al,(%rax)
    244d:	05 a6 57 00 00       	add    $0x57a6,%eax
    2452:	00 10                	add    %dl,(%rax)
    2454:	00 06                	add    %al,(%rsi)
    2456:	08 bf 02 00 00 06    	or     %bh,0x6000002(%rdi)
    245c:	08 38                	or     %bh,(%rax)
    245e:	01 00                	add    %eax,(%rax)
    2460:	00 0a                	add    %cl,(%rdx)
    2462:	83 00 00             	addl   $0x0,(%rax)
	while ( (BYTE(addr)  != ch) & (addr<Eaddr )){addr++;};
    2465:	00 0c 03             	add    %cl,(%rbx,%rax,1)
    2468:	00 00                	add    %al,(%rax)
    246a:	0b 42 00             	or     0x0(%rdx),%eax
    246d:	00 00                	add    %al,(%rax)
    246f:	00 00                	add    %al,(%rax)
    2471:	06                   	(bad)  
    2472:	08 b8 02 00 00 0a    	or     %bh,0xa000002(%rax)
    2478:	83 00 00             	addl   $0x0,(%rax)
    247b:	00 22                	add    %ah,(%rdx)
    247d:	03 00                	add    (%rax),%eax
    247f:	00 0b                	add    %cl,(%rbx)
    2481:	42 00 00             	rex.X add %al,(%rax)
    2484:	00 13                	add    %dl,(%rbx)
    2486:	00 0e                	add    %cl,(%rsi)
    2488:	98                   	cwtl   
    2489:	05 00 00 0f eb       	add    $0xeb0f0000,%eax
	addr++;
    248e:	08 00                	or     %al,(%rax)
    2490:	00 05 3f 01 22 03    	add    %al,0x322013f(%rip)        # 32225d5 <_end+0x2c11235>
	CELL(sp)=addr-Waddr-1;
    2496:	00 00                	add    %al,(%rax)
    2498:	0f 07                	sysret 
    249a:	10 00                	adc    %al,(%rax)
    249c:	00 05 40 01 22 03    	add    %al,0x3220140(%rip)        # 32225e2 <_end+0x2c11242>
    24a2:	00 00                	add    %al,(%rax)
    24a4:	0f 61 01             	punpcklwd (%rcx),%mm0
    24a7:	00 00                	add    %al,(%rax)
    24a9:	05 41 01 22 03       	add    $0x3220141,%eax
    24ae:	00 00                	add    %al,(%rax)
    24b0:	06                   	(bad)  
    24b1:	08 8a 00 00 00 07    	or     %cl,0x7000000(%rdx)
    24b7:	4b 03 00             	rex.WXB add (%r8),%rax
    24ba:	00 10                	add    %dl,(%rax)
    24bc:	01 07                	add    %eax,(%rdi)
    24be:	00 00                	add    %al,(%rax)
    24c0:	06                   	(bad)  
    24c1:	87 f6                	xchg   %esi,%esi
    24c3:	02 00                	add    (%rax),%al
    24c5:	00 10                	add    %dl,(%rax)
    24c7:	26 14 00             	es adc $0x0,%al
    24ca:	00 06                	add    %al,(%rsi)
    24cc:	88 f6                	mov    %dh,%dh
    24ce:	02 00                	add    (%rax),%al
	CELL(TO_IN)=addr - TIB;
    24d0:	00 10                	add    %dl,(%rax)
    24d2:	b3 11                	mov    $0x11,%bl
    24d4:	00 00                	add    %al,(%rax)
    24d6:	06                   	(bad)  
    24d7:	89 f6                	mov    %esi,%esi
    24d9:	02 00                	add    (%rax),%al
    24db:	00 10                	add    %dl,(%rax)
    24dd:	52                   	push   %rdx
    24de:	03 00                	add    (%rax),%eax
    24e0:	00 07                	add    %al,(%rdi)
    24e2:	1a 57 00             	sbb    0x0(%rdi),%dl
    24e5:	00 00                	add    %al,(%rax)
    24e7:	0a 51 03             	or     0x3(%rcx),%dl
    24ea:	00 00                	add    %al,(%rax)
    24ec:	8d 03                	lea    (%rbx),%eax
    24ee:	00 00                	add    %al,(%rax)
    24f0:	11 00                	adc    %eax,(%rax)
    24f2:	07                   	(bad)  
    24f3:	82                   	(bad)  
    24f4:	03 00                	add    (%rax),%eax
    24f6:	00 10                	add    %dl,(%rax)
    24f8:	43 07                	rex.XB (bad) 
    24fa:	00 00                	add    %al,(%rax)
    24fc:	07                   	(bad)  
    24fd:	1b 8d 03 00 00 02    	sbb    0x2000003(%rbp),%ecx
    2503:	08 07                	or     %al,(%rdi)
    2505:	25 0e 00 00 02       	and    $0x200000e,%eax
    250a:	08 05 61 0a 00 00    	or     %al,0xa61(%rip)        # 2f71 <SFind+0x99>
    2510:	06                   	(bad)  
    2511:	08 b1 03 00 00 12    	or     %dh,0x12000003(%rcx)
    2517:	04 40                	add    $0x40,%al
    2519:	03 00                	add    (%rax),%eax
}
    251b:	00 08                	add    %cl,(%rax)
    251d:	1b 3b                	sbb    (%rbx),%edi
    251f:	00 00                	add    %al,(%rax)
    2521:	00 0f                	add    %cl,(%rdi)
{	
    2523:	0e                   	(bad)  
    2524:	16                   	(bad)  
    2525:	00 00                	add    %al,(%rax)
    2527:	09 22                	or     %esp,(%rdx)
    2529:	02 c9                	add    %cl,%cl
	sp-=4; CELL(sp)=(__u32)'"';Parse();
    252b:	03 00                	add    (%rax),%eax
    252d:	00 06                	add    %al,(%rsi)
    252f:	08 7d 00             	or     %bh,0x0(%rbp)
    2532:	00 00                	add    %al,(%rax)
    2534:	10 e2                	adc    %ah,%dl
    2536:	15 00 00 0a 24       	adc    $0x240a0000,%eax
    253b:	7d 00                	jge    253d <SQ+0x1a>
    253d:	00 00                	add    %al,(%rax)
    253f:	10 db                	adc    %bl,%bl
    2541:	15 00 00 0a 32       	adc    $0x320a0000,%eax
    2546:	57                   	push   %rdi
    2547:	00 00                	add    %al,(%rax)
    2549:	00 10                	add    %dl,(%rax)
    254b:	55                   	push   %rbp
    254c:	16                   	(bad)  
    254d:	00 00                	add    %al,(%rax)
    254f:	0a 37                	or     (%rdi),%dh
    2551:	57                   	push   %rdi
    2552:	00 00                	add    %al,(%rax)
    2554:	00 10                	add    %dl,(%rax)
    2556:	81 16 00 00 0a 3b    	adcl   $0x3b0a0000,(%rsi)
    255c:	57                   	push   %rdi
    255d:	00 00                	add    %al,(%rax)
    255f:	00 13                	add    %dl,(%rbx)
    2561:	b8 06 00 00 01       	mov    $0x1000006,%eax
    2566:	15 7d 00 00 00       	adc    $0x7d,%eax
    256b:	09 03                	or     %eax,(%rbx)
    256d:	30 f0                	xor    %dh,%al
    256f:	20 00                	and    %al,(%rax)
    2571:	00 00                	add    %al,(%rax)
    2573:	00 00                	add    %al,(%rax)
    2575:	14 06                	adc    $0x6,%al
    2577:	16                   	(bad)  
    2578:	00 00                	add    %al,(%rax)
    257a:	01 40 e6             	add    %eax,-0x1a(%rax)
    257d:	d3 00                	roll   %cl,(%rax)
    257f:	00 00                	add    %al,(%rax)
    2581:	00 00                	add    %al,(%rax)
    2583:	00 56 00             	add    %dl,0x0(%rsi)
    2586:	00 00                	add    %al,(%rax)
    2588:	00 00                	add    %al,(%rax)
    258a:	00 00                	add    %al,(%rax)
    258c:	01 9c 54 04 00 00 15 	add    %ebx,0x15000004(%rsp,%rdx,2)
    2593:	91                   	xchg   %eax,%ecx
    2594:	16                   	(bad)  
    2595:	00 00                	add    %al,(%rax)
    2597:	01 40 57             	add    %eax,0x57(%rax)
    259a:	00 00                	add    %al,(%rax)
    259c:	00 02                	add    %al,(%rdx)
    259e:	91                   	xchg   %eax,%ecx
    259f:	5c                   	pop    %rsp
    25a0:	16                   	(bad)  
    25a1:	63 00                	movslq (%rax),%eax
    25a3:	01 40 57             	add    %eax,0x57(%rax)
    25a6:	00 00                	add    %al,(%rax)
    25a8:	00 02                	add    %al,(%rdx)
    25aa:	91                   	xchg   %eax,%ecx
    25ab:	58                   	pop    %rax
    25ac:	17                   	(bad)  
    25ad:	6b 00 01             	imul   $0x1,(%rax),%eax
    25b0:	42 83 00 00          	rex.X addl $0x0,(%rax)
    25b4:	00 02                	add    %al,(%rdx)
    25b6:	91                   	xchg   %eax,%ecx
    25b7:	67 00 18             	add    %bl,(%eax)
	if(CELL(STATE))
    25ba:	25 16 00 00 01       	and    $0x1000016,%eax
    25bf:	2d b2 03 00 00       	sub    $0x3b2,%eax
    25c4:	f9                   	stc    
    25c5:	d2 00                	rolb   %cl,(%rax)
    25c7:	00 00                	add    %al,(%rax)
    25c9:	00 00                	add    %al,(%rax)
    25cb:	00 ed                	add    %ch,%ch
    25cd:	00 00                	add    %al,(%rax)
    25cf:	00 00                	add    %al,(%rax)
    25d1:	00 00                	add    %al,(%rax)
    25d3:	00 01                	add    %al,(%rcx)
    25d5:	9c                   	pushfq 
    25d6:	b0 04                	mov    $0x4,%al
    25d8:	00 00                	add    %al,(%rax)
    25da:	15 91 16 00 00       	adc    $0x1691,%eax
    25df:	01 2d 57 00 00 00    	add    %ebp,0x57(%rip)        # 263c <SQ+0x119>
	COM(sw_str<<1|1);
    25e5:	03 91 cc 7e 17 74    	add    0x74177ecc(%rcx),%edx
    25eb:	31 00                	xor    %eax,(%rax)
    25ed:	01 2e                	add    %ebp,(%rsi)
	addr=CELL(sp+4);
    25ef:	b0 00                	mov    $0x0,%al
    25f1:	00 00                	add    %al,(%rax)
    25f3:	03 91 e0 7e 17 74    	add    0x74177ee0(%rcx),%edx
    25f9:	32 00                	xor    (%rax),%al
    25fb:	01 2e                	add    %ebp,(%rsi)
    25fd:	b0 00                	mov    $0x0,%al
    25ff:	00 00                	add    %al,(%rax)
    2601:	03 91 a0 7f 19 18    	add    0x18197fa0(%rcx),%edx
    2607:	16                   	(bad)  
    2608:	00 00                	add    %al,(%rax)
    260a:	01 2f                	add    %ebp,(%rdi)
    260c:	57                   	push   %rdi
    260d:	00 00                	add    %al,(%rax)
    260f:	00 03                	add    %al,(%rbx)
    2611:	91                   	xchg   %eax,%ecx
    2612:	dc 7e 00             	fdivrl 0x0(%rsi)
    2615:	18 5b 14             	sbb    %bl,0x14(%rbx)
    2618:	00 00                	add    %al,(%rax)
    261a:	01 17                	add    %edx,(%rdi)
    261c:	b2 03                	mov    $0x3,%dl
    261e:	00 00                	add    %al,(%rax)
    2620:	ea                   	(bad)  
    2621:	d1 00                	roll   (%rax)
    2623:	00 00                	add    %al,(%rax)
 	   size=CELL(sp);
    2625:	00 00                	add    %al,(%rax)
    2627:	00 0f                	add    %cl,(%rdi)
    2629:	01 00                	add    %eax,(%rax)
    262b:	00 00                	add    %al,(%rax)
    262d:	00 00                	add    %al,(%rax)
    262f:	00 01                	add    %al,(%rcx)
    2631:	9c                   	pushfq 
    2632:	18 05 00 00 15 91    	sbb    %al,-0x6eeb0000(%rip)        # ffffffff91152638 <_end+0xffffffff90b41298>
    2638:	16                   	(bad)  
    2639:	00 00                	add    %al,(%rax)
    263b:	01 17                	add    %edx,(%rdi)
    263d:	57                   	push   %rdi
    263e:	00 00                	add    %al,(%rax)
    2640:	00 03                	add    %al,(%rbx)
    2642:	91                   	xchg   %eax,%ecx
    2643:	cc                   	int3   
    2644:	7e 17                	jle    265d <SQ+0x13a>
    2646:	63 68 00             	movslq 0x0(%rax),%ebp
    2649:	01 19                	add    %ebx,(%rcx)
    264b:	83 00 00             	addl   $0x0,(%rax)
    264e:	00 03                	add    %al,(%rbx)
    2650:	91                   	xchg   %eax,%ecx
    2651:	db 7e 17             	fstpt  0x17(%rsi)
    2654:	6e                   	outsb  %ds:(%rsi),(%dx)
    2655:	00 01                	add    %al,(%rcx)
    2657:	1a 57 00             	sbb    0x0(%rdi),%dl
 	   StrComp(&BYTE(addr),size);
    265a:	00 00                	add    %al,(%rax)
    265c:	03 91 dc 7e 17 74    	add    0x74177edc(%rcx),%edx
    2662:	31 00                	xor    %eax,(%rax)
    2664:	01 1b                	add    %ebx,(%rbx)
    2666:	b0 00                	mov    $0x0,%al
    2668:	00 00                	add    %al,(%rax)
    266a:	03 91 e0 7e 17 74    	add    0x74177ee0(%rcx),%edx
    2670:	32 00                	xor    (%rax),%al
  sp+=8;
    2672:	01 1b                	add    %ebx,(%rbx)
    2674:	b0 00                	mov    $0x0,%al
    2676:	00 00                	add    %al,(%rax)
    2678:	03 91 a0 7f 00 1a    	add    0x1a007fa0(%rcx),%edx
    267e:	4b 16                	rex.WXB (bad) 
    2680:	00 00                	add    %al,(%rax)
    2682:	01 11                	add    %edx,(%rcx)
    2684:	b2 03                	mov    $0x3,%dl
    2686:	00 00                	add    %al,(%rax)
    2688:	df d1                	(bad)  
    268a:	00 00                	add    %al,(%rax)
    268c:	00 00                	add    %al,(%rax)
    268e:	00 00                	add    %al,(%rax)
    2690:	0b 00                	or     (%rax),%eax
    2692:	00 00                	add    %al,(%rax)
    2694:	00 00                	add    %al,(%rax)
    2696:	00 00                	add    %al,(%rax)
    2698:	01 9c 1b 64 16 00 00 	add    %ebx,0x1664(%rbx,%rbx,1)
    269f:	01 0b                	add    %ecx,(%rbx)
    26a1:	b2 03                	mov    $0x3,%dl
    26a3:	00 00                	add    %al,(%rax)
    26a5:	b5 d1                	mov    $0xd1,%ch
    26a7:	00 00                	add    %al,(%rax)
    26a9:	00 00                	add    %al,(%rax)
    26ab:	00 00                	add    %al,(%rax)
    26ad:	2a 00                	sub    (%rax),%al
    26af:	00 00                	add    %al,(%rax)
    26b1:	00 00                	add    %al,(%rax)
    26b3:	00 00                	add    %al,(%rax)
    26b5:	01 9c 15 91 16 00 00 	add    %ebx,0x1691(%rbp,%rdx,1)
    26bc:	01 0b                	add    %ecx,(%rbx)
    26be:	57                   	push   %rdi
    26bf:	00 00                	add    %al,(%rax)
    26c1:	00 02                	add    %al,(%rdx)
}
    26c3:	91                   	xchg   %eax,%ecx
    26c4:	6c                   	insb   (%dx),%es:(%rdi)
    26c5:	15 2d 16 00 00       	adc    $0x162d,%eax
{	
    26ca:	01 0b                	add    %ecx,(%rbx)
    26cc:	ab                   	stos   %eax,%es:(%rdi)
    26cd:	03 00                	add    (%rax),%eax
	sp-=4; CELL(sp)=(__u32)'"';Parse();
    26cf:	00 02                	add    %al,(%rdx)
    26d1:	91                   	xchg   %eax,%ecx
    26d2:	60                   	(bad)  
    26d3:	16                   	(bad)  
    26d4:	5f                   	pop    %rdi
    26d5:	5f                   	pop    %rdi
    26d6:	6e                   	outsb  %ds:(%rsi),(%dx)
    26d7:	00 01                	add    %al,(%rcx)
    26d9:	0b 2d 01 00 00 02    	or     0x2000001(%rip),%ebp        # 20026e0 <_end+0x19f1340>
    26df:	91                   	xchg   %eax,%ecx
    26e0:	58                   	pop    %rax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2a9ff76>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 34 00             	add    (%rax,%rax,1),%dh
  16:	03 0e                	add    (%rsi),%ecx
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	49 13 3f             	adc    (%r15),%rdi
  1f:	19 02                	sbb    %eax,(%rdx)
  21:	18 00                	sbb    %al,(%rax)
  23:	00 03                	add    %al,(%rbx)
  25:	0f 00 0b             	str    (%rbx)
  28:	0b 49 13             	or     0x13(%rcx),%ecx
  2b:	00 00                	add    %al,(%rax)
  2d:	04 24                	add    $0x24,%al
  2f:	00 0b                	add    %cl,(%rbx)
  31:	0b 3e                	or     (%rsi),%edi
  33:	0b 03                	or     (%rbx),%eax
  35:	0e                   	(bad)  
  36:	00 00                	add    %al,(%rax)
  38:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  3d:	03 0e                	add    (%rsi),%ecx
  3f:	3a 0b                	cmp    (%rbx),%cl
  41:	3b 0b                	cmp    (%rbx),%ecx
  43:	27                   	(bad)  
  44:	19 49 13             	sbb    %ecx,0x13(%rcx)
  47:	11 01                	adc    %eax,(%rcx)
  49:	12 07                	adc    (%rdi),%al
  4b:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  52:	00 00                	add    %al,(%rax)
  54:	06                   	(bad)  
  55:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  5a:	0b 3b                	or     (%rbx),%edi
  5c:	0b 49 13             	or     0x13(%rcx),%ecx
  5f:	02 18                	add    (%rax),%bl
  61:	00 00                	add    %al,(%rax)
  63:	07                   	(bad)  
  64:	34 00                	xor    $0x0,%al
  66:	03 08                	add    (%rax),%ecx
  68:	3a 0b                	cmp    (%rbx),%cl
  6a:	3b 0b                	cmp    (%rbx),%ecx
  6c:	49 13 00             	adc    (%r8),%rax
  6f:	00 08                	add    %cl,(%rax)
  71:	2e 01 3f             	add    %edi,%cs:(%rdi)
  74:	19 03                	sbb    %eax,(%rbx)
  76:	0e                   	(bad)  
  77:	3a 0b                	cmp    (%rbx),%cl
  79:	3b 0b                	cmp    (%rbx),%ecx
  7b:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
  7f:	00 00                	add    %al,(%rax)
  81:	09 18                	or     %ebx,(%rax)
  83:	00 00                	add    %al,(%rax)
  85:	00 0a                	add    %cl,(%rdx)
  87:	24 00                	and    $0x0,%al
  89:	0b 0b                	or     (%rbx),%ecx
  8b:	3e 0b 03             	or     %ds:(%rbx),%eax
  8e:	08 00                	or     %al,(%rax)
  90:	00 00                	add    %al,(%rax)
  92:	01 11                	add    %edx,(%rcx)
  94:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b13a8 <_end+0x2aa0008>
  9a:	0e                   	(bad)  
  9b:	1b 0e                	sbb    (%rsi),%ecx
  9d:	11 01                	adc    %eax,(%rcx)
  9f:	12 07                	adc    (%rdi),%al
  a1:	10 17                	adc    %dl,(%rdi)
  a3:	00 00                	add    %al,(%rax)
  a5:	02 16                	add    (%rsi),%dl
  a7:	00 03                	add    %al,(%rbx)
  a9:	0e                   	(bad)  
  aa:	3a 0b                	cmp    (%rbx),%cl
  ac:	3b 0b                	cmp    (%rbx),%ecx
  ae:	49 13 00             	adc    (%r8),%rax
  b1:	00 03                	add    %al,(%rbx)
  b3:	24 00                	and    $0x0,%al
  b5:	0b 0b                	or     (%rbx),%ecx
  b7:	3e 0b 03             	or     %ds:(%rbx),%eax
  ba:	0e                   	(bad)  
  bb:	00 00                	add    %al,(%rax)
  bd:	04 26                	add    $0x26,%al
  bf:	00 49 13             	add    %cl,0x13(%rcx)
  c2:	00 00                	add    %al,(%rax)
  c4:	05 24 00 0b 0b       	add    $0xb0b0024,%eax
  c9:	3e 0b 03             	or     %ds:(%rbx),%eax
  cc:	08 00                	or     %al,(%rax)
  ce:	00 06                	add    %al,(%rsi)
  d0:	0f 00 0b             	str    (%rbx)
  d3:	0b 00                	or     (%rax),%eax
  d5:	00 07                	add    %al,(%rdi)
  d7:	0f 00 0b             	str    (%rbx)
  da:	0b 49 13             	or     0x13(%rcx),%ecx
  dd:	00 00                	add    %al,(%rax)
  df:	08 13                	or     %dl,(%rbx)
  e1:	01 03                	add    %eax,(%rbx)
  e3:	0e                   	(bad)  
  e4:	0b 0b                	or     (%rbx),%ecx
  e6:	3a 0b                	cmp    (%rbx),%cl
  e8:	3b 0b                	cmp    (%rbx),%ecx
  ea:	01 13                	add    %edx,(%rbx)
  ec:	00 00                	add    %al,(%rax)
  ee:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e03f4 <_end+0x39acf054>
  f4:	0b 3b                	or     (%rbx),%edi
  f6:	0b 49 13             	or     0x13(%rcx),%ecx
  f9:	38 0b                	cmp    %cl,(%rbx)
  fb:	00 00                	add    %al,(%rax)
  fd:	0a 0d 00 03 0e 3a    	or     0x3a0e0300(%rip),%cl        # 3a0e0403 <_end+0x39acf063>
 103:	0b 3b                	or     (%rbx),%edi
 105:	05 49 13 38 0b       	add    $0xb381349,%eax
 10a:	00 00                	add    %al,(%rax)
 10c:	0b 16                	or     (%rsi),%edx
 10e:	00 03                	add    %al,(%rbx)
 110:	0e                   	(bad)  
 111:	3a 0b                	cmp    (%rbx),%cl
 113:	3b 0b                	cmp    (%rbx),%ecx
 115:	00 00                	add    %al,(%rax)
 117:	0c 01                	or     $0x1,%al
 119:	01 49 13             	add    %ecx,0x13(%rcx)
 11c:	01 13                	add    %edx,(%rbx)
 11e:	00 00                	add    %al,(%rax)
 120:	0d 21 00 49 13       	or     $0x13490021,%eax
 125:	2f                   	(bad)  
 126:	0b 00                	or     (%rax),%eax
 128:	00 0e                	add    %cl,(%rsi)
 12a:	13 00                	adc    (%rax),%eax
 12c:	03 0e                	add    (%rsi),%ecx
 12e:	3c 19                	cmp    $0x19,%al
 130:	00 00                	add    %al,(%rax)
 132:	0f 34                	sysenter 
 134:	00 03                	add    %al,(%rbx)
 136:	0e                   	(bad)  
 137:	3a 0b                	cmp    (%rbx),%cl
 139:	3b 05 49 13 3f 19    	cmp    0x193f1349(%rip),%eax        # 193f1488 <_end+0x18de00e8>
 13f:	3c 19                	cmp    $0x19,%al
 141:	00 00                	add    %al,(%rax)
 143:	10 34 00             	adc    %dh,(%rax,%rax,1)
 146:	03 0e                	add    (%rsi),%ecx
 148:	3a 0b                	cmp    (%rbx),%cl
 14a:	3b 0b                	cmp    (%rbx),%ecx
 14c:	49 13 3f             	adc    (%r15),%rdi
 14f:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 152:	00 00                	add    %al,(%rax)
 154:	11 21                	adc    %esp,(%rcx)
 156:	00 00                	add    %al,(%rax)
 158:	00 12                	add    %dl,(%rdx)
 15a:	15 01 27 19 01       	adc    $0x1192701,%eax
 15f:	13 00                	adc    (%rax),%eax
 161:	00 13                	add    %dl,(%rbx)
 163:	05 00 49 13 00       	add    $0x134900,%eax
 168:	00 14 15 01 27 19 49 	add    %dl,0x49192701(,%rdx,1)
 16f:	13 01                	adc    (%rcx),%eax
 171:	13 00                	adc    (%rax),%eax
 173:	00 15 15 00 27 19    	add    %dl,0x19270015(%rip)        # 1927018e <_end+0x18c5edee>
 179:	49 13 00             	adc    (%r8),%rax
 17c:	00 16                	add    %dl,(%rsi)
 17e:	15 00 27 19 00       	adc    $0x192700,%eax
 183:	00 17                	add    %dl,(%rdi)
 185:	21 00                	and    %eax,(%rax)
 187:	49 13 2f             	adc    (%r15),%rbp
 18a:	05 00 00 18 04       	add    $0x4180000,%eax
 18f:	01 03                	add    %eax,(%rbx)
 191:	0e                   	(bad)  
 192:	3e 0b 0b             	or     %ds:(%rbx),%ecx
 195:	0b 49 13             	or     0x13(%rcx),%ecx
 198:	3a 0b                	cmp    (%rbx),%cl
 19a:	3b 0b                	cmp    (%rbx),%ecx
 19c:	01 13                	add    %edx,(%rbx)
 19e:	00 00                	add    %al,(%rax)
 1a0:	19 28                	sbb    %ebp,(%rax)
 1a2:	00 03                	add    %al,(%rbx)
 1a4:	0e                   	(bad)  
 1a5:	1c 0b                	sbb    $0xb,%al
 1a7:	00 00                	add    %al,(%rax)
 1a9:	1a 0d 00 03 08 3a    	sbb    0x3a080300(%rip),%cl        # 3a0804af <_end+0x39a6f10f>
 1af:	0b 3b                	or     (%rbx),%edi
 1b1:	0b 49 13             	or     0x13(%rcx),%ecx
 1b4:	38 0b                	cmp    %cl,(%rbx)
 1b6:	00 00                	add    %al,(%rax)
 1b8:	1b 13                	sbb    (%rbx),%edx
 1ba:	01 0b                	add    %ecx,(%rbx)
 1bc:	05 3a 0b 3b 0b       	add    $0xb3b0b3a,%eax
 1c1:	01 13                	add    %edx,(%rbx)
 1c3:	00 00                	add    %al,(%rax)
 1c5:	1c 0d                	sbb    $0xd,%al
 1c7:	00 03                	add    %al,(%rbx)
 1c9:	0e                   	(bad)  
 1ca:	3a 0b                	cmp    (%rbx),%cl
 1cc:	3b 0b                	cmp    (%rbx),%ecx
 1ce:	49 13 38             	adc    (%r8),%rdi
 1d1:	05 00 00 1d 34       	add    $0x341d0000,%eax
 1d6:	00 03                	add    %al,(%rbx)
 1d8:	0e                   	(bad)  
 1d9:	3a 0b                	cmp    (%rbx),%cl
 1db:	3b 0b                	cmp    (%rbx),%ecx
 1dd:	49 13 3f             	adc    (%r15),%rdi
 1e0:	19 02                	sbb    %eax,(%rdx)
 1e2:	18 00                	sbb    %al,(%rax)
 1e4:	00 1e                	add    %bl,(%rsi)
 1e6:	21 00                	and    %eax,(%rax)
 1e8:	49 13 2f             	adc    (%r15),%rbp
 1eb:	06                   	(bad)  
 1ec:	00 00                	add    %al,(%rax)
 1ee:	1f                   	(bad)  
 1ef:	34 00                	xor    $0x0,%al
 1f1:	03 08                	add    (%rax),%ecx
 1f3:	3a 0b                	cmp    (%rbx),%cl
 1f5:	3b 0b                	cmp    (%rbx),%ecx
 1f7:	49 13 3f             	adc    (%r15),%rdi
 1fa:	19 02                	sbb    %eax,(%rdx)
 1fc:	18 00                	sbb    %al,(%rax)
 1fe:	00 20                	add    %ah,(%rax)
 200:	04 01                	add    $0x1,%al
 202:	3e 0b 0b             	or     %ds:(%rbx),%ecx
 205:	0b 49 13             	or     0x13(%rcx),%ecx
 208:	3a 0b                	cmp    (%rbx),%cl
 20a:	3b 0b                	cmp    (%rbx),%ecx
 20c:	01 13                	add    %edx,(%rbx)
 20e:	00 00                	add    %al,(%rax)
 210:	21 34 00             	and    %esi,(%rax,%rax,1)
 213:	03 0e                	add    (%rsi),%ecx
 215:	3a 0b                	cmp    (%rbx),%cl
 217:	3b 05 49 13 02 18    	cmp    0x18021349(%rip),%eax        # 18021566 <_end+0x17a101c6>
 21d:	00 00                	add    %al,(%rax)
 21f:	22 2e                	and    (%rsi),%ch
 221:	01 3f                	add    %edi,(%rdi)
 223:	19 03                	sbb    %eax,(%rbx)
 225:	0e                   	(bad)  
 226:	3a 0b                	cmp    (%rbx),%cl
 228:	3b 05 11 01 12 07    	cmp    0x7120111(%rip),%eax        # 712033f <_end+0x6b0ef9f>
 22e:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 235:	00 00                	add    %al,(%rax)
 237:	23 34 00             	and    (%rax,%rax,1),%esi
 23a:	03 08                	add    (%rax),%ecx
 23c:	3a 0b                	cmp    (%rbx),%cl
 23e:	3b 05 49 13 02 18    	cmp    0x18021349(%rip),%eax        # 1802158d <_end+0x17a101ed>
 244:	00 00                	add    %al,(%rax)
 246:	24 2e                	and    $0x2e,%al
 248:	01 3f                	add    %edi,(%rdi)
 24a:	19 03                	sbb    %eax,(%rbx)
 24c:	0e                   	(bad)  
 24d:	3a 0b                	cmp    (%rbx),%cl
 24f:	3b 05 49 13 11 01    	cmp    0x1111349(%rip),%eax        # 111159e <_end+0xb001fe>
 255:	12 07                	adc    (%rdi),%al
 257:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 25e:	00 00                	add    %al,(%rax)
 260:	25 0b 01 11 01       	and    $0x111010b,%eax
 265:	12 07                	adc    (%rdi),%al
 267:	00 00                	add    %al,(%rax)
 269:	26 2e 01 3f          	es add %edi,%cs:(%rdi)
 26d:	19 03                	sbb    %eax,(%rbx)
 26f:	0e                   	(bad)  
 270:	3a 0b                	cmp    (%rbx),%cl
 272:	3b 05 49 13 3c 19    	cmp    0x193c1349(%rip),%eax        # 193c15c1 <_end+0x18db0221>
 278:	01 13                	add    %edx,(%rbx)
 27a:	00 00                	add    %al,(%rax)
 27c:	27                   	(bad)  
 27d:	18 00                	sbb    %al,(%rax)
 27f:	00 00                	add    %al,(%rax)
 281:	28 2e                	sub    %ch,(%rsi)
 283:	01 3f                	add    %edi,(%rdi)
 285:	19 03                	sbb    %eax,(%rbx)
 287:	0e                   	(bad)  
 288:	3a 0b                	cmp    (%rbx),%cl
 28a:	3b 0b                	cmp    (%rbx),%ecx
 28c:	27                   	(bad)  
 28d:	19 87 01 19 3c 19    	sbb    %eax,0x193c1901(%rdi)
 293:	01 13                	add    %edx,(%rbx)
 295:	00 00                	add    %al,(%rax)
 297:	29 0b                	sub    %ecx,(%rbx)
 299:	01 55 17             	add    %edx,0x17(%rbp)
 29c:	01 13                	add    %edx,(%rbx)
 29e:	00 00                	add    %al,(%rax)
 2a0:	2a 0b                	sub    (%rbx),%cl
 2a2:	01 11                	add    %edx,(%rcx)
 2a4:	01 12                	add    %edx,(%rdx)
 2a6:	07                   	(bad)  
 2a7:	01 13                	add    %edx,(%rbx)
 2a9:	00 00                	add    %al,(%rax)
 2ab:	2b 34 00             	sub    (%rax,%rax,1),%esi
 2ae:	03 08                	add    (%rax),%ecx
 2b0:	3a 0b                	cmp    (%rbx),%cl
 2b2:	3b 05 49 13 00 00    	cmp    0x1349(%rip),%eax        # 1601 <memcasecmp+0xc>
 2b8:	2c 2e                	sub    $0x2e,%al
 2ba:	01 3f                	add    %edi,(%rdi)
 2bc:	19 03                	sbb    %eax,(%rbx)
 2be:	0e                   	(bad)  
 2bf:	3a 0b                	cmp    (%rbx),%cl
 2c1:	3b 05 49 13 3c 19    	cmp    0x193c1349(%rip),%eax        # 193c1610 <_end+0x18db0270>
 2c7:	00 00                	add    %al,(%rax)
 2c9:	2d 2e 01 3f 19       	sub    $0x193f012e,%eax
 2ce:	03 0e                	add    (%rsi),%ecx
 2d0:	3a 0b                	cmp    (%rbx),%cl
 2d2:	3b 0b                	cmp    (%rbx),%ecx
 2d4:	27                   	(bad)  
 2d5:	19 49 13             	sbb    %ecx,0x13(%rcx)
 2d8:	3c 19                	cmp    $0x19,%al
 2da:	00 00                	add    %al,(%rax)
 2dc:	2e 2e 01 3f          	cs add %edi,%cs:(%rdi)
 2e0:	19 03                	sbb    %eax,(%rbx)
 2e2:	0e                   	(bad)  
 2e3:	3a 0b                	cmp    (%rbx),%cl
 2e5:	3b 0b                	cmp    (%rbx),%ecx
 2e7:	27                   	(bad)  
 2e8:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 2eb:	00 00                	add    %al,(%rax)
 2ed:	2f                   	(bad)  
 2ee:	0b 01                	or     (%rcx),%eax
 2f0:	00 00                	add    %al,(%rax)
 2f2:	30 34 00             	xor    %dh,(%rax,%rax,1)
 2f5:	03 0e                	add    (%rsi),%ecx
 2f7:	3a 0b                	cmp    (%rbx),%cl
 2f9:	3b 05 49 13 00 00    	cmp    0x1349(%rip),%eax        # 1648 <memcasecmp+0x53>
 2ff:	31 2e                	xor    %ebp,(%rsi)
 301:	01 3f                	add    %edi,(%rdi)
 303:	19 03                	sbb    %eax,(%rbx)
 305:	0e                   	(bad)  
 306:	3a 0b                	cmp    (%rbx),%cl
 308:	3b 05 27 19 49 13    	cmp    0x13491927(%rip),%eax        # 13491c35 <_end+0x12e80895>
 30e:	11 01                	adc    %eax,(%rcx)
 310:	12 07                	adc    (%rdi),%al
 312:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 319:	00 00                	add    %al,(%rax)
 31b:	32 05 00 03 0e 3a    	xor    0x3a0e0300(%rip),%al        # 3a0e0621 <_end+0x39acf281>
 321:	0b 3b                	or     (%rbx),%edi
 323:	05 49 13 02 18       	add    $0x18021349,%eax
 328:	00 00                	add    %al,(%rax)
 32a:	33 2e                	xor    (%rsi),%ebp
 32c:	00 3f                	add    %bh,(%rdi)
 32e:	19 03                	sbb    %eax,(%rbx)
 330:	0e                   	(bad)  
 331:	3a 0b                	cmp    (%rbx),%cl
 333:	3b 05 11 01 12 07    	cmp    0x7120111(%rip),%eax        # 712044a <_end+0x6b0f0aa>
 339:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
 340:	34 2e                	xor    $0x2e,%al
 342:	01 3f                	add    %edi,(%rdi)
 344:	19 03                	sbb    %eax,(%rbx)
 346:	08 3a                	or     %bh,(%rdx)
 348:	0b 3b                	or     (%rbx),%edi
 34a:	05 11 01 12 07       	add    $0x7120111,%eax
 34f:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 356:	00 00                	add    %al,(%rax)
 358:	35 2e 01 3f 19       	xor    $0x193f012e,%eax
 35d:	03 08                	add    (%rax),%ecx
 35f:	3a 0b                	cmp    (%rbx),%cl
 361:	3b 05 27 19 11 01    	cmp    0x1111927(%rip),%eax        # 1111c8e <_end+0xb008ee>
 367:	12 07                	adc    (%rdi),%al
 369:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 370:	00 00                	add    %al,(%rax)
 372:	36 05 00 03 08 3a    	ss add $0x3a080300,%eax
 378:	0b 3b                	or     (%rbx),%edi
 37a:	05 49 13 02 18       	add    $0x18021349,%eax
 37f:	00 00                	add    %al,(%rax)
 381:	37                   	(bad)  
 382:	2e 00 3f             	add    %bh,%cs:(%rdi)
 385:	19 03                	sbb    %eax,(%rbx)
 387:	08 3a                	or     %bh,(%rdx)
 389:	0b 3b                	or     (%rbx),%edi
 38b:	05 11 01 12 07       	add    $0x7120111,%eax
 390:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
 397:	38 2e                	cmp    %ch,(%rsi)
 399:	01 3f                	add    %edi,(%rdi)
 39b:	19 03                	sbb    %eax,(%rbx)
 39d:	0e                   	(bad)  
 39e:	3a 0b                	cmp    (%rbx),%cl
 3a0:	3b 05 27 19 11 01    	cmp    0x1111927(%rip),%eax        # 1111ccd <_end+0xb0092d>
 3a6:	12 07                	adc    (%rdi),%al
 3a8:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 3af:	00 00                	add    %al,(%rax)
 3b1:	39 26                	cmp    %esp,(%rsi)
 3b3:	00 00                	add    %al,(%rax)
 3b5:	00 3a                	add    %bh,(%rdx)
 3b7:	2e 01 03             	add    %eax,%cs:(%rbx)
 3ba:	0e                   	(bad)  
 3bb:	3a 0b                	cmp    (%rbx),%cl
 3bd:	3b 0b                	cmp    (%rbx),%ecx
 3bf:	27                   	(bad)  
 3c0:	19 11                	sbb    %edx,(%rcx)
 3c2:	01 12                	add    %edx,(%rdx)
 3c4:	07                   	(bad)  
 3c5:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	3b 05 00 03 08 3a    	cmp    0x3a080300(%rip),%eax        # 3a0806d4 <_end+0x39a6f334>
 3d4:	0b 3b                	or     (%rbx),%edi
 3d6:	0b 49 13             	or     0x13(%rcx),%ecx
 3d9:	02 18                	add    (%rax),%bl
 3db:	00 00                	add    %al,(%rax)
 3dd:	3c 34                	cmp    $0x34,%al
 3df:	00 03                	add    %al,(%rbx)
 3e1:	08 3a                	or     %bh,(%rdx)
 3e3:	0b 3b                	or     (%rbx),%edi
 3e5:	0b 49 13             	or     0x13(%rcx),%ecx
 3e8:	02 18                	add    (%rax),%bl
 3ea:	00 00                	add    %al,(%rax)
 3ec:	3d 2e 01 03 0e       	cmp    $0xe03012e,%eax
 3f1:	3a 0b                	cmp    (%rbx),%cl
 3f3:	3b 0b                	cmp    (%rbx),%ecx
 3f5:	27                   	(bad)  
 3f6:	19 11                	sbb    %edx,(%rcx)
 3f8:	01 12                	add    %edx,(%rdx)
 3fa:	07                   	(bad)  
 3fb:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 402:	00 00                	add    %al,(%rax)
 404:	3e 2e 01 3f          	ds add %edi,%cs:(%rdi)
 408:	19 03                	sbb    %eax,(%rbx)
 40a:	0e                   	(bad)  
 40b:	3a 0b                	cmp    (%rbx),%cl
 40d:	3b 0b                	cmp    (%rbx),%ecx
 40f:	27                   	(bad)  
 410:	19 49 13             	sbb    %ecx,0x13(%rcx)
 413:	11 01                	adc    %eax,(%rcx)
 415:	12 07                	adc    (%rdi),%al
 417:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
 41e:	00 00                	add    %al,(%rax)
 420:	3f                   	(bad)  
 421:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 426:	0b 3b                	or     (%rbx),%edi
 428:	0b 49 13             	or     0x13(%rcx),%ecx
 42b:	02 18                	add    (%rax),%bl
 42d:	00 00                	add    %al,(%rax)
 42f:	40                   	rex
 430:	2e 01 3f             	add    %edi,%cs:(%rdi)
 433:	19 03                	sbb    %eax,(%rbx)
 435:	08 3a                	or     %bh,(%rdx)
 437:	0b 3b                	or     (%rbx),%edi
 439:	0b 27                	or     (%rdi),%esp
 43b:	19 49 13             	sbb    %ecx,0x13(%rcx)
 43e:	11 01                	adc    %eax,(%rcx)
 440:	12 07                	adc    (%rdi),%al
 442:	40 18 97 42 19 00 00 	sbb    %dl,0x1942(%rdi)
 449:	00 01                	add    %al,(%rcx)
 44b:	11 01                	adc    %eax,(%rcx)
 44d:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 452:	0e                   	(bad)  
 453:	1b 0e                	sbb    (%rsi),%ecx
 455:	11 01                	adc    %eax,(%rcx)
 457:	12 07                	adc    (%rdi),%al
 459:	10 17                	adc    %dl,(%rdi)
 45b:	00 00                	add    %al,(%rax)
 45d:	02 24 00             	add    (%rax,%rax,1),%ah
 460:	0b 0b                	or     (%rbx),%ecx
 462:	3e 0b 03             	or     %ds:(%rbx),%eax
 465:	0e                   	(bad)  
 466:	00 00                	add    %al,(%rax)
 468:	03 24 00             	add    (%rax,%rax,1),%esp
 46b:	0b 0b                	or     (%rbx),%ecx
 46d:	3e 0b 03             	or     %ds:(%rbx),%eax
 470:	08 00                	or     %al,(%rax)
 472:	00 04 16             	add    %al,(%rsi,%rdx,1)
 475:	00 03                	add    %al,(%rbx)
 477:	0e                   	(bad)  
 478:	3a 0b                	cmp    (%rbx),%cl
 47a:	3b 0b                	cmp    (%rbx),%ecx
 47c:	49 13 00             	adc    (%r8),%rax
 47f:	00 05 0f 00 0b 0b    	add    %al,0xb0b000f(%rip)        # b0b0494 <_end+0xaa9f0f4>
 485:	00 00                	add    %al,(%rax)
 487:	06                   	(bad)  
 488:	0f 00 0b             	str    (%rbx)
 48b:	0b 49 13             	or     0x13(%rcx),%ecx
 48e:	00 00                	add    %al,(%rax)
 490:	07                   	(bad)  
 491:	26 00 49 13          	add    %cl,%es:0x13(%rcx)
 495:	00 00                	add    %al,(%rax)
 497:	08 13                	or     %dl,(%rbx)
 499:	01 03                	add    %eax,(%rbx)
 49b:	0e                   	(bad)  
 49c:	0b 0b                	or     (%rbx),%ecx
 49e:	3a 0b                	cmp    (%rbx),%cl
 4a0:	3b 0b                	cmp    (%rbx),%ecx
 4a2:	01 13                	add    %edx,(%rbx)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e07ac <_end+0x39acf40c>
 4ac:	0b 3b                	or     (%rbx),%edi
 4ae:	0b 49 13             	or     0x13(%rcx),%ecx
 4b1:	38 0b                	cmp    %cl,(%rbx)
 4b3:	00 00                	add    %al,(%rax)
 4b5:	0a 01                	or     (%rcx),%al
 4b7:	01 49 13             	add    %ecx,0x13(%rcx)
 4ba:	01 13                	add    %edx,(%rbx)
 4bc:	00 00                	add    %al,(%rax)
 4be:	0b 21                	or     (%rcx),%esp
 4c0:	00 49 13             	add    %cl,0x13(%rcx)
 4c3:	2f                   	(bad)  
 4c4:	0b 00                	or     (%rax),%eax
 4c6:	00 0c 0d 00 03 0e 3a 	add    %cl,0x3a0e0300(,%rcx,1)
 4cd:	0b 3b                	or     (%rbx),%edi
 4cf:	05 49 13 38 0b       	add    $0xb381349,%eax
 4d4:	00 00                	add    %al,(%rax)
 4d6:	0d 16 00 03 0e       	or     $0xe030016,%eax
 4db:	3a 0b                	cmp    (%rbx),%cl
 4dd:	3b 0b                	cmp    (%rbx),%ecx
 4df:	00 00                	add    %al,(%rax)
 4e1:	0e                   	(bad)  
 4e2:	13 00                	adc    (%rax),%eax
 4e4:	03 0e                	add    (%rsi),%ecx
 4e6:	3c 19                	cmp    $0x19,%al
 4e8:	00 00                	add    %al,(%rax)
 4ea:	0f 34                	sysenter 
 4ec:	00 03                	add    %al,(%rbx)
 4ee:	0e                   	(bad)  
 4ef:	3a 0b                	cmp    (%rbx),%cl
 4f1:	3b 05 49 13 3f 19    	cmp    0x193f1349(%rip),%eax        # 193f1840 <_end+0x18de04a0>
 4f7:	3c 19                	cmp    $0x19,%al
 4f9:	00 00                	add    %al,(%rax)
 4fb:	10 34 00             	adc    %dh,(%rax,%rax,1)
 4fe:	03 0e                	add    (%rsi),%ecx
 500:	3a 0b                	cmp    (%rbx),%cl
 502:	3b 0b                	cmp    (%rbx),%ecx
 504:	49 13 3f             	adc    (%r15),%rdi
 507:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 50a:	00 00                	add    %al,(%rax)
 50c:	11 21                	adc    %esp,(%rcx)
 50e:	00 00                	add    %al,(%rax)
 510:	00 12                	add    %dl,(%rdx)
 512:	26 00 00             	add    %al,%es:(%rax)
 515:	00 13                	add    %dl,(%rbx)
 517:	34 00                	xor    $0x0,%al
 519:	03 0e                	add    (%rsi),%ecx
 51b:	3a 0b                	cmp    (%rbx),%cl
 51d:	3b 0b                	cmp    (%rbx),%ecx
 51f:	49 13 3f             	adc    (%r15),%rdi
 522:	19 02                	sbb    %eax,(%rdx)
 524:	18 00                	sbb    %al,(%rax)
 526:	00 14 2e             	add    %dl,(%rsi,%rbp,1)
 529:	01 3f                	add    %edi,(%rdi)
 52b:	19 03                	sbb    %eax,(%rbx)
 52d:	0e                   	(bad)  
 52e:	3a 0b                	cmp    (%rbx),%cl
 530:	3b 0b                	cmp    (%rbx),%ecx
 532:	27                   	(bad)  
 533:	19 11                	sbb    %edx,(%rcx)
 535:	01 12                	add    %edx,(%rdx)
 537:	07                   	(bad)  
 538:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 53f:	00 00                	add    %al,(%rax)
 541:	15 05 00 03 0e       	adc    $0xe030005,%eax
 546:	3a 0b                	cmp    (%rbx),%cl
 548:	3b 0b                	cmp    (%rbx),%ecx
 54a:	49 13 02             	adc    (%r10),%rax
 54d:	18 00                	sbb    %al,(%rax)
 54f:	00 16                	add    %dl,(%rsi)
 551:	05 00 03 08 3a       	add    $0x3a080300,%eax
 556:	0b 3b                	or     (%rbx),%edi
 558:	0b 49 13             	or     0x13(%rcx),%ecx
 55b:	02 18                	add    (%rax),%bl
 55d:	00 00                	add    %al,(%rax)
 55f:	17                   	(bad)  
 560:	34 00                	xor    $0x0,%al
 562:	03 08                	add    (%rax),%ecx
 564:	3a 0b                	cmp    (%rbx),%cl
 566:	3b 0b                	cmp    (%rbx),%ecx
 568:	49 13 02             	adc    (%r10),%rax
 56b:	18 00                	sbb    %al,(%rax)
 56d:	00 18                	add    %bl,(%rax)
 56f:	2e 01 3f             	add    %edi,%cs:(%rdi)
 572:	19 03                	sbb    %eax,(%rbx)
 574:	0e                   	(bad)  
 575:	3a 0b                	cmp    (%rbx),%cl
 577:	3b 0b                	cmp    (%rbx),%ecx
 579:	27                   	(bad)  
 57a:	19 49 13             	sbb    %ecx,0x13(%rcx)
 57d:	11 01                	adc    %eax,(%rcx)
 57f:	12 07                	adc    (%rdi),%al
 581:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
 588:	00 00                	add    %al,(%rax)
 58a:	19 34 00             	sbb    %esi,(%rax,%rax,1)
 58d:	03 0e                	add    (%rsi),%ecx
 58f:	3a 0b                	cmp    (%rbx),%cl
 591:	3b 0b                	cmp    (%rbx),%ecx
 593:	49 13 02             	adc    (%r10),%rax
 596:	18 00                	sbb    %al,(%rax)
 598:	00 1a                	add    %bl,(%rdx)
 59a:	2e 00 3f             	add    %bh,%cs:(%rdi)
 59d:	19 03                	sbb    %eax,(%rbx)
 59f:	0e                   	(bad)  
 5a0:	3a 0b                	cmp    (%rbx),%cl
 5a2:	3b 0b                	cmp    (%rbx),%ecx
 5a4:	49 13 11             	adc    (%r9),%rdx
 5a7:	01 12                	add    %edx,(%rdx)
 5a9:	07                   	(bad)  
 5aa:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
 5b1:	1b 2e                	sbb    (%rsi),%ebp
 5b3:	01 3f                	add    %edi,(%rdi)
 5b5:	19 03                	sbb    %eax,(%rbx)
 5b7:	0e                   	(bad)  
 5b8:	3a 0b                	cmp    (%rbx),%cl
 5ba:	3b 0b                	cmp    (%rbx),%ecx
 5bc:	27                   	(bad)  
 5bd:	19 49 13             	sbb    %ecx,0x13(%rcx)
 5c0:	11 01                	adc    %eax,(%rcx)
 5c2:	12 07                	adc    (%rdi),%al
 5c4:	40 18 96 42 19 00 00 	sbb    %dl,0x1942(%rsi)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	42 00 00             	rex.X add %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 25 00 00 00 01    	add    %ah,0x1000000(%rip)        # 100000b <_end+0x9eec6b>
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 4c 69 6e          	add    %cl,0x6e(%rcx,%rbp,2)
  1f:	75 78                	jne    99 <_init-0xabf>
  21:	53                   	push   %rbx
  22:	50                   	push   %rax
  23:	46 33 32             	rex.RX xor (%rdx),%r14d
  26:	56                   	push   %rsi
  27:	4d                   	rex.WRB
  28:	2e 63 00             	movslq %cs:(%rax),%eax
  2b:	00 00                	add    %al,(%rax)
  2d:	00 00                	add    %al,(%rax)
  2f:	00 09                	add    %cl,(%rcx)
  31:	02 2a                	add    (%rdx),%ch
  33:	0e                   	(bad)  
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	16                   	(bad)  
  3b:	e5 d8                	in     $0xd8,%eax
  3d:	68 e7 9f 59 02       	pushq  $0x2599fe7
  42:	02 00                	add    (%rax),%al
  44:	01 01                	add    %eax,(%rcx)
  46:	58                   	pop    %rax
  47:	0d 00 00 02 00       	or     $0x20000,%eax
  4c:	90                   	nop
  4d:	01 00                	add    %eax,(%rax)
  4f:	00 01                	add    %al,(%rcx)
  51:	01 fb                	add    %edi,%ebx
  53:	0e                   	(bad)  
  54:	0d 00 01 01 01       	or     $0x1010100,%eax
  59:	01 00                	add    %eax,(%rax)
  5b:	00 00                	add    %al,(%rax)
  5d:	01 00                	add    %eax,(%rax)
  5f:	00 01                	add    %al,(%rcx)
  61:	2f                   	(bad)  
  62:	75 73                	jne    d7 <_init-0xa81>
  64:	72 2f                	jb     95 <_init-0xac3>
  66:	6c                   	insb   (%dx),%es:(%rdi)
  67:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  6e:	78 38                	js     a8 <_init-0xab0>
  70:	36 5f                	ss pop %rdi
  72:	36 34 2d             	ss xor $0x2d,%al
  75:	6c                   	insb   (%dx),%es:(%rdi)
  76:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  7d:	75 2f                	jne    ae <_init-0xaaa>
  7f:	37                   	(bad)  
  80:	2f                   	(bad)  
  81:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  88:	00 2f                	add    %ch,(%rdi)
  8a:	75 73                	jne    ff <_init-0xa59>
  8c:	72 2f                	jb     bd <_init-0xa9b>
  8e:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  95:	2f                   	(bad)  
  96:	78 38                	js     d0 <_init-0xa88>
  98:	36 5f                	ss pop %rdi
  9a:	36 34 2d             	ss xor $0x2d,%al
  9d:	6c                   	insb   (%dx),%es:(%rdi)
  9e:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  a5:	75 2f                	jne    d6 <_init-0xa82>
  a7:	62                   	(bad)  
  a8:	69 74 73 00 2f 75 73 	imul   $0x7273752f,0x0(%rbx,%rsi,2),%esi
  af:	72 
  b0:	2f                   	(bad)  
  b1:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  b8:	2f                   	(bad)  
  b9:	78 38                	js     f3 <_init-0xa65>
  bb:	36 5f                	ss pop %rdi
  bd:	36 34 2d             	ss xor $0x2d,%al
  c0:	6c                   	insb   (%dx),%es:(%rdi)
  c1:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  c8:	75 2f                	jne    f9 <_init-0xa5f>
  ca:	62                   	(bad)  
  cb:	69 74 73 2f 74 79 70 	imul   $0x65707974,0x2f(%rbx,%rsi,2),%esi
  d2:	65 
  d3:	73 00                	jae    d5 <_init-0xa83>
  d5:	2f                   	(bad)  
  d6:	75 73                	jne    14b <_init-0xa0d>
  d8:	72 2f                	jb     109 <_init-0xa4f>
  da:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  e1:	00 2f                	add    %ch,(%rdi)
  e3:	75 73                	jne    158 <_init-0xa00>
  e5:	72 2f                	jb     116 <_init-0xa42>
  e7:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  ee:	2f                   	(bad)  
  ef:	61                   	(bad)  
  f0:	73 6d                	jae    15f <_init-0x9f9>
  f2:	2d 67 65 6e 65       	sub    $0x656e6567,%eax
  f7:	72 69                	jb     162 <_init-0x9f6>
  f9:	63 00                	movslq (%rax),%eax
  fb:	2f                   	(bad)  
  fc:	75 73                	jne    171 <_init-0x9e7>
  fe:	72 2f                	jb     12f <_init-0xa29>
 100:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 107:	2f                   	(bad)  
 108:	72 65                	jb     16f <_init-0x9e9>
 10a:	61                   	(bad)  
 10b:	64 6c                	fs insb (%dx),%es:(%rdi)
 10d:	69 6e 65 00 00 66 6f 	imul   $0x6f660000,0x65(%rsi),%ebp
 114:	72 74                	jb     18a <_init-0x9ce>
 116:	68 2e 63 00 00       	pushq  $0x632e
 11b:	00 00                	add    %al,(%rax)
 11d:	73 74                	jae    193 <_init-0x9c5>
 11f:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x100
 126:	01 
 127:	00 00                	add    %al,(%rax)
 129:	74 79                	je     1a4 <_init-0x9b4>
 12b:	70 65                	jo     192 <_init-0x9c6>
 12d:	73 2e                	jae    15d <_init-0x9fb>
 12f:	68 00 02 00 00       	pushq  $0x200
 134:	6c                   	insb   (%dx),%es:(%rdi)
 135:	69 62 69 6f 2e 68 00 	imul   $0x682e6f,0x69(%rdx),%esp
 13c:	02 00                	add    (%rax),%al
 13e:	00 46 49             	add    %al,0x49(%rsi)
 141:	4c                   	rex.WR
 142:	45                   	rex.RB
 143:	2e 68 00 03 00 00    	cs pushq $0x300
 149:	73 74                	jae    1bf <_init-0x999>
 14b:	64 69 6f 2e 68 00 04 	imul   $0x40068,%fs:0x2e(%rdi),%ebp
 152:	00 
 153:	00 73 79             	add    %dh,0x79(%rbx)
 156:	73 5f                	jae    1b7 <_init-0x9a1>
 158:	65 72 72             	gs jb  1cd <_init-0x98b>
 15b:	6c                   	insb   (%dx),%es:(%rdi)
 15c:	69 73 74 2e 68 00 02 	imul   $0x200682e,0x74(%rbx),%esi
 163:	00 00                	add    %al,(%rax)
 165:	73 74                	jae    1db <_init-0x97d>
 167:	64 69 6e 74 2d 69 6e 	imul   $0x746e692d,%fs:0x74(%rsi),%ebp
 16e:	74 
 16f:	6e                   	outsb  %ds:(%rsi),(%dx)
 170:	2e 68 00 02 00 00    	cs pushq $0x200
 176:	69 6e 74 2d 6c 6c 36 	imul   $0x366c6c2d,0x74(%rsi),%ebp
 17d:	34 2e                	xor    $0x2e,%al
 17f:	68 00 05 00 00       	pushq  $0x500
 184:	72 6c                	jb     1f2 <_init-0x966>
 186:	74 79                	je     201 <_init-0x957>
 188:	70 65                	jo     1ef <_init-0x969>
 18a:	64 65 66 73 2e       	fs gs data16 jae 1bd <_init-0x99b>
 18f:	68 00 06 00 00       	pushq  $0x600
 194:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
 198:	61                   	(bad)  
 199:	70 73                	jo     20e <_init-0x94a>
 19b:	2e 68 00 06 00 00    	cs pushq $0x600
 1a1:	74 69                	je     20c <_init-0x94c>
 1a3:	6c                   	insb   (%dx),%es:(%rdi)
 1a4:	64 65 2e 68 00 06 00 	fs gs cs pushq $0x600
 1ab:	00 
 1ac:	72 65                	jb     213 <_init-0x945>
 1ae:	61                   	(bad)  
 1af:	64 6c                	fs insb (%dx),%es:(%rdi)
 1b1:	69 6e 65 2e 68 00 06 	imul   $0x600682e,0x65(%rsi),%ebp
 1b8:	00 00                	add    %al,(%rax)
 1ba:	74 69                	je     225 <_init-0x933>
 1bc:	6d                   	insl   (%dx),%es:(%rdi)
 1bd:	65 2e 68 00 04 00 00 	gs cs pushq $0x400
 1c4:	68 69 73 74 6f       	pushq  $0x6f747369
 1c9:	72 79                	jb     244 <_init-0x914>
 1cb:	2e 68 00 06 00 00    	cs pushq $0x600
 1d1:	3c 62                	cmp    $0x62,%al
 1d3:	75 69                	jne    23e <_init-0x91a>
 1d5:	6c                   	insb   (%dx),%es:(%rdi)
 1d6:	74 2d                	je     205 <_init-0x953>
 1d8:	69 6e 3e 00 00 00 00 	imul   $0x0,0x3e(%rsi),%ebp
 1df:	00 00                	add    %al,(%rax)
 1e1:	09 02                	or     %eax,(%rdx)
 1e3:	6d                   	insl   (%dx),%es:(%rdi)
 1e4:	0e                   	(bad)  
 1e5:	00 00                	add    %al,(%rax)
 1e7:	00 00                	add    %al,(%rax)
 1e9:	00 00                	add    %al,(%rax)
 1eb:	03 d5                	add    %ebp,%edx
 1ed:	00 01                	add    %al,(%rcx)
 1ef:	76 08                	jbe    1f9 <_init-0x95f>
 1f1:	f3 03 1f             	repz add (%rdi),%ebx
 1f4:	2e ae                	cs scas %es:(%rdi),%al
 1f6:	00 02                	add    %al,(%rdx)
 1f8:	04 04                	add    $0x4,%al
 1fa:	92                   	xchg   %eax,%edx
 1fb:	00 02                	add    %al,(%rdx)
 1fd:	04 04                	add    $0x4,%al
 1ff:	08 e2                	or     %ah,%dl
 201:	00 02                	add    %al,(%rdx)
 203:	04 01                	add    $0x1,%al
 205:	06                   	(bad)  
 206:	4a 00 02             	rex.WX add %al,(%rdx)
 209:	04 03                	add    $0x3,%al
 20b:	82                   	(bad)  
 20c:	06                   	(bad)  
 20d:	95                   	xchg   %eax,%ebp
 20e:	08 13                	or     %dl,(%rbx)
 210:	59                   	pop    %rcx
 211:	03 10                	add    (%rax),%edx
 213:	2e f2 e7 08          	cs repnz out %eax,$0x8
 217:	91                   	xchg   %eax,%ecx
 218:	08 93 9f 9f 92 9f    	or     %dl,-0x606d6061(%rbx)
 21e:	9f                   	lahf   
 21f:	9f                   	lahf   
 220:	91                   	xchg   %eax,%ecx
 221:	08 21                	or     %ah,(%rcx)
 223:	91                   	xchg   %eax,%ecx
 224:	08 21                	or     %ah,(%rcx)
 226:	08 76 08             	or     %dh,0x8(%rsi)
 229:	21 08                	and    %ecx,(%rax)
 22b:	6c                   	insb   (%dx),%es:(%rdi)
 22c:	f5                   	cmc    
 22d:	08 9f 67 08 2f 03    	or     %bl,0x32f0867(%rdi)
 233:	10 08                	adc    %cl,(%rax)
 235:	12 03                	adc    (%rbx),%al
 237:	72 2e                	jb     267 <_init-0x8f1>
 239:	91                   	xchg   %eax,%ecx
 23a:	ad                   	lods   %ds:(%rsi),%eax
 23b:	3d 00 02 04 01       	cmp    $0x1040200,%eax
 240:	06                   	(bad)  
 241:	74 06                	je     249 <_init-0x90f>
 243:	4b 3d 00 02 04 01    	rex.WXB cmp $0x1040200,%rax
 249:	06                   	(bad)  
 24a:	82                   	(bad)  
 24b:	06                   	(bad)  
 24c:	67 67 4b 00 02       	addr32 rex.WXB add %al,(%r10d)
 251:	04 02                	add    $0x2,%al
 253:	76 00                	jbe    255 <_init-0x903>
 255:	02 04 02             	add    (%rdx,%rax,1),%al
 258:	91                   	xchg   %eax,%ecx
 259:	00 02                	add    %al,(%rdx)
 25b:	04 02                	add    $0x2,%al
 25d:	03 75 90             	add    -0x70(%rbp),%esi
 260:	00 02                	add    %al,(%rdx)
 262:	04 01                	add    $0x1,%al
 264:	06                   	(bad)  
 265:	4a 06                	rex.WX (bad) 
 267:	03 0e                	add    (%rsi),%ecx
 269:	66 03 a2 01 3c ad 02 	add    0x2ad3c01(%rdx),%sp
 270:	32 13                	xor    (%rbx),%dl
 272:	02 28                	add    (%rax),%ch
 274:	13 3f                	adc    (%rdi),%edi
 276:	d7                   	xlat   %ds:(%rbx)
 277:	02 34 13             	add    (%rbx,%rdx,1),%dh
 27a:	02 28                	add    (%rax),%ch
 27c:	13 3f                	adc    (%rdi),%edi
 27e:	c9                   	leaveq 
 27f:	02 33                	add    (%rbx),%dh
 281:	13 02                	adc    (%rdx),%eax
 283:	28 13                	sub    %dl,(%rbx)
 285:	3f                   	(bad)  
 286:	f4                   	hlt    
 287:	02 26                	add    (%rsi),%ah
 289:	13 91 2f 02 24 11    	adc    0x1124022f(%rcx),%edx
 28f:	ca 08 c9             	lret   $0xc908
 292:	02 29                	add    (%rcx),%ch
 294:	13 00                	adc    (%rax),%eax
 296:	02 04 01             	add    (%rcx,%rax,1),%al
 299:	06                   	(bad)  
 29a:	02 2a                	add    (%rdx),%ch
 29c:	12 06                	adc    (%rsi),%al
 29e:	9f                   	lahf   
 29f:	85 f3                	test   %esi,%ebx
 2a1:	02 33                	add    (%rbx),%dh
 2a3:	13 02                	adc    (%rdx),%eax
 2a5:	4c 13 08             	adc    (%rax),%r9
 2a8:	13 86 bc 00 02 04    	adc    0x40200bc(%rsi),%eax
 2ae:	03 06                	add    (%rsi),%eax
 2b0:	90                   	nop
 2b1:	00 02                	add    %al,(%rdx)
 2b3:	04 01                	add    $0x1,%al
 2b5:	4a 06                	rex.WX (bad) 
 2b7:	08 13                	or     %dl,(%rbx)
 2b9:	08 13                	or     %dl,(%rbx)
 2bb:	3f                   	(bad)  
 2bc:	59                   	pop    %rcx
 2bd:	02 5e 13             	add    0x13(%rsi),%bl
 2c0:	4d                   	rex.WRB
 2c1:	f3 bb 02 55 13 08    	repz mov $0x8135502,%ebx
 2c7:	13 85 f3 bb 02 55    	adc    0x5502bbf3(%rbp),%eax
 2cd:	13 9f 9f 85 c9 bb    	adc    -0x44367a61(%rdi),%ebx
 2d3:	02 55 13             	add    0x13(%rbp),%dl
 2d6:	9f                   	lahf   
 2d7:	85 bb bb 9f 40 08    	test   %edi,0x8409fbb(%rbx)
 2dd:	3e 83 83 92 08 21 08 	addl   $0x21,%ds:0x8210892(%rbx)
 2e4:	21 
 2e5:	08 ad 00 02 04 02    	or     %ch,0x2040200(%rbp)
 2eb:	08 c3                	or     %al,%bl
 2ed:	00 02                	add    %al,(%rdx)
 2ef:	04 01                	add    $0x1,%al
 2f1:	06                   	(bad)  
 2f2:	4a 06                	rex.WX (bad) 
 2f4:	89 59 78             	mov    %ebx,0x78(%rcx)
 2f7:	f2 68 02 3a 13 59    	repnz pushq $0x59133a02
 2fd:	4b e5 00             	rex.WXB in $0x0,%eax
 300:	02 04 01             	add    (%rcx,%rax,1),%al
 303:	06                   	(bad)  
 304:	66 06                	data16 (bad) 
 306:	5a                   	pop    %rdx
 307:	77 ad                	ja     2b6 <_init-0x8a2>
 309:	08 83 00 02 04 01    	or     %al,0x1040200(%rbx)
 30f:	06                   	(bad)  
 310:	9e                   	sahf   
 311:	06                   	(bad)  
 312:	4b 3d 31 ae e5 e5    	rex.WXB cmp $0xffffffffe5e5ae31,%rax
 318:	08 13                	or     %dl,(%rbx)
 31a:	a0 32 bb 02 2f 15 00 	movabs 0x40200152f02bb32,%al
 321:	02 04 
 323:	03 06                	add    (%rsi),%eax
 325:	66 00 02             	data16 add %al,(%rdx)
 328:	04 01                	add    $0x1,%al
 32a:	9e                   	sahf   
 32b:	06                   	(bad)  
 32c:	08 23                	or     %ah,(%rbx)
 32e:	08 3e                	or     %bh,(%rsi)
 330:	08 bb 08 21 80 24    	or     %bh,0x24802108(%rbx)
 336:	00 02                	add    %al,(%rdx)
 338:	04 01                	add    $0x1,%al
 33a:	67 2f                	addr32 (bad) 
 33c:	08 13                	or     %dl,(%rbx)
 33e:	3f                   	(bad)  
 33f:	c9                   	leaveq 
 340:	84 9f 02 26 13 9f    	test   %bl,-0x60ecd9fe(%rdi)
 346:	00 02                	add    %al,(%rdx)
 348:	04 02                	add    $0x2,%al
 34a:	06                   	(bad)  
 34b:	2e 00 02             	add    %al,%cs:(%rdx)
 34e:	04 01                	add    $0x1,%al
 350:	08 82 06 ad 08 ad    	or     %al,-0x52f752fa(%rdx)
 356:	00 02                	add    %al,(%rdx)
 358:	04 01                	add    $0x1,%al
 35a:	06                   	(bad)  
 35b:	02 2a                	add    (%rdx),%ch
 35d:	12 06                	adc    (%rsi),%al
 35f:	9f                   	lahf   
 360:	85 bb bb 9f 3f 59    	test   %edi,0x593f9fbb(%rbx)
 366:	9f                   	lahf   
 367:	02 55 13             	add    0x13(%rbp),%dl
 36a:	4d 59                	rex.WRB pop %r9
 36c:	02 aa 01 13 4d 4b    	add    0x4b4d1301(%rdx),%ch
 372:	9f                   	lahf   
 373:	02 37                	add    (%rdi),%dh
 375:	13 02                	adc    (%rdx),%eax
 377:	51                   	push   %rcx
 378:	13 3f                	adc    (%rdi),%edi
 37a:	4b 9f                	rex.WXB lahf 
 37c:	02 37                	add    (%rdi),%dh
 37e:	13 02                	adc    (%rdx),%eax
 380:	51                   	push   %rcx
 381:	13 3f                	adc    (%rdi),%edi
 383:	59                   	pop    %rcx
 384:	02 85 01 13 9f 02    	add    0x29f1301(%rbp),%al
 38a:	aa                   	stos   %al,%es:(%rdi)
 38b:	01 13                	add    %edx,(%rbx)
 38d:	4d 59                	rex.WRB pop %r9
 38f:	02 85 01 13 9f 02    	add    0x29f1301(%rbp),%al
 395:	aa                   	stos   %al,%es:(%rdi)
 396:	01 13                	add    %edx,(%rbx)
 398:	4d 92                	rex.WRB xchg %rax,%r10
 39a:	9f                   	lahf   
 39b:	02 33                	add    (%rbx),%dh
 39d:	13 02                	adc    (%rdx),%eax
 39f:	69 13 02 39 13 85    	imul   $0x85133902,(%rbx),%edx
 3a5:	59                   	pop    %rcx
 3a6:	02 62 13             	add    0x13(%rdx),%ah
 3a9:	02 51 13             	add    0x13(%rcx),%dl
 3ac:	4d 92                	rex.WRB xchg %rax,%r10
 3ae:	9f                   	lahf   
 3af:	02 33                	add    (%rbx),%dh
 3b1:	13 02                	adc    (%rdx),%eax
 3b3:	69 13 02 39 13 9f    	imul   $0x9f133902,(%rbx),%edx
 3b9:	85 4b 9f             	test   %ecx,-0x61(%rbx)
 3bc:	9f                   	lahf   
 3bd:	3f                   	(bad)  
 3be:	ad                   	lods   %ds:(%rsi),%eax
 3bf:	9f                   	lahf   
 3c0:	9f                   	lahf   
 3c1:	3f                   	(bad)  
 3c2:	92                   	xchg   %eax,%edx
 3c3:	02 49 13             	add    0x13(%rcx),%cl
 3c6:	02 49 13             	add    0x13(%rcx),%cl
 3c9:	02 51 13             	add    0x13(%rcx),%dl
 3cc:	00 02                	add    %al,(%rdx)
 3ce:	04 02                	add    $0x2,%al
 3d0:	06                   	(bad)  
 3d1:	2e 00 02             	add    %al,%cs:(%rdx)
 3d4:	04 01                	add    $0x1,%al
 3d6:	4a 06                	rex.WX (bad) 
 3d8:	08 f3                	or     %dh,%bl
 3da:	02 3f                	add    (%rdi),%bh
 3dc:	13 00                	adc    (%rax),%eax
 3de:	02 04 01             	add    (%rcx,%rax,1),%al
 3e1:	06                   	(bad)  
 3e2:	20 06                	and    %al,(%rsi)
 3e4:	02 27                	add    (%rdi),%ah
 3e6:	13 02                	adc    (%rdx),%eax
 3e8:	3e 13 02             	adc    %ds:(%rdx),%eax
 3eb:	4c 13 86 93 02 49 13 	adc    0x13490293(%rsi),%r8
 3f2:	02 49 13             	add    0x13(%rcx),%cl
 3f5:	02 34 13             	add    (%rbx,%rdx,1),%dh
 3f8:	02 51 13             	add    0x13(%rcx),%dl
 3fb:	02 3f                	add    (%rdi),%bh
 3fd:	13 00                	adc    (%rax),%eax
 3ff:	02 04 02             	add    (%rdx,%rax,1),%al
 402:	06                   	(bad)  
 403:	2e 00 02             	add    %al,%cs:(%rdx)
 406:	04 01                	add    $0x1,%al
 408:	4a 06                	rex.WX (bad) 
 40a:	02 22                	add    (%rdx),%ah
 40c:	13 4b 02             	adc    0x2(%rbx),%ecx
 40f:	3e 13 02             	adc    %ds:(%rdx),%eax
 412:	4c 13 85 83 02 8f 01 	adc    0x18f0283(%rbp),%r8
 419:	13 02                	adc    (%rdx),%eax
 41b:	2b 14 9f             	sub    (%rdi,%rbx,4),%edx
 41e:	02 36                	add    (%rsi),%dh
 420:	13 02                	adc    (%rdx),%eax
 422:	33 14 08             	xor    (%rax,%rcx,1),%edx
 425:	91                   	xchg   %eax,%ecx
 426:	02 51 14             	add    0x14(%rcx),%dl
 429:	3f                   	(bad)  
 42a:	83 02 8f             	addl   $0xffffff8f,(%rdx)
 42d:	01 13                	add    %edx,(%rbx)
 42f:	02 2b                	add    (%rbx),%ch
 431:	14 9f                	adc    $0x9f,%al
 433:	02 36                	add    (%rsi),%dh
 435:	13 02                	adc    (%rdx),%eax
 437:	33 14 08             	xor    (%rax,%rcx,1),%edx
 43a:	91                   	xchg   %eax,%ecx
 43b:	02 51 14             	add    0x14(%rcx),%dl
 43e:	40 59                	rex pop %rcx
 440:	02 51 13             	add    0x13(%rcx),%dl
 443:	02 5c 13 02          	add    0x2(%rbx,%rdx,1),%bl
 447:	57                   	push   %rdi
 448:	13 4d 92             	adc    -0x6e(%rbp),%ecx
 44b:	02 5a 13             	add    0x13(%rdx),%bl
 44e:	02 36                	add    (%rsi),%dh
 450:	13 00                	adc    (%rax),%eax
 452:	02 04 02             	add    (%rdx,%rax,1),%al
 455:	06                   	(bad)  
 456:	2e 00 02             	add    %al,%cs:(%rdx)
 459:	04 01                	add    $0x1,%al
 45b:	02 49 12             	add    0x12(%rcx),%cl
 45e:	06                   	(bad)  
 45f:	c9                   	leaveq 
 460:	02 51 13             	add    0x13(%rcx),%dl
 463:	85 ad c9 08 2f 08    	test   %ebp,0x82f08c9(%rbp)
 469:	13 5b 91             	adc    -0x6f(%rbx),%ebx
 46c:	02 3c 13             	add    (%rbx,%rdx,1),%bh
 46f:	02 36                	add    (%rsi),%dh
 471:	13 02                	adc    (%rdx),%eax
 473:	3e 13 a0 02 8a 01 16 	adc    %ds:0x16018a02(%rax),%esp
 47a:	a0 02 8a 01 14 08 3d 	movabs 0x2a03d0814018a02,%al
 481:	a0 02 
 483:	8a 01                	mov    (%rcx),%al
 485:	14 08                	adc    $0x8,%al
 487:	f4                   	hlt    
 488:	02 51 13             	add    0x13(%rcx),%dl
 48b:	08 13                	or     %dl,(%rbx)
 48d:	02 36                	add    (%rsi),%dh
 48f:	14 02                	adc    $0x2,%al
 491:	34 13                	xor    $0x13,%al
 493:	02 40 13             	add    0x13(%rax),%al
 496:	30 4b 03             	xor    %cl,0x3(%rbx)
 499:	6c                   	insb   (%dx),%es:(%rdi)
 49a:	e4 03                	in     $0x3,%al
 49c:	17                   	(bad)  
 49d:	58                   	pop    %rax
 49e:	77 90                	ja     430 <_init-0x728>
 4a0:	08 bc 02 85 01 13 59 	or     %bh,0x59130185(%rdx,%rax,1)
 4a7:	02 51 13             	add    0x13(%rcx),%dl
 4aa:	02 ba 01 13 02 ba    	add    -0x45fdecff(%rdx),%bh
 4b0:	01 13                	add    %edx,(%rbx)
 4b2:	02 93 01 13 9f 02    	add    0x29f1301(%rbx),%dl
 4b8:	38 14 02             	cmp    %dl,(%rdx,%rax,1)
 4bb:	69 13 02 6c 13 02    	imul   $0x2136c02,(%rbx),%edx
 4c1:	51                   	push   %rcx
 4c2:	13 2f                	adc    (%rdi),%ebp
 4c4:	03 74 4a 03          	add    0x3(%rdx,%rcx,2),%esi
 4c8:	0e                   	(bad)  
 4c9:	08 3c 03             	or     %bh,(%rbx,%rax,1)
 4cc:	09 74 4d bc          	or     %esi,-0x44(%rbp,%rcx,2)
 4d0:	e5 b0                	in     $0xb0,%eax
 4d2:	08 31                	or     %dh,(%rcx)
 4d4:	00 02                	add    %al,(%rdx)
 4d6:	04 01                	add    $0x1,%al
 4d8:	06                   	(bad)  
 4d9:	ba 06 d7 e6 75       	mov    $0x75e6d706,%edx
 4de:	32 08                	xor    (%rax),%cl
 4e0:	3c ea                	cmp    $0xea,%al
 4e2:	a0 9f 9f 02 33 13 e6 	movabs 0xa0d7e61333029f9f,%al
 4e9:	d7 a0 
 4eb:	75 08                	jne    4f5 <_init-0x663>
 4ed:	75 02                	jne    4f1 <_init-0x667>
 4ef:	8a 01                	mov    (%rcx),%al
 4f1:	13 08                	adc    (%rax),%ecx
 4f3:	4b a0 08 4b 77 c9 75 	rex.WXB movabs 0x8750875c9774b08,%al
 4fa:	08 75 08 
 4fd:	14 00                	adc    $0x0,%al
 4ff:	02 04 01             	add    (%rcx,%rax,1),%al
 502:	06                   	(bad)  
 503:	90                   	nop
 504:	06                   	(bad)  
 505:	02 35 13 02 3b 13    	add    0x133b0213(%rip),%dh        # 133b071e <_end+0x12d9f37e>
 50b:	02 9f 01 13 02 3c    	add    0x3c021301(%rdi),%bl
 511:	14 59                	adc    $0x59,%al
 513:	02 a5 01 13 02 a7    	add    -0x58fdecff(%rbp),%ah
 519:	01 13                	add    %edx,(%rbx)
 51b:	02 9f 01 13 02 ad    	add    -0x52fdecff(%rdi),%bl
 521:	01 13                	add    %edx,(%rbx)
 523:	02 73 13             	add    0x13(%rbx),%dh
 526:	02 73 13             	add    0x13(%rbx),%dh
 529:	02 71 13             	add    0x13(%rcx),%dh
 52c:	02 73 13             	add    0x13(%rbx),%dh
 52f:	02 fa                	add    %dl,%bh
 531:	01 13                	add    %edx,(%rbx)
 533:	02 fa                	add    %dl,%bh
 535:	01 13                	add    %edx,(%rbx)
 537:	02 6c 13 02          	add    0x2(%rbx,%rdx,1),%ch
 53b:	6c                   	insb   (%dx),%es:(%rdi)
 53c:	13 02                	adc    (%rdx),%eax
 53e:	72 13                	jb     553 <_init-0x605>
 540:	02 75 13             	add    0x13(%rbp),%dh
 543:	02 75 13             	add    0x13(%rbp),%dh
 546:	02 74 13 02          	add    0x2(%rbx,%rdx,1),%dh
 54a:	3a 13                	cmp    (%rbx),%dl
 54c:	02 3a                	add    (%rdx),%bh
 54e:	13 02                	adc    (%rdx),%eax
 550:	3a 13                	cmp    (%rbx),%dl
 552:	02 3a                	add    (%rdx),%bh
 554:	13 02                	adc    (%rdx),%eax
 556:	39 13                	cmp    %edx,(%rbx)
 558:	02 72 13             	add    0x13(%rdx),%dh
 55b:	02 39                	add    (%rcx),%bh
 55d:	13 02                	adc    (%rdx),%eax
 55f:	f4                   	hlt    
 560:	01 13                	add    %edx,(%rbx)
 562:	02 bd 01 13 02 f3    	add    -0xcfdecff(%rbp),%bh
 568:	01 13                	add    %edx,(%rbx)
 56a:	02 38                	add    (%rax),%bh
 56c:	13 02                	adc    (%rdx),%eax
 56e:	f9                   	stc    
 56f:	01 13                	add    %edx,(%rbx)
 571:	02 8d 01 13 02 38    	add    0x38021301(%rbp),%cl
 577:	13 02                	adc    (%rdx),%eax
 579:	f9                   	stc    
 57a:	01 13                	add    %edx,(%rbx)
 57c:	02 8d 01 13 02 3a    	add    0x3a021301(%rbp),%cl
 582:	13 02                	adc    (%rdx),%eax
 584:	3a 13                	cmp    (%rbx),%dl
 586:	02 3a                	add    (%rdx),%bh
 588:	13 02                	adc    (%rdx),%eax
 58a:	3a 13                	cmp    (%rbx),%dl
 58c:	02 f5                	add    %ch,%dh
 58e:	01 13                	add    %edx,(%rbx)
 590:	02 f5                	add    %ch,%dh
 592:	01 13                	add    %edx,(%rbx)
 594:	02 f5                	add    %ch,%dh
 596:	01 13                	add    %edx,(%rbx)
 598:	02 fa                	add    %dl,%bh
 59a:	01 13                	add    %edx,(%rbx)
 59c:	02 fc                	add    %ah,%bh
 59e:	01 13                	add    %edx,(%rbx)
 5a0:	02 fa                	add    %dl,%bh
 5a2:	01 13                	add    %edx,(%rbx)
 5a4:	02 fc                	add    %ah,%bh
 5a6:	01 13                	add    %edx,(%rbx)
 5a8:	00 02                	add    %al,(%rdx)
 5aa:	04 01                	add    $0x1,%al
 5ac:	06                   	(bad)  
 5ad:	02 67 12             	add    0x12(%rdi),%ah
 5b0:	00 02                	add    %al,(%rdx)
 5b2:	04 02                	add    $0x2,%al
 5b4:	02 35 12 00 02 04    	add    0x4020012(%rip),%dh        # 40205cc <_end+0x3a0f22c>
 5ba:	04 02                	add    $0x2,%al
 5bc:	30 12                	xor    %dl,(%rdx)
 5be:	06                   	(bad)  
 5bf:	02 89 01 13 00 02    	add    0x2001301(%rcx),%cl
 5c5:	04 01                	add    $0x1,%al
 5c7:	06                   	(bad)  
 5c8:	02 67 12             	add    0x12(%rdi),%ah
 5cb:	00 02                	add    %al,(%rdx)
 5cd:	04 02                	add    $0x2,%al
 5cf:	02 35 12 00 02 04    	add    0x4020012(%rip),%dh        # 40205e7 <_end+0x3a0f247>
 5d5:	04 02                	add    $0x2,%al
 5d7:	30 12                	xor    %dl,(%rdx)
 5d9:	06                   	(bad)  
 5da:	02 89 01 13 00 02    	add    0x2001301(%rcx),%cl
 5e0:	04 01                	add    $0x1,%al
 5e2:	06                   	(bad)  
 5e3:	02 69 12             	add    0x12(%rcx),%ch
 5e6:	00 02                	add    %al,(%rdx)
 5e8:	04 02                	add    $0x2,%al
 5ea:	02 35 12 00 02 04    	add    0x4020012(%rip),%dh        # 4020602 <_end+0x3a0f262>
 5f0:	04 02                	add    $0x2,%al
 5f2:	30 12                	xor    %dl,(%rdx)
 5f4:	06                   	(bad)  
 5f5:	02 89 01 13 00 02    	add    0x2001301(%rcx),%cl
 5fb:	04 01                	add    $0x1,%al
 5fd:	06                   	(bad)  
 5fe:	02 69 12             	add    0x12(%rcx),%ch
 601:	00 02                	add    %al,(%rdx)
 603:	04 02                	add    $0x2,%al
 605:	02 35 12 00 02 04    	add    0x4020012(%rip),%dh        # 402061d <_end+0x3a0f27d>
 60b:	04 02                	add    $0x2,%al
 60d:	30 12                	xor    %dl,(%rdx)
 60f:	06                   	(bad)  
 610:	02 89 01 13 02 bf    	add    -0x40fdecff(%rcx),%cl
 616:	01 13                	add    %edx,(%rbx)
 618:	02 bf 01 13 02 6b    	add    0x6b021301(%rdi),%bh
 61e:	14 02                	adc    $0x2,%al
 620:	c1 01 14             	roll   $0x14,(%rcx)
 623:	02 a4 01 13 02 51 13 	add    0x13510213(%rcx,%rax,1),%ah
 62a:	59                   	pop    %rcx
 62b:	02 38                	add    (%rax),%bh
 62d:	13 02                	adc    (%rdx),%eax
 62f:	71 13                	jno    644 <_init-0x514>
 631:	02 51 13             	add    0x13(%rcx),%dl
 634:	02 6f 13             	add    0x13(%rdi),%ch
 637:	02 3c 19             	add    (%rcx,%rbx,1),%bh
 63a:	53                   	push   %rbx
 63b:	02 6e 13             	add    0x13(%rsi),%ch
 63e:	02 51 13             	add    0x13(%rcx),%dl
 641:	02 6f 13             	add    0x13(%rdi),%ch
 644:	02 3c 14             	add    (%rsp,%rdx,1),%bh
 647:	5a                   	pop    %rdx
 648:	02 71 13             	add    0x13(%rcx),%dh
 64b:	02 39                	add    (%rcx),%bh
 64d:	11 3d 02 35 11 a0    	adc    %edi,-0x5feecafe(%rip)        # ffffffffa0113b55 <_end+0xffffffff9fb027b5>
 653:	02 43 13             	add    0x13(%rbx),%al
 656:	02 93 01 14 02 38    	add    0x38021401(%rbx),%dl
 65c:	13 bb 00 02 04 01    	adc    0x1040200(%rbx),%edi
 662:	02 3e                	add    (%rsi),%bh
 664:	11 00                	adc    %eax,(%rax)
 666:	02 04 02             	add    (%rdx,%rax,1),%al
 669:	06                   	(bad)  
 66a:	02 3e                	add    (%rsi),%bh
 66c:	12 06                	adc    (%rsi),%al
 66e:	08 24 bb             	or     %ah,(%rbx,%rdi,4)
 671:	00 02                	add    %al,(%rdx)
 673:	04 01                	add    $0x1,%al
 675:	02 3e                	add    (%rsi),%bh
 677:	11 00                	adc    %eax,(%rax)
 679:	02 04 02             	add    (%rdx,%rax,1),%al
 67c:	06                   	(bad)  
 67d:	02 37                	add    (%rdi),%dh
 67f:	12 06                	adc    (%rsi),%al
 681:	93                   	xchg   %eax,%ebx
 682:	02 8f 01 13 02 56    	add    0x56021301(%rdi),%cl
 688:	13 02                	adc    (%rdx),%eax
 68a:	56                   	push   %rsi
 68b:	13 02                	adc    (%rdx),%eax
 68d:	93                   	xchg   %eax,%ebx
 68e:	01 13                	add    %edx,(%rbx)
 690:	02 93 01 13 02 c8    	add    -0x37fdecff(%rbx),%dl
 696:	01 13                	add    %edx,(%rbx)
 698:	02 c6                	add    %dh,%al
 69a:	01 13                	add    %edx,(%rbx)
 69c:	02 c4                	add    %ah,%al
 69e:	01 13                	add    %edx,(%rbx)
 6a0:	02 c5                	add    %ch,%al
 6a2:	01 13                	add    %edx,(%rbx)
 6a4:	02 ca                	add    %dl,%cl
 6a6:	01 13                	add    %edx,(%rbx)
 6a8:	02 ca                	add    %dl,%cl
 6aa:	01 13                	add    %edx,(%rbx)
 6ac:	02 38                	add    (%rax),%bh
 6ae:	13 02                	adc    (%rdx),%eax
 6b0:	6b 13 02             	imul   $0x2,(%rbx),%edx
 6b3:	43 13 02             	rex.XB adc (%r10),%eax
 6b6:	cb                   	lret   
 6b7:	01 13                	add    %edx,(%rbx)
 6b9:	02 3e                	add    (%rsi),%bh
 6bb:	14 02                	adc    $0x2,%al
 6bd:	51                   	push   %rcx
 6be:	13 02                	adc    (%rdx),%eax
 6c0:	3e 15 02 36 13 02    	ds adc $0x2133602,%eax
 6c6:	43 15 02 6d 13 02    	rex.XB adc $0x2136d02,%eax
 6cc:	56                   	push   %rsi
 6cd:	15 02 36 13 02       	adc    $0x2133602,%eax
 6d2:	44 18 02             	sbb    %r8b,(%rdx)
 6d5:	3c 13                	cmp    $0x13,%al
 6d7:	02 36                	add    (%rsi),%dh
 6d9:	13 5d d3             	adc    -0x2d(%rbp),%ebx
 6dc:	3f                   	(bad)  
 6dd:	d3 3f                	sarl   %cl,(%rdi)
 6df:	d3 4d d3             	rorl   %cl,-0x2d(%rbp)
 6e2:	93                   	xchg   %eax,%ebx
 6e3:	d3 93 d3 93 d3 4d    	rcll   %cl,0x4dd393d3(%rbx)
 6e9:	d3 4d d3             	rorl   %cl,-0x2d(%rbp)
 6ec:	4d d3 4d d3          	rex.WRB rorq %cl,-0x2d(%r13)
 6f0:	3f                   	(bad)  
 6f1:	d3 4d d3             	rorl   %cl,-0x2d(%rbp)
 6f4:	4d d3 93 d3 4d 9b 02 	rex.WRB rclq %cl,0x29b4dd3(%r11)
 6fb:	5a                   	pop    %rdx
 6fc:	16                   	(bad)  
 6fd:	00 02                	add    %al,(%rdx)
 6ff:	04 03                	add    $0x3,%al
 701:	06                   	(bad)  
 702:	ba 00 02 04 01       	mov    $0x1040200,%edx
 707:	74 00                	je     709 <_init-0x44f>
 709:	02 04 04             	add    (%rsp,%rax,1),%al
 70c:	08 20                	or     %ah,(%rax)
 70e:	00 02                	add    %al,(%rdx)
 710:	04 04                	add    $0x4,%al
 712:	06                   	(bad)  
 713:	75 00                	jne    715 <_init-0x443>
 715:	02 04 04             	add    (%rsp,%rax,1),%al
 718:	02 3f                	add    (%rdi),%bh
 71a:	13 e5                	adc    %ebp,%esp
 71c:	00 02                	add    %al,(%rdx)
 71e:	04 01                	add    $0x1,%al
 720:	06                   	(bad)  
 721:	08 66 06             	or     %ah,0x6(%rsi)
 724:	02 38                	add    (%rax),%bh
 726:	13 00                	adc    (%rax),%eax
 728:	02 04 02             	add    (%rdx,%rax,1),%al
 72b:	02 43 10             	add    0x10(%rbx),%al
 72e:	00 02                	add    %al,(%rdx)
 730:	04 01                	add    $0x1,%al
 732:	06                   	(bad)  
 733:	74 06                	je     73b <_init-0x41d>
 735:	cb                   	lret   
 736:	02 36                	add    (%rsi),%dh
 738:	15 03 72 e4 03       	adc    $0x3e47203,%eax
 73d:	0f c8                	bswap  %eax
 73f:	02 51 14             	add    0x14(%rcx),%dl
 742:	59                   	pop    %rcx
 743:	02 38                	add    (%rax),%bh
 745:	13 02                	adc    (%rdx),%eax
 747:	bf 01 13 02 ba       	mov    $0xba021301,%edi
 74c:	01 13                	add    %edx,(%rbx)
 74e:	02 bf 01 14 02 ba    	add    -0x45fdebff(%rdi),%bh
 754:	01 13                	add    %edx,(%rbx)
 756:	02 bf 01 14 02 9b    	add    -0x64fdebff(%rdi),%bh
 75c:	01 13                	add    %edx,(%rbx)
 75e:	02 96 01 13 bb 02    	add    0x2bb1301(%rsi),%dl
 764:	51                   	push   %rcx
 765:	13 02                	adc    (%rdx),%eax
 767:	a2 01 13 02 96 01 13 	movabs %al,0x5002130196021301
 76e:	02 50 
 770:	13 02                	adc    (%rdx),%eax
 772:	96                   	xchg   %eax,%esi
 773:	01 13                	add    %edx,(%rbx)
 775:	02 4b 13             	add    0x13(%rbx),%cl
 778:	bb 02 4c 13 02       	mov    $0x2134c02,%ebx
 77d:	4b 13 02             	rex.WXB adc (%r10),%rax
 780:	56                   	push   %rsi
 781:	14 02                	adc    $0x2,%al
 783:	96                   	xchg   %eax,%esi
 784:	01 14 02             	add    %edx,(%rdx,%rax,1)
 787:	a2 01 14 9f 02 8d 01 	movabs %al,0x213018d029f1401
 78e:	13 02 
 790:	90                   	nop
 791:	01 13                	add    %edx,(%rbx)
 793:	02 90 01 13 02 ad    	add    -0x52fdecff(%rax),%dl
 799:	01 13                	add    %edx,(%rbx)
 79b:	02 6f 14             	add    0x14(%rdi),%ch
 79e:	02 ab 01 14 02 37    	add    0x37021401(%rbx),%ch
 7a4:	13 02                	adc    (%rdx),%eax
 7a6:	56                   	push   %rsi
 7a7:	14 e5                	adc    $0xe5,%al
 7a9:	e5 02                	in     $0x2,%eax
 7ab:	71 15                	jno    7c2 <_init-0x396>
 7ad:	02 b3 01 13 02 5f    	add    0x5f021301(%rbx),%dh
 7b3:	13 02                	adc    (%rdx),%eax
 7b5:	8f 01                	popq   (%rcx)
 7b7:	13 02                	adc    (%rdx),%eax
 7b9:	8c 01                	mov    %es,(%rcx)
 7bb:	17                   	(bad)  
 7bc:	75 02                	jne    7c0 <_init-0x398>
 7be:	3b 13                	cmp    (%rbx),%edx
 7c0:	02 3d 13 08 75 02    	add    0x2750813(%rip),%bh        # 2750fd9 <_end+0x213fc39>
 7c6:	2c 13                	sub    $0x13,%al
 7c8:	02 36                	add    (%rsi),%dh
 7ca:	13 02                	adc    (%rdx),%eax
 7cc:	51                   	push   %rcx
 7cd:	13 5a 02             	adc    0x2(%rdx),%ebx
 7d0:	3b 13                	cmp    (%rbx),%edx
 7d2:	75 02                	jne    7d6 <_init-0x382>
 7d4:	85 01                	test   %eax,(%rcx)
 7d6:	13 5b 00             	adc    0x0(%rbx),%ebx
 7d9:	02 04 01             	add    (%rcx,%rax,1),%al
 7dc:	06                   	(bad)  
 7dd:	02 34 12             	add    (%rdx,%rdx,1),%dh
 7e0:	06                   	(bad)  
 7e1:	02 56 13             	add    0x13(%rsi),%dl
 7e4:	00 02                	add    %al,(%rdx)
 7e6:	04 01                	add    $0x1,%al
 7e8:	06                   	(bad)  
 7e9:	02 27                	add    (%rdi),%ah
 7eb:	12 06                	adc    (%rsi),%al
 7ed:	2f                   	(bad)  
 7ee:	02 36                	add    (%rsi),%dh
 7f0:	13 02                	adc    (%rdx),%eax
 7f2:	29 13                	sub    %edx,(%rbx)
 7f4:	02 3b                	add    (%rbx),%bh
 7f6:	13 02                	adc    (%rdx),%eax
 7f8:	3c 13                	cmp    $0x13,%al
 7fa:	02 39                	add    (%rcx),%bh
 7fc:	13 08                	adc    (%rax),%ecx
 7fe:	75 75                	jne    875 <_init-0x2e3>
 800:	5c                   	pop    %rsp
 801:	08 92 00 02 04 01    	or     %dl,0x1040200(%rdx)
 807:	06                   	(bad)  
 808:	02 34 12             	add    (%rdx,%rdx,1),%dh
 80b:	00 02                	add    %al,(%rdx)
 80d:	04 02                	add    $0x2,%al
 80f:	90                   	nop
 810:	00 02                	add    %al,(%rdx)
 812:	04 04                	add    $0x4,%al
 814:	08 4a 06             	or     %cl,0x6(%rdx)
 817:	02 56 14             	add    0x14(%rsi),%dl
 81a:	e5 e5                	in     $0xe5,%eax
 81c:	e5 e5                	in     $0xe5,%eax
 81e:	e5 e5                	in     $0xe5,%eax
 820:	e5 e5                	in     $0xe5,%eax
 822:	e7 02                	out    %eax,$0x2
 824:	99                   	cltd   
 825:	01 13                	add    %edx,(%rbx)
 827:	02 96 01 13 02 75    	add    0x75021301(%rsi),%dl
 82d:	13 02                	adc    (%rdx),%eax
 82f:	72 14                	jb     845 <_init-0x313>
 831:	02 63 13             	add    0x13(%rbx),%ah
 834:	02 56 15             	add    0x15(%rsi),%dl
 837:	02 a0 01 13 02 56    	add    0x56021301(%rax),%ah
 83d:	16                   	(bad)  
 83e:	02 36                	add    (%rsi),%dh
 840:	13 08                	adc    (%rax),%ecx
 842:	f3 00 02             	repz add %al,(%rdx)
 845:	04 03                	add    $0x3,%al
 847:	06                   	(bad)  
 848:	ba 00 02 04 01       	mov    $0x1040200,%edx
 84d:	74 06                	je     855 <_init-0x303>
 84f:	08 21                	or     %ah,(%rcx)
 851:	02 3f                	add    (%rdi),%bh
 853:	14 02                	adc    $0x2,%al
 855:	56                   	push   %rsi
 856:	15 02 4b 14 02       	adc    $0x2144b02,%eax
 85b:	56                   	push   %rsi
 85c:	14 02                	adc    $0x2,%al
 85e:	51                   	push   %rcx
 85f:	13 02                	adc    (%rdx),%eax
 861:	73 13                	jae    876 <_init-0x2e2>
 863:	02 3d 13 02 ac 01    	add    0x1ac0213(%rip),%bh        # 1ac0a7c <_end+0x14af6dc>
 869:	13 00                	adc    (%rax),%eax
 86b:	02 04 01             	add    (%rcx,%rax,1),%al
 86e:	06                   	(bad)  
 86f:	08 ba 06 bb 02 e8    	or     %bh,-0x17fd44fa(%rdx)
 875:	01 13                	add    %edx,(%rbx)
 877:	00 02                	add    %al,(%rdx)
 879:	04 01                	add    $0x1,%al
 87b:	06                   	(bad)  
 87c:	08 ba 06 bd a0 02    	or     %bh,0x2a0bd06(%rdx)
 882:	74 13                	je     897 <_init-0x2c1>
 884:	02 56 16             	add    0x16(%rsi),%dl
 887:	02 6f 13             	add    0x13(%rdi),%ch
 88a:	02 c3                	add    %bl,%al
 88c:	01 13                	add    %edx,(%rbx)
 88e:	00 02                	add    %al,(%rdx)
 890:	04 01                	add    $0x1,%al
 892:	06                   	(bad)  
 893:	d6                   	(bad)  
 894:	06                   	(bad)  
 895:	02 45 15             	add    0x15(%rbp),%al
 898:	02 68 13             	add    0x13(%rax),%ch
 89b:	5c                   	pop    %rsp
 89c:	e7 02                	out    %eax,$0x2
 89e:	c0 01 13             	rolb   $0x13,(%rcx)
 8a1:	00 02                	add    %al,(%rdx)
 8a3:	04 01                	add    $0x1,%al
 8a5:	06                   	(bad)  
 8a6:	02 24 12             	add    (%rdx,%rdx,1),%ah
 8a9:	06                   	(bad)  
 8aa:	02 48 13             	add    0x13(%rax),%cl
 8ad:	02 51 13             	add    0x13(%rcx),%dl
 8b0:	02 2b                	add    (%rbx),%ch
 8b2:	13 02                	adc    (%rdx),%eax
 8b4:	3c 13                	cmp    $0x13,%al
 8b6:	02 48 14             	add    0x14(%rax),%cl
 8b9:	02 75 14             	add    0x14(%rbp),%dh
 8bc:	02 55 13             	add    0x13(%rbp),%dl
 8bf:	02 51 14             	add    0x14(%rcx),%dl
 8c2:	5b                   	pop    %rbx
 8c3:	08 e7                	or     %ah,%bh
 8c5:	5a                   	pop    %rdx
 8c6:	02 c3                	add    %bl,%al
 8c8:	01 13                	add    %edx,(%rbx)
 8ca:	02 36                	add    (%rsi),%dh
 8cc:	13 02                	adc    (%rdx),%eax
 8ce:	2b 13                	sub    (%rbx),%edx
 8d0:	02 28                	add    (%rax),%ch
 8d2:	13 02                	adc    (%rdx),%eax
 8d4:	3e 18 02             	sbb    %al,%ds:(%rdx)
 8d7:	36 13 02             	adc    %ss:(%rdx),%eax
 8da:	39 13                	cmp    %edx,(%rbx)
 8dc:	02 39                	add    (%rcx),%bh
 8de:	13 a0 c9 59 00 02    	adc    0x20059c9(%rax),%esp
 8e4:	04 01                	add    $0x1,%al
 8e6:	9f                   	lahf   
 8e7:	00 02                	add    %al,(%rdx)
 8e9:	04 01                	add    $0x1,%al
 8eb:	02 38                	add    (%rax),%bh
 8ed:	13 91 c9 00 02 04    	adc    0x40200c9(%rcx),%edx
 8f3:	01 06                	add    %eax,(%rsi)
 8f5:	08 ac 06 bb 03 7a 74 	or     %ch,0x747a03bb(%rsi,%rax,1)
 8fc:	03 0a                	add    (%rdx),%ecx
 8fe:	08 ac 08 13 bb 2f 02 	or     %ch,0x22fbb13(%rax,%rcx,1)
 905:	39 11                	cmp    %edx,(%rcx)
 907:	08 d8                	or     %bl,%al
 909:	c9                   	leaveq 
 90a:	08 75 03             	or     %dh,0x3(%rbp)
 90d:	74 90                	je     89f <_init-0x2b9>
 90f:	03 0f                	add    (%rdi),%ecx
 911:	20 9f 08 75 00 02    	and    %bl,0x2007508(%rdi)
 917:	04 01                	add    $0x1,%al
 919:	06                   	(bad)  
 91a:	90                   	nop
 91b:	00 02                	add    %al,(%rdx)
 91d:	04 01                	add    $0x1,%al
 91f:	06                   	(bad)  
 920:	02 37                	add    (%rdi),%dh
 922:	13 00                	adc    (%rax),%eax
 924:	02 04 02             	add    (%rdx,%rax,1),%al
 927:	06                   	(bad)  
 928:	2e 00 02             	add    %al,%cs:(%rdx)
 92b:	04 01                	add    $0x1,%al
 92d:	74 06                	je     935 <_init-0x223>
 92f:	02 32                	add    (%rdx),%dh
 931:	13 02                	adc    (%rdx),%eax
 933:	37                   	(bad)  
 934:	13 02                	adc    (%rdx),%eax
 936:	3c 13                	cmp    $0x13,%al
 938:	02 39                	add    (%rcx),%bh
 93a:	14 5a                	adc    $0x5a,%al
 93c:	02 c3                	add    %bl,%al
 93e:	01 13                	add    %edx,(%rbx)
 940:	02 36                	add    (%rsi),%dh
 942:	13 02                	adc    (%rdx),%eax
 944:	31 13                	xor    %edx,(%rbx)
 946:	02 3e                	add    (%rsi),%bh
 948:	13 02                	adc    (%rdx),%eax
 94a:	c0 01 13             	rolb   $0x13,(%rcx)
 94d:	02 39                	add    (%rcx),%bh
 94f:	13 02                	adc    (%rdx),%eax
 951:	3c 13                	cmp    $0x13,%al
 953:	02 3c 13             	add    (%rbx,%rdx,1),%bh
 956:	02 3e                	add    (%rsi),%bh
 958:	14 02                	adc    $0x2,%al
 95a:	8a 01                	mov    (%rcx),%al
 95c:	13 02                	adc    (%rdx),%eax
 95e:	53                   	push   %rbx
 95f:	13 02                	adc    (%rdx),%eax
 961:	3e 14 02             	ds adc $0x2,%al
 964:	8a 01                	mov    (%rcx),%al
 966:	13 02                	adc    (%rdx),%eax
 968:	8a 01                	mov    (%rcx),%al
 96a:	13 9f 02 3e 13 02    	adc    0x2133e02(%rdi),%ebx
 970:	8a 01                	mov    (%rcx),%al
 972:	14 02                	adc    $0x2,%al
 974:	22 13                	and    (%rbx),%dl
 976:	02 53 13             	add    0x13(%rbx),%dl
 979:	02 37                	add    (%rdi),%dh
 97b:	13 02                	adc    (%rdx),%eax
 97d:	34 13                	xor    $0x13,%al
 97f:	02 23                	add    (%rbx),%ah
 981:	13 5a e5             	adc    -0x1b(%rdx),%ebx
 984:	e5 e5                	in     $0xe5,%eax
 986:	08 83 e5 e5 e5 e6    	or     %al,-0x191a1a1b(%rbx)
 98c:	02 74 13 02          	add    0x2(%rbx,%rdx,1),%dh
 990:	56                   	push   %rsi
 991:	16                   	(bad)  
 992:	02 36                	add    (%rsi),%dh
 994:	14 02                	adc    $0x2,%al
 996:	51                   	push   %rcx
 997:	13 bb 00 02 04 02    	adc    0x2040200(%rbx),%edi
 99d:	08 e3                	or     %ah,%bl
 99f:	00 02                	add    %al,(%rdx)
 9a1:	04 01                	add    $0x1,%al
 9a3:	06                   	(bad)  
 9a4:	74 06                	je     9ac <_init-0x1ac>
 9a6:	ad                   	lods   %ds:(%rsi),%eax
 9a7:	23 00                	and    (%rax),%eax
 9a9:	02 04 01             	add    (%rcx,%rax,1),%al
 9ac:	06                   	(bad)  
 9ad:	90                   	nop
 9ae:	00 02                	add    %al,(%rdx)
 9b0:	04 01                	add    $0x1,%al
 9b2:	06                   	(bad)  
 9b3:	03 09                	add    (%rcx),%ecx
 9b5:	02 34 01             	add    (%rcx,%rax,1),%dh
 9b8:	03 79 58             	add    0x58(%rcx),%edi
 9bb:	08 4b 02             	or     %cl,0x2(%rbx)
 9be:	34 13                	xor    $0x13,%al
 9c0:	02 34 13             	add    (%rbx,%rdx,1),%dh
 9c3:	02 40 16             	add    0x16(%rax),%al
 9c6:	5b                   	pop    %rbx
 9c7:	02 39                	add    (%rcx),%bh
 9c9:	13 02                	adc    (%rdx),%eax
 9cb:	33 13                	xor    (%rbx),%edx
 9cd:	08 e5                	or     %ah,%ch
 9cf:	02 34 13             	add    (%rbx,%rdx,1),%dh
 9d2:	5b                   	pop    %rbx
 9d3:	02 4c 13 02          	add    0x2(%rbx,%rdx,1),%cl
 9d7:	4d 14 03             	rex.WRB adc $0x3,%al
 9da:	09 58 02             	or     %ebx,0x2(%rax)
 9dd:	51                   	push   %rcx
 9de:	13 5a 02             	adc    0x2(%rdx),%ebx
 9e1:	37                   	(bad)  
 9e2:	13 02                	adc    (%rdx),%eax
 9e4:	95                   	xchg   %eax,%ebp
 9e5:	01 15 08 9f 03 d3    	add    %edx,-0x2cfc60f8(%rip)        # ffffffffd303a8f3 <_end+0xffffffffd2a29553>
 9eb:	7d 2e                	jge    a1b <_init-0x13d>
 9ed:	03 fc                	add    %esp,%edi
 9ef:	00 3c 3e             	add    %bh,(%rsi,%rdi,1)
 9f2:	03 b3 01 20 08 2f    	add    0x2f082001(%rbx),%esi
 9f8:	08 4b 03             	or     %cl,0x3(%rbx)
 9fb:	ab                   	stos   %eax,%es:(%rdi)
 9fc:	7c 74                	jl     a72 <_init-0xe6>
 9fe:	03 dd                	add    %ebp,%ebx
 a00:	03 58 92             	add    -0x6e(%rax),%ebx
 a03:	02 27                	add    (%rdi),%ah
 a05:	13 02                	adc    (%rdx),%eax
 a07:	27                   	(bad)  
 a08:	13 02                	adc    (%rdx),%eax
 a0a:	27                   	(bad)  
 a0b:	13 02                	adc    (%rdx),%eax
 a0d:	3d 13 02 3f 13       	cmp    $0x133f0213,%eax
 a12:	02 2a                	add    (%rdx),%ch
 a14:	13 02                	adc    (%rdx),%eax
 a16:	3f                   	(bad)  
 a17:	13 02                	adc    (%rdx),%eax
 a19:	27                   	(bad)  
 a1a:	13 02                	adc    (%rdx),%eax
 a1c:	27                   	(bad)  
 a1d:	13 02                	adc    (%rdx),%eax
 a1f:	27                   	(bad)  
 a20:	13 02                	adc    (%rdx),%eax
 a22:	30 13                	xor    %dl,(%rbx)
 a24:	02 2b                	add    (%rbx),%ch
 a26:	14 08                	adc    $0x8,%al
 a28:	13 08                	adc    (%rax),%ecx
 a2a:	13 08                	adc    (%rax),%ecx
 a2c:	13 08                	adc    (%rax),%ecx
 a2e:	13 08                	adc    (%rax),%ecx
 a30:	13 08                	adc    (%rax),%ecx
 a32:	13 08                	adc    (%rax),%ecx
 a34:	13 08                	adc    (%rax),%ecx
 a36:	13 08                	adc    (%rax),%ecx
 a38:	13 08                	adc    (%rax),%ecx
 a3a:	13 08                	adc    (%rax),%ecx
 a3c:	13 08                	adc    (%rax),%ecx
 a3e:	13 08                	adc    (%rax),%ecx
 a40:	13 08                	adc    (%rax),%ecx
 a42:	13 08                	adc    (%rax),%ecx
 a44:	13 08                	adc    (%rax),%ecx
 a46:	13 08                	adc    (%rax),%ecx
 a48:	13 08                	adc    (%rax),%ecx
 a4a:	13 08                	adc    (%rax),%ecx
 a4c:	13 08                	adc    (%rax),%ecx
 a4e:	13 08                	adc    (%rax),%ecx
 a50:	13 08                	adc    (%rax),%ecx
 a52:	13 08                	adc    (%rax),%ecx
 a54:	13 08                	adc    (%rax),%ecx
 a56:	13 08                	adc    (%rax),%ecx
 a58:	13 08                	adc    (%rax),%ecx
 a5a:	13 08                	adc    (%rax),%ecx
 a5c:	13 08                	adc    (%rax),%ecx
 a5e:	13 08                	adc    (%rax),%ecx
 a60:	13 08                	adc    (%rax),%ecx
 a62:	13 08                	adc    (%rax),%ecx
 a64:	13 08                	adc    (%rax),%ecx
 a66:	13 08                	adc    (%rax),%ecx
 a68:	13 08                	adc    (%rax),%ecx
 a6a:	13 08                	adc    (%rax),%ecx
 a6c:	13 08                	adc    (%rax),%ecx
 a6e:	13 08                	adc    (%rax),%ecx
 a70:	13 08                	adc    (%rax),%ecx
 a72:	13 08                	adc    (%rax),%ecx
 a74:	13 08                	adc    (%rax),%ecx
 a76:	13 08                	adc    (%rax),%ecx
 a78:	13 08                	adc    (%rax),%ecx
 a7a:	13 08                	adc    (%rax),%ecx
 a7c:	13 08                	adc    (%rax),%ecx
 a7e:	13 08                	adc    (%rax),%ecx
 a80:	13 08                	adc    (%rax),%ecx
 a82:	13 08                	adc    (%rax),%ecx
 a84:	13 08                	adc    (%rax),%ecx
 a86:	13 08                	adc    (%rax),%ecx
 a88:	13 08                	adc    (%rax),%ecx
 a8a:	13 08                	adc    (%rax),%ecx
 a8c:	13 08                	adc    (%rax),%ecx
 a8e:	13 08                	adc    (%rax),%ecx
 a90:	13 08                	adc    (%rax),%ecx
 a92:	13 08                	adc    (%rax),%ecx
 a94:	13 08                	adc    (%rax),%ecx
 a96:	13 08                	adc    (%rax),%ecx
 a98:	13 08                	adc    (%rax),%ecx
 a9a:	13 08                	adc    (%rax),%ecx
 a9c:	13 08                	adc    (%rax),%ecx
 a9e:	13 08                	adc    (%rax),%ecx
 aa0:	13 08                	adc    (%rax),%ecx
 aa2:	13 08                	adc    (%rax),%ecx
 aa4:	13 08                	adc    (%rax),%ecx
 aa6:	13 08                	adc    (%rax),%ecx
 aa8:	13 08                	adc    (%rax),%ecx
 aaa:	13 08                	adc    (%rax),%ecx
 aac:	13 08                	adc    (%rax),%ecx
 aae:	13 08                	adc    (%rax),%ecx
 ab0:	14 08                	adc    $0x8,%al
 ab2:	13 08                	adc    (%rax),%ecx
 ab4:	13 08                	adc    (%rax),%ecx
 ab6:	13 08                	adc    (%rax),%ecx
 ab8:	13 08                	adc    (%rax),%ecx
 aba:	13 08                	adc    (%rax),%ecx
 abc:	13 08                	adc    (%rax),%ecx
 abe:	13 08                	adc    (%rax),%ecx
 ac0:	13 08                	adc    (%rax),%ecx
 ac2:	13 08                	adc    (%rax),%ecx
 ac4:	13 08                	adc    (%rax),%ecx
 ac6:	13 08                	adc    (%rax),%ecx
 ac8:	13 08                	adc    (%rax),%ecx
 aca:	13 08                	adc    (%rax),%ecx
 acc:	13 08                	adc    (%rax),%ecx
 ace:	13 08                	adc    (%rax),%ecx
 ad0:	13 08                	adc    (%rax),%ecx
 ad2:	13 08                	adc    (%rax),%ecx
 ad4:	13 08                	adc    (%rax),%ecx
 ad6:	13 08                	adc    (%rax),%ecx
 ad8:	13 08                	adc    (%rax),%ecx
 ada:	13 08                	adc    (%rax),%ecx
 adc:	13 08                	adc    (%rax),%ecx
 ade:	13 08                	adc    (%rax),%ecx
 ae0:	13 08                	adc    (%rax),%ecx
 ae2:	13 08                	adc    (%rax),%ecx
 ae4:	13 08                	adc    (%rax),%ecx
 ae6:	13 08                	adc    (%rax),%ecx
 ae8:	13 08                	adc    (%rax),%ecx
 aea:	13 08                	adc    (%rax),%ecx
 aec:	13 08                	adc    (%rax),%ecx
 aee:	13 08                	adc    (%rax),%ecx
 af0:	13 08                	adc    (%rax),%ecx
 af2:	13 08                	adc    (%rax),%ecx
 af4:	13 08                	adc    (%rax),%ecx
 af6:	13 08                	adc    (%rax),%ecx
 af8:	13 08                	adc    (%rax),%ecx
 afa:	13 08                	adc    (%rax),%ecx
 afc:	13 08                	adc    (%rax),%ecx
 afe:	13 08                	adc    (%rax),%ecx
 b00:	13 08                	adc    (%rax),%ecx
 b02:	13 08                	adc    (%rax),%ecx
 b04:	13 08                	adc    (%rax),%ecx
 b06:	13 08                	adc    (%rax),%ecx
 b08:	13 08                	adc    (%rax),%ecx
 b0a:	9f                   	lahf   
 b0b:	08 9f 08 9f 08 13    	or     %bl,0x13089f08(%rdi)
 b11:	08 13                	or     %dl,(%rbx)
 b13:	08 13                	or     %dl,(%rbx)
 b15:	08 13                	or     %dl,(%rbx)
 b17:	08 14 08             	or     %dl,(%rax,%rcx,1)
 b1a:	9f                   	lahf   
 b1b:	08 9f 08 9f 08 9f    	or     %bl,-0x60f760f8(%rdi)
 b21:	08 9f 08 9f 08 9f    	or     %bl,-0x60f760f8(%rdi)
 b27:	08 9f 08 a0 08 13    	or     %bl,0x1308a008(%rdi)
 b2d:	08 14 08             	or     %dl,(%rax,%rcx,1)
 b30:	13 08                	adc    (%rax),%ecx
 b32:	14 08                	adc    $0x8,%al
 b34:	13 08                	adc    (%rax),%ecx
 b36:	14 08                	adc    $0x8,%al
 b38:	13 08                	adc    (%rax),%ecx
 b3a:	14 08                	adc    $0x8,%al
 b3c:	13 08                	adc    (%rax),%ecx
 b3e:	13 08                	adc    (%rax),%ecx
 b40:	14 08                	adc    $0x8,%al
 b42:	13 08                	adc    (%rax),%ecx
 b44:	13 08                	adc    (%rax),%ecx
 b46:	13 08                	adc    (%rax),%ecx
 b48:	13 08                	adc    (%rax),%ecx
 b4a:	14 02                	adc    $0x2,%al
 b4c:	6b 14 08 13          	imul   $0x13,(%rax,%rcx,1),%edx
 b50:	02 26                	add    (%rsi),%ah
 b52:	13 02                	adc    (%rdx),%eax
 b54:	28 13                	sub    %dl,(%rbx)
 b56:	08 13                	or     %dl,(%rbx)
 b58:	08 13                	or     %dl,(%rbx)
 b5a:	02 28                	add    (%rax),%ch
 b5c:	13 02                	adc    (%rdx),%eax
 b5e:	26 13 02             	adc    %es:(%rdx),%eax
 b61:	26 13 02             	adc    %es:(%rdx),%eax
 b64:	28 13                	sub    %dl,(%rbx)
 b66:	02 28                	add    (%rax),%ch
 b68:	13 02                	adc    (%rdx),%eax
 b6a:	28 13                	sub    %dl,(%rbx)
 b6c:	02 28                	add    (%rax),%ch
 b6e:	13 02                	adc    (%rdx),%eax
 b70:	28 13                	sub    %dl,(%rbx)
 b72:	08 13                	or     %dl,(%rbx)
 b74:	08 13                	or     %dl,(%rbx)
 b76:	08 13                	or     %dl,(%rbx)
 b78:	08 15 08 13 08 13    	or     %dl,0x13081308(%rip)        # 13081e86 <_end+0x12a70ae6>
 b7e:	08 13                	or     %dl,(%rbx)
 b80:	08 13                	or     %dl,(%rbx)
 b82:	08 14 02             	or     %dl,(%rdx,%rax,1)
 b85:	2b 14 02             	sub    (%rdx,%rax,1),%edx
 b88:	36 14 bb             	ss adc $0xbb,%al
 b8b:	bb bb bb bc 02       	mov    $0x2bcbbbb,%ebx
 b90:	28 14 02             	sub    %dl,(%rdx,%rax,1)
 b93:	28 13                	sub    %dl,(%rbx)
 b95:	02 28                	add    (%rax),%ch
 b97:	14 08                	adc    $0x8,%al
 b99:	59                   	pop    %rcx
 b9a:	a0 02 22 13 bc 02 2c 	movabs 0x2132c02bc132202,%al
 ba1:	13 02 
 ba3:	38 13                	cmp    %dl,(%rbx)
 ba5:	02 38                	add    (%rax),%bh
 ba7:	13 02                	adc    (%rdx),%eax
 ba9:	2e 13 02             	adc    %cs:(%rdx),%eax
 bac:	2e 15 bb 9f 9f a4    	cs adc $0xa49f9fbb,%eax
 bb2:	bc bb bb bb bb       	mov    $0xbbbbbbbb,%esp
 bb7:	bb bb bb a1 bd       	mov    $0xbda1bbbb,%ebx
 bbc:	02 62 13             	add    0x13(%rdx),%ah
 bbf:	02 84 01 13 02 4c 13 	add    0x134c0213(%rcx,%rax,1),%al
 bc6:	02 4c 13 02          	add    0x2(%rbx,%rdx,1),%cl
 bca:	70 13                	jo     bdf <write@plt+0xf>
 bcc:	9f                   	lahf   
 bcd:	a0 bf 9f bb 9f 08 75 	movabs 0x240275089fbb9fbf,%al
 bd4:	02 24 
 bd6:	13 9f 02 46 13 9f    	adc    -0x60ecb9fe(%rdi),%ebx
 bdc:	08 75 bb             	or     %dh,-0x45(%rbp)
 bdf:	02 54 13 02          	add    0x2(%rbx,%rdx,1),%dl
 be3:	2e 13 02             	adc    %cs:(%rdx),%eax
 be6:	22 13                	and    (%rbx),%dl
 be8:	08 75 9f             	or     %dh,-0x61(%rbp)
 beb:	a0 bd 02 2e 13 a0 bf 	movabs 0x2202bfa0132e02bd,%al
 bf2:	02 22 
 bf4:	13 02                	adc    (%rdx),%eax
 bf6:	24 14                	and    $0x14,%al
 bf8:	02 8a 01 13 02 94    	add    -0x6bfdecff(%rdx),%cl
 bfe:	01 13                	add    %edx,(%rbx)
 c00:	02 94 01 13 02 24 13 	add    0x13240213(%rcx,%rax,1),%dl
 c07:	02 5a 13             	add    0x13(%rdx),%bl
 c0a:	9f                   	lahf   
 c0b:	02 44 13 9f          	add    -0x61(%rbx,%rdx,1),%al
 c0f:	bb 02 66 13 02       	mov    $0x2136602,%ebx
 c14:	46 13 02             	rex.RX adc (%rdx),%r8d
 c17:	5a                   	pop    %rdx
 c18:	13 9f 02 5a 13 02    	adc    0x2135a02(%rdi),%ebx
 c1e:	2e 13 a0 bb 02 30 13 	adc    %cs:0x133002bb(%rax),%esp
 c25:	08 75 a0             	or     %dh,-0x60(%rbp)
 c28:	bb 08 75 08 e5       	mov    $0xe5087508,%ebx
 c2d:	9f                   	lahf   
 c2e:	a0 bc bb a0 02 24 13 	movabs 0x2202132402a0bbbc,%al
 c35:	02 22 
 c37:	13 02                	adc    (%rdx),%eax
 c39:	2e 13 9f 02 4e 13 9f 	adc    %cs:-0x60ecb1fe(%rdi),%ebx
 c40:	a2 08 59 9f a0 bb 02 	movabs %al,0x132202bba09f5908
 c47:	22 13 
 c49:	9f                   	lahf   
 c4a:	bc bb 9f 08 75       	mov    $0x75089fbb,%esp
 c4f:	02 2e                	add    (%rsi),%ch
 c51:	13 08                	adc    (%rax),%ecx
 c53:	59                   	pop    %rcx
 c54:	08 59 9f             	or     %bl,-0x61(%rcx)
 c57:	08 59 a0             	or     %bl,-0x60(%rcx)
 c5a:	bb 9f bb a0 bc       	mov    $0xbca0bb9f,%ebx
 c5f:	bb 08 75 a1 bc       	mov    $0xbca17508,%ebx
 c64:	bb 08 75 bb a0       	mov    $0xa0bb7508,%ebx
 c69:	bb 08 75 a0 bb       	mov    $0xbba07508,%ebx
 c6e:	08 75 bc             	or     %dh,-0x44(%rbp)
 c71:	bb a0 08 59 08       	mov    $0x85908a0,%ebx
 c76:	75 a0                	jne    c18 <__stack_chk_fail@plt+0x8>
 c78:	08 5a 08             	or     %bl,0x8(%rdx)
 c7b:	75 08                	jne    c85 <memcmp@plt+0x5>
 c7d:	75 02                	jne    c81 <memcmp@plt+0x1>
 c7f:	3c 13                	cmp    $0x13,%al
 c81:	a0 bb bc 08 59 08 75 	movabs 0x3c0275085908bcbb,%al
 c88:	02 3c 
 c8a:	14 a0                	adc    $0xa0,%al
 c8c:	bb 02 24 13 08       	mov    $0x8132402,%ebx
 c91:	e5 9f                	in     $0x9f,%eax
 c93:	a0 08 59 08 75 a4 08 	movabs 0x25908a475085908,%al
 c9a:	59 02 
 c9c:	22 13                	and    (%rbx),%dl
 c9e:	a0 08 59 02 22 13 a0 	movabs 0x8bba01322025908,%al
 ca5:	bb 08 
 ca7:	5a                   	pop    %rdx
 ca8:	a0 bb 08 59 a0 bd 02 	movabs 0x133a02bda05908bb,%al
 caf:	3a 13 
 cb1:	02 30                	add    (%rax),%dh
 cb3:	13 a0 bb 02 38 13    	adc    0x133802bb(%rax),%esp
 cb9:	a0 bc bb 02 46 13 a0 	movabs 0x2bca0134602bbbc,%al
 cc0:	bc 02 
 cc2:	3c 13                	cmp    $0x13,%al
 cc4:	08 59 08             	or     %bl,0x8(%rcx)
 cc7:	e5 02                	in     $0x2,%eax
 cc9:	2c 13                	sub    $0x13,%al
 ccb:	a0 bb 02 44 13 a0 bb 	movabs 0x3602bba0134402bb,%al
 cd2:	02 36 
 cd4:	13 a0 bb 02 24 13    	adc    0x132402bb(%rax),%esp
 cda:	a0 bb 02 48 13 a0 bb 	movabs 0x5402bba0134802bb,%al
 ce1:	02 54 
 ce3:	13 bb a0 bb 02 24    	adc    0x2402bba0(%rbx),%edi
 ce9:	13 a0 bb 08 59 a0    	adc    -0x5fa6f745(%rax),%esp
 cef:	bb 08 75 a0 bb       	mov    $0xbba07508,%ebx
 cf4:	08 75 a2             	or     %dh,-0x5e(%rbp)
 cf7:	02 24 13             	add    (%rbx,%rdx,1),%ah
 cfa:	a1 bb 02 22 13 a0 bb 	movabs 0xa0bbbba0132202bb,%eax
 d01:	bb a0 
 d03:	bb 02 24 13 08       	mov    $0x8132402,%ebx
 d08:	75 02                	jne    d0c <usleep@plt+0xc>
 d0a:	22 13                	and    (%rbx),%dl
 d0c:	bb 02 2e 13 9f       	mov    $0x9f132e02,%ebx
 d11:	08 e5                	or     %ah,%ch
 d13:	9f                   	lahf   
 d14:	08 75 a0             	or     %dh,-0x60(%rbp)
 d17:	08 59 9f             	or     %bl,-0x61(%rcx)
 d1a:	02 2e                	add    (%rsi),%ch
 d1c:	13 02                	adc    (%rdx),%eax
 d1e:	24 13                	and    $0x13,%al
 d20:	02 22                	add    (%rdx),%ah
 d22:	13 08                	adc    (%rax),%ecx
 d24:	c9                   	leaveq 
 d25:	9f                   	lahf   
 d26:	a0 bb 08 59 08 59 9f 	movabs 0xbba09f59085908bb,%al
 d2d:	a0 bb 
 d2f:	08 59 02             	or     %bl,0x2(%rcx)
 d32:	66 15 9f a0          	adc    $0xa09f,%ax
 d36:	bb 02 30 13 a0       	mov    $0xa0133002,%ebx
 d3b:	bb 02 22 13 9f       	mov    $0x9f132202,%ebx
 d40:	a0 02 26 13 02 2b 14 	movabs 0x2f02142b02132602,%al
 d47:	02 2f 
 d49:	13 bb 02 3a 15 bb    	adc    -0x44eac5fe(%rbx),%edi
 d4f:	bb 08 75 02 24       	mov    $0x24027508,%ebx
 d54:	14 bc                	adc    $0xbc,%al
 d56:	08 76 08             	or     %dh,0x8(%rsi)
 d59:	77 08                	ja     d63 <deregister_tm_clones+0x13>
 d5b:	75 08                	jne    d65 <deregister_tm_clones+0x15>
 d5d:	75 08                	jne    d67 <deregister_tm_clones+0x17>
 d5f:	76 08                	jbe    d69 <deregister_tm_clones+0x19>
 d61:	77 08                	ja     d6b <deregister_tm_clones+0x1b>
 d63:	75 08                	jne    d6d <deregister_tm_clones+0x1d>
 d65:	75 08                	jne    d6f <deregister_tm_clones+0x1f>
 d67:	75 08                	jne    d71 <deregister_tm_clones+0x21>
 d69:	76 08                	jbe    d73 <deregister_tm_clones+0x23>
 d6b:	76 08                	jbe    d75 <deregister_tm_clones+0x25>
 d6d:	76 08                	jbe    d77 <deregister_tm_clones+0x27>
 d6f:	75 08                	jne    d79 <deregister_tm_clones+0x29>
 d71:	75 08                	jne    d7b <deregister_tm_clones+0x2b>
 d73:	76 08                	jbe    d7d <deregister_tm_clones+0x2d>
 d75:	75 08                	jne    d7f <deregister_tm_clones+0x2f>
 d77:	75 08                	jne    d81 <deregister_tm_clones+0x31>
 d79:	75 08                	jne    d83 <deregister_tm_clones+0x33>
 d7b:	75 08                	jne    d85 <deregister_tm_clones+0x35>
 d7d:	75 08                	jne    d87 <deregister_tm_clones+0x37>
 d7f:	75 02                	jne    d83 <deregister_tm_clones+0x33>
 d81:	29 13                	sub    %edx,(%rbx)
 d83:	85 83 d7 00 02 04    	test   %eax,0x40200d7(%rbx)
 d89:	03 91 00 02 04 03    	add    0x3040200(%rcx),%edx
 d8f:	08 ab 00 02 04 01    	or     %ch,0x1040200(%rbx)
 d95:	06                   	(bad)  
 d96:	4a 06                	rex.WX (bad) 
 d98:	69 9f bb bb 9f 02 03 	imul   $0x1010003,0x29fbbbb(%rdi),%ebx
 d9f:	00 01 01 
 da2:	5b                   	pop    %rbx
 da3:	01 00                	add    %eax,(%rax)
 da5:	00 02                	add    %al,(%rdx)
 da7:	00 05 01 00 00 01    	add    %al,0x1000001(%rip)        # 1000dae <_end+0x9efa0e>
 dad:	01 fb                	add    %edi,%ebx
 daf:	0e                   	(bad)  
 db0:	0d 00 01 01 01       	or     $0x1010100,%eax
 db5:	01 00                	add    %eax,(%rax)
 db7:	00 00                	add    %al,(%rax)
 db9:	01 00                	add    %eax,(%rax)
 dbb:	00 01                	add    %al,(%rcx)
 dbd:	2f                   	(bad)  
 dbe:	75 73                	jne    e33 <main+0x9>
 dc0:	72 2f                	jb     df1 <__do_global_dtors_aux+0x11>
 dc2:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 dc9:	2f                   	(bad)  
 dca:	78 38                	js     e04 <__do_global_dtors_aux+0x24>
 dcc:	36 5f                	ss pop %rdi
 dce:	36 34 2d             	ss xor $0x2d,%al
 dd1:	6c                   	insb   (%dx),%es:(%rdi)
 dd2:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
 dd9:	75 2f                	jne    e0a <__do_global_dtors_aux+0x2a>
 ddb:	62                   	(bad)  
 ddc:	69 74 73 00 2f 75 73 	imul   $0x7273752f,0x0(%rbx,%rsi,2),%esi
 de3:	72 
 de4:	2f                   	(bad)  
 de5:	6c                   	insb   (%dx),%es:(%rdi)
 de6:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
 ded:	78 38                	js     e27 <frame_dummy+0x7>
 def:	36 5f                	ss pop %rdi
 df1:	36 34 2d             	ss xor $0x2d,%al
 df4:	6c                   	insb   (%dx),%es:(%rdi)
 df5:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
 dfc:	75 2f                	jne    e2d <main+0x3>
 dfe:	37                   	(bad)  
 dff:	2f                   	(bad)  
 e00:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 e07:	00 2f                	add    %ch,(%rdi)
 e09:	75 73                	jne    e7e <v2r+0x11>
 e0b:	72 2f                	jb     e3c <main+0x12>
 e0d:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 e14:	00 2f                	add    %ch,(%rdi)
 e16:	75 73                	jne    e8b <v2r+0x1e>
 e18:	72 2f                	jb     e49 <main+0x1f>
 e1a:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 e21:	2f                   	(bad)  
 e22:	61                   	(bad)  
 e23:	73 6d                	jae    e92 <v2r+0x25>
 e25:	2d 67 65 6e 65       	sub    $0x656e6567,%eax
 e2a:	72 69                	jb     e95 <v2r+0x28>
 e2c:	63 00                	movslq (%rax),%eax
 e2e:	00 69 6f             	add    %ch,0x6f(%rcx)
 e31:	76 66                	jbe    e99 <make_name+0x2>
 e33:	6d                   	insl   (%dx),%es:(%rdi)
 e34:	2e 63 00             	movslq %cs:(%rax),%eax
 e37:	00 00                	add    %al,(%rax)
 e39:	00 74 79 70          	add    %dh,0x70(%rcx,%rdi,2)
 e3d:	65 73 2e             	gs jae e6e <v2r+0x1>
 e40:	68 00 01 00 00       	pushq  $0x100
 e45:	74 65                	je     eac <make_name+0x15>
 e47:	72 6d                	jb     eb6 <make_name+0x1f>
 e49:	69 6f 73 2e 68 00 01 	imul   $0x100682e,0x73(%rdi),%ebp
 e50:	00 00                	add    %al,(%rax)
 e52:	73 74                	jae    ec8 <make_name+0x31>
 e54:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x200
 e5b:	02 
 e5c:	00 00                	add    %al,(%rax)
 e5e:	6c                   	insb   (%dx),%es:(%rdi)
 e5f:	69 62 69 6f 2e 68 00 	imul   $0x682e6f,0x69(%rdx),%esp
 e66:	01 00                	add    %eax,(%rax)
 e68:	00 73 74             	add    %dh,0x74(%rbx)
 e6b:	64 69 6f 2e 68 00 03 	imul   $0x30068,%fs:0x2e(%rdi),%ebp
 e72:	00 
{
 e73:	00 73 79             	add    %dh,0x79(%rbx)
	return &  (DescriptorTable [ VAddr >> (32-4) ])[VAddr];
 e76:	73 5f                	jae    ed7 <make_name+0x40>
 e78:	65 72 72             	gs jb  eed <make_name+0x56>
 e7b:	6c                   	insb   (%dx),%es:(%rdi)
 e7c:	69 73 74 2e 68 00 01 	imul   $0x100682e,0x74(%rbx),%esi
 e83:	00 00                	add    %al,(%rax)
 e85:	69 6e 74 2d 6c 6c 36 	imul   $0x366c6c2d,0x74(%rsi),%ebp
 e8c:	34 2e                	xor    $0x2e,%al
 e8e:	68 00 04 00 00       	pushq  $0x400
 e93:	75 6e                	jne    f03 <umul+0xb>
}
 e95:	69 73 74 64 2e 68 00 	imul   $0x682e64,0x74(%rbx),%esi
{
 e9c:	03 00                	add    (%rax),%eax
 e9e:	00 67 65             	add    %ah,0x65(%rdi)
 ea1:	74 6f                	je     f12 <umul+0x1a>
 for(i=0;i<len && i<256;i++) {
 ea3:	70 74                	jo     f19 <umul+0x21>
 ea5:	5f                   	pop    %rdi
 ea6:	63 6f 72             	movslq 0x72(%rdi),%ebp
 ea9:	65 2e 68 00 01 00 00 	gs cs pushq $0x100
    filename[i]=addr[i];
 eb0:	00 00                	add    %al,(%rax)
 eb2:	09 02                	or     %eax,(%rdx)
 eb4:	b5 d1                	mov    $0xd1,%ch
 eb6:	00 00                	add    %al,(%rax)
 eb8:	00 00                	add    %al,(%rax)
 eba:	00 00                	add    %al,(%rax)
 ebc:	03 0b                	add    (%rbx),%ecx
 ebe:	01 08                	add    %ecx,(%rax)
 ec0:	30 08                	xor    %cl,(%rax)
 ec2:	4b 31 4a 59          	rex.WXB xor %rcx,0x59(%r10)
 ec6:	33 08                	xor    (%rax),%ecx
 ec8:	12 e9                	adc    %cl,%ch
 eca:	08 67 02             	or     %ah,0x2(%rdi)
 for(i=0;i<len && i<256;i++) {
 ecd:	44 13 91 91 91 4b 4b 	adc    0x4b4b9191(%rcx),%r10d
 ed4:	08 5a 02             	or     %bl,0x2(%rdx)
 ed7:	22 14 08             	and    (%rax,%rcx,1),%dl
 eda:	84 9f 08 5a 08 12    	test   %bl,0x12085a08(%rdi)
 filename[i]='\0';
 ee0:	e8 08 68 02 44       	callq  440276ed <_end+0x43a1634d>
 ee5:	13 92 08 5a 08 ca    	adc    -0x35f7a5f8(%rdx),%edx
 eeb:	08 84 67 08 5c d6 e5 	or     %al,-0x1a29a3f8(%rdi,%riz,2)
 return 1;
 ef2:	67 00 02             	add    %al,(%edx)
 ef5:	04 01                	add    $0x1,%al
}
 ef7:	06                   	(bad)  
{
 ef8:	20 06                	and    %al,(%rsi)
 efa:	08 9f 02 17 00 01    	or     %bl,0x1001702(%rdi)
 f00:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	47                   	rex.RXB
       1:	4e 55                	rex.WRX push %rbp
       3:	20 43 31             	and    %al,0x31(%rbx)
       6:	31 20                	xor    %esp,(%rax)
       8:	37                   	(bad)  
       9:	2e 33 2e             	xor    %cs:(%rsi),%ebp
       c:	30 20                	xor    %ah,(%rax)
       e:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
      13:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
      19:	72 69                	jb     84 <_init-0xad4>
      1b:	63 20                	movslq (%rax),%esp
      1d:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
      22:	68 3d 78 38 36       	pushq  $0x3638783d
      27:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
      2c:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 61747399 <_end+0x61135ff9>
      33:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
      36:	70 72                	jo     aa <_init-0xaae>
      38:	6f                   	outsl  %ds:(%rsi),(%dx)
      39:	74 65                	je     a0 <_init-0xab8>
      3b:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
      3f:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
      44:	6e                   	outsb  %ds:(%rsi),(%dx)
      45:	67 00 73 74          	add    %dh,0x74(%ebx)
      49:	72 69                	jb     b4 <_init-0xaa4>
      4b:	6e                   	outsb  %ds:(%rsi),(%dx)
      4c:	67 73 00             	addr32 jae 4f <_init-0xb09>
      4f:	76 66                	jbe    b7 <_init-0xaa1>
      51:	6d                   	insl   (%dx),%es:(%rdi)
      52:	5f                   	pop    %rdi
      53:	64 6f                	outsl  %fs:(%rsi),(%dx)
      55:	00 4c 69 6e          	add    %cl,0x6e(%rcx,%rbp,2)
      59:	75 78                	jne    d3 <_init-0xa85>
      5b:	53                   	push   %rbx
      5c:	50                   	push   %rax
      5d:	46 33 32             	rex.RX xor (%rdx),%r14d
      60:	56                   	push   %rsi
      61:	4d                   	rex.WRB
      62:	2e 63 00             	movslq %cs:(%rax),%eax
      65:	6d                   	insl   (%dx),%es:(%rdi)
      66:	61                   	(bad)  
      67:	69 6e 00 2f 6d 65 64 	imul   $0x64656d2f,0x0(%rsi),%ebp
      6e:	69 61 2f 6d 61 6b 2f 	imul   $0x2f6b616d,0x2f(%rcx),%esp
      75:	32 32                	xor    (%rdx),%dh
      77:	61                   	(bad)  
      78:	63 63 30             	movslq 0x30(%rbx),%esp
      7b:	65 61                	gs (bad) 
      7d:	2d 37 61 35 63       	sub    $0x63356137,%eax
      82:	2d 34 62 30 37       	sub    $0x37306234,%eax
      87:	2d 38 61 35 30       	sub    $0x30356138,%eax
      8c:	2d 61 62 36 38       	sub    $0x38366261,%eax
      91:	65 37                	gs (bad) 
      93:	32 64 61 36          	xor    0x36(%rcx,%riz,2),%ah
      97:	33 62 2f             	xor    0x2f(%rdx),%esp
      9a:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
      9f:	6d                   	insl   (%dx),%es:(%rdi)
      a0:	61                   	(bad)  
      a1:	6b 2f 77             	imul   $0x77,(%rdi),%ebp
      a4:	6f                   	outsl  %ds:(%rsi),(%dx)
      a5:	72 6b                	jb     112 <_init-0xa46>
      a7:	73 70                	jae    119 <_init-0xa3f>
      a9:	61                   	(bad)  
      aa:	63 65 2f             	movslq 0x2f(%rbp),%esp
      ad:	73 74                	jae    123 <_init-0xa35>
      af:	6d                   	insl   (%dx),%es:(%rdi)
      b0:	33 32                	xor    (%rdx),%esi
      b2:	66 31 30             	xor    %si,(%rax)
      b5:	33 63 62             	xor    0x62(%rbx),%esp
      b8:	74 36                	je     f0 <_init-0xa68>
      ba:	5f                   	pop    %rdi
      bb:	64 65 62             	fs gs (bad) 
      be:	75 67                	jne    127 <_init-0xa31>
      c0:	5f                   	pop    %rdi
      c1:	66 6f                	outsw  %ds:(%rsi),(%dx)
      c3:	72 74                	jb     139 <_init-0xa1f>
      c5:	68 2f 56 46 6f       	pushq  $0x6f46562f
      ca:	72 74                	jb     140 <_init-0xa18>
      cc:	68 4d 00 73 77       	pushq  $0x7773004d
      d1:	5f                   	pop    %rdi
      d2:	32 73 77             	xor    0x77(%rbx),%dh
      d5:	61                   	(bad)  
      d6:	70 00                	jo     d8 <_init-0xa80>
      d8:	72 6c                	jb     146 <_init-0xa12>
      da:	5f                   	pop    %rdi
      db:	73 74                	jae    151 <_init-0xa07>
      dd:	61                   	(bad)  
      de:	72 74                	jb     154 <_init-0xa04>
      e0:	75 70                	jne    152 <_init-0xa06>
      e2:	5f                   	pop    %rdi
      e3:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
      e8:	4b                   	rex.WXB
      e9:	45 59                	rex.RB pop %r9
      eb:	4d                   	rex.WRB
      ec:	41 50                	push   %r8
      ee:	5f                   	pop    %rdi
      ef:	45                   	rex.RB
      f0:	4e 54                	rex.WRX push %rsp
      f2:	52                   	push   %rdx
      f3:	59                   	pop    %rcx
      f4:	00 73 69             	add    %dh,0x69(%rbx)
      f7:	7a 65                	jp     15e <_init-0x9fa>
      f9:	5f                   	pop    %rdi
      fa:	74 00                	je     fc <_init-0xa5c>
      fc:	73 74                	jae    172 <_init-0x9e6>
      fe:	61                   	(bad)  
      ff:	72 74                	jb     175 <_init-0x9e3>
     101:	00 73 77             	add    %dh,0x77(%rbx)
     104:	5f                   	pop    %rdi
     105:	6f                   	outsl  %ds:(%rsi),(%dx)
     106:	70 65                	jo     16d <_init-0x9eb>
     108:	6e                   	outsb  %ds:(%rsi),(%dx)
     109:	66 69 6c 65 00 73 77 	imul   $0x7773,0x0(%rbp,%riz,2),%bp
     110:	5f                   	pop    %rdi
     111:	72 47                	jb     15a <_init-0x9fe>
     113:	54                   	push   %rsp
     114:	00 72 6c             	add    %dh,0x6c(%rdx)
     117:	5f                   	pop    %rdi
     118:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     11b:	70 6c                	jo     189 <_init-0x9cf>
     11d:	65 74 69             	gs je  189 <_init-0x9cf>
     120:	6f                   	outsl  %ds:(%rsi),(%dx)
     121:	6e                   	outsb  %ds:(%rsi),(%dx)
     122:	5f                   	pop    %rdi
     123:	66 75 6e             	data16 jne 194 <_init-0x9c4>
     126:	63 5f 74             	movslq 0x74(%rdi),%ebx
     129:	00 72 6c             	add    %dh,0x6c(%rdx)
     12c:	5f                   	pop    %rdi
     12d:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     130:	70 6c                	jo     19e <_init-0x9ba>
     132:	65 74 69             	gs je  19e <_init-0x9ba>
     135:	6f                   	outsl  %ds:(%rsi),(%dx)
     136:	6e                   	outsb  %ds:(%rsi),(%dx)
     137:	5f                   	pop    %rdi
     138:	66 6f                	outsw  %ds:(%rsi),(%dx)
     13a:	75 6e                	jne    1aa <_init-0x9ae>
     13c:	64 5f                	fs pop %rdi
     13e:	71 75                	jno    1b5 <_init-0x9a3>
     140:	6f                   	outsl  %ds:(%rsi),(%dx)
     141:	74 65                	je     1a8 <_init-0x9b0>
     143:	00 73 77             	add    %dh,0x77(%rbx)
     146:	5f                   	pop    %rdi
     147:	54                   	push   %rsp
     148:	48                   	rex.W
     149:	45                   	rex.RB
     14a:	4e 00 73 77          	rex.WRX add %r14b,0x77(%rbx)
     14e:	5f                   	pop    %rdi
     14f:	6f                   	outsl  %ds:(%rsi),(%dx)
     150:	6e                   	outsb  %ds:(%rsi),(%dx)
     151:	00 73 77             	add    %dh,0x77(%rbx)
     154:	5f                   	pop    %rdi
     155:	6f                   	outsl  %ds:(%rsi),(%dx)
     156:	72 00                	jb     158 <_init-0xa00>
     158:	73 77                	jae    1d1 <_init-0x987>
     15a:	5f                   	pop    %rdi
     15b:	55                   	push   %rbp
     15c:	4e 54                	rex.WRX push %rsp
     15e:	49                   	rex.WB
     15f:	4c 00 5f 49          	rex.WR add %r11b,0x49(%rdi)
     163:	4f 5f                	rex.WRXB pop %r15
     165:	32 5f 31             	xor    0x31(%rdi),%bl
     168:	5f                   	pop    %rdi
     169:	73 74                	jae    1df <_init-0x979>
     16b:	64 65 72 72          	fs gs jb 1e1 <_init-0x977>
     16f:	5f                   	pop    %rdi
     170:	00 73 77             	add    %dh,0x77(%rbx)
     173:	5f                   	pop    %rdi
     174:	70 6f                	jo     1e5 <_init-0x973>
     176:	72 74                	jb     1ec <_init-0x96c>
     178:	00 73 77             	add    %dh,0x77(%rbx)
     17b:	5f                   	pop    %rdi
     17c:	50                   	push   %rax
     17d:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
     17f:	61                   	(bad)  
     180:	64 00 6f 43          	add    %ch,%fs:0x43(%rdi)
     184:	4f                   	rex.WRXB
     185:	4e 54                	rex.WRX push %rsp
     187:	45 58                	rex.RB pop %r8
     189:	54                   	push   %rsp
     18a:	00 72 6c             	add    %dh,0x6c(%rdx)
     18d:	5f                   	pop    %rdi
     18e:	64 6f                	outsl  %fs:(%rsi),(%dx)
     190:	6e                   	outsb  %ds:(%rsi),(%dx)
     191:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
     195:	4f 5f                	rex.WRXB pop %r15
     197:	73 61                	jae    1fa <_init-0x95e>
     199:	76 65                	jbe    200 <_init-0x958>
     19b:	5f                   	pop    %rdi
     19c:	65 6e                	outsb  %gs:(%rsi),(%dx)
     19e:	64 00 46 72          	add    %al,%fs:0x72(%rsi)
     1a2:	6f                   	outsl  %ds:(%rsi),(%dx)
     1a3:	6d                   	insl   (%dx),%es:(%rdi)
     1a4:	4e 61                	rex.WRX (bad) 
     1a6:	6d                   	insl   (%dx),%es:(%rdi)
     1a7:	65 5f                	gs pop %rdi
     1a9:	00 5f 5f             	add    %bl,0x5f(%rdi)
     1ac:	75 31                	jne    1df <_init-0x979>
     1ae:	36 00 6f 44          	add    %ch,%ss:0x44(%rdi)
     1b2:	50                   	push   %rax
     1b3:	4f                   	rex.WRXB
     1b4:	49                   	rex.WB
     1b5:	4e 54                	rex.WRX push %rsp
     1b7:	00 72 6c             	add    %dh,0x6c(%rdx)
     1ba:	5f                   	pop    %rdi
     1bb:	65 78 65             	gs js  223 <_init-0x935>
     1be:	63 75 74             	movslq 0x74(%rbp),%esi
     1c1:	69 6e 67 5f 6d 61 63 	imul   $0x63616d5f,0x67(%rsi),%ebp
     1c8:	72 6f                	jb     239 <_init-0x91f>
     1ca:	00 5f 5f             	add    %bl,0x5f(%rdi)
     1cd:	75 38                	jne    207 <_init-0x951>
     1cf:	00 2f                	add    %ch,(%rdi)
     1d1:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
     1d6:	6d                   	insl   (%dx),%es:(%rdi)
     1d7:	61                   	(bad)  
     1d8:	6b 2f 77             	imul   $0x77,(%rdi),%ebp
     1db:	6f                   	outsl  %ds:(%rsi),(%dx)
     1dc:	72 6b                	jb     249 <_init-0x90f>
     1de:	73 70                	jae    250 <_init-0x908>
     1e0:	61                   	(bad)  
     1e1:	63 65 2d             	movslq 0x2d(%rbp),%esp
     1e4:	61                   	(bad)  
     1e5:	72 6d                	jb     254 <_init-0x904>
     1e7:	2f                   	(bad)  
     1e8:	73 74                	jae    25e <_init-0x8fa>
     1ea:	6d                   	insl   (%dx),%es:(%rdi)
     1eb:	33 32                	xor    (%rdx),%esi
     1ed:	66 31 30             	xor    %si,(%rax)
     1f0:	33 63 62             	xor    0x62(%rbx),%esp
     1f3:	74 36                	je     22b <_init-0x92d>
     1f5:	5f                   	pop    %rdi
     1f6:	64 65 62             	fs gs (bad) 
     1f9:	75 67                	jne    262 <_init-0x8f6>
     1fb:	5f                   	pop    %rdi
     1fc:	66 6f                	outsw  %ds:(%rsi),(%dx)
     1fe:	72 74                	jb     274 <_init-0x8e4>
     200:	68 2f 56 46 6f       	pushq  $0x6f46562f
     205:	72 74                	jb     27b <_init-0x8dd>
     207:	68 4d 00 5f 49       	pushq  $0x495f004d
     20c:	4f 5f                	rex.WRXB pop %r15
     20e:	77 72                	ja     282 <_init-0x8d6>
     210:	69 74 65 5f 62 61 73 	imul   $0x65736162,0x5f(%rbp,%riz,2),%esi
     217:	65 
     218:	00 66 5f             	add    %ah,0x5f(%rsi)
     21b:	62                   	(bad)  
     21c:	6f                   	outsl  %ds:(%rsi),(%dx)
     21d:	6f                   	outsl  %ds:(%rsi),(%dx)
     21e:	74 5f                	je     27f <_init-0x8d9>
     220:	74 00                	je     222 <_init-0x936>
     222:	6f                   	outsl  %ds:(%rsi),(%dx)
     223:	6f                   	outsl  %ds:(%rsi),(%dx)
     224:	76 65                	jbe    28b <_init-0x8cd>
     226:	72 66                	jb     28e <_init-0x8ca>
     228:	6c                   	insb   (%dx),%es:(%rdi)
     229:	6f                   	outsl  %ds:(%rsi),(%dx)
     22a:	77 00                	ja     22c <_init-0x92c>
     22c:	73 77                	jae    2a5 <_init-0x8b3>
     22e:	5f                   	pop    %rdi
     22f:	43 63 6f 6d          	rex.XB movslq 0x6d(%r15),%ebp
     233:	70 00                	jo     235 <_init-0x923>
     235:	73 77                	jae    2ae <_init-0x8aa>
     237:	5f                   	pop    %rdi
     238:	69 6e 76 65 72 74 00 	imul   $0x747265,0x76(%rsi),%ebp
     23f:	5f                   	pop    %rdi
     240:	6c                   	insb   (%dx),%es:(%rdi)
     241:	6f                   	outsl  %ds:(%rsi),(%dx)
     242:	63 6b 00             	movslq 0x0(%rbx),%ebp
     245:	6d                   	insl   (%dx),%es:(%rdi)
     246:	61                   	(bad)  
     247:	6b 65 5f 69          	imul   $0x69,0x5f(%rbp),%esp
     24b:	6d                   	insl   (%dx),%es:(%rdi)
     24c:	61                   	(bad)  
     24d:	67 65 00 56 41       	add    %dl,%gs:0x41(%esi)
     252:	52                   	push   %rdx
     253:	49                   	rex.WB
     254:	41                   	rex.B
     255:	42                   	rex.X
     256:	4c                   	rex.WR
     257:	45 00 68 69          	add    %r13b,0x69(%r8)
     25b:	73 74                	jae    2d1 <_init-0x887>
     25d:	6f                   	outsl  %ds:(%rsi),(%dx)
     25e:	72 79                	jb     2d9 <_init-0x87f>
     260:	5f                   	pop    %rdi
     261:	6e                   	outsb  %ds:(%rsi),(%dx)
     262:	6f                   	outsl  %ds:(%rsi),(%dx)
     263:	5f                   	pop    %rdi
     264:	65 78 70             	gs js  2d7 <_init-0x881>
     267:	61                   	(bad)  
     268:	6e                   	outsb  %ds:(%rsi),(%dx)
     269:	64 5f                	fs pop %rdi
     26b:	63 68 61             	movslq 0x61(%rax),%ebp
     26e:	72 73                	jb     2e3 <_init-0x875>
     270:	00 53 45             	add    %dl,0x45(%rbx)
     273:	41 52                	push   %r10
     275:	43                   	rex.XB
     276:	48 00 6f 53          	rex.W add %bpl,0x53(%rdi)
     27a:	54                   	push   %rsp
     27b:	41 54                	push   %r12
     27d:	45 00 73 77          	add    %r14b,0x77(%r11)
     281:	5f                   	pop    %rdi
     282:	53                   	push   %rbx
     283:	51                   	push   %rcx
     284:	00 73 77             	add    %dh,0x77(%rbx)
     287:	5f                   	pop    %rdi
     288:	53                   	push   %rbx
     289:	54                   	push   %rsp
     28a:	00 5f 49             	add    %bl,0x49(%rdi)
     28d:	4f 5f                	rex.WRXB pop %r15
     28f:	73 61                	jae    2f2 <_init-0x866>
     291:	76 65                	jbe    2f8 <_init-0x860>
     293:	5f                   	pop    %rdi
     294:	62 61                	(bad)  
     296:	73 65                	jae    2fd <_init-0x85b>
     298:	00 72 6c             	add    %dh,0x6c(%rdx)
     29b:	5f                   	pop    %rdi
     29c:	65 78 70             	gs js  30f <_init-0x849>
     29f:	6c                   	insb   (%dx),%es:(%rdi)
     2a0:	69 63 69 74 5f 61 72 	imul   $0x72615f74,0x69(%rbx),%esp
     2a7:	67 00 72 6c          	add    %dh,0x6c(%edx)
     2ab:	5f                   	pop    %rdi
     2ac:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     2af:	70 6c                	jo     31d <_init-0x83b>
     2b1:	65 74 69             	gs je  31d <_init-0x83b>
     2b4:	6f                   	outsl  %ds:(%rsi),(%dx)
     2b5:	6e                   	outsb  %ds:(%rsi),(%dx)
     2b6:	5f                   	pop    %rdi
     2b7:	61                   	(bad)  
     2b8:	70 70                	jo     32a <_init-0x82e>
     2ba:	65 6e                	outsb  %gs:(%rsi),(%dx)
     2bc:	64 5f                	fs pop %rdi
     2be:	63 68 61             	movslq 0x61(%rax),%ebp
     2c1:	72 61                	jb     324 <_init-0x834>
     2c3:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
     2c7:	00 72 6c             	add    %dh,0x6c(%rdx)
     2ca:	5f                   	pop    %rdi
     2cb:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     2d2:	65 5f                	gs pop %rdi
     2d4:	64 65 71 75          	fs gs jno 34d <_init-0x80b>
     2d8:	6f                   	outsl  %ds:(%rsi),(%dx)
     2d9:	74 69                	je     344 <_init-0x814>
     2db:	6e                   	outsb  %ds:(%rsi),(%dx)
     2dc:	67 5f                	addr32 pop %rdi
     2de:	66 75 6e             	data16 jne 34f <_init-0x809>
     2e1:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     2e5:	6e                   	outsb  %ds:(%rsi),(%dx)
     2e6:	00 72 6c             	add    %dh,0x6c(%rdx)
     2e9:	5f                   	pop    %rdi
     2ea:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     2ed:	70 6c                	jo     35b <_init-0x7fd>
     2ef:	65 74 65             	gs je  357 <_init-0x801>
     2f2:	72 5f                	jb     353 <_init-0x805>
     2f4:	77 6f                	ja     365 <_init-0x7f3>
     2f6:	72 64                	jb     35c <_init-0x7fc>
     2f8:	5f                   	pop    %rdi
     2f9:	62 72 65 61 6b       	(bad)  {%k1}
     2fe:	5f                   	pop    %rdi
     2ff:	63 68 61             	movslq 0x61(%rax),%ebp
     302:	72 61                	jb     365 <_init-0x7f3>
     304:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
     308:	73 00                	jae    30a <_init-0x84e>
     30a:	6c                   	insb   (%dx),%es:(%rdi)
     30b:	69 6e 65 5f 72 65 61 	imul   $0x6165725f,0x65(%rsi),%ebp
     312:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
     316:	5f                   	pop    %rdi
     317:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     31a:	70 6c                	jo     388 <_init-0x7d0>
     31c:	65 74 69             	gs je  388 <_init-0x7d0>
     31f:	6f                   	outsl  %ds:(%rsi),(%dx)
     320:	6e                   	outsb  %ds:(%rsi),(%dx)
     321:	5f                   	pop    %rdi
     322:	71 75                	jno    399 <_init-0x7bf>
     324:	6f                   	outsl  %ds:(%rsi),(%dx)
     325:	74 65                	je     38c <_init-0x7cc>
     327:	5f                   	pop    %rdi
     328:	63 68 61             	movslq 0x61(%rax),%ebp
     32b:	72 61                	jb     38e <_init-0x7ca>
     32d:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
     331:	00 73 77             	add    %dh,0x77(%rbx)
     334:	5f                   	pop    %rdi
     335:	30 53 54             	xor    %dl,0x54(%rbx)
     338:	00 5f 63             	add    %bl,0x63(%rdi)
     33b:	68 61 69 6e 00       	pushq  $0x6e6961
     340:	5f                   	pop    %rdi
     341:	5f                   	pop    %rdi
     342:	75 33                	jne    377 <_init-0x7e1>
     344:	32 00                	xor    (%rax),%al
     346:	5f                   	pop    %rdi
     347:	63 75 72             	movslq 0x72(%rbp),%esi
     34a:	5f                   	pop    %rdi
     34b:	63 6f 6c             	movslq 0x6c(%rdi),%ebp
     34e:	75 6d                	jne    3bd <_init-0x79b>
     350:	6e                   	outsb  %ds:(%rsi),(%dx)
     351:	00 73 79             	add    %dh,0x79(%rbx)
     354:	73 5f                	jae    3b5 <_init-0x7a3>
     356:	6e                   	outsb  %ds:(%rsi),(%dx)
     357:	65 72 72             	gs jb  3cc <_init-0x78c>
     35a:	00 73 77             	add    %dh,0x77(%rbx)
     35d:	5f                   	pop    %rdi
     35e:	57                   	push   %rdi
     35f:	6c                   	insb   (%dx),%es:(%rdi)
     360:	6f                   	outsl  %ds:(%rsi),(%dx)
     361:	61                   	(bad)  
     362:	64 00 68 69          	add    %ch,%fs:0x69(%rax)
     366:	73 74                	jae    3dc <_init-0x77c>
     368:	6f                   	outsl  %ds:(%rsi),(%dx)
     369:	72 79                	jb     3e4 <_init-0x774>
     36b:	5f                   	pop    %rdi
     36c:	77 72                	ja     3e0 <_init-0x778>
     36e:	69 74 65 5f 74 69 6d 	imul   $0x656d6974,0x5f(%rbp,%riz,2),%esi
     375:	65 
     376:	73 74                	jae    3ec <_init-0x76c>
     378:	61                   	(bad)  
     379:	6d                   	insl   (%dx),%es:(%rdi)
     37a:	70 73                	jo     3ef <_init-0x769>
     37c:	00 73 77             	add    %dh,0x77(%rbx)
     37f:	5f                   	pop    %rdi
     380:	46 69 6c 65 32 65 72 	imul   $0x727265,0x32(%rbp,%r12,2),%r13d
     387:	72 00 
     389:	6f                   	outsl  %ds:(%rsi),(%dx)
     38a:	4e 54                	rex.WRX push %rsp
     38c:	49                   	rex.WB
     38d:	42 00 75 73          	rex.X add %sil,0x73(%rbp)
     391:	6c                   	insb   (%dx),%es:(%rdi)
     392:	65 65 70 00          	gs gs jo 396 <_init-0x7c2>
     396:	72 6c                	jb     404 <_init-0x754>
     398:	5f                   	pop    %rdi
     399:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     3a0:	65 5f                	gs pop %rdi
     3a2:	71 75                	jno    419 <_init-0x73f>
     3a4:	6f                   	outsl  %ds:(%rsi),(%dx)
     3a5:	74 69                	je     410 <_init-0x748>
     3a7:	6e                   	outsb  %ds:(%rsi),(%dx)
     3a8:	67 5f                	addr32 pop %rdi
     3aa:	64 65 73 69          	fs gs jae 417 <_init-0x741>
     3ae:	72 65                	jb     415 <_init-0x743>
     3b0:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     3b4:	5f                   	pop    %rdi
     3b5:	6d                   	insl   (%dx),%es:(%rdi)
     3b6:	69 6e 00 72 6c 5f 69 	imul   $0x695f6c72,0x0(%rsi),%ebp
     3bd:	6e                   	outsb  %ds:(%rsi),(%dx)
     3be:	68 69 62 69 74       	pushq  $0x74696269
     3c3:	5f                   	pop    %rdi
     3c4:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     3c7:	70 6c                	jo     435 <_init-0x723>
     3c9:	65 74 69             	gs je  435 <_init-0x723>
     3cc:	6f                   	outsl  %ds:(%rsi),(%dx)
     3cd:	6e                   	outsb  %ds:(%rsi),(%dx)
     3ce:	00 65 78             	add    %ah,0x78(%rbp)
     3d1:	69 74 00 72 6c 5f 63 	imul   $0x6f635f6c,0x72(%rax,%rax,1),%esi
     3d8:	6f 
     3d9:	6d                   	insl   (%dx),%es:(%rdi)
     3da:	70 6c                	jo     448 <_init-0x710>
     3dc:	65 74 69             	gs je  448 <_init-0x710>
     3df:	6f                   	outsl  %ds:(%rsi),(%dx)
     3e0:	6e                   	outsb  %ds:(%rsi),(%dx)
     3e1:	5f                   	pop    %rdi
     3e2:	6d                   	insl   (%dx),%es:(%rdi)
     3e3:	61                   	(bad)  
     3e4:	72 6b                	jb     451 <_init-0x707>
     3e6:	5f                   	pop    %rdi
     3e7:	73 79                	jae    462 <_init-0x6f6>
     3e9:	6d                   	insl   (%dx),%es:(%rdi)
     3ea:	6c                   	insb   (%dx),%es:(%rdi)
     3eb:	69 6e 6b 5f 64 69 72 	imul   $0x7269645f,0x6b(%rsi),%ebp
     3f2:	73 00                	jae    3f4 <_init-0x764>
     3f4:	73 77                	jae    46d <_init-0x6eb>
     3f6:	5f                   	pop    %rdi
     3f7:	66 72 65             	data16 jb 45f <_init-0x6f9>
     3fa:	65 00 6f 54          	add    %ch,%gs:0x54(%rdi)
     3fe:	54                   	push   %rsp
     3ff:	49                   	rex.WB
     400:	42 00 73 77          	rex.X add %sil,0x77(%rbx)
     404:	5f                   	pop    %rdi
     405:	46 69 6c 65 45 72 72 	imul   $0x79547272,0x45(%rbp,%r12,2),%r13d
     40c:	54 79 
     40e:	70 65                	jo     475 <_init-0x6e3>
     410:	00 73 77             	add    %dh,0x77(%rbx)
     413:	5f                   	pop    %rdi
     414:	32 72 6c             	xor    0x6c(%rdx),%dh
     417:	6f                   	outsl  %ds:(%rsi),(%dx)
     418:	61                   	(bad)  
     419:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     41d:	5f                   	pop    %rdi
     41e:	72 64                	jb     484 <_init-0x6d4>
     420:	72 6f                	jb     491 <_init-0x6c7>
     422:	70 00                	jo     424 <_init-0x734>
     424:	5f                   	pop    %rdi
     425:	49                   	rex.WB
     426:	4f 5f                	rex.WRXB pop %r15
     428:	6d                   	insl   (%dx),%es:(%rdi)
     429:	61                   	(bad)  
     42a:	72 6b                	jb     497 <_init-0x6c1>
     42c:	65 72 00             	gs jb  42f <_init-0x729>
     42f:	74 69                	je     49a <_init-0x6be>
     431:	6c                   	insb   (%dx),%es:(%rdi)
     432:	64 65 5f             	fs gs pop %rdi
     435:	65 78 70             	gs js  4a8 <_init-0x6b0>
     438:	61                   	(bad)  
     439:	6e                   	outsb  %ds:(%rsi),(%dx)
     43a:	73 69                	jae    4a5 <_init-0x6b3>
     43c:	6f                   	outsl  %ds:(%rsi),(%dx)
     43d:	6e                   	outsb  %ds:(%rsi),(%dx)
     43e:	5f                   	pop    %rdi
     43f:	66 61                	data16 (bad) 
     441:	69 6c 75 72 65 5f 68 	imul   $0x6f685f65,0x72(%rbp,%rsi,2),%ebp
     448:	6f 
     449:	6f                   	outsl  %ds:(%rsi),(%dx)
     44a:	6b 00 72             	imul   $0x72,(%rax),%eax
     44d:	6c                   	insb   (%dx),%es:(%rdi)
     44e:	5f                   	pop    %rdi
     44f:	65 78 65             	gs js  4b7 <_init-0x6a1>
     452:	63 75 74             	movslq 0x74(%rbp),%esi
     455:	69 6e 67 5f 6b 65 79 	imul   $0x79656b5f,0x67(%rsi),%ebp
     45c:	00 72 6c             	add    %dh,0x6c(%rdx)
     45f:	5f                   	pop    %rdi
     460:	70 72                	jo     4d4 <_init-0x684>
     462:	65 70 5f             	gs jo  4c4 <_init-0x694>
     465:	74 65                	je     4cc <_init-0x68c>
     467:	72 6d                	jb     4d6 <_init-0x682>
     469:	5f                   	pop    %rdi
     46a:	66 75 6e             	data16 jne 4db <_init-0x67d>
     46d:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     471:	6e                   	outsb  %ds:(%rsi),(%dx)
     472:	00 73 77             	add    %dh,0x77(%rbx)
     475:	5f                   	pop    %rdi
     476:	73 65                	jae    4dd <_init-0x67b>
     478:	74 61                	je     4db <_init-0x67d>
     47a:	6c                   	insb   (%dx),%es:(%rdi)
     47b:	61                   	(bad)  
     47c:	72 6d                	jb     4eb <_init-0x66d>
     47e:	00 65 6d             	add    %ah,0x6d(%rbp)
     481:	61                   	(bad)  
     482:	63 73 5f             	movslq 0x5f(%rbx),%esi
     485:	6d                   	insl   (%dx),%es:(%rdi)
     486:	65 74 61             	gs je  4ea <_init-0x66e>
     489:	5f                   	pop    %rdi
     48a:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     48e:	61                   	(bad)  
     48f:	70 00                	jo     491 <_init-0x6c7>
     491:	73 77                	jae    50a <_init-0x64e>
     493:	5f                   	pop    %rdi
     494:	32 72 64             	xor    0x64(%rdx),%dh
     497:	72 6f                	jb     508 <_init-0x650>
     499:	70 00                	jo     49b <_init-0x6bd>
     49b:	68 69 73 74 6f       	pushq  $0x6f747369
     4a0:	72 79                	jb     51b <_init-0x63d>
     4a2:	5f                   	pop    %rdi
     4a3:	66 69 6c 65 5f 76 65 	imul   $0x6576,0x5f(%rbp,%riz,2),%bp
     4aa:	72 73                	jb     51f <_init-0x639>
     4ac:	69 6f 6e 00 73 77 5f 	imul   $0x5f777300,0x6e(%rdi),%ebp
     4b3:	64 75 70             	fs jne 526 <_init-0x632>
     4b6:	47 54                	rex.RXB push %r12
     4b8:	72 00                	jb     4ba <_init-0x69e>
     4ba:	72 6c                	jb     528 <_init-0x630>
     4bc:	5f                   	pop    %rdi
     4bd:	75 6e                	jne    52d <_init-0x62b>
     4bf:	64 6f                	outsl  %fs:(%rsi),(%dx)
     4c1:	5f                   	pop    %rdi
     4c2:	6c                   	insb   (%dx),%es:(%rdi)
     4c3:	69 73 74 00 73 77 5f 	imul   $0x5f777300,0x74(%rbx),%esi
     4ca:	32 64 69 76          	xor    0x76(%rcx,%rbp,2),%ah
     4ce:	00 5f 49             	add    %bl,0x49(%rdi)
     4d1:	4f 5f                	rex.WRXB pop %r15
     4d3:	46                   	rex.RX
     4d4:	49                   	rex.WB
     4d5:	4c                   	rex.WR
     4d6:	45 00 46 5f          	add    %r8b,0x5f(%r14)
     4da:	45                   	rex.RB
     4db:	4e                   	rex.WRX
     4dc:	44 00 5f 5f          	add    %r11b,0x5f(%rdi)
     4e0:	74 69                	je     54b <_init-0x60d>
     4e2:	6d                   	insl   (%dx),%es:(%rdi)
     4e3:	65 7a 6f             	gs jp  555 <_init-0x603>
     4e6:	6e                   	outsb  %ds:(%rsi),(%dx)
     4e7:	65 00 66 69          	add    %ah,%gs:0x69(%rsi)
     4eb:	6c                   	insb   (%dx),%es:(%rdi)
     4ec:	65 6e                	outsb  %gs:(%rsi),(%dx)
     4ee:	61                   	(bad)  
     4ef:	6d                   	insl   (%dx),%es:(%rdi)
     4f0:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
     4f4:	75 36                	jne    52c <_init-0x62c>
     4f6:	34 00                	xor    $0x0,%al
     4f8:	72 6c                	jb     566 <_init-0x5f2>
     4fa:	5f                   	pop    %rdi
     4fb:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     4fe:	70 6c                	jo     56c <_init-0x5ec>
     500:	65 74 69             	gs je  56c <_init-0x5ec>
     503:	6f                   	outsl  %ds:(%rsi),(%dx)
     504:	6e                   	outsb  %ds:(%rsi),(%dx)
     505:	5f                   	pop    %rdi
     506:	74 79                	je     581 <_init-0x5d7>
     508:	70 65                	jo     56f <_init-0x5e9>
     50a:	00 73 77             	add    %dh,0x77(%rbx)
     50d:	5f                   	pop    %rdi
     50e:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
     510:	6f                   	outsl  %ds:(%rsi),(%dx)
     511:	61                   	(bad)  
     512:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     516:	5f                   	pop    %rdi
     517:	45                   	rex.RB
     518:	4c 53                	rex.WR push %rbx
     51a:	45 00 73 77          	add    %r14b,0x77(%r11)
     51e:	5f                   	pop    %rdi
     51f:	73 70                	jae    591 <_init-0x5c7>
     521:	53                   	push   %rbx
     522:	54                   	push   %rsp
     523:	00 73 77             	add    %dh,0x77(%rbx)
     526:	5f                   	pop    %rdi
     527:	53                   	push   %rbx
     528:	65 61                	gs (bad) 
     52a:	72 63                	jb     58f <_init-0x5c9>
     52c:	68 57 6f 72 64       	pushq  $0x64726f57
     531:	4c 69 73 74 00 73 77 	imul   $0x5f777300,0x74(%rbx),%r14
     538:	5f 
     539:	75 32                	jne    56d <_init-0x5eb>
     53b:	64 69 76 00 75 6e 73 	imul   $0x69736e75,%fs:0x0(%rsi),%esi
     542:	69 
     543:	67 6e                	outsb  %ds:(%esi),(%dx)
     545:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
     54a:	61                   	(bad)  
     54b:	72 00                	jb     54d <_init-0x60b>
     54d:	72 6c                	jb     5bb <_init-0x59d>
     54f:	5f                   	pop    %rdi
     550:	73 70                	jae    5c2 <_init-0x596>
     552:	65 63 69 61          	movslq %gs:0x61(%rcx),%ebp
     556:	6c                   	insb   (%dx),%es:(%rdi)
     557:	5f                   	pop    %rdi
     558:	70 72                	jo     5cc <_init-0x58c>
     55a:	65 66 69 78 65 73 00 	imul   $0x73,%gs:0x65(%rax),%di
     561:	73 77                	jae    5da <_init-0x57e>
     563:	5f                   	pop    %rdi
     564:	75 6d                	jne    5d3 <_init-0x585>
     566:	6d                   	insl   (%dx),%es:(%rdi)
     567:	75 6c                	jne    5d5 <_init-0x583>
     569:	00 5f 66             	add    %bl,0x66(%rdi)
     56c:	75 6e                	jne    5dc <_init-0x57c>
     56e:	6d                   	insl   (%dx),%es:(%rdi)
     56f:	61                   	(bad)  
     570:	70 00                	jo     572 <_init-0x5e6>
     572:	72 6c                	jb     5e0 <_init-0x578>
     574:	5f                   	pop    %rdi
     575:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     57c:	65 5f                	gs pop %rdi
     57e:	73 74                	jae    5f4 <_init-0x564>
     580:	61                   	(bad)  
     581:	74 5f                	je     5e2 <_init-0x576>
     583:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
     588:	73 77                	jae    601 <_init-0x557>
     58a:	5f                   	pop    %rdi
     58b:	50                   	push   %rax
     58c:	53                   	push   %rbx
     58d:	54                   	push   %rsp
     58e:	00 5f 5f             	add    %bl,0x5f(%rdi)
     591:	74 7a                	je     60d <_init-0x54b>
     593:	6e                   	outsb  %ds:(%rsi),(%dx)
     594:	61                   	(bad)  
     595:	6d                   	insl   (%dx),%es:(%rdi)
     596:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
     59a:	4f 5f                	rex.WRXB pop %r15
     59c:	46                   	rex.RX
     59d:	49                   	rex.WB
     59e:	4c                   	rex.WR
     59f:	45 5f                	rex.RB pop %r15
     5a1:	70 6c                	jo     60f <_init-0x549>
     5a3:	75 73                	jne    618 <_init-0x540>
     5a5:	00 75 6d             	add    %dh,0x6d(%rbp)
     5a8:	75 6c                	jne    616 <_init-0x542>
     5aa:	00 6f 43             	add    %ch,0x43(%rdi)
     5ad:	55                   	push   %rbp
     5ae:	52                   	push   %rdx
     5af:	52                   	push   %rdx
     5b0:	45                   	rex.RB
     5b1:	4e 54                	rex.WRX push %rsp
     5b3:	00 73 77             	add    %dh,0x77(%rbx)
     5b6:	5f                   	pop    %rdi
     5b7:	68 64 6f 74 00       	pushq  $0x746f64
     5bc:	76 69                	jbe    627 <_init-0x531>
     5be:	5f                   	pop    %rdi
     5bf:	6d                   	insl   (%dx),%es:(%rdi)
     5c0:	6f                   	outsl  %ds:(%rsi),(%dx)
     5c1:	76 65                	jbe    628 <_init-0x530>
     5c3:	6d                   	insl   (%dx),%es:(%rdi)
     5c4:	65 6e                	outsb  %gs:(%rsi),(%dx)
     5c6:	74 5f                	je     627 <_init-0x531>
     5c8:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     5cc:	61                   	(bad)  
     5cd:	70 00                	jo     5cf <_init-0x589>
     5cf:	73 77                	jae    648 <_init-0x510>
     5d1:	5f                   	pop    %rdi
     5d2:	61                   	(bad)  
     5d3:	6c                   	insb   (%dx),%es:(%rdi)
     5d4:	6c                   	insb   (%dx),%es:(%rdi)
     5d5:	6f                   	outsl  %ds:(%rsi),(%dx)
     5d6:	63 00                	movslq (%rax),%eax
     5d8:	73 77                	jae    651 <_init-0x507>
     5da:	5f                   	pop    %rdi
     5db:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
     5dd:	6d                   	insl   (%dx),%es:(%rdi)
     5de:	70 61                	jo     641 <_init-0x517>
     5e0:	72 65                	jb     647 <_init-0x511>
     5e2:	00 73 77             	add    %dh,0x77(%rbx)
     5e5:	5f                   	pop    %rdi
     5e6:	69 6d 6d 65 64 69 61 	imul   $0x61696465,0x6d(%rbp),%ebp
     5ed:	74 65                	je     654 <_init-0x504>
     5ef:	00 73 77             	add    %dh,0x77(%rbx)
     5f2:	5f                   	pop    %rdi
     5f3:	31 73 75             	xor    %esi,0x75(%rbx)
     5f6:	62                   	(bad)  
     5f7:	00 5f 49             	add    %bl,0x49(%rdi)
     5fa:	4f 5f                	rex.WRXB pop %r15
     5fc:	6c                   	insb   (%dx),%es:(%rdi)
     5fd:	6f                   	outsl  %ds:(%rsi),(%dx)
     5fe:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
     601:	74 00                	je     603 <_init-0x555>
     603:	73 77                	jae    67c <_init-0x4dc>
     605:	5f                   	pop    %rdi
     606:	73 70                	jae    678 <_init-0x4e0>
     608:	6c                   	insb   (%dx),%es:(%rdi)
     609:	6f                   	outsl  %ds:(%rsi),(%dx)
     60a:	61                   	(bad)  
     60b:	64 00 66 69          	add    %ah,%fs:0x69(%rsi)
     60f:	6c                   	insb   (%dx),%es:(%rdi)
     610:	65 50                	gs push %rax
     612:	61                   	(bad)  
     613:	74 68                	je     67d <_init-0x4db>
     615:	00 72 6c             	add    %dh,0x6c(%rdx)
     618:	5f                   	pop    %rdi
     619:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     620:	65 5f                	gs pop %rdi
     622:	71 75                	jno    699 <_init-0x4bf>
     624:	6f                   	outsl  %ds:(%rsi),(%dx)
     625:	74 65                	je     68c <_init-0x4cc>
     627:	5f                   	pop    %rdi
     628:	63 68 61             	movslq 0x61(%rax),%ebp
     62b:	72 61                	jb     68e <_init-0x4ca>
     62d:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
     631:	73 00                	jae    633 <_init-0x525>
     633:	6d                   	insl   (%dx),%es:(%rdi)
     634:	61                   	(bad)  
     635:	78 5f                	js     696 <_init-0x4c2>
     637:	69 6e 70 75 74 5f 68 	imul   $0x685f7475,0x70(%rsi),%ebp
     63e:	69 73 74 6f 72 79 00 	imul   $0x79726f,0x74(%rbx),%esi
     645:	46 69 6c 65 45 72 72 	imul   $0x614e7272,0x45(%rbp,%r12,2),%r13d
     64c:	4e 61 
     64e:	6d                   	insl   (%dx),%es:(%rdi)
     64f:	65 00 72 6c          	add    %dh,%gs:0x6c(%rdx)
     653:	5f                   	pop    %rdi
     654:	69 67 6e 6f 72 65 5f 	imul   $0x5f65726f,0x6e(%rdi),%esp
     65b:	73 6f                	jae    6cc <_init-0x48c>
     65d:	6d                   	insl   (%dx),%es:(%rdi)
     65e:	65 5f                	gs pop %rdi
     660:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     663:	70 6c                	jo     6d1 <_init-0x487>
     665:	65 74 69             	gs je  6d1 <_init-0x487>
     668:	6f                   	outsl  %ds:(%rsi),(%dx)
     669:	6e                   	outsb  %ds:(%rsi),(%dx)
     66a:	73 5f                	jae    6cb <_init-0x48d>
     66c:	66 75 6e             	data16 jne 6dd <_init-0x47b>
     66f:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     673:	6e                   	outsb  %ds:(%rsi),(%dx)
     674:	00 73 77             	add    %dh,0x77(%rbx)
     677:	5f                   	pop    %rdi
     678:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     67b:	70 00                	jo     67d <_init-0x4db>
     67d:	72 6c                	jb     6eb <_init-0x46d>
     67f:	5f                   	pop    %rdi
     680:	64 65 71 75          	fs gs jno 6f9 <_init-0x45f>
     684:	6f                   	outsl  %ds:(%rsi),(%dx)
     685:	74 65                	je     6ec <_init-0x46c>
     687:	5f                   	pop    %rdi
     688:	66 75 6e             	data16 jne 6f9 <_init-0x45f>
     68b:	63 5f 74             	movslq 0x74(%rdi),%ebx
     68e:	00 72 6c             	add    %dh,0x6c(%rdx)
     691:	5f                   	pop    %rdi
     692:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     699:	65 5f                	gs pop %rdi
     69b:	72 65                	jb     702 <_init-0x456>
     69d:	77 72                	ja     711 <_init-0x447>
     69f:	69 74 65 5f 68 6f 6f 	imul   $0x6b6f6f68,0x5f(%rbp,%riz,2),%esi
     6a6:	6b 
     6a7:	00 5f 49             	add    %bl,0x49(%rdi)
     6aa:	4f 5f                	rex.WRXB pop %r15
     6ac:	72 65                	jb     713 <_init-0x445>
     6ae:	61                   	(bad)  
     6af:	64 5f                	fs pop %rdi
     6b1:	70 74                	jo     727 <_init-0x431>
     6b3:	72 00                	jb     6b5 <_init-0x4a3>
     6b5:	73 77                	jae    72e <_init-0x42a>
     6b7:	5f                   	pop    %rdi
     6b8:	76 61                	jbe    71b <_init-0x43d>
     6ba:	74 72                	je     72e <_init-0x42a>
     6bc:	00 65 6d             	add    %ah,0x6d(%rbp)
     6bf:	61                   	(bad)  
     6c0:	63 73 5f             	movslq 0x5f(%rbx),%esi
     6c3:	73 74                	jae    739 <_init-0x41f>
     6c5:	61                   	(bad)  
     6c6:	6e                   	outsb  %ds:(%rsi),(%dx)
     6c7:	64 61                	fs (bad) 
     6c9:	72 64                	jb     72f <_init-0x429>
     6cb:	5f                   	pop    %rdi
     6cc:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     6d0:	61                   	(bad)  
     6d1:	70 00                	jo     6d3 <_init-0x485>
     6d3:	56                   	push   %rsi
     6d4:	41                   	rex.B
     6d5:	64 64 72 00          	fs fs jb 6d9 <_init-0x47f>
     6d9:	73 77                	jae    752 <_init-0x406>
     6db:	5f                   	pop    %rdi
     6dc:	63 6c 6f 73          	movslq 0x73(%rdi,%rbp,2),%ebp
     6e0:	65 66 69 6c 65 00 72 	imul   $0x6c72,%gs:0x0(%rbp,%riz,2),%bp
     6e7:	6c 
     6e8:	5f                   	pop    %rdi
     6e9:	63 68 61             	movslq 0x61(%rax),%ebp
     6ec:	6e                   	outsb  %ds:(%rsi),(%dx)
     6ed:	67 65 5f             	addr32 gs pop %rdi
     6f0:	65 6e                	outsb  %gs:(%rsi),(%dx)
     6f2:	76 69                	jbe    75d <_init-0x3fb>
     6f4:	72 6f                	jb     765 <_init-0x3f3>
     6f6:	6e                   	outsb  %ds:(%rsi),(%dx)
     6f7:	6d                   	insl   (%dx),%es:(%rdi)
     6f8:	65 6e                	outsb  %gs:(%rsi),(%dx)
     6fa:	74 00                	je     6fc <_init-0x45c>
     6fc:	5f                   	pop    %rdi
     6fd:	70 6f                	jo     76e <_init-0x3ea>
     6ff:	73 00                	jae    701 <_init-0x457>
     701:	73 74                	jae    777 <_init-0x3e1>
     703:	64 69 6e 00 72 6c 5f 	imul   $0x645f6c72,%fs:0x0(%rsi),%ebp
     70a:	64 
     70b:	69 73 70 6c 61 79 5f 	imul   $0x5f79616c,0x70(%rbx),%esi
     712:	70 72                	jo     786 <_init-0x3d2>
     714:	6f                   	outsl  %ds:(%rsi),(%dx)
     715:	6d                   	insl   (%dx),%es:(%rdi)
     716:	70 74                	jo     78c <_init-0x3cc>
     718:	00 72 6c             	add    %dh,0x6c(%rdx)
     71b:	5f                   	pop    %rdi
     71c:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     723:	65 5f                	gs pop %rdi
     725:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     728:	70 6c                	jo     796 <_init-0x3c2>
     72a:	65 74 69             	gs je  796 <_init-0x3c2>
     72d:	6f                   	outsl  %ds:(%rsi),(%dx)
     72e:	6e                   	outsb  %ds:(%rsi),(%dx)
     72f:	5f                   	pop    %rdi
     730:	64 65 73 69          	fs gs jae 79d <_init-0x3bb>
     734:	72 65                	jb     79b <_init-0x3bd>
     736:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     73a:	5f                   	pop    %rdi
     73b:	6c                   	insb   (%dx),%es:(%rdi)
     73c:	69 74 63 6f 6d 70 00 	imul   $0x7300706d,0x6f(%rbx,%riz,2),%esi
     743:	73 
     744:	79 73                	jns    7b9 <_init-0x39f>
     746:	5f                   	pop    %rdi
     747:	65 72 72             	gs jb  7bc <_init-0x39c>
     74a:	6c                   	insb   (%dx),%es:(%rdi)
     74b:	69 73 74 00 74 65 78 	imul   $0x78657400,0x74(%rbx),%esi
     752:	74 00                	je     754 <_init-0x404>
     754:	73 77                	jae    7cd <_init-0x38b>
     756:	5f                   	pop    %rdi
     757:	64 69 76 00 75 6e 64 	imul   $0x6f646e75,%fs:0x0(%rsi),%esi
     75e:	6f 
     75f:	5f                   	pop    %rdi
     760:	63 6f 64             	movslq 0x64(%rdi),%ebp
     763:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     767:	5f                   	pop    %rdi
     768:	6d                   	insl   (%dx),%es:(%rdi)
     769:	6f                   	outsl  %ds:(%rsi),(%dx)
     76a:	64 00 5f 6d          	add    %bl,%fs:0x6d(%rdi)
     76e:	61                   	(bad)  
     76f:	72 6b                	jb     7dc <_init-0x37c>
     771:	65 72 73             	gs jb  7e7 <_init-0x371>
     774:	00 46 4e             	add    %al,0x4e(%rsi)
     777:	42                   	rex.X
     778:	49 00 73 77          	rex.WB add %sil,0x77(%r11)
     77c:	5f                   	pop    %rdi
     77d:	73 75                	jae    7f4 <_init-0x364>
     77f:	62                   	(bad)  
     780:	00 73 77             	add    %dh,0x77(%rbx)
     783:	5f                   	pop    %rdi
     784:	63 73 74             	movslq 0x74(%rbx),%esi
     787:	72 00                	jb     789 <_init-0x3cf>
     789:	46                   	rex.RX
     78a:	4e                   	rex.WRX
     78b:	42                   	rex.X
     78c:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
     78e:	75 6e                	jne    7fe <_init-0x35a>
     790:	74 00                	je     792 <_init-0x3c6>
     792:	68 69 73 74 6f       	pushq  $0x6f747369
     797:	72 79                	jb     812 <_init-0x346>
     799:	5f                   	pop    %rdi
     79a:	6d                   	insl   (%dx),%es:(%rdi)
     79b:	61                   	(bad)  
     79c:	78 5f                	js     7fd <_init-0x35b>
     79e:	65 6e                	outsb  %gs:(%rsi),(%dx)
     7a0:	74 72                	je     814 <_init-0x344>
     7a2:	69 65 73 00 6d 61 6c 	imul   $0x6c616d00,0x73(%rbp),%esp
     7a9:	6c                   	insb   (%dx),%es:(%rdi)
     7aa:	6f                   	outsl  %ds:(%rsi),(%dx)
     7ab:	63 00                	movslq (%rax),%eax
     7ad:	72 6c                	jb     81b <_init-0x33d>
     7af:	5f                   	pop    %rdi
     7b0:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%rdx),%esi
     7b7:	72 
     7b8:	79 5f                	jns    819 <_init-0x33f>
     7ba:	72 65                	jb     821 <_init-0x337>
     7bc:	77 72                	ja     830 <_init-0x328>
     7be:	69 74 65 5f 68 6f 6f 	imul   $0x6b6f6f68,0x5f(%rbp,%riz,2),%esi
     7c5:	6b 
     7c6:	00 73 77             	add    %dh,0x77(%rbx)
     7c9:	5f                   	pop    %rdi
     7ca:	72 6f                	jb     83b <_init-0x31d>
     7cc:	74 00                	je     7ce <_init-0x38a>
     7ce:	73 77                	jae    847 <_init-0x311>
     7d0:	5f                   	pop    %rdi
     7d1:	72 70                	jb     843 <_init-0x315>
     7d3:	6c                   	insb   (%dx),%es:(%rdi)
     7d4:	6f                   	outsl  %ds:(%rsi),(%dx)
     7d5:	61                   	(bad)  
     7d6:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     7da:	5f                   	pop    %rdi
     7db:	43 50                	rex.XB push %r8
     7dd:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
     7df:	61                   	(bad)  
     7e0:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
     7e4:	5f                   	pop    %rdi
     7e5:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     7e8:	70 6c                	jo     856 <_init-0x302>
     7ea:	65 74 69             	gs je  856 <_init-0x302>
     7ed:	6f                   	outsl  %ds:(%rsi),(%dx)
     7ee:	6e                   	outsb  %ds:(%rsi),(%dx)
     7ef:	5f                   	pop    %rdi
     7f0:	65 6e                	outsb  %gs:(%rsi),(%dx)
     7f2:	74 72                	je     866 <_init-0x2f2>
     7f4:	79 5f                	jns    855 <_init-0x303>
     7f6:	66 75 6e             	data16 jne 867 <_init-0x2f1>
     7f9:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     7fd:	6e                   	outsb  %ds:(%rsi),(%dx)
     7fe:	00 72 6c             	add    %dh,0x6c(%rdx)
     801:	5f                   	pop    %rdi
     802:	72 65                	jb     869 <_init-0x2ef>
     804:	61                   	(bad)  
     805:	64 6c                	fs insb (%dx),%es:(%rdi)
     807:	69 6e 65 5f 6e 61 6d 	imul   $0x6d616e5f,0x65(%rsi),%ebp
     80e:	65 00 55 4e          	add    %dl,%gs:0x4e(%rbp)
     812:	44                   	rex.R
     813:	4f 5f                	rex.WRXB pop %r15
     815:	49                   	rex.WB
     816:	4e 53                	rex.WRX push %rbx
     818:	45 52                	rex.RB push %r10
     81a:	54                   	push   %rsp
     81b:	00 45 61             	add    %al,0x61(%rbp)
     81e:	64 64 72 00          	fs fs jb 822 <_init-0x336>
     822:	72 6c                	jb     890 <_init-0x2c8>
     824:	5f                   	pop    %rdi
     825:	72 65                	jb     88c <_init-0x2cc>
     827:	61                   	(bad)  
     828:	64 6c                	fs insb (%dx),%es:(%rdi)
     82a:	69 6e 65 5f 73 74 61 	imul   $0x6174735f,0x65(%rsi),%ebp
     831:	74 65                	je     898 <_init-0x2c0>
     833:	00 72 6c             	add    %dh,0x6c(%rdx)
     836:	5f                   	pop    %rdi
     837:	69 63 70 70 66 75 6e 	imul   $0x6e756670,0x70(%rbx),%esp
     83e:	63 5f 74             	movslq 0x74(%rdi),%ebx
     841:	00 72 6c             	add    %dh,0x6c(%rdx)
     844:	5f                   	pop    %rdi
     845:	63 61 74             	movslq 0x74(%rcx),%esp
     848:	63 68 5f             	movslq 0x5f(%rax),%ebp
     84b:	73 69                	jae    8b6 <_init-0x2a2>
     84d:	67 77 69             	addr32 ja 8b9 <_init-0x29f>
     850:	6e                   	outsb  %ds:(%rsi),(%dx)
     851:	63 68 00             	movslq 0x0(%rax),%ebp
     854:	6f                   	outsl  %ds:(%rsi),(%dx)
     855:	49                   	rex.WB
     856:	4e 50                	rex.WRX push %rax
     858:	55                   	push   %rbp
     859:	54                   	push   %rsp
     85a:	00 72 6c             	add    %dh,0x6c(%rdx)
     85d:	5f                   	pop    %rdi
     85e:	67 65 74 63          	addr32 gs je 8c5 <_init-0x293>
     862:	5f                   	pop    %rdi
     863:	66 75 6e             	data16 jne 8d4 <_init-0x284>
     866:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     86a:	6e                   	outsb  %ds:(%rsi),(%dx)
     86b:	00 73 77             	add    %dh,0x77(%rbx)
     86e:	5f                   	pop    %rdi
     86f:	46                   	rex.RX
     870:	4e 54                	rex.WRX push %rsp
     872:	79 70                	jns    8e4 <_init-0x274>
     874:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     878:	5f                   	pop    %rdi
     879:	61                   	(bad)  
     87a:	64 64 63 79 00       	fs movslq %fs:0x0(%rcx),%edi
     87f:	72 6c                	jb     8ed <_init-0x26b>
     881:	5f                   	pop    %rdi
     882:	67 6e                	outsb  %ds:(%esi),(%dx)
     884:	75 5f                	jne    8e5 <_init-0x273>
     886:	72 65                	jb     8ed <_init-0x26b>
     888:	61                   	(bad)  
     889:	64 6c                	fs insb (%dx),%es:(%rdi)
     88b:	69 6e 65 5f 70 00 73 	imul   $0x7300705f,0x65(%rsi),%ebp
     892:	77 5f                	ja     8f3 <_init-0x265>
     894:	4e                   	rex.WRX
     895:	65 78 74             	gs js  90c <_init-0x24c>
     898:	57                   	push   %rdi
     899:	6f                   	outsl  %ds:(%rsi),(%dx)
     89a:	72 64                	jb     900 <_init-0x258>
     89c:	00 55 4e             	add    %dl,0x4e(%rbp)
     89f:	44                   	rex.R
     8a0:	4f 5f                	rex.WRXB pop %r15
     8a2:	45                   	rex.RB
     8a3:	4e                   	rex.WRX
     8a4:	44 00 72 6c          	add    %r14b,0x6c(%rdx)
     8a8:	5f                   	pop    %rdi
     8a9:	6f                   	outsl  %ds:(%rsi),(%dx)
     8aa:	75 74                	jne    920 <_init-0x238>
     8ac:	73 74                	jae    922 <_init-0x236>
     8ae:	72 65                	jb     915 <_init-0x243>
     8b0:	61                   	(bad)  
     8b1:	6d                   	insl   (%dx),%es:(%rdi)
     8b2:	00 73 77             	add    %dh,0x77(%rbx)
     8b5:	5f                   	pop    %rdi
     8b6:	52                   	push   %rdx
     8b7:	45 50                	rex.RB push %r8
     8b9:	45                   	rex.RB
     8ba:	41 54                	push   %r12
     8bc:	00 72 6c             	add    %dh,0x6c(%rdx)
     8bf:	5f                   	pop    %rdi
     8c0:	65 78 65             	gs js  928 <_init-0x230>
     8c3:	63 75 74             	movslq 0x74(%rbp),%esi
     8c6:	69 6e 67 5f 6b 65 79 	imul   $0x79656b5f,0x67(%rsi),%ebp
     8cd:	6d                   	insl   (%dx),%es:(%rdi)
     8ce:	61                   	(bad)  
     8cf:	70 00                	jo     8d1 <_init-0x287>
     8d1:	73 77                	jae    94a <_init-0x20e>
     8d3:	5f                   	pop    %rdi
     8d4:	32 6d 75             	xor    0x75(%rbp),%ch
     8d7:	6c                   	insb   (%dx),%es:(%rdi)
     8d8:	00 72 6c             	add    %dh,0x6c(%rdx)
     8db:	5f                   	pop    %rdi
     8dc:	6c                   	insb   (%dx),%es:(%rdi)
     8dd:	69 6e 65 62 75 66 5f 	imul   $0x5f667562,0x65(%rsi),%ebp
     8e4:	66 75 6e             	data16 jne 955 <_init-0x203>
     8e7:	63 5f 74             	movslq 0x74(%rdi),%ebx
     8ea:	00 5f 49             	add    %bl,0x49(%rdi)
     8ed:	4f 5f                	rex.WRXB pop %r15
     8ef:	32 5f 31             	xor    0x31(%rdi),%bl
     8f2:	5f                   	pop    %rdi
     8f3:	73 74                	jae    969 <_init-0x1ef>
     8f5:	64 69 6e 5f 00 73 77 	imul   $0x5f777300,%fs:0x5f(%rsi),%ebp
     8fc:	5f 
     8fd:	63 6f 75             	movslq 0x75(%rdi),%ebp
     900:	6e                   	outsb  %ds:(%rsi),(%dx)
     901:	74 00                	je     903 <_init-0x255>
     903:	68 69 73 74 6f       	pushq  $0x6f747369
     908:	72 79                	jb     983 <_init-0x1d5>
     90a:	5f                   	pop    %rdi
     90b:	73 75                	jae    982 <_init-0x1d6>
     90d:	62 73 74 5f 63       	(bad)  {%k7}
     912:	68 61 72 00 73       	pushq  $0x73007261
     917:	77 5f                	ja     978 <_init-0x1e0>
     919:	77 53                	ja     96e <_init-0x1ea>
     91b:	54                   	push   %rsp
     91c:	00 73 77             	add    %dh,0x77(%rbx)
     91f:	5f                   	pop    %rdi
     920:	71 64                	jno    986 <_init-0x1d2>
     922:	75 70                	jne    994 <_init-0x1c4>
     924:	00 72 6c             	add    %dh,0x6c(%rdx)
     927:	5f                   	pop    %rdi
     928:	61                   	(bad)  
     929:	6c                   	insb   (%dx),%es:(%rdi)
     92a:	72 65                	jb     991 <_init-0x1c7>
     92c:	61                   	(bad)  
     92d:	64 79 5f             	fs jns 98f <_init-0x1c9>
     930:	70 72                	jo     9a4 <_init-0x1b4>
     932:	6f                   	outsl  %ds:(%rsi),(%dx)
     933:	6d                   	insl   (%dx),%es:(%rdi)
     934:	70 74                	jo     9aa <_init-0x1ae>
     936:	65 64 00 5f 66       	gs add %bl,%fs:0x66(%rdi)
     93b:	6c                   	insb   (%dx),%es:(%rdi)
     93c:	61                   	(bad)  
     93d:	67 73 32             	addr32 jae 972 <_init-0x1e6>
     940:	00 73 77             	add    %dh,0x77(%rbx)
     943:	5f                   	pop    %rdi
     944:	32 61 64             	xor    0x64(%rcx),%ah
     947:	64 00 7a 64          	add    %bh,%fs:0x64(%rdx)
     94b:	62                   	(bad)  
     94c:	67 00 5f 49          	add    %bl,0x49(%edi)
     950:	4f 5f                	rex.WRXB pop %r15
     952:	72 65                	jb     9b9 <_init-0x19f>
     954:	61                   	(bad)  
     955:	64 5f                	fs pop %rdi
     957:	62 61                	(bad)  
     959:	73 65                	jae    9c0 <_init-0x198>
     95b:	00 73 77             	add    %dh,0x77(%rbx)
     95e:	5f                   	pop    %rdi
     95f:	61                   	(bad)  
     960:	6c                   	insb   (%dx),%es:(%rdi)
     961:	6c                   	insb   (%dx),%es:(%rdi)
     962:	6f                   	outsl  %ds:(%rsi),(%dx)
     963:	74 00                	je     965 <_init-0x1f3>
     965:	72 6c                	jb     9d3 <_init-0x185>
     967:	5f                   	pop    %rdi
     968:	65 76 65             	gs jbe 9d0 <_init-0x188>
     96b:	6e                   	outsb  %ds:(%rsi),(%dx)
     96c:	74 5f                	je     9cd <_init-0x18b>
     96e:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
     973:	72 6c                	jb     9e1 <_init-0x177>
     975:	5f                   	pop    %rdi
     976:	6e                   	outsb  %ds:(%rsi),(%dx)
     977:	75 6d                	jne    9e6 <_init-0x172>
     979:	65 72 69             	gs jb  9e5 <_init-0x173>
     97c:	63 5f 61             	movslq 0x61(%rdi),%ebx
     97f:	72 67                	jb     9e8 <_init-0x170>
     981:	00 69 72             	add    %ch,0x72(%rcx)
     984:	65 67 00 5f 75       	add    %bl,%gs:0x75(%edi)
     989:	6e                   	outsb  %ds:(%rsi),(%dx)
     98a:	75 73                	jne    9ff <_init-0x159>
     98c:	65 64 32 00          	gs xor %fs:(%rax),%al
     990:	53                   	push   %rbx
     991:	48                   	rex.W
     992:	45                   	rex.RB
     993:	41                   	rex.B
     994:	44                   	rex.R
     995:	45 52                	rex.RB push %r10
     997:	00 73 77             	add    %dh,0x77(%rbx)
     99a:	5f                   	pop    %rdi
     99b:	72 65                	jb     a02 <_init-0x156>
     99d:	70 6f                	jo     a0e <_init-0x14a>
     99f:	73 69                	jae    a0a <_init-0x14e>
     9a1:	74 69                	je     a0c <_init-0x14c>
     9a3:	6f                   	outsl  %ds:(%rsi),(%dx)
     9a4:	6e                   	outsb  %ds:(%rsi),(%dx)
     9a5:	66 69 6c 65 00 73 77 	imul   $0x7773,0x0(%rbp,%riz,2),%bp
     9ac:	5f                   	pop    %rdi
     9ad:	6c                   	insb   (%dx),%es:(%rdi)
     9ae:	6f                   	outsl  %ds:(%rsi),(%dx)
     9af:	61                   	(bad)  
     9b0:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     9b4:	5f                   	pop    %rdi
     9b5:	66 69 6c 65 70 6f 73 	imul   $0x736f,0x70(%rbp,%riz,2),%bp
     9bc:	69 74 69 6f 6e 00 43 	imul   $0x4343006e,0x6f(%rcx,%rbp,2),%esi
     9c3:	43 
     9c4:	4f                   	rex.WRXB
     9c5:	4d 00 72 6c          	rex.WRB add %r14b,0x6c(%r10)
     9c9:	5f                   	pop    %rdi
     9ca:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     9cd:	70 6c                	jo     a3b <_init-0x11d>
     9cf:	65 74 65             	gs je  a37 <_init-0x121>
     9d2:	72 5f                	jb     a33 <_init-0x125>
     9d4:	71 75                	jno    a4b <_init-0x10d>
     9d6:	6f                   	outsl  %ds:(%rsi),(%dx)
     9d7:	74 65                	je     a3e <_init-0x11a>
     9d9:	5f                   	pop    %rdi
     9da:	63 68 61             	movslq 0x61(%rax),%ebp
     9dd:	72 61                	jb     a40 <_init-0x118>
     9df:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
     9e3:	73 00                	jae    9e5 <_init-0x173>
     9e5:	5f                   	pop    %rdi
     9e6:	6f                   	outsl  %ds:(%rsi),(%dx)
     9e7:	6c                   	insb   (%dx),%es:(%rdi)
     9e8:	64 5f                	fs pop %rdi
     9ea:	6f                   	outsl  %ds:(%rsi),(%dx)
     9eb:	66 66 73 65          	data16 data16 jae a54 <_init-0x104>
     9ef:	74 00                	je     9f1 <_init-0x167>
     9f1:	72 6c                	jb     a5f <_init-0xf9>
     9f3:	5f                   	pop    %rdi
     9f4:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     9f7:	70 6c                	jo     a65 <_init-0xf3>
     9f9:	65 74 69             	gs je  a65 <_init-0xf3>
     9fc:	6f                   	outsl  %ds:(%rsi),(%dx)
     9fd:	6e                   	outsb  %ds:(%rsi),(%dx)
     9fe:	5f                   	pop    %rdi
     9ff:	69 6e 76 6f 6b 69 6e 	imul   $0x6e696b6f,0x76(%rsi),%ebp
     a06:	67 5f                	addr32 pop %rdi
     a08:	6b 65 79 00          	imul   $0x0,0x79(%rbp),%esp
     a0c:	72 6c                	jb     a7a <_init-0xde>
     a0e:	5f                   	pop    %rdi
     a0f:	61                   	(bad)  
     a10:	74 74                	je     a86 <_init-0xd2>
     a12:	65 6d                	gs insl (%dx),%es:(%rdi)
     a14:	70 74                	jo     a8a <_init-0xce>
     a16:	65 64 5f             	gs fs pop %rdi
     a19:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     a1c:	70 6c                	jo     a8a <_init-0xce>
     a1e:	65 74 69             	gs je  a8a <_init-0xce>
     a21:	6f                   	outsl  %ds:(%rsi),(%dx)
     a22:	6e                   	outsb  %ds:(%rsi),(%dx)
     a23:	5f                   	pop    %rdi
     a24:	6f                   	outsl  %ds:(%rsi),(%dx)
     a25:	76 65                	jbe    a8c <_init-0xcc>
     a27:	72 00                	jb     a29 <_init-0x12f>
     a29:	73 77                	jae    aa2 <_init-0xb6>
     a2b:	5f                   	pop    %rdi
     a2c:	64 72 6f             	fs jb  a9e <_init-0xba>
     a2f:	70 00                	jo     a31 <_init-0x127>
     a31:	73 77                	jae    aaa <_init-0xae>
     a33:	5f                   	pop    %rdi
     a34:	63 65 6c             	movslq 0x6c(%rbp),%esp
     a37:	6c                   	insb   (%dx),%es:(%rdi)
     a38:	6d                   	insl   (%dx),%es:(%rdi)
     a39:	00 73 77             	add    %dh,0x77(%rbx)
     a3c:	5f                   	pop    %rdi
     a3d:	63 65 6c             	movslq 0x6c(%rbp),%esp
     a40:	6c                   	insb   (%dx),%es:(%rdi)
     a41:	70 00                	jo     a43 <_init-0x115>
     a43:	73 77                	jae    abc <_init-0x9c>
     a45:	5f                   	pop    %rdi
     a46:	63 65 6c             	movslq 0x6c(%rbp),%esp
     a49:	6c                   	insb   (%dx),%es:(%rdi)
     a4a:	73 00                	jae    a4c <_init-0x10c>
     a4c:	68 69 73 74 6f       	pushq  $0x6f747369
     a51:	72 79                	jb     acc <_init-0x8c>
     a53:	5f                   	pop    %rdi
     a54:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     a57:	6d                   	insl   (%dx),%es:(%rdi)
     a58:	65 6e                	outsb  %gs:(%rsi),(%dx)
     a5a:	74 5f                	je     abb <_init-0x9d>
     a5c:	63 68 61             	movslq 0x61(%rax),%ebp
     a5f:	72 00                	jb     a61 <_init-0xf7>
     a61:	6c                   	insb   (%dx),%es:(%rdi)
     a62:	6f                   	outsl  %ds:(%rsi),(%dx)
     a63:	6e                   	outsb  %ds:(%rsi),(%dx)
     a64:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
     a69:	67 20 69 6e          	and    %ch,0x6e(%ecx)
     a6d:	74 00                	je     a6f <_init-0xe9>
     a6f:	43                   	rex.XB
     a70:	4f                   	rex.WRXB
     a71:	4e 53                	rex.WRX push %rbx
     a73:	54                   	push   %rsp
     a74:	41                   	rex.B
     a75:	4e 54                	rex.WRX push %rsp
     a77:	00 6f 4c             	add    %ch,0x4c(%rdi)
     a7a:	46                   	rex.RX
     a7b:	4f 52                	rex.WRXB push %r10
     a7d:	54                   	push   %rsp
     a7e:	48 00 6f 4f          	rex.W add %bpl,0x4f(%rdi)
     a82:	55                   	push   %rbp
     a83:	54                   	push   %rsp
     a84:	50                   	push   %rax
     a85:	55                   	push   %rbp
     a86:	54                   	push   %rsp
     a87:	00 73 77             	add    %dh,0x77(%rbx)
     a8a:	5f                   	pop    %rdi
     a8b:	32 53 54             	xor    0x54(%rbx),%dl
     a8e:	00 43 6f             	add    %al,0x6f(%rbx)
     a91:	6d                   	insl   (%dx),%es:(%rdi)
     a92:	70 69                	jo     afd <_init-0x5b>
     a94:	6c                   	insb   (%dx),%es:(%rdi)
     a95:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     a99:	5f                   	pop    %rdi
     a9a:	6f                   	outsl  %ds:(%rsi),(%dx)
     a9b:	76 65                	jbe    b02 <_init-0x56>
     a9d:	72 00                	jb     a9f <_init-0xb9>
     a9f:	68 69 73 74 6f       	pushq  $0x6f747369
     aa4:	72 79                	jb     b1f <_init-0x39>
     aa6:	5f                   	pop    %rdi
     aa7:	73 65                	jae    b0e <_init-0x4a>
     aa9:	61                   	(bad)  
     aaa:	72 63                	jb     b0f <_init-0x49>
     aac:	68 5f 64 65 6c       	pushq  $0x6c65645f
     ab1:	69 6d 69 74 65 72 5f 	imul   $0x5f726574,0x69(%rbp),%ebp
     ab8:	63 68 61             	movslq 0x61(%rax),%ebp
     abb:	72 73                	jb     b30 <_init-0x28>
     abd:	00 73 77             	add    %dh,0x77(%rbx)
     ac0:	5f                   	pop    %rdi
     ac1:	44 61                	rex.R (bad) 
     ac3:	64 64 00 5f 49       	fs add %bl,%fs:0x49(%rdi)
     ac8:	4f 5f                	rex.WRXB pop %r15
     aca:	77 72                	ja     b3e <_init-0x1a>
     acc:	69 74 65 5f 65 6e 64 	imul   $0x646e65,0x5f(%rbp,%riz,2),%esi
     ad3:	00 
     ad4:	73 77                	jae    b4d <_init-0xb>
     ad6:	5f                   	pop    %rdi
     ad7:	30 4e 65             	xor    %cl,0x65(%rsi)
     ada:	71 75                	jno    b51 <_init-0x7>
     adc:	00 73 77             	add    %dh,0x77(%rbx)
     adf:	5f                   	pop    %rdi
     ae0:	63 65 6c             	movslq 0x6c(%rbp),%esp
     ae3:	6c                   	insb   (%dx),%es:(%rdi)
     ae4:	64 69 76 00 63 6c 6f 	imul   $0x736f6c63,%fs:0x0(%rsi),%esi
     aeb:	73 
     aec:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     af0:	5f                   	pop    %rdi
     af1:	6d                   	insl   (%dx),%es:(%rdi)
     af2:	75 6c                	jne    b60 <_init+0x8>
     af4:	00 73 77             	add    %dh,0x77(%rbx)
     af7:	5f                   	pop    %rdi
     af8:	62 72                	(bad)  
     afa:	61                   	(bad)  
     afb:	6e                   	outsb  %ds:(%rsi),(%dx)
     afc:	63 68 00             	movslq 0x0(%rax),%ebp
     aff:	73 77                	jae    b78 <.plt+0x8>
     b01:	5f                   	pop    %rdi
     b02:	6e                   	outsb  %ds:(%rsi),(%dx)
     b03:	6f                   	outsl  %ds:(%rsi),(%dx)
     b04:	70 00                	jo     b06 <_init-0x52>
     b06:	72 6c                	jb     b74 <.plt+0x4>
     b08:	5f                   	pop    %rdi
     b09:	67 65 74 63          	addr32 gs je b70 <.plt>
     b0d:	5f                   	pop    %rdi
     b0e:	66 75 6e             	data16 jne b7f <.plt+0xf>
     b11:	63 5f 74             	movslq 0x74(%rdi),%ebx
     b14:	00 73 77             	add    %dh,0x77(%rbx)
     b17:	5f                   	pop    %rdi
     b18:	6e                   	outsb  %ds:(%rsi),(%dx)
     b19:	65 67 61             	gs addr32 (bad) 
     b1c:	74 65                	je     b83 <free@plt+0x3>
     b1e:	00 73 77             	add    %dh,0x77(%rbx)
     b21:	5f                   	pop    %rdi
     b22:	61                   	(bad)  
     b23:	64 64 00 73 77       	fs add %dh,%fs:0x77(%rbx)
     b28:	5f                   	pop    %rdi
     b29:	72 72                	jb     b9d <strcpy@plt+0xd>
     b2b:	6f                   	outsl  %ds:(%rsi),(%dx)
     b2c:	74 00                	je     b2e <_init-0x2a>
     b2e:	5f                   	pop    %rdi
     b2f:	49                   	rex.WB
     b30:	4f 5f                	rex.WRXB pop %r15
     b32:	62                   	(bad)  
     b33:	75 66                	jne    b9b <strcpy@plt+0xb>
     b35:	5f                   	pop    %rdi
     b36:	62 61                	(bad)  
     b38:	73 65                	jae    b9f <strcpy@plt+0xf>
     b3a:	00 73 77             	add    %dh,0x77(%rbx)
     b3d:	5f                   	pop    %rdi
     b3e:	53                   	push   %rbx
     b3f:	6f                   	outsl  %ds:(%rsi),(%dx)
     b40:	75 72                	jne    bb4 <puts@plt+0x4>
     b42:	63 65 53             	movslq 0x53(%rbp),%esp
     b45:	54                   	push   %rsp
     b46:	00 73 77             	add    %dh,0x77(%rbx)
     b49:	5f                   	pop    %rdi
     b4a:	78 6f                	js     bbb <puts@plt+0xb>
     b4c:	72 00                	jb     b4e <_init-0xa>
     b4e:	57                   	push   %rdi
     b4f:	43                   	rex.XB
     b50:	4f                   	rex.WRXB
     b51:	4d 00 6f 41          	rex.WRB add %r13b,0x41(%r15)
     b55:	54                   	push   %rsp
     b56:	49                   	rex.WB
     b57:	42 00 55 4e          	rex.X add %dl,0x4e(%rbp)
     b5b:	44                   	rex.R
     b5c:	4f 5f                	rex.WRXB pop %r15
     b5e:	44                   	rex.R
     b5f:	45                   	rex.RB
     b60:	4c                   	rex.WR
     b61:	45 54                	rex.RB push %r12
     b63:	45 00 74 69 6c       	add    %r14b,0x6c(%r9,%rbp,2)
     b68:	64 65 5f             	fs gs pop %rdi
     b6b:	68 6f 6f 6b 5f       	pushq  $0x5f6b6f6f
     b70:	66 75 6e             	data16 jne be1 <write_history@plt+0x1>
     b73:	63 5f 74             	movslq 0x74(%rdi),%ebx
     b76:	00 73 77             	add    %dh,0x77(%rbx)
     b79:	5f                   	pop    %rdi
     b7a:	43 51                	rex.XB push %r9
     b7c:	00 73 77             	add    %dh,0x77(%rbx)
     b7f:	5f                   	pop    %rdi
     b80:	57                   	push   %rdi
     b81:	48                   	rex.W
     b82:	49                   	rex.WB
     b83:	4c                   	rex.WR
     b84:	45 00 68 69          	add    %r13b,0x69(%r8)
     b88:	73 74                	jae    bfe <strlen@plt+0xe>
     b8a:	6f                   	outsl  %ds:(%rsi),(%dx)
     b8b:	72 79                	jb     c06 <read_history@plt+0x6>
     b8d:	5f                   	pop    %rdi
     b8e:	6f                   	outsl  %ds:(%rsi),(%dx)
     b8f:	66 66 73 65          	data16 data16 jae bf8 <strlen@plt+0x8>
     b93:	74 00                	je     b95 <strcpy@plt+0x5>
     b95:	55                   	push   %rbp
     b96:	4e                   	rex.WRX
     b97:	44                   	rex.R
     b98:	4f 5f                	rex.WRXB pop %r15
     b9a:	4c                   	rex.WR
     b9b:	49 53                	rex.WB push %r11
     b9d:	54                   	push   %rsp
     b9e:	00 5f 5f             	add    %bl,0x5f(%rdi)
     ba1:	70 61                	jo     c04 <read_history@plt+0x4>
     ba3:	64 31 00             	xor    %eax,%fs:(%rax)
     ba6:	5f                   	pop    %rdi
     ba7:	5f                   	pop    %rdi
     ba8:	70 61                	jo     c0b <read_history@plt+0xb>
     baa:	64 32 00             	xor    %fs:(%rax),%al
     bad:	5f                   	pop    %rdi
     bae:	5f                   	pop    %rdi
     baf:	70 61                	jo     c12 <__stack_chk_fail@plt+0x2>
     bb1:	64 33 00             	xor    %fs:(%rax),%eax
     bb4:	5f                   	pop    %rdi
     bb5:	5f                   	pop    %rdi
     bb6:	70 61                	jo     c19 <__stack_chk_fail@plt+0x9>
     bb8:	64 34 00             	fs xor $0x0,%al
     bbb:	5f                   	pop    %rdi
     bbc:	5f                   	pop    %rdi
     bbd:	70 61                	jo     c20 <printf@plt>
     bbf:	64 35 00 5f 73 62    	fs xor $0x62735f00,%eax
     bc5:	75 66                	jne    c2d <printf@plt+0xd>
     bc7:	00 64 74 6d          	add    %ah,0x6d(%rsp,%rsi,2)
     bcb:	70 00                	jo     bcd <add_history@plt+0xd>
     bcd:	73 77                	jae    c46 <ioctl@plt+0x6>
     bcf:	5f                   	pop    %rdi
     bd0:	65 78 65             	gs js  c38 <lseek@plt+0x8>
     bd3:	63 75 74             	movslq 0x74(%rbp),%esi
     bd6:	65 00 55 4e          	add    %dl,%gs:0x4e(%rbp)
     bda:	44                   	rex.R
     bdb:	4f 5f                	rex.WRXB pop %r15
     bdd:	42                   	rex.X
     bde:	45                   	rex.RB
     bdf:	47                   	rex.RXB
     be0:	49                   	rex.WB
     be1:	4e 00 73 77          	rex.WRX add %r14b,0x77(%rbx)
     be5:	5f                   	pop    %rdi
     be6:	32 64 75 70          	xor    0x70(%rbp,%rsi,2),%ah
     bea:	00 72 6c             	add    %dh,0x6c(%rdx)
     bed:	5f                   	pop    %rdi
     bee:	69 6e 73 65 72 74 5f 	imul   $0x5f747265,0x73(%rsi),%ebp
     bf5:	6d                   	insl   (%dx),%es:(%rdi)
     bf6:	6f                   	outsl  %ds:(%rsi),(%dx)
     bf7:	64 65 00 73 77       	fs add %dh,%gs:0x77(%rbx)
     bfc:	5f                   	pop    %rdi
     bfd:	75 6d                	jne    c6c <close@plt+0xc>
     bff:	61                   	(bad)  
     c00:	78 00                	js     c02 <read_history@plt+0x2>
     c02:	5f                   	pop    %rdi
     c03:	66 6c                	data16 insb (%dx),%es:(%rdi)
     c05:	61                   	(bad)  
     c06:	67 73 00             	addr32 jae c09 <read_history@plt+0x9>
     c09:	73 77                	jae    c82 <memcmp@plt+0x2>
     c0b:	5f                   	pop    %rdi
     c0c:	73 77                	jae    c85 <memcmp@plt+0x5>
     c0e:	61                   	(bad)  
     c0f:	70 00                	jo     c11 <__stack_chk_fail@plt+0x1>
     c11:	6c                   	insb   (%dx),%es:(%rdi)
     c12:	65 6e                	outsb  %gs:(%rsi),(%dx)
     c14:	31 00                	xor    %eax,(%rax)
     c16:	6c                   	insb   (%dx),%es:(%rdi)
     c17:	65 6e                	outsb  %gs:(%rsi),(%dx)
     c19:	32 00                	xor    (%rax),%al
     c1b:	73 77                	jae    c94 <getchar@plt+0x4>
     c1d:	5f                   	pop    %rdi
     c1e:	63 53 54             	movslq 0x54(%rbx),%edx
     c21:	00 73 77             	add    %dh,0x77(%rbx)
     c24:	5f                   	pop    %rdi
     c25:	50                   	push   %rax
     c26:	44 75 6d             	rex.R jne c96 <getchar@plt+0x6>
     c29:	70 00                	jo     c2b <printf@plt+0xb>
     c2b:	76 69                	jbe    c96 <getchar@plt+0x6>
     c2d:	5f                   	pop    %rdi
     c2e:	69 6e 73 65 72 74 69 	imul   $0x69747265,0x73(%rsi),%ebp
     c35:	6f                   	outsl  %ds:(%rsi),(%dx)
     c36:	6e                   	outsb  %ds:(%rsi),(%dx)
     c37:	5f                   	pop    %rdi
     c38:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     c3c:	61                   	(bad)  
     c3d:	70 00                	jo     c3f <lseek@plt+0xf>
     c3f:	72 6c                	jb     cad <malloc@plt+0xd>
     c41:	5f                   	pop    %rdi
     c42:	73 69                	jae    cad <malloc@plt+0xd>
     c44:	67 6e                	outsb  %ds:(%esi),(%dx)
     c46:	61                   	(bad)  
     c47:	6c                   	insb   (%dx),%es:(%rdi)
     c48:	5f                   	pop    %rdi
     c49:	65 76 65             	gs jbe cb1 <tcgetattr@plt+0x1>
     c4c:	6e                   	outsb  %ds:(%rsi),(%dx)
     c4d:	74 5f                	je     cae <malloc@plt+0xe>
     c4f:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
     c54:	73 77                	jae    ccd <tcsetattr@plt+0xd>
     c56:	5f                   	pop    %rdi
     c57:	6b 65 79 00          	imul   $0x0,0x79(%rbp),%esp
     c5b:	73 77                	jae    cd4 <open@plt+0x4>
     c5d:	5f                   	pop    %rdi
     c5e:	32 73 75             	xor    0x75(%rbx),%dh
     c61:	62                   	(bad)  
     c62:	00 50 52             	add    %dl,0x52(%rax)
     c65:	49                   	rex.WB
     c66:	4d 00 73 74          	rex.WRB add %r14b,0x74(%r11)
     c6a:	72 30                	jb     c9c <getchar@plt+0xc>
     c6c:	00 73 77             	add    %dh,0x77(%rbx)
     c6f:	5f                   	pop    %rdi
     c70:	75 6d                	jne    cdf <open@plt+0xf>
     c72:	53                   	push   %rbx
     c73:	6d                   	insl   (%dx),%es:(%rdi)
     c74:	6f                   	outsl  %ds:(%rsi),(%dx)
     c75:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
     c79:	5f                   	pop    %rdi
     c7a:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     c7d:	70 69                	jo     ce8 <sprintf@plt+0x8>
     c7f:	6c                   	insb   (%dx),%es:(%rdi)
     c80:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     c84:	5f                   	pop    %rdi
     c85:	75 47                	jne    cce <tcsetattr@plt+0xe>
     c87:	54                   	push   %rsp
     c88:	00 6f 4c             	add    %ch,0x4c(%rdi)
     c8b:	41 53                	push   %r11
     c8d:	54                   	push   %rsp
     c8e:	00 74 69 6c          	add    %dh,0x6c(%rcx,%rbp,2)
     c92:	64 65 5f             	fs gs pop %rdi
     c95:	61                   	(bad)  
     c96:	64 64 69 74 69 6f 6e 	fs imul $0x5f6c616e,%fs:0x6f(%rcx,%rbp,2),%esi
     c9d:	61 6c 5f 
     ca0:	70 72                	jo     d14 <__cxa_finalize@plt+0x4>
     ca2:	65 66 69 78 65 73 00 	imul   $0x73,%gs:0x65(%rax),%di
     ca9:	6f                   	outsl  %ds:(%rsi),(%dx)
     caa:	56                   	push   %rsi
     cab:	46                   	rex.RX
     cac:	4f 52                	rex.WRXB push %r10
     cae:	54                   	push   %rsp
     caf:	48 00 72 6c          	rex.W add %sil,0x6c(%rdx)
     cb3:	5f                   	pop    %rdi
     cb4:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     cb7:	70 6c                	jo     d25 <_start+0x5>
     cb9:	65 74 69             	gs je  d25 <_start+0x5>
     cbc:	6f                   	outsl  %ds:(%rsi),(%dx)
     cbd:	6e                   	outsb  %ds:(%rsi),(%dx)
     cbe:	5f                   	pop    %rdi
     cbf:	73 75                	jae    d36 <_start+0x16>
     cc1:	70 70                	jo     d33 <_start+0x13>
     cc3:	72 65                	jb     d2a <_start+0xa>
     cc5:	73 73                	jae    d3a <_start+0x1a>
     cc7:	5f                   	pop    %rdi
     cc8:	61                   	(bad)  
     cc9:	70 70                	jo     d3b <_start+0x1b>
     ccb:	65 6e                	outsb  %gs:(%rsi),(%dx)
     ccd:	64 00 74 69 6c       	add    %dh,%fs:0x6c(%rcx,%rbp,2)
     cd2:	64 65 5f             	fs gs pop %rdi
     cd5:	61                   	(bad)  
     cd6:	64 64 69 74 69 6f 6e 	fs imul $0x5f6c616e,%fs:0x6f(%rcx,%rbp,2),%esi
     cdd:	61 6c 5f 
     ce0:	73 75                	jae    d57 <deregister_tm_clones+0x7>
     ce2:	66 66 69 78 65 73 00 	data16 imul $0x73,0x65(%rax),%di
     ce9:	72 6c                	jb     d57 <deregister_tm_clones+0x7>
     ceb:	5f                   	pop    %rdi
     cec:	6d                   	insl   (%dx),%es:(%rdi)
     ced:	65 6e                	outsb  %gs:(%rsi),(%dx)
     cef:	75 5f                	jne    d50 <deregister_tm_clones>
     cf1:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     cf4:	70 6c                	jo     d62 <deregister_tm_clones+0x12>
     cf6:	65 74 69             	gs je  d62 <deregister_tm_clones+0x12>
     cf9:	6f                   	outsl  %ds:(%rsi),(%dx)
     cfa:	6e                   	outsb  %ds:(%rsi),(%dx)
     cfb:	5f                   	pop    %rdi
     cfc:	65 6e                	outsb  %gs:(%rsi),(%dx)
     cfe:	74 72                	je     d72 <deregister_tm_clones+0x22>
     d00:	79 5f                	jns    d61 <deregister_tm_clones+0x11>
     d02:	66 75 6e             	data16 jne d73 <deregister_tm_clones+0x23>
     d05:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     d09:	6e                   	outsb  %ds:(%rsi),(%dx)
     d0a:	00 73 77             	add    %dh,0x77(%rbx)
     d0d:	5f                   	pop    %rdi
     d0e:	53                   	push   %rbx
     d0f:	74 72                	je     d83 <deregister_tm_clones+0x33>
     d11:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
     d13:	6d                   	insl   (%dx),%es:(%rdi)
     d14:	70 00                	jo     d16 <__cxa_finalize@plt+0x6>
     d16:	72 6c                	jb     d84 <deregister_tm_clones+0x34>
     d18:	5f                   	pop    %rdi
     d19:	66 69 6c 65 6e 61 6d 	imul   $0x6d61,0x6e(%rbp,%riz,2),%bp
     d20:	65 5f                	gs pop %rdi
     d22:	71 75                	jno    d99 <register_tm_clones+0x9>
     d24:	6f                   	outsl  %ds:(%rsi),(%dx)
     d25:	74 69                	je     d90 <register_tm_clones>
     d27:	6e                   	outsb  %ds:(%rsi),(%dx)
     d28:	67 5f                	addr32 pop %rdi
     d2a:	66 75 6e             	data16 jne d9b <register_tm_clones+0xb>
     d2d:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     d31:	6e                   	outsb  %ds:(%rsi),(%dx)
     d32:	00 6c 73 65          	add    %ch,0x65(%rbx,%rsi,2)
     d36:	65 6b 00 5f          	imul   $0x5f,%gs:(%rax),%eax
     d3a:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     d3e:	61                   	(bad)  
     d3f:	70 5f                	jo     da0 <register_tm_clones+0x10>
     d41:	65 6e                	outsb  %gs:(%rsi),(%dx)
     d43:	74 72                	je     db7 <register_tm_clones+0x27>
     d45:	79 00                	jns    d47 <_start+0x27>
     d47:	68 69 73 74 6f       	pushq  $0x6f747369
     d4c:	72 79                	jb     dc7 <register_tm_clones+0x37>
     d4e:	5f                   	pop    %rdi
     d4f:	62 61                	(bad)  
     d51:	73 65                	jae    db8 <register_tm_clones+0x28>
     d53:	00 77 6f             	add    %dh,0x6f(%rdi)
     d56:	72 64                	jb     dbc <register_tm_clones+0x2c>
     d58:	00 73 77             	add    %dh,0x77(%rbx)
     d5b:	5f                   	pop    %rdi
     d5c:	30 65 71             	xor    %ah,0x71(%rbp)
     d5f:	75 00                	jne    d61 <deregister_tm_clones+0x11>
     d61:	72 6c                	jb     dcf <register_tm_clones+0x3f>
     d63:	5f                   	pop    %rdi
     d64:	71 75                	jno    ddb <register_tm_clones+0x4b>
     d66:	6f                   	outsl  %ds:(%rsi),(%dx)
     d67:	74 65                	je     dce <register_tm_clones+0x3e>
     d69:	5f                   	pop    %rdi
     d6a:	66 75 6e             	data16 jne ddb <register_tm_clones+0x4b>
     d6d:	63 5f 74             	movslq 0x74(%rdi),%ebx
     d70:	00 68 69             	add    %ch,0x69(%rax)
     d73:	73 74                	jae    de9 <__do_global_dtors_aux+0x9>
     d75:	6f                   	outsl  %ds:(%rsi),(%dx)
     d76:	72 79                	jb     df1 <__do_global_dtors_aux+0x11>
     d78:	5f                   	pop    %rdi
     d79:	6c                   	insb   (%dx),%es:(%rdi)
     d7a:	65 6e                	outsb  %gs:(%rsi),(%dx)
     d7c:	67 74 68             	addr32 je de7 <__do_global_dtors_aux+0x7>
     d7f:	00 72 6c             	add    %dh,0x6c(%rdx)
     d82:	5f                   	pop    %rdi
     d83:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     d86:	70 6c                	jo     df4 <__do_global_dtors_aux+0x14>
     d88:	65 74 69             	gs je  df4 <__do_global_dtors_aux+0x14>
     d8b:	6f                   	outsl  %ds:(%rsi),(%dx)
     d8c:	6e                   	outsb  %ds:(%rsi),(%dx)
     d8d:	5f                   	pop    %rdi
     d8e:	73 75                	jae    e05 <__do_global_dtors_aux+0x25>
     d90:	70 70                	jo     e02 <__do_global_dtors_aux+0x22>
     d92:	72 65                	jb     df9 <__do_global_dtors_aux+0x19>
     d94:	73 73                	jae    e09 <__do_global_dtors_aux+0x29>
     d96:	5f                   	pop    %rdi
     d97:	71 75                	jno    e0e <__do_global_dtors_aux+0x2e>
     d99:	6f                   	outsl  %ds:(%rsi),(%dx)
     d9a:	74 65                	je     e01 <__do_global_dtors_aux+0x21>
     d9c:	00 73 77             	add    %dh,0x77(%rbx)
     d9f:	5f                   	pop    %rdi
     da0:	32 47 54             	xor    0x54(%rdi),%al
     da3:	72 00                	jb     da5 <register_tm_clones+0x15>
     da5:	57                   	push   %rdi
     da6:	61                   	(bad)  
     da7:	64 64 72 00          	fs fs jb dab <register_tm_clones+0x1b>
     dab:	73 77                	jae    e24 <frame_dummy+0x4>
     dad:	5f                   	pop    %rdi
     dae:	66 69 6c 65 73 69 7a 	imul   $0x7a69,0x73(%rbp,%riz,2),%bp
     db5:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
     db9:	5f                   	pop    %rdi
     dba:	74 68                	je     e24 <frame_dummy+0x4>
     dbc:	72 6f                	jb     e2d <main+0x3>
     dbe:	77 00                	ja     dc0 <register_tm_clones+0x30>
     dc0:	72 6c                	jb     e2e <main+0x4>
     dc2:	5f                   	pop    %rdi
     dc3:	74 65                	je     e2a <main>
     dc5:	72 6d                	jb     e34 <main+0xa>
     dc7:	69 6e 61 6c 5f 6e 61 	imul   $0x616e5f6c,0x61(%rsi),%ebp
     dce:	6d                   	insl   (%dx),%es:(%rdi)
     dcf:	65 00 66 5f          	add    %ah,%gs:0x5f(%rsi)
     dd3:	62                   	(bad)  
     dd4:	6f                   	outsl  %ds:(%rsi),(%dx)
     dd5:	6f                   	outsl  %ds:(%rsi),(%dx)
     dd6:	74 00                	je     dd8 <register_tm_clones+0x48>
     dd8:	72 6c                	jb     e46 <main+0x1c>
     dda:	5f                   	pop    %rdi
     ddb:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     dde:	6d                   	insl   (%dx),%es:(%rdi)
     ddf:	61                   	(bad)  
     de0:	6e                   	outsb  %ds:(%rsi),(%dx)
     de1:	64 5f                	fs pop %rdi
     de3:	66 75 6e             	data16 jne e54 <main+0x2a>
     de6:	63 5f 74             	movslq 0x74(%rdi),%ebx
     de9:	00 72 6c             	add    %dh,0x6c(%rdx)
     dec:	5f                   	pop    %rdi
     ded:	63 70 76             	movslq 0x76(%rax),%esi
     df0:	66 75 6e             	data16 jne e61 <main+0x37>
     df3:	63 5f 74             	movslq 0x74(%rdi),%ebx
     df6:	00 72 6c             	add    %dh,0x6c(%rdx)
     df9:	5f                   	pop    %rdi
     dfa:	63 61 74             	movslq 0x74(%rcx),%esp
     dfd:	63 68 5f             	movslq 0x5f(%rax),%ebp
     e00:	73 69                	jae    e6b <main+0x41>
     e02:	67 6e                	outsb  %ds:(%esi),(%dx)
     e04:	61                   	(bad)  
     e05:	6c                   	insb   (%dx),%es:(%rdi)
     e06:	73 00                	jae    e08 <__do_global_dtors_aux+0x28>
     e08:	61                   	(bad)  
     e09:	5f                   	pop    %rdi
     e0a:	73 69                	jae    e75 <v2r+0x8>
     e0c:	7a 65                	jp     e73 <v2r+0x6>
     e0e:	00 72 6c             	add    %dh,0x6c(%rdx)
     e11:	5f                   	pop    %rdi
     e12:	72 65                	jb     e79 <v2r+0xc>
     e14:	64 69 73 70 6c 61 79 	imul   $0x5f79616c,%fs:0x70(%rbx),%esi
     e1b:	5f 
     e1c:	66 75 6e             	data16 jne e8d <v2r+0x20>
     e1f:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     e23:	6e                   	outsb  %ds:(%rsi),(%dx)
     e24:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
     e28:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
     e2d:	67 20 75 6e          	and    %dh,0x6e(%ebp)
     e31:	73 69                	jae    e9c <make_name+0x5>
     e33:	67 6e                	outsb  %ds:(%esi),(%dx)
     e35:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
     e3a:	74 00                	je     e3c <main+0x12>
     e3c:	77 68                	ja     ea6 <make_name+0xf>
     e3e:	61                   	(bad)  
     e3f:	74 00                	je     e41 <main+0x17>
     e41:	72 6c                	jb     eaf <make_name+0x18>
     e43:	5f                   	pop    %rdi
     e44:	6c                   	insb   (%dx),%es:(%rdi)
     e45:	69 62 72 61 72 79 5f 	imul   $0x5f797261,0x72(%rdx),%esp
     e4c:	76 65                	jbe    eb3 <make_name+0x1c>
     e4e:	72 73                	jb     ec3 <make_name+0x2c>
     e50:	69 6f 6e 00 68 69 73 	imul   $0x73696800,0x6e(%rdi),%ebp
     e57:	74 6f                	je     ec8 <make_name+0x31>
     e59:	72 79                	jb     ed4 <make_name+0x3d>
     e5b:	5f                   	pop    %rdi
     e5c:	71 75                	jno    ed3 <make_name+0x3c>
     e5e:	6f                   	outsl  %ds:(%rsi),(%dx)
     e5f:	74 65                	je     ec6 <make_name+0x2f>
     e61:	73 5f                	jae    ec2 <make_name+0x2b>
     e63:	69 6e 68 69 62 69 74 	imul   $0x74696269,0x68(%rsi),%ebp
     e6a:	5f                   	pop    %rdi
     e6b:	65 78 70             	gs js  ede <make_name+0x47>
{
     e6e:	61                   	(bad)  
     e6f:	6e                   	outsb  %ds:(%rsi),(%dx)
     e70:	73 69                	jae    edb <make_name+0x44>
     e72:	6f                   	outsl  %ds:(%rsi),(%dx)
     e73:	6e                   	outsb  %ds:(%rsi),(%dx)
	return &  (DescriptorTable [ VAddr >> (32-4) ])[VAddr];
     e74:	00 73 77             	add    %dh,0x77(%rbx)
     e77:	5f                   	pop    %rdi
     e78:	47 54                	rex.RXB push %r12
     e7a:	00 72 6c             	add    %dh,0x6c(%rdx)
     e7d:	5f                   	pop    %rdi
     e7e:	64 69 72 65 63 74 6f 	imul   $0x726f7463,%fs:0x65(%rdx),%esi
     e85:	72 
     e86:	79 5f                	jns    ee7 <make_name+0x50>
     e88:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
     e8b:	70 6c                	jo     ef9 <umul+0x1>
     e8d:	65 74 69             	gs je  ef9 <umul+0x1>
     e90:	6f                   	outsl  %ds:(%rsi),(%dx)
     e91:	6e                   	outsb  %ds:(%rsi),(%dx)
     e92:	5f                   	pop    %rdi
     e93:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
{
     e98:	5f                   	pop    %rdi
     e99:	5f                   	pop    %rdi
     e9a:	6f                   	outsl  %ds:(%rsi),(%dx)
     e9b:	66 66 5f             	data16 pop %di
     e9e:	74 00                	je     ea0 <make_name+0x9>
     ea0:	68 69 73 74 6f       	pushq  $0x6f747369
 for(i=0;i<len && i<256;i++) {
     ea5:	72 79                	jb     f20 <umul+0x28>
     ea7:	5f                   	pop    %rdi
     ea8:	65 78 70             	gs js  f1b <umul+0x23>
    filename[i]=addr[i];
     eab:	61                   	(bad)  
     eac:	6e                   	outsb  %ds:(%rsi),(%dx)
     ead:	73 69                	jae    f18 <umul+0x20>
     eaf:	6f                   	outsl  %ds:(%rsi),(%dx)
     eb0:	6e                   	outsb  %ds:(%rsi),(%dx)
     eb1:	5f                   	pop    %rdi
     eb2:	63 68 61             	movslq 0x61(%rax),%ebp
     eb5:	72 00                	jb     eb7 <make_name+0x20>
     eb7:	72 6c                	jb     f25 <umul+0x2d>
     eb9:	5f                   	pop    %rdi
     eba:	62                   	(bad)  
     ebb:	69 6e 64 69 6e 67 5f 	imul   $0x5f676e69,0x64(%rsi),%ebp
     ec2:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
     ec6:	61                   	(bad)  
     ec7:	70 00                	jo     ec9 <make_name+0x32>
     ec9:	72 6c                	jb     f37 <umul+0x3f>
 for(i=0;i<len && i<256;i++) {
     ecb:	5f                   	pop    %rdi
     ecc:	68 6f 6f 6b 5f       	pushq  $0x5f6b6f6f
     ed1:	66 75 6e             	data16 jne f42 <umul+0x4a>
     ed4:	63 5f 74             	movslq 0x74(%rdi),%ebx
     ed7:	00 73 77             	add    %dh,0x77(%rbx)
     eda:	5f                   	pop    %rdi
     edb:	70 65                	jo     f42 <umul+0x4a>
     edd:	72 66                	jb     f45 <umul+0x4d>
     edf:	6f                   	outsl  %ds:(%rsi),(%dx)
 filename[i]='\0';
     ee0:	72 6d                	jb     f4f <umul+0x57>
     ee2:	00 73 77             	add    %dh,0x77(%rbx)
     ee5:	5f                   	pop    %rdi
     ee6:	56                   	push   %rsi
     ee7:	46                   	rex.RX
     ee8:	4d                   	rex.WRB
     ee9:	41                   	rex.B
     eea:	64 72 00             	fs jb  eed <make_name+0x56>
     eed:	73 77                	jae    f66 <umul+0x6e>
     eef:	5f                   	pop    %rdi
     ef0:	53                   	push   %rbx
 return 1;
     ef1:	48                   	rex.W
     ef2:	65 61                	gs (bad) 
     ef4:	64 65 72 00          	fs gs jb ef8 <umul>
{
     ef8:	73 77                	jae    f71 <umul+0x79>
     efa:	5f                   	pop    %rdi
     efb:	73 74                	jae    f71 <umul+0x79>
     efd:	72 00                	jb     eff <umul+0x7>
     eff:	73 77                	jae    f78 <umul+0x80>
     f01:	5f                   	pop    %rdi
     f02:	30 47 54             	xor    %al,0x54(%rdi)
     f05:	00 48 50             	add    %cl,0x50(%rax)
     f08:	41 54                	push   %r12
     f0a:	48 00 68 69          	rex.W add %bpl,0x69(%rax)
     f0e:	73 74                	jae    f84 <umul+0x8c>
     f10:	6f                   	outsl  %ds:(%rsi),(%dx)
     f11:	72 79                	jb     f8c <umul+0x94>
     f13:	5f                   	pop    %rdi
     f14:	6c                   	insb   (%dx),%es:(%rdi)
     f15:	69 6e 65 73 5f 72 65 	imul   $0x65725f73,0x65(%rsi),%ebp
 ah=*a>>16;al=*a&0xffff;
     f1c:	61                   	(bad)  
     f1d:	64 5f                	fs pop %rdi
     f1f:	66 72 6f             	data16 jb f91 <umul+0x99>
     f22:	6d                   	insl   (%dx),%es:(%rdi)
     f23:	5f                   	pop    %rdi
     f24:	66 69 6c 65 00 68 69 	imul   $0x6968,0x0(%rbp,%riz,2),%bp
     f2b:	73 74                	jae    fa1 <umul+0xa9>
     f2d:	6f                   	outsl  %ds:(%rsi),(%dx)
     f2e:	72 79                	jb     fa9 <umul+0xb1>
     f30:	5f                   	pop    %rdi
 bh=*b>>16;bl=*b&0xffff;
     f31:	69 6e 68 69 62 69 74 	imul   $0x74696269,0x68(%rsi),%ebp
     f38:	5f                   	pop    %rdi
     f39:	65 78 70             	gs js  fac <umul+0xb4>
     f3c:	61                   	(bad)  
     f3d:	6e                   	outsb  %ds:(%rsi),(%dx)
     f3e:	73 69                	jae    fa9 <umul+0xb1>
     f40:	6f                   	outsl  %ds:(%rsi),(%dx)
     f41:	6e                   	outsb  %ds:(%rsi),(%dx)
     f42:	5f                   	pop    %rdi
     f43:	66 75 6e             	data16 jne fb4 <umul+0xbc>
     f46:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
     f4a:	6e                   	outsb  %ds:(%rsi),(%dx)
 pl=al*bl;
     f4b:	00 73 77             	add    %dh,0x77(%rbx)
     f4e:	5f                   	pop    %rdi
     f4f:	64 75 70             	fs jne fc2 <umul+0xca>
     f52:	00 73 77             	add    %dh,0x77(%rbx)
 if((ah|bh)==0) {
     f55:	5f                   	pop    %rdi
     f56:	6b 65 79 71          	imul   $0x71,0x79(%rbp),%esp
     f5a:	00 72 6c             	add    %dh,0x6c(%rdx)
     f5d:	5f                   	pop    %rdi
     f5e:	6e                   	outsb  %ds:(%rsi),(%dx)
  ph=0;
     f5f:	75 6d                	jne    fce <umul+0xd6>
     f61:	5f                   	pop    %rdi
     f62:	63 68 61             	movslq 0x61(%rax),%ebp
     f65:	72 73                	jb     fda <umul+0xe2>
     f67:	5f                   	pop    %rdi
  pm1=al*bh;
     f68:	74 6f                	je     fd9 <umul+0xe1>
     f6a:	5f                   	pop    %rdi
     f6b:	72 65                	jb     fd2 <umul+0xda>
     f6d:	61                   	(bad)  
     f6e:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
  pm2=ah*bl;
     f72:	5f                   	pop    %rdi
     f73:	64 69 73 70 61 74 63 	imul   $0x68637461,%fs:0x70(%rbx),%esi
     f7a:	68 
     f7b:	69 6e 67 00 72 6c 5f 	imul   $0x5f6c7200,0x67(%rsi),%ebp
  ph=ah*bh;
     f82:	6c                   	insb   (%dx),%es:(%rdi)
     f83:	61                   	(bad)  
     f84:	73 74                	jae    ffa <umul+0x102>
  pl=pl+(pm1<<16);
     f86:	5f                   	pop    %rdi
     f87:	66 75 6e             	data16 jne ff8 <umul+0x100>
     f8a:	63 00                	movslq (%rax),%eax
     f8c:	6f                   	outsl  %ds:(%rsi),(%dx)
     f8d:	53                   	push   %rbx
     f8e:	54                   	push   %rsp
  ph+=(pl<(pm1<<16));
     f8f:	41 52                	push   %r10
     f91:	54                   	push   %rsp
     f92:	00 72 6c             	add    %dh,0x6c(%rdx)
     f95:	5f                   	pop    %rdi
     f96:	72 65                	jb     ffd <udiv>
     f98:	61                   	(bad)  
     f99:	64 6c                	fs insb (%dx),%es:(%rdi)
     f9b:	69 6e 65 5f 76 65 72 	imul   $0x7265765f,0x65(%rsi),%ebp
  pl=pl+(pm2<<16);
     fa2:	73 69                	jae    100d <udiv+0x10>
     fa4:	6f                   	outsl  %ds:(%rsi),(%dx)
     fa5:	6e                   	outsb  %ds:(%rsi),(%dx)
     fa6:	00 73 77             	add    %dh,0x77(%rbx)
     fa9:	5f                   	pop    %rdi
  ph+=(pl<(pm2<<16));
     faa:	49                   	rex.WB
     fab:	46 00 72 6c          	rex.RX add %r14b,0x6c(%rdx)
     faf:	5f                   	pop    %rdi
     fb0:	67 65 74 73          	addr32 gs je 1027 <udiv+0x2a>
     fb4:	00 72 6c             	add    %dh,0x6c(%rdx)
     fb7:	5f                   	pop    %rdi
     fb8:	6b 65 79 5f          	imul   $0x5f,0x79(%rbp),%esp
  ph=ph+(pm1>>16)+(pm2>>16);
     fbc:	73 65                	jae    1023 <udiv+0x26>
     fbe:	71 75                	jno    1035 <udiv+0x38>
     fc0:	65 6e                	outsb  %gs:(%rsi),(%dx)
     fc2:	63 65 5f             	movslq 0x5f(%rbp),%esp
     fc5:	6c                   	insb   (%dx),%es:(%rdi)
     fc6:	65 6e                	outsb  %gs:(%rsi),(%dx)
     fc8:	67 74 68             	addr32 je 1033 <udiv+0x36>
     fcb:	00 72 6c             	add    %dh,0x6c(%rdx)
     fce:	5f                   	pop    %rdi
     fcf:	65 78 65             	gs js  1037 <udiv+0x3a>
     fd2:	63 75 74             	movslq 0x74(%rbp),%esi
 *a=ph;*b=pl;
     fd5:	69 6e 67 5f 6b 65 79 	imul   $0x79656b5f,0x67(%rsi),%ebp
     fdc:	73 65                	jae    1043 <udiv+0x46>
     fde:	71 00                	jno    fe0 <umul+0xe8>
     fe0:	5f                   	pop    %rdi
     fe1:	49                   	rex.WB
     fe2:	4f 5f                	rex.WRXB pop %r15
     fe4:	62 61                	(bad)  
}
     fe6:	63 6b 75             	movslq 0x75(%rbx),%ebp
     fe9:	70 5f                	jo     104a <udiv+0x4d>
     feb:	62 61                	(bad)  
     fed:	73 65                	jae    1054 <udiv+0x57>
     fef:	00 5f 73             	add    %bl,0x73(%rdi)
     ff2:	68 6f 72 74 62       	pushq  $0x6274726f
     ff7:	75 66                	jne    105f <udiv+0x62>
     ff9:	00 43 52             	add    %al,0x52(%rbx)
     ffc:	45                   	rex.RB
{
     ffd:	41 54                	push   %r12
     fff:	45 00 73 68          	add    %r14b,0x68(%r11)
    1003:	65 72 65             	gs jb  106b <udiv+0x6e>
    1006:	00 5f 49             	add    %bl,0x49(%rdi)
    1009:	4f 5f                	rex.WRXB pop %r15
    100b:	32 5f 31             	xor    0x31(%rdi),%bl
 qh=*b;ql=*c;d=*a;
    100e:	5f                   	pop    %rdi
    100f:	73 74                	jae    1085 <udiv+0x88>
    1011:	64 6f                	outsl  %fs:(%rsi),(%dx)
    1013:	75 74                	jne    1089 <udiv+0x8c>
    1015:	5f                   	pop    %rdi
    1016:	00 6f 48             	add    %ch,0x48(%rdi)
    1019:	41                   	rex.B
    101a:	4e                   	rex.WRX
    101b:	44                   	rex.R
    101c:	4c                   	rex.WR
    101d:	45 52                	rex.RB push %r10
    101f:	00 72 6c             	add    %dh,0x6c(%rdx)
    1022:	5f                   	pop    %rdi
    1023:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    1026:	70 6c                	jo     1094 <udiv+0x97>
 if(qh==0) {
    1028:	65 74 69             	gs je  1094 <udiv+0x97>
    102b:	6f                   	outsl  %ds:(%rsi),(%dx)
    102c:	6e                   	outsb  %ds:(%rsi),(%dx)
    102d:	5f                   	pop    %rdi
  *b=ql/d;
    102e:	77 6f                	ja     109f <udiv+0xa2>
    1030:	72 64                	jb     1096 <udiv+0x99>
    1032:	5f                   	pop    %rdi
    1033:	62 72 65 61 6b       	(bad)  {%k1}
    1038:	5f                   	pop    %rdi
    1039:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
    103e:	73 77                	jae    10b7 <COM>
    1040:	5f                   	pop    %rdi
  *c=ql%d;
    1041:	53                   	push   %rbx
    1042:	46 69 6e 64 00 74 69 	rex.RX imul $0x6c697400,0x64(%rsi),%r13d
    1049:	6c 
    104a:	64 65 5f             	fs gs pop %rdi
    104d:	65 78 70             	gs js  10c0 <COM+0x9>
    1050:	61                   	(bad)  
    1051:	6e                   	outsb  %ds:(%rsi),(%dx)
}
    1052:	73 69                	jae    10bd <COM+0x6>
  for(i=0;i<32;i++) {
    1054:	6f                   	outsl  %ds:(%rsi),(%dx)
    1055:	6e                   	outsb  %ds:(%rsi),(%dx)
    1056:	5f                   	pop    %rdi
    1057:	70 72                	jo     10cb <COM+0x14>
    1059:	65 65 78 70          	gs gs js 10cd <COM+0x16>
   cy=qh&0x80000000;
    105d:	61                   	(bad)  
    105e:	6e                   	outsb  %ds:(%rsi),(%dx)
    105f:	73 69                	jae    10ca <COM+0x13>
    1061:	6f                   	outsl  %ds:(%rsi),(%dx)
    1062:	6e                   	outsb  %ds:(%rsi),(%dx)
    1063:	5f                   	pop    %rdi
    1064:	68 6f 6f 6b 00       	pushq  $0x6b6f6f
   qh<<=1;
    1069:	73 77                	jae    10e2 <COM+0x2b>
   if(ql&0x80000000)qh++;
    106b:	5f                   	pop    %rdi
    106c:	41                   	rex.B
    106d:	47                   	rex.RXB
    106e:	41                   	rex.B
    106f:	49                   	rex.WB
    1070:	4e 00 5f 6e          	rex.WRX add %r11b,0x6e(%rdi)
    1074:	65 78 74             	gs js  10eb <COM+0x34>
   ql<<=1;
    1077:	00 5f 5f             	add    %bl,0x5f(%rdi)
   if(qh>=d||cy) {
    107a:	6f                   	outsl  %ds:(%rsi),(%dx)
    107b:	66 66 36 34 5f       	data16 data16 ss xor $0x5f,%al
    1080:	74 00                	je     1082 <udiv+0x85>
    1082:	72 6c                	jb     10f0 <COM+0x39>
    1084:	5f                   	pop    %rdi
    1085:	65 6e                	outsb  %gs:(%rsi),(%dx)
    qh-=d;
    1087:	64 00 4b 45          	add    %cl,%fs:0x45(%rbx)
    108b:	59                   	pop    %rcx
    108c:	4d                   	rex.WRB
    ql++;
    108d:	41 50                	push   %r8
    108f:	5f                   	pop    %rdi
    1090:	45                   	rex.RB
    cy=0;
    1091:	4e 54                	rex.WRX push %rsp
    1093:	52                   	push   %rdx
    1094:	59                   	pop    %rcx
    1095:	5f                   	pop    %rdi
    1096:	41 52                	push   %r10
   *c=qh;
    1098:	52                   	push   %rdx
    1099:	41 59                	pop    %r9
    109b:	00 73 77             	add    %dh,0x77(%rbx)
    109e:	5f                   	pop    %rdi
    109f:	65 6d                	gs insl (%dx),%es:(%rdi)
   *b=ql;
    10a1:	69 74 00 72 6c 5f 69 	imul   $0x67695f6c,0x72(%rax,%rax,1),%esi
    10a8:	67 
    10a9:	6e                   	outsb  %ds:(%rsi),(%dx)
  for(i=0;i<32;i++) {
    10aa:	6f                   	outsl  %ds:(%rsi),(%dx)
    10ab:	72 65                	jb     1112 <COM+0x5b>
    10ad:	5f                   	pop    %rdi
    10ae:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    10b1:	70 6c                	jo     111f <WCOM>
    10b3:	65 74 69             	gs je  111f <WCOM>
}
    10b6:	6f                   	outsl  %ds:(%rsi),(%dx)
{ 
    10b7:	6e                   	outsb  %ds:(%rsi),(%dx)
    10b8:	5f                   	pop    %rdi
    10b9:	64 75 70             	fs jne 112c <WCOM+0xd>
    10bc:	6c                   	insb   (%dx),%es:(%rdi)
    10bd:	69 63 61 74 65 73 00 	imul   $0x736574,0x61(%rbx),%esp
 CELL(HERE)=dd;
    10c4:	73 77                	jae    113d <WCOM+0x1e>
    10c6:	5f                   	pop    %rdi
    10c7:	75 4c                	jne    1115 <COM+0x5e>
    10c9:	54                   	push   %rsp
    10ca:	00 73 77             	add    %dh,0x77(%rbx)
    10cd:	5f                   	pop    %rdi
    10ce:	73 6c                	jae    113c <WCOM+0x1d>
    10d0:	69 74 43 6f 6d 70 00 	imul   $0x7300706d,0x6f(%rbx,%rax,2),%esi
    10d7:	73 
    10d8:	77 5f                	ja     1139 <WCOM+0x1a>
    10da:	66 72 6f             	data16 jb 114c <WCOM+0x2d>
    10dd:	6d                   	insl   (%dx),%es:(%rdi)
    10de:	5f                   	pop    %rdi
    10df:	63 61 74             	movslq 0x74(%rcx),%esp
    10e2:	63 68 00             	movslq 0x0(%rax),%ebp
    10e5:	5f                   	pop    %rdi
    10e6:	49                   	rex.WB
    10e7:	4f 5f                	rex.WRXB pop %r15
    10e9:	62                   	(bad)  
    10ea:	75 66                	jne    1152 <WCOM+0x33>
    10ec:	5f                   	pop    %rdi
    10ed:	65 6e                	outsb  %gs:(%rsi),(%dx)
    10ef:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
    10f3:	5f                   	pop    %rdi
HERE+=4;
    10f4:	47 54                	rex.RXB push %r12
    10f6:	72 00                	jb     10f8 <COM+0x41>
    10f8:	73 77                	jae    1171 <WCOM+0x52>
    10fa:	5f                   	pop    %rdi
    10fb:	68 69 00 73 77       	pushq  $0x77730069
    1100:	5f                   	pop    %rdi
    1101:	65 71 75             	gs jno 1179 <WCOM+0x5a>
    1104:	00 72 6c             	add    %dh,0x6c(%rdx)
    1107:	5f                   	pop    %rdi
    1108:	65 64 69 74 69 6e 67 	gs imul $0x6f6d5f67,%fs:0x6e(%rcx,%rbp,2),%esi
    110f:	5f 6d 6f 
    1112:	64 65 00 73 77       	fs add %dh,%gs:0x77(%rbx)
    1117:	5f                   	pop    %rdi
    1118:	66 65 6d             	gs insw (%dx),%es:(%rdi)
    111b:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
{ 
    111f:	5f                   	pop    %rdi
    1120:	70 6f                	jo     1191 <CCOM+0x5>
    1122:	69 6e 74 00 72 6c 5f 	imul   $0x5f6c7200,0x74(%rsi),%ebp
    1129:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    112c:	70 64                	jo     1192 <CCOM+0x6>
	WCELL(HERE)=dd;
    112e:	69 73 70 5f 66 75 6e 	imul   $0x6e75665f,0x70(%rbx),%esi
    1135:	63 5f 74             	movslq 0x74(%rdi),%ebx
    1138:	00 72 6c             	add    %dh,0x6c(%rdx)
    113b:	5f                   	pop    %rdi
    113c:	64 65 70 72          	fs gs jo 11b2 <CCOM+0x26>
    1140:	65 70 5f             	gs jo  11a2 <CCOM+0x16>
    1143:	74 65                	je     11aa <CCOM+0x1e>
    1145:	72 6d                	jb     11b4 <CCOM+0x28>
    1147:	5f                   	pop    %rdi
    1148:	66 75 6e             	data16 jne 11b9 <CCOM+0x2d>
    114b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    114f:	6e                   	outsb  %ds:(%rsi),(%dx)
    1150:	00 46 55             	add    %al,0x55(%rsi)
    1153:	4e                   	rex.WRX
    1154:	4d                   	rex.WRB
    1155:	41 50                	push   %r8
    1157:	00 6f 54             	add    %ch,0x54(%rdi)
    115a:	4f 5f                	rex.WRXB pop %r15
    115c:	49                   	rex.WB
    115d:	4e 00 73 77          	rex.WRX add %r14b,0x77(%rbx)
	HERE+=2;
    1161:	5f                   	pop    %rdi
    1162:	6c                   	insb   (%dx),%es:(%rdi)
    1163:	73 68                	jae    11cd <CCOM+0x41>
    1165:	69 66 74 00 72 6c 5f 	imul   $0x5f6c7200,0x74(%rsi),%esp
    116c:	70 65                	jo     11d3 <CCOM+0x47>
    116e:	6e                   	outsb  %ds:(%rsi),(%dx)
    116f:	64 69 6e 67 5f 69 6e 	imul   $0x706e695f,%fs:0x67(%rsi),%ebp
    1176:	70 
    1177:	75 74                	jne    11ed <CCOM+0x61>
    1179:	00 73 77             	add    %dh,0x77(%rbx)
    117c:	5f                   	pop    %rdi
    117d:	41                   	rex.B
    117e:	48                   	rex.W
    117f:	45                   	rex.RB
    1180:	41                   	rex.B
    1181:	44 00 73 77          	add    %r14b,0x77(%rbx)
    1185:	5f                   	pop    %rdi
    1186:	42                   	rex.X
    1187:	45                   	rex.RB
    1188:	47                   	rex.RXB
}
    1189:	49                   	rex.WB
    118a:	4e 00 73 77          	rex.WRX add %r14b,0x77(%rbx)
{ 
    118e:	5f                   	pop    %rdi
    118f:	73 63                	jae    11f4 <CCOM+0x68>
    1191:	61                   	(bad)  
    1192:	6e                   	outsb  %ds:(%rsi),(%dx)
    1193:	31 00                	xor    %eax,(%rax)
    1195:	72 6c                	jb     1203 <StrComp+0xc>
    1197:	5f                   	pop    %rdi
    1198:	70 72                	jo     120c <StrComp+0x15>
 BYTE(HERE)=dd;
    119a:	65 66 65 72 5f       	gs data16 gs jb 11fe <StrComp+0x7>
    119f:	65 6e                	outsb  %gs:(%rsi),(%dx)
    11a1:	76 5f                	jbe    1202 <StrComp+0xb>
    11a3:	77 69                	ja     120e <StrComp+0x17>
    11a5:	6e                   	outsb  %ds:(%rsi),(%dx)
    11a6:	73 69                	jae    1211 <StrComp+0x1a>
    11a8:	7a 65                	jp     120f <StrComp+0x18>
    11aa:	00 73 77             	add    %dh,0x77(%rbx)
    11ad:	5f                   	pop    %rdi
    11ae:	72 70                	jb     1220 <StrComp+0x29>
    11b0:	53                   	push   %rbx
    11b1:	54                   	push   %rsp
    11b2:	00 73 74             	add    %dh,0x74(%rbx)
    11b5:	64 65 72 72          	fs gs jb 122b <StrComp+0x34>
    11b9:	00 73 68             	add    %dh,0x68(%rbx)
    11bc:	6f                   	outsl  %ds:(%rsi),(%dx)
    11bd:	72 74                	jb     1233 <StrComp+0x3c>
    11bf:	20 69 6e             	and    %ch,0x6e(%rcx)
    11c2:	74 00                	je     11c4 <CCOM+0x38>
    11c4:	73 77                	jae    123d <StrComp+0x46>
    11c6:	5f                   	pop    %rdi
    11c7:	72 65                	jb     122e <StrComp+0x37>
    11c9:	61                   	(bad)  
    11ca:	64 66 69 6c 65 00 73 	imul   $0x7773,%fs:0x0(%rbp,%riz,2),%bp
    11d1:	77 
  HERE+=1;
    11d2:	5f                   	pop    %rdi
    11d3:	72 73                	jb     1248 <StrComp+0x51>
    11d5:	68 69 66 74 00       	pushq  $0x746669
    11da:	73 77                	jae    1253 <StrComp+0x5c>
    11dc:	5f                   	pop    %rdi
    11dd:	69 70 00 73 77 5f 63 	imul   $0x635f7773,0x0(%rax),%esi
    11e4:	53                   	push   %rbx
    11e5:	54                   	push   %rsp
    11e6:	61                   	(bad)  
    11e7:	00 75 64             	add    %dh,0x64(%rbp)
    11ea:	69 76 00 72 6c 5f 63 	imul   $0x635f6c72,0x0(%rsi),%esi
    11f1:	6f                   	outsl  %ds:(%rsi),(%dx)
    11f2:	6d                   	insl   (%dx),%es:(%rdi)
    11f3:	70 65                	jo     125a <StrComp+0x63>
}
    11f5:	6e                   	outsb  %ds:(%rsi),(%dx)
    11f6:	74 72                	je     126a <StrComp+0x73>
{ __u32 addr1,addr0;
    11f8:	79 5f                	jns    1259 <StrComp+0x62>
    11fa:	66 75 6e             	data16 jne 126b <StrComp+0x74>
    11fd:	63 5f 74             	movslq 0x74(%rdi),%ebx
    1200:	00 5f 76             	add    %bl,0x76(%rdi)
    1203:	74 61                	je     1266 <StrComp+0x6f>
    1205:	62                   	(bad)  
    1206:	6c                   	insb   (%dx),%es:(%rdi)
addr0=HERE;
    1207:	65 5f                	gs pop %rdi
    1209:	6f                   	outsl  %ds:(%rsi),(%dx)
    120a:	66 66 73 65          	data16 data16 jae 1273 <StrComp+0x7c>
    120e:	74 00                	je     1210 <StrComp+0x19>
    1210:	73 77                	jae    1289 <StrComp+0x92>
    1212:	5f                   	pop    %rdi
    1213:	61                   	(bad)  
    1214:	64 64 53             	fs fs push %rbx
    1217:	54                   	push   %rsp
    1218:	00 73 77             	add    %dh,0x77(%rbx)
    121b:	5f                   	pop    %rdi
    121c:	50                   	push   %rax
    121d:	61                   	(bad)  
    121e:	72 73                	jb     1293 <StrComp+0x9c>
    1220:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
    1224:	5f                   	pop    %rdi
    1225:	64 65 63 64 6f 74    	fs movslq %gs:0x74(%rdi,%rbp,2),%esp
    122b:	00 72 6c             	add    %dh,0x6c(%rdx)
addr1=addr0+1;
    122e:	5f                   	pop    %rdi
    122f:	65 72 61             	gs jb  1293 <StrComp+0x9c>
    1232:	73 65                	jae    1299 <StrComp+0xa2>
    1234:	5f                   	pop    %rdi
    1235:	65 6d                	gs insl (%dx),%es:(%rdi)
while(size--)
    1237:	70 74                	jo     12ad <StrComp+0xb6>
	   BYTE(addr1++)=*word++;
    1239:	79 5f                	jns    129a <StrComp+0xa3>
    123b:	6c                   	insb   (%dx),%es:(%rdi)
    123c:	69 6e 65 00 73 77 5f 	imul   $0x5f777300,0x65(%rsi),%ebp
    1243:	30 62 72             	xor    %ah,0x72(%rdx)
    1246:	61                   	(bad)  
    1247:	6e                   	outsb  %ds:(%rsi),(%dx)
    1248:	63 68 00             	movslq 0x0(%rax),%ebp
    124b:	73 77                	jae    12c4 <StrComp+0xcd>
    124d:	5f                   	pop    %rdi
    124e:	32 6c 6f 61          	xor    0x61(%rdi,%rbp,2),%ch
    1252:	64 00 6d 65          	add    %ch,%fs:0x65(%rbp)
    1256:	6d                   	insl   (%dx),%es:(%rdi)
    1257:	63 61 73             	movslq 0x73(%rcx),%esp
    125a:	65 63 6d 70          	movslq %gs:0x70(%rbp),%ebp
while(size--)
    125e:	00 73 77             	add    %dh,0x77(%rbx)
    1261:	5f                   	pop    %rdi
    1262:	75 6d                	jne    12d1 <StrComp+0xda>
    1264:	69 6e 00 73 77 5f 4c 	imul   $0x4c5f7773,0x0(%rsi),%ebp
BYTE(addr0)=addr1-addr0-1;
    126b:	54                   	push   %rsp
    126c:	00 73 77             	add    %dh,0x77(%rbx)
    126f:	5f                   	pop    %rdi
    1270:	53                   	push   %rbx
    1271:	6f                   	outsl  %ds:(%rsi),(%dx)
    1272:	75 72                	jne    12e6 <StrComp+0xef>
    1274:	63 65 00             	movslq 0x0(%rbp),%esp
    1277:	72 6c                	jb     12e5 <StrComp+0xee>
    1279:	5f                   	pop    %rdi
    127a:	62 61                	(bad)  
    127c:	73 69                	jae    12e7 <StrComp+0xf0>
    127e:	63 5f 71             	movslq 0x71(%rdi),%ebx
    1281:	75 6f                	jne    12f2 <SHEADER+0x6>
    1283:	74 65                	je     12ea <StrComp+0xf3>
    1285:	5f                   	pop    %rdi
    1286:	63 68 61             	movslq 0x61(%rax),%ebp
HERE=addr1;
    1289:	72 61                	jb     12ec <SHEADER>
    128b:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
    128f:	73 00                	jae    1291 <StrComp+0x9a>
    1291:	5f                   	pop    %rdi
    1292:	5f                   	pop    %rdi
    1293:	64 61                	fs (bad) 
    1295:	79 6c                	jns    1303 <SHEADER+0x17>
    1297:	69 67 68 74 00 61 5f 	imul   $0x5f610074,0x68(%rdi),%esp
    129e:	61                   	(bad)  
    129f:	64 64 72 00          	fs fs jb 12a3 <StrComp+0xac>
    12a3:	72 6c                	jb     1311 <SHEADER+0x25>
    12a5:	5f                   	pop    %rdi
    12a6:	70 72                	jo     131a <SHEADER+0x2e>
    12a8:	6f                   	outsl  %ds:(%rsi),(%dx)
    12a9:	6d                   	insl   (%dx),%es:(%rdi)
    12aa:	70 74                	jo     1320 <SHEADER+0x34>
    12ac:	00 73 77             	add    %dh,0x77(%rbx)
    12af:	5f                   	pop    %rdi
if(HERE&1)CCOM(0);
    12b0:	30 4c 54 00          	xor    %cl,0x0(%rsp,%rdx,2)
    12b4:	68 69 73 74 6f       	pushq  $0x6f747369
    12b9:	72 79                	jb     1334 <SHEADER+0x48>
    12bb:	5f                   	pop    %rdi
    12bc:	6d                   	insl   (%dx),%es:(%rdi)
    12bd:	75 6c                	jne    132b <SHEADER+0x3f>
    12bf:	74 69                	je     132a <SHEADER+0x3e>
    12c1:	6c                   	insb   (%dx),%es:(%rdi)
    12c2:	69 6e 65 5f 65 6e 74 	imul   $0x746e655f,0x65(%rsi),%ebp
    12c9:	72 69                	jb     1334 <SHEADER+0x48>
    12cb:	65 73 00             	gs jae 12ce <StrComp+0xd7>
    12ce:	73 77                	jae    1347 <SHEADER+0x5b>
    12d0:	5f                   	pop    %rdi
    12d1:	61                   	(bad)  
    12d2:	6e                   	outsb  %ds:(%rsi),(%dx)
    12d3:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
    12d7:	5f                   	pop    %rdi
    12d8:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    12db:	70 6c                	jo     1349 <SHEADER+0x5d>
    12dd:	65 74 69             	gs je  1349 <SHEADER+0x5d>
    12e0:	6f                   	outsl  %ds:(%rsi),(%dx)
    12e1:	6e                   	outsb  %ds:(%rsi),(%dx)
    12e2:	5f                   	pop    %rdi
    12e3:	71 75                	jno    135a <SHEADER+0x6e>
}
    12e5:	65 72 79             	gs jb  1361 <SHEADER+0x75>
    12e8:	5f                   	pop    %rdi
    12e9:	69 74 65 6d 73 00 73 	imul   $0x77730073,0x6d(%rbp,%riz,2),%esi
    12f0:	77 
{ //    if(   size  & ( ~0xff  )  )	 printf(  "\nSHEADER size = %d\n",size );
    12f1:	5f                   	pop    %rdi
    12f2:	32 64 72 6f          	xor    0x6f(%rdx,%rsi,2),%ah
    12f6:	70 00                	jo     12f8 <SHEADER+0xc>
    12f8:	73 77                	jae    1371 <SHEADER+0x85>
    12fa:	5f                   	pop    %rdi
    12fb:	6d                   	insl   (%dx),%es:(%rdi)
	COM(current);
    12fc:	61                   	(bad)  
    12fd:	78 00                	js     12ff <SHEADER+0x13>
    12ff:	73 61                	jae    1362 <SHEADER+0x76>
    1301:	76 65                	jbe    1368 <SHEADER+0x7c>
    1303:	73 70                	jae    1375 <SHEADER+0x89>
    1305:	00 5f 49             	add    %bl,0x49(%rdi)
    1308:	4f 5f                	rex.WRXB pop %r15
    130a:	72 65                	jb     1371 <SHEADER+0x85>
    130c:	61                   	(bad)  
    130d:	64 5f                	fs pop %rdi
    130f:	65 6e                	outsb  %gs:(%rsi),(%dx)
    1311:	64 00 73 77          	add    %dh,%fs:0x77(%rbx)
    1315:	5f                   	pop    %rdi
    1316:	77 72                	ja     138a <SHEADER+0x9e>
    1318:	69 74 65 66 69 6c 65 	imul   $0x656c69,0x66(%rbp,%riz,2),%esi
    131f:	00 
    1320:	73 77                	jae    1399 <HEADER+0x5>
    1322:	5f                   	pop    %rdi
    1323:	32 72 47             	xor    0x47(%rdx),%dh
    1326:	54                   	push   %rsp
    1327:	00 6d 61             	add    %ch,0x61(%rbp)
    132a:	6b 65 5f 6e          	imul   $0x6e,0x5f(%rbp),%esp
    132e:	61                   	(bad)  
   	last=HERE;
    132f:	6d                   	insl   (%dx),%es:(%rdi)
    1330:	65 00 72 6c          	add    %dh,%gs:0x6c(%rdx)
    1334:	5f                   	pop    %rdi
    1335:	6d                   	insl   (%dx),%es:(%rdi)
    1336:	61                   	(bad)  
    1337:	72 6b                	jb     13a4 <HEADER+0x10>
    1339:	00 73 77             	add    %dh,0x77(%rbx)
    133c:	5f                   	pop    %rdi
    133d:	72 65                	jb     13a4 <HEADER+0x10>
    133f:	74 00                	je     1341 <SHEADER+0x55>
    1341:	72 6c                	jb     13af <HEADER+0x1b>
    1343:	5f                   	pop    %rdi
    1344:	63 68 61             	movslq 0x61(%rax),%ebp
    1347:	72 5f                	jb     13a8 <HEADER+0x14>
    1349:	69 73 5f 71 75 6f 74 	imul   $0x746f7571,0x5f(%rbx),%esi
    1350:	65 64 5f             	gs fs pop %rdi
    1353:	70 00                	jo     1355 <SHEADER+0x69>
    1355:	73 61                	jae    13b8 <HEADER+0x24>
    1357:	76 65                	jbe    13be <HEADER+0x2a>
    1359:	5f                   	pop    %rdi
    135a:	69 70 00 65 6d 61 63 	imul   $0x63616d65,0x0(%rax),%esi
    1361:	73 5f                	jae    13c2 <HEADER+0x2e>
    1363:	63 74 6c 78          	movslq 0x78(%rsp,%rbp,2),%esi
    1367:	5f                   	pop    %rdi
    1368:	6b 65 79 6d          	imul   $0x6d,0x79(%rbp),%esp
    136c:	61                   	(bad)  
    136d:	70 00                	jo     136f <SHEADER+0x83>
    136f:	5f                   	pop    %rdi
    1370:	66 69 6c 65 6e 6f 00 	imul   $0x6f,0x6e(%rbp,%riz,2),%bp
    1377:	73 77                	jae    13f0 <IMMED+0x1e>
    1379:	5f                   	pop    %rdi
    137a:	74 6f                	je     13eb <IMMED+0x19>
	StrComp(word,size);
    137c:	5f                   	pop    %rdi
    137d:	63 61 74             	movslq 0x74(%rcx),%esp
    1380:	63 68 00             	movslq 0x0(%rax),%ebp
    1383:	66 6f                	outsw  %ds:(%rsi),(%dx)
    1385:	72 74                	jb     13fb <IMMED+0x29>
    1387:	68 2e 63 00 69       	pushq  $0x6900632e
}
    138c:	6e                   	outsb  %ds:(%rsi),(%dx)
    138d:	74 65                	je     13f4 <IMMED+0x22>
    138f:	72 72                	jb     1403 <IMMED+0x31>
    1391:	75 70                	jne    1403 <IMMED+0x31>
    1393:	74 00                	je     1395 <HEADER+0x1>
{  
    1395:	73 77                	jae    140e <IMMED+0x3c>
    1397:	5f                   	pop    %rdi
    1398:	72 65                	jb     13ff <IMMED+0x2d>
    139a:	61                   	(bad)  
    139b:	64 6c                	fs insb (%dx),%es:(%rdi)
    139d:	69 6e 65 00 72 6c 5f 	imul   $0x5f6c7200,0x65(%rsi),%ebp
    for (i = 0; word[i] != 0; i ++);
    13a4:	73 6f                	jae    1415 <IMMED+0x43>
    13a6:	72 74                	jb     141c <IMMED+0x4a>
    13a8:	5f                   	pop    %rdi
    13a9:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    13ac:	70 6c                	jo     141a <IMMED+0x48>
    13ae:	65 74 69             	gs je  141a <IMMED+0x48>
    13b1:	6f                   	outsl  %ds:(%rsi),(%dx)
    13b2:	6e                   	outsb  %ds:(%rsi),(%dx)
    13b3:	5f                   	pop    %rdi
    13b4:	6d                   	insl   (%dx),%es:(%rdi)
    13b5:	61                   	(bad)  
    13b6:	74 63                	je     141b <IMMED+0x49>
    13b8:	68 65 73 00 73       	pushq  $0x73007365
    13bd:	77 5f                	ja     141e <IMMED+0x4c>
	SHEADER(word,i);
    13bf:	32 6f 76             	xor    0x76(%rdi),%ch
    13c2:	65 72 00             	gs jb  13c5 <HEADER+0x31>
    13c5:	72 6c                	jb     1433 <IMMED+0x61>
    13c7:	5f                   	pop    %rdi
    13c8:	61                   	(bad)  
    13c9:	74 74                	je     143f <PRIM+0x6>
    13cb:	65 6d                	gs insl (%dx),%es:(%rdi)
    13cd:	70 74                	jo     1443 <PRIM+0xa>
}
    13cf:	65 64 5f             	gs fs pop %rdi
{       
    13d2:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    13d5:	70 6c                	jo     1443 <PRIM+0xa>
	BYTE(last)=BYTE(last)|0x80;
    13d7:	65 74 69             	gs je  1443 <PRIM+0xa>
    13da:	6f                   	outsl  %ds:(%rsi),(%dx)
    13db:	6e                   	outsb  %ds:(%rsi),(%dx)
    13dc:	5f                   	pop    %rdi
    13dd:	66 75 6e             	data16 jne 144e <PRIM+0x15>
    13e0:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    13e4:	6e                   	outsb  %ds:(%rsi),(%dx)
    13e5:	00 73 77             	add    %dh,0x77(%rbx)
    13e8:	5f                   	pop    %rdi
    13e9:	31 61 64             	xor    %esp,0x64(%rcx)
    13ec:	64 00 72 6c          	add    %dh,%fs:0x6c(%rdx)
    13f0:	5f                   	pop    %rdi
    13f1:	62 61                	(bad)  
    13f3:	73 69                	jae    145e <PRIM+0x25>
    13f5:	63 5f 77             	movslq 0x77(%rdi),%ebx
    13f8:	6f                   	outsl  %ds:(%rsi),(%dx)
    13f9:	72 64                	jb     145f <PRIM+0x26>
    13fb:	5f                   	pop    %rdi
    13fc:	62 72 65 61 6b       	(bad)  {%k1}
    1401:	5f                   	pop    %rdi
    1402:	63 68 61             	movslq 0x61(%rax),%ebp
    1405:	72 61                	jb     1468 <PRIM+0x2f>
    1407:	63 74 65 72          	movslq 0x72(%rbp,%riz,2),%esi
    140b:	73 00                	jae    140d <IMMED+0x3b>
    140d:	61                   	(bad)  
    140e:	64 64 72 30          	fs fs jb 1442 <PRIM+0x9>
    1412:	00 73 68             	add    %dh,0x68(%rbx)
    1415:	6f                   	outsl  %ds:(%rsi),(%dx)
    1416:	72 74                	jb     148c <PRIM+0x53>
    1418:	20 75 6e             	and    %dh,0x6e(%rbp)
    141b:	73 69                	jae    1486 <PRIM+0x4d>
    141d:	67 6e                	outsb  %ds:(%esi),(%dx)
    141f:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
    1424:	74 00                	je     1426 <IMMED+0x54>
    1426:	73 74                	jae    149c <PRIM+0x63>
    1428:	64 6f                	outsl  %fs:(%rsi),(%dx)
    142a:	75 74                	jne    14a0 <PRIM+0x67>
    142c:	00 73 77             	add    %dh,0x77(%rbx)
    142f:	5f                   	pop    %rdi
    1430:	72 6c                	jb     149e <PRIM+0x65>
    1432:	6f                   	outsl  %ds:(%rsi),(%dx)
    1433:	61                   	(bad)  
    1434:	64 00 76 69          	add    %dh,%fs:0x69(%rsi)
}
    1438:	72 74                	jb     14ae <PRIM+0x75>
{	
    143a:	75 61                	jne    149d <PRIM+0x64>
    143c:	6c                   	insb   (%dx),%es:(%rdi)
    143d:	5f                   	pop    %rdi
    143e:	6d                   	insl   (%dx),%es:(%rdi)
    143f:	61                   	(bad)  
    1440:	63 68 69             	movslq 0x69(%rax),%ebp
    1443:	6e                   	outsb  %ds:(%rsi),(%dx)
    1444:	65 00 73 77          	add    %dh,%gs:0x77(%rbx)
    1448:	5f                   	pop    %rdi
	HEADER(word);
    1449:	6c                   	insb   (%dx),%es:(%rdi)
    144a:	69 74 00 5f 49 4f 5f 	imul   $0x775f4f49,0x5f(%rax,%rax,1),%esi
    1451:	77 
    1452:	72 69                	jb     14bd <PRIM+0x84>
    1454:	74 65                	je     14bb <PRIM+0x82>
	current=last;
    1456:	5f                   	pop    %rdi
    1457:	70 74                	jo     14cd <CONSTANT+0xa>
    1459:	72 00                	jb     145b <PRIM+0x22>
    145b:	74 74                	je     14d1 <CONSTANT+0xe>
    145d:	67 65 74 63          	addr32 gs je 14c4 <CONSTANT+0x1>
    1461:	68 00 5f 5f 69       	pushq  $0x695f5f00
    1466:	6e                   	outsb  %ds:(%rsi),(%dx)
    1467:	74 33                	je     149c <PRIM+0x63>
    1469:	32 5f 74             	xor    0x74(%rdi),%bl
    146c:	00 73 77             	add    %dh,0x77(%rbx)
    146f:	5f                   	pop    %rdi
    1470:	6d                   	insl   (%dx),%es:(%rdi)
    1471:	73 00                	jae    1473 <PRIM+0x3a>
    1473:	72 6c                	jb     14e1 <CONSTANT+0x1e>
    1475:	5f                   	pop    %rdi
    1476:	76 69                	jbe    14e1 <CONSTANT+0x1e>
    1478:	6e                   	outsb  %ds:(%rsi),(%dx)
    1479:	74 66                	je     14e1 <CONSTANT+0x1e>
    147b:	75 6e                	jne    14eb <CONSTANT+0x28>
    147d:	63 5f 74             	movslq 0x74(%rdi),%ebx
    1480:	00 72 6c             	add    %dh,0x6c(%rdx)
    1483:	5f                   	pop    %rdi
    1484:	6c                   	insb   (%dx),%es:(%rdi)
    1485:	69 6e 65 5f 62 75 66 	imul   $0x6675625f,0x65(%rsi),%ebp
    148c:	66 65 72 00          	data16 gs jb 1490 <PRIM+0x57>
    1490:	4b                   	rex.WXB
    1491:	65 79 6d             	gs jns 1501 <CONSTANT+0x3e>
    1494:	61                   	(bad)  
    1495:	70 00                	jo     1497 <PRIM+0x5e>
    1497:	44                   	rex.R
    1498:	65 73 63             	gs jae 14fe <CONSTANT+0x3b>
    149b:	72 69                	jb     1506 <CONSTANT+0x43>
    149d:	70 74                	jo     1513 <CONSTANT+0x50>
    149f:	6f                   	outsl  %ds:(%rsi),(%dx)
    14a0:	72 54                	jb     14f6 <CONSTANT+0x33>
    14a2:	61                   	(bad)  
    14a3:	62                   	(bad)  
    14a4:	6c                   	insb   (%dx),%es:(%rdi)
    14a5:	65 00 49 4d          	add    %cl,%gs:0x4d(%rcx)
    14a9:	4d                   	rex.WRB
	COM(cod<<1|0x8001);
    14aa:	45                   	rex.RB
    14ab:	44 00 72 6c          	add    %r14b,0x6c(%rdx)
    14af:	5f                   	pop    %rdi
    14b0:	69 6e 70 75 74 5f 61 	imul   $0x615f7475,0x70(%rsi),%ebp
    14b7:	76 61                	jbe    151a <CONSTANT+0x57>
    14b9:	69 6c 61 62 6c 65 5f 	imul   $0x685f656c,0x62(%rcx,%riz,2),%ebp
    14c0:	68 
}
    14c1:	6f                   	outsl  %ds:(%rsi),(%dx)
    14c2:	6f                   	outsl  %ds:(%rsi),(%dx)
{	
    14c3:	6b 00 73             	imul   $0x73,(%rax),%eax
    14c6:	77 5f                	ja     1527 <CONSTANT+0x64>
    14c8:	57                   	push   %rdi
    14c9:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    14cc:	70 00                	jo     14ce <CONSTANT+0xb>
    14ce:	61                   	(bad)  
    14cf:	64 64 72 31          	fs fs jb 1504 <CONSTANT+0x41>
	HEADER(word);
    14d3:	00 61 64             	add    %ah,0x64(%rcx)
    14d6:	64 72 32             	fs jb  150b <CONSTANT+0x48>
    14d9:	00 73 77             	add    %dh,0x77(%rbx)
    14dc:	5f                   	pop    %rdi
    14dd:	68 61 6c 74 00       	pushq  $0x746c61
	current=last;
    14e2:	73 77                	jae    155b <CREATE+0xb>
    14e4:	5f                   	pop    %rdi
    14e5:	6e                   	outsb  %ds:(%rsi),(%dx)
    14e6:	65 71 75             	gs jno 155e <CREATE+0xe>
    14e9:	00 68 69             	add    %ch,0x69(%rax)
    14ec:	73 74                	jae    1562 <CREATE+0x12>
    14ee:	6f                   	outsl  %ds:(%rsi),(%dx)
    14ef:	72 79                	jb     156a <CREATE+0x1a>
    14f1:	5f                   	pop    %rdi
    14f2:	6c                   	insb   (%dx),%es:(%rdi)
    14f3:	69 6e 65 73 5f 77 72 	imul   $0x72775f73,0x65(%rsi),%ebp
    14fa:	69 74 74 65 6e 5f 74 	imul   $0x6f745f6e,0x65(%rsp,%rsi,2),%esi
    1501:	6f 
    1502:	5f                   	pop    %rdi
    1503:	66 69 6c 65 00 68 69 	imul   $0x6968,0x0(%rbp,%riz,2),%bp
    150a:	73 74                	jae    1580 <CREATE+0x30>
    150c:	6f                   	outsl  %ds:(%rsi),(%dx)
    150d:	72 79                	jb     1588 <CREATE+0x38>
    150f:	5f                   	pop    %rdi
    1510:	77 6f                	ja     1581 <CREATE+0x31>
    1512:	72 64                	jb     1578 <CREATE+0x28>
    1514:	5f                   	pop    %rdi
    1515:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
    1518:	69 6d 69 74 65 72 73 	imul   $0x73726574,0x69(%rbp),%ebp
    151f:	00 72 6c             	add    %dh,0x6c(%rdx)
    1522:	5f                   	pop    %rdi
    1523:	76 6f                	jbe    1594 <CREATE+0x44>
    1525:	69 64 66 75 6e 63 5f 	imul   $0x745f636e,0x75(%rsi,%riz,2),%esp
    152c:	74 
    152d:	00 73 77             	add    %dh,0x77(%rbx)
    1530:	5f                   	pop    %rdi
    1531:	77 72                	ja     15a5 <CREATE+0x55>
    1533:	69 74 65 6c 69 6e 65 	imul   $0x656e69,0x6c(%rbp,%riz,2),%esi
    153a:	00 
	COM(sw_lit<<1|0x4001);
    153b:	72 6c                	jb     15a9 <CREATE+0x59>
    153d:	5f                   	pop    %rdi
	COM(dd);
    153e:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    1541:	70 69                	jo     15ac <CREATE+0x5c>
    1543:	67 6e                	outsb  %ds:(%esi),(%dx)
    1545:	6f                   	outsl  %ds:(%rsi),(%dx)
    1546:	72 65                	jb     15ad <CREATE+0x5d>
}
    1548:	5f                   	pop    %rdi
    1549:	66 75 6e             	data16 jne 15ba <CREATE+0x6a>
    154c:	63 5f 74             	movslq 0x74(%rdi),%ebx
    154f:	00 73 77             	add    %dh,0x77(%rbx)
	{	
    1552:	5f                   	pop    %rdi
    1553:	46 72 6f             	rex.RX jb 15c5 <CREATE+0x75>
    1556:	6d                   	insl   (%dx),%es:(%rdi)
    1557:	4e 61                	rex.WRX (bad) 
    1559:	6d                   	insl   (%dx),%es:(%rdi)
    155a:	65 00 72 6c          	add    %dh,%gs:0x6c(%rdx)
	HEADER(word);
    155e:	5f                   	pop    %rdi
    155f:	70 65                	jo     15c6 <CREATE+0x76>
    1561:	72 73                	jb     15d6 <VARIABLE+0x6>
    1563:	69 73 74 65 6e 74 5f 	imul   $0x5f746e65,0x74(%rbx),%esi
	current=last;
    156a:	73 69                	jae    15d5 <VARIABLE+0x5>
    156c:	67 6e                	outsb  %ds:(%esi),(%dx)
    156e:	61                   	(bad)  
    156f:	6c                   	insb   (%dx),%es:(%rdi)
    1570:	5f                   	pop    %rdi
    1571:	68 61 6e 64 6c       	pushq  $0x6c646e61
    1576:	65 72 73             	gs jb  15ec <VARIABLE+0x1c>
    1579:	00 72 6c             	add    %dh,0x6c(%rdx)
    157c:	5f                   	pop    %rdi
    157d:	63 6f 6d             	movslq 0x6d(%rdi),%ebp
    1580:	70 6c                	jo     15ee <VARIABLE+0x1e>
    1582:	65 74 69             	gs je  15ee <VARIABLE+0x1e>
    1585:	6f                   	outsl  %ds:(%rsi),(%dx)
    1586:	6e                   	outsb  %ds:(%rsi),(%dx)
    1587:	5f                   	pop    %rdi
    1588:	64 69 73 70 6c 61 79 	imul   $0x5f79616c,%fs:0x70(%rbx),%esi
    158f:	5f 
    1590:	6d                   	insl   (%dx),%es:(%rdi)
    1591:	61                   	(bad)  
    1592:	74 63                	je     15f7 <memcasecmp+0x2>
    1594:	68 65 73 5f 68       	pushq  $0x685f7365
    1599:	6f                   	outsl  %ds:(%rsi),(%dx)
    159a:	6f                   	outsl  %ds:(%rsi),(%dx)
    159b:	6b 00 73             	imul   $0x73,(%rax),%eax
    159e:	77 5f                	ja     15ff <memcasecmp+0xa>
    15a0:	50                   	push   %rax
    15a1:	51                   	push   %rcx
    15a2:	00 73 77             	add    %dh,0x77(%rbx)
    15a5:	5f                   	pop    %rdi
    15a6:	70 6f                	jo     1617 <memcasecmp+0x22>
    15a8:	72 74                	jb     161e <memcasecmp+0x29>
    15aa:	71 00                	jno    15ac <CREATE+0x5c>
    15ac:	72 6c                	jb     161a <memcasecmp+0x25>
    15ae:	5f                   	pop    %rdi
    15af:	70 72                	jo     1623 <memcasecmp+0x2e>
    15b1:	65 5f                	gs pop %rdi
    15b3:	69 6e 70 75 74 5f 68 	imul   $0x685f7475,0x70(%rsi),%ebp
    15ba:	6f                   	outsl  %ds:(%rsi),(%dx)
    15bb:	6f                   	outsl  %ds:(%rsi),(%dx)
    15bc:	6b 00 72             	imul   $0x72,(%rax),%eax
	COM(sw_ip<<1|0x4001);
    15bf:	6c                   	insb   (%dx),%es:(%rdi)
    15c0:	5f                   	pop    %rdi
    15c1:	69 6e 73 74 72 65 61 	imul   $0x61657274,0x73(%rsi),%ebp
}
    15c8:	6d                   	insl   (%dx),%es:(%rdi)
    15c9:	00 73 77             	add    %dh,0x77(%rbx)
    15cc:	5f                   	pop    %rdi
    15cd:	74 79                	je     1648 <memcasecmp+0x53>
    15cf:	70 65                	jo     1636 <memcasecmp+0x41>
{	
    15d1:	00 63 5f             	add    %ah,0x5f(%rbx)
    15d4:	6f                   	outsl  %ds:(%rsi),(%dx)
    15d5:	73 70                	jae    1647 <memcasecmp+0x52>
    15d7:	65 65 64 00 6f 70    	gs gs add %ch,%fs:0x70(%rdi)
	CREATE(word);
    15dd:	74 69                	je     1648 <memcasecmp+0x53>
    15df:	6e                   	outsb  %ds:(%rsi),(%dx)
    15e0:	64 00 6f 70          	add    %ch,%fs:0x70(%rdi)
    15e4:	74 61                	je     1647 <memcasecmp+0x52>
    15e6:	72 67                	jb     164f <memcasecmp+0x5a>
	COM(0);
    15e8:	00 63 5f             	add    %ah,0x5f(%rbx)
    15eb:	63 63 00             	movslq 0x0(%rbx),%esp
    15ee:	63 5f 69             	movslq 0x69(%rdi),%ebx
    15f1:	73 70                	jae    1663 <memcasecmp+0x6e>
}
    15f3:	65 65 64 00 63 5f    	gs gs add %ah,%fs:0x5f(%rbx)
{
    15f9:	6c                   	insb   (%dx),%es:(%rdi)
    15fa:	69 6e 65 00 69 6f 76 	imul   $0x766f6900,0x65(%rsi),%ebp
    1601:	66 6d                	insw   (%dx),%es:(%rdi)
    1603:	2e 63 00             	movslq %cs:(%rax),%eax
    1606:	74 74                	je     167c <memcasecmp+0x87>
    1608:	70 75                	jo     167f <memcasecmp+0x8a>
  unsigned char const *s1 = (unsigned char const *) vs1;
    160a:	74 63                	je     166f <memcasecmp+0x7a>
    160c:	68 00 5f 5f 65       	pushq  $0x655f5f00
  unsigned char const *s2 = (unsigned char const *) vs2;
    1611:	6e                   	outsb  %ds:(%rsi),(%dx)
    1612:	76 69                	jbe    167d <memcasecmp+0x88>
    1614:	72 6f                	jb     1685 <memcasecmp+0x90>
    1616:	6e                   	outsb  %ds:(%rsi),(%dx)
    1617:	00 62 79             	add    %ah,0x79(%rdx)
  for (i = 0; i < n; i++)
    161a:	74 65                	je     1681 <memcasecmp+0x8c>
    161c:	73 57                	jae    1675 <memcasecmp+0x80>
    161e:	61                   	(bad)  
    161f:	69 74 69 6e 67 00 74 	imul   $0x74740067,0x6e(%rcx,%rbp,2),%esi
    1626:	74 
      unsigned char u1 = *s1++;
    1627:	6b 62 68 69          	imul   $0x69,0x68(%rdx),%esp
    162b:	74 00                	je     162d <memcasecmp+0x38>
    162d:	5f                   	pop    %rdi
    162e:	5f                   	pop    %rdi
    162f:	62                   	(bad)  
    1630:	75 66                	jne    1698 <SEARCH>
    1632:	00 63 5f             	add    %ah,0x5f(%rbx)
      unsigned char u2 = *s2++;
    1635:	6c                   	insb   (%dx),%es:(%rdi)
    1636:	66 6c                	data16 insb (%dx),%es:(%rdi)
    1638:	61                   	(bad)  
    1639:	67 00 74 65 72       	add    %dh,0x72(%ebp,%eiz,2)
    163e:	6d                   	insl   (%dx),%es:(%rdi)
    163f:	69 6f 73 00 63 5f 63 	imul   $0x635f6300,0x73(%rdi),%ebp
      if (toupper (u1) != toupper (u2))
    1646:	66 6c                	data16 insb (%dx),%es:(%rdi)
    1648:	61                   	(bad)  
    1649:	67 00 74 74 67       	add    %dh,0x67(%esp,%esi,2)
    164e:	65 74 63             	gs je  16b4 <SEARCH+0x1c>
    1651:	68 61 72 00 6f       	pushq  $0x6f007261
    1656:	70 74                	jo     16cc <SEARCH+0x34>
    1658:	65 72 72             	gs jb  16cd <SEARCH+0x35>
    165b:	00 73 70             	add    %dh,0x70(%rbx)
    165e:	65 65 64 5f          	gs gs fs pop %rdi
        return toupper (u1) - toupper (u2);
    1662:	74 00                	je     1664 <memcasecmp+0x6f>
    1664:	74 74                	je     16da <SEARCH+0x42>
    1666:	77 72                	ja     16da <SEARCH+0x42>
    1668:	69 74 65 00 63 5f 69 	imul   $0x66695f63,0x0(%rbp,%riz,2),%esi
    166f:	66 
    1670:	6c                   	insb   (%dx),%es:(%rdi)
    1671:	61                   	(bad)  
    1672:	67 00 63 63          	add    %ah,0x63(%ebx)
    1676:	5f                   	pop    %rdi
    1677:	74 00                	je     1679 <memcasecmp+0x84>
    1679:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
    167c:	66 6c                	data16 insb (%dx),%es:(%rdi)
    167e:	61                   	(bad)  
    167f:	67 00 6f 70          	add    %ch,0x70(%edi)
  for (i = 0; i < n; i++)
    1683:	74 6f                	je     16f4 <SEARCH+0x5c>
    1685:	70 74                	jo     16fb <SEARCH+0x63>
    1687:	00 74 63 66          	add    %dh,0x66(%rbx,%riz,2)
    168b:	6c                   	insb   (%dx),%es:(%rdi)
  return 0;
    168c:	61                   	(bad)  
    168d:	67 5f                	addr32 pop %rdi
    168f:	74 00                	je     1691 <memcasecmp+0x9c>
}
    1691:	5f                   	pop    %rdi
    1692:	5f                   	pop    %rdi
    1693:	66                   	data16
    1694:	64                   	fs
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	19 4a 00             	sbb    %ecx,0x0(%rdx)
   3:	00 00                	add    %al,(%rax)
   5:	00 00                	add    %al,(%rax)
   7:	00 be 4b 00 00 00    	add    %bh,0x4b(%rsi)
   d:	00 00                	add    %al,(%rax)
   f:	00 c3                	add    %al,%bl
  11:	4b 00 00             	rex.WXB add %al,(%r8)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	2d 4d 00 00 00       	sub    $0x4d,%eax
	...
  2d:	00 00                	add    %al,(%rax)
  2f:	00 66 86             	add    %ah,-0x7a(%rsi)
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	ed                   	in     (%dx),%eax
  39:	86 00                	xchg   %al,(%rax)
  3b:	00 00                	add    %al,(%rax)
  3d:	00 00                	add    %al,(%rax)
  3f:	00 ae 87 00 00 00    	add    %ch,0x87(%rsi)
  45:	00 00                	add    %al,(%rax)
  47:	00 af 87 00 00 00    	add    %ch,0x87(%rdi)
	...
  5d:	00 00                	add    %al,(%rax)
  5f:	00 69 91             	add    %ch,-0x6f(%rcx)
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	6c                   	insb   (%dx),%es:(%rdi)
  69:	92                   	xchg   %eax,%edx
  6a:	00 00                	add    %al,(%rax)
  6c:	00 00                	add    %al,(%rax)
  6e:	00 00                	add    %al,(%rax)
  70:	71 92                	jno    4 <_init-0xb54>
  72:	00 00                	add    %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	2e 93                	cs xchg %eax,%ebx
	...
