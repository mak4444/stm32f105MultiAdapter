REQUIRE PLACE  ~mak\place.f 
REQUIRE [IF] ~MAK\CompIF.f
[IFNDEF] BREAK : BREAK  POSTPONE EXIT POSTPONE THEN ; IMMEDIATE  [THEN]

C" STREAM-FILE" FIND NIP
[IF]
: FROM_SOURCE-ID SOURCE-ID  STREAM-FILE ;
: TO_SOURCE-ID FILE>RSTREAM SID M! ;
[ELSE]
: FROM_SOURCE-ID SOURCE-ID ;
: TO_SOURCE-ID SID M! ;
[THEN]

C" -CELL" FIND NIP 0=
[IF] -1 CELLS CONSTANT -CELL
[THEN]

[IFNDEF] HERE-TAB-CUR VARIABLE HERE-TAB-CUR
[THEN]

[IFNDEF] SHERE-TAB-CUR VARIABLE SHERE-TAB-CUR
[THEN]


MODULE: AVRLIST

CREATE  FILE_NAME_L 120 ALLOT
CREATE   HERE-TAB  4000 CELLS ALLOT

HERE CELL-  CONSTANT HERE-TAB-MAX
HERE-TAB HERE-TAB-CUR !
VARIABLE S_STATE 

: HERE-TAB-CUR+
  HERE-TAB-CUR @  CELL+ HERE-TAB-MAX UMIN
  HERE-TAB-CUR
 !
\ [ .( XXXX) DIS-OPT KEY DROP ]
 ;

0 VALUE SIDHTC

: HERE-TO-TAB \ F7_ED
 SIDHTC 0= IF SID @ TO SIDHTC THEN
 SID @ SIDHTC <> IF BREAK
 DP M@
 HERE-TAB-CUR M@ M!
 HERE-TAB-CUR+
 ;


CREATE   SHERE-TAB  700 CELLS ALLOT
HERE CELL-  CONSTANT SHERE-TAB-MAX
SHERE-TAB SHERE-TAB-CUR !

: SHERE-TAB-CUR+
  SHERE-TAB-CUR M@  CELL+ SHERE-TAB-MAX UMIN
  SHERE-TAB-CUR M! ;

: SHERE-TO-TAB DP M@ SHERE-TAB-CUR M@ M! SHERE-TAB-CUR+ ;

80 VALUE DUMP_MAX 


: .LIST ( ADDR  ADDR1 -- ADDR1' ) 
\          CR H. EXIT
          S_STATE @ DROP 1
          IF
             SWAP
             BEGIN  2DUP U> 
             WHILE  MINST CR
             REPEAT  NIP
          ELSE
            TUCK   
            OVER - DUP
            IF   DUP DUMP_MAX U>

                IF  >R DUMP_MAX DUMP 
                    CR DUP U.  R> DUMP_MAX - U. ." bytes"
                ELSE  DUMP
                THEN CR
            ELSE 2DROP
            THEN
          THEN
;

VECT INCLUDED$

' INCLUDED TO INCLUDED$

EXPORT

: CON_EMIT
   STDOUT @ >R  [ STDOUT @ LIT, ] STDOUT ! EMIT
   R> STDOUT ! ;

0 VALUE  file_number

: STCR_
 BASE @ DECIMAL
 TAB  ." .loc " file_number .  CURSTR @ . '0' EMIT CR
 TAB  ." .loc " file_number .  CURSTR @ . '0' EMIT CR
 BASE !
  ." //"   SOURCE TYPE CR ; 

VECT STCR
' STCR_ TO STCR

HERE S" _AL" S", VALUE C"_AL"

0 VALUE INCL-HH

\- 3DUP : 3DUP DUP 2OVER ROT ;

VARIABLE STDOUTXX

: INCLUDED_AL
 HERE TO INCL-HH
\ F7_ED
   ['] <PRE> >BODY @ >R
   ['] HERE-TO-TAB TO <PRE>
	0 TO SIDHTC
     HERE-TAB  HERE-TAB-CUR !
    SHERE-TAB SHERE-TAB-CUR ! 
  2DUP 2>R
CR ." INCL_AL"
  INCLUDED$ 
 2R>  R> TO <PRE>
CR ." INCLUDED_AL"
 -1 SHERE-TAB-CUR M@ M!  SHERE-TAB-CUR+
    HERE-TO-TAB
    HERE-TO-TAB		-CELL HERE-TAB-CUR M+!
    HERE-TAB-CUR M@ M@	-CELL HERE-TAB-CUR M+!
    BEGIN HERE-TAB-CUR M@ HERE-TAB <>
    WHILE HERE-TAB-CUR M@ M@ UMIN DUP HERE-TAB-CUR M@ M!
          -CELL HERE-TAB-CUR M+!
    REPEAT DROP
    S_STATE 0!
    SHERE-TAB SHERE-TAB-CUR M! 

    2DUP FILE_NAME_L  PLACE
  C"_AL" COUNT FILE_NAME_L +PLACE  
\  S" _AL"  FILE_NAME_L +PLACE  
 2DUP TYPE
  R/O OPEN-FILE  THROW
  FILE_NAME_L COUNT 2DUP + 0!
  2DUP TYPE
  W/O CREATE-FILE   THROW

  TIB >R >IN M@ >R #TIB M@ >R SOURCE-ID >R CURSTR M@ >R
  STDOUT @ >R  BASE M@ >R HEX
  C/L 2 + ALLOCATE THROW ATIB !
 STDOUT !

  TO_SOURCE-ID

  TAB  ." .file "
 BASE @
   file_number 1+ DUP DECIMAL . TO file_number  '"' EMIT
 BASE !
  FILE_NAME_L COUNT 3 - TYPE '"' EMIT CR

  CURSTR 0! HERE-TAB-CUR @ @
  BEGIN    REFILL
  WHILE    STCR

        BEGIN  SHERE-TAB-CUR M@ M@ HERE-TAB-CUR M@ CELL+ M@ U<
        WHILE  SHERE-TAB-CUR M@ M@ .LIST   SHERE-TAB-CUR+
                 S_STATE @ INVERT S_STATE !
        REPEAT

  HERE-TAB-CUR+ HERE-TAB-CUR @ @ .LIST
  REPEAT  DROP   \ 1  STDOUT ! TIB h.  abort
  TIB FREE THROW 
  FROM_SOURCE-ID
 CLOSE-FILE THROW 
   STDOUT @ CLOSE-FILE THROW
  R> BASE M! R> STDOUT ! 
  R> CURSTR M! R> SID M! R> #TIB M! R> >IN M! R> ATIB !
 CR FILE_NAME_L COUNT TYPE 9 EMIT HERE INCL-HH - .

;

: REQUIRED_AL ( waddr wu laddr lu -- )
  2SWAP SFIND
  IF DROP 2DROP EXIT
  ELSE 2DROP INCLUDED_AL THEN
;
: REQUIRE_AL ( "word" "libpath" -- )
  PARSE-NAME
  PARSE-NAME
  REQUIRED_AL
;

;MODULE

\EOF
: : : SHERE-TO-TAB ;

: ; POSTPONE ; SHERE-TO-TAB ; IMMEDIATE

: SSSS
     HERE-TAB  HERE-TAB-CUR !
    SHERE-TAB SHERE-TAB-CUR ! 
;
