	.file 6 "SRC/main.4"
	.loc 6 1 0
	.loc 6 1 0
//

	.loc 6 2 0
	.loc 6 2 0
//: <MAIN>
	.inst.n	0xFFFF @ ?????

	.global lessMAINgreat
lessMAINgreat:	.inst.n	0xB500		//PUSH	{R14}
	.loc 6 3 0
	.loc 6 3 0
//   HELLO
	.inst.n	0xF7FE,0xFCE7	//BL	HELLO
	.loc 6 4 0
	.loc 6 4 0
//   
	.loc 6 5 0
	.loc 6 5 0
// BEGIN  [_  
	.inst.n	0xF7FE,0xFE83	//BL	x_
	.loc 6 6 0
	.loc 6 6 0
// 	['] QUIT
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!

	MOVW R6, #:lower16:QUIT+1
	MOVT R6, #:upper16:QUIT
	.loc 6 7 0
	.loc 6 7 0
// 	 CATCH
	.inst.n	0xF7FE,0xFB57	//BL	CATCH
	.loc 6 8 0
	.loc 6 8 0
// 	  ." ERR=" .  $D EMIT $A EMIT SP0 @ SP!  DECIMAL_
	.inst.n	0xF7FD,0xFD7F	//BL	cSdticcend
	.inst.n	0x4504		//CMP	R4, R0
	.inst.n	0x5252		//STRH	R2, [R2, R1]
	.inst.n	0xFF3D @ ?????
	.inst.n	0xF7FD,0xFD8E	//BL	TYPE
	.inst.n	0xF7FD,0xFE7E	//BL	dot
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	.inst.n	0x260D		//MOVS	R6, #13
	.inst.n	0xF7FD,0xFD35	//BL	EMIT
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	.inst.n	0x260A		//MOVS	R6, #10
	.inst.n	0xF7FD,0xFD30	//BL	EMIT
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+648 @ 0x288
	MOVT	R6, #:upper16:sp_buff+648 @ 0x288
	.inst.n	0x6836		//LDR	R6, [R6, #0]
	.inst.n	0x4637		//MOV	R7, R6
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.inst.n	0xF7FD,0xFDA7	//BL	DECIMAL_
	.loc 6 9 0
	.loc 6 9 0
// AGAIN
	.inst.n	0xE7D6		//B.N	10005B0E
	.loc 6 10 0
	.loc 6 10 0
//;
	.inst.n	0xBD00		//POP	{R15}
	.loc 6 11 0
	.loc 6 11 0
//

	.loc 6 12 0
	.loc 6 12 0
//VARIABLE &MAIN 
	.loc 6 13 0
	.loc 6 13 0
//

	.loc 6 14 0
	.loc 6 14 0
//: MEID.
	.inst.n	0xFFFF @ ?????

	.global MEIDdot
MEIDdot:	.inst.n	0xB500		//PUSH	{R14}
	.loc 6 15 0
	.loc 6 15 0
//  -USB  CR  S" MEID=" 
	.inst.n	0xF7FF,0xFBCD	//BL	subusb
	.inst.n	0xF7FD,0xFE85	//BL	CR
	.inst.n	0xF7FD,0xFD59	//BL	cSdticcend
	.inst.n	0x4D05		//LDR	R5, [PC, #20] @ [0x10005B88] 0xF7FF8003
	.inst.n	0x4945		//LDR	R1, [PC, #276] @ [0x10005C8C] 0x46B4F248
	.inst.n	0x3D44		//SUBS	R5, #68
	.loc 6 16 0
	.loc 6 16 0
//  ;
	.inst.n	0xBD00		//POP	{R15}
	.loc 6 17 0
	.loc 6 17 0
// 
	.loc 6 18 0
	.loc 6 18 0
//: FMAIN
	.inst.n	0xFFFF @ ?????

	.global FMAIN
FMAIN:	.inst.n	0xB500		//PUSH	{R14}
	.loc 6 19 0
	.loc 6 19 0
//   SAVE_Q
	BL	SAVE_Q
	.loc 6 20 0
	.loc 6 20 0
//   IF	REST
	.inst.n	0x4236		//TST	R6, R6
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.inst.n	0xF000,0x8003	//BEQ.W	FMAIN+14 
	.inst.n	0xF7FF,0xFC37	//BL	REST
	.loc 6 21 0
	.loc 6 21 0
//   ELSE	VAR_ORIG_SET
	.inst.n	0xE001		//B.N	10005B94
	.inst.n	0xF7FF,0xFC58	//BL	VAR_ORIG_SET
	.loc 6 22 0
	.loc 6 22 0
//   THEN	 
	.loc 6 23 0
	.loc 6 23 0
//	 	 
	.loc 6 24 0
	.loc 6 24 0
//    $f000f8df \	ldr.w	pc, [pc]
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	.inst.n	0xF64F,0x06DF	//MOVW	R6, #:lower16:4026595551 @ 0xF000F8DF
	.inst.n	0xF2CF,0x0600	//MOVT	R6, #:upper16:4026595551 @ 0xF000F8DF
	.loc 6 25 0
	.loc 6 25 0
//    V_DOVAR !
	.inst.n	0x4630		//MOV	R0, R6
	MOVW	R6, #:lower16:sp_buff+664 @ 0x298
	MOVT	R6, #:upper16:sp_buff+664 @ 0x298
	.inst.n	0x6030		//STR	R0, [R6, #0]
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.loc 6 26 0
	.loc 6 26 0
//    ['] DOCREATE V_DOVAR CELL+ !
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!

	MOVW R6, #:lower16:DOCREATE+1
	MOVT R6, #:upper16:DOCREATE
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+664 @ 0x298
	MOVT	R6, #:upper16:sp_buff+664 @ 0x298
	.inst.n	0x3602		//ADDS	R6, #2
	.inst.n	0x3601		//ADDS	R6, #1
	.inst.n	0x3601		//ADDS	R6, #1
	.inst.n	0xCF01		//LDMIA	R7!, {R0}
	.inst.n	0x6030		//STR	R0, [R6, #0]
	.inst.n	0xF64F,0x06DF	//MOVW	R6, #:lower16:4026595551 @ 0xF000F8DF
	.inst.n	0xF2CF,0x0600	//MOVT	R6, #:upper16:4026595551 @ 0xF000F8DF
	.loc 6 27 0
	.loc 6 27 0
//

	.loc 6 28 0
	.loc 6 28 0
//    $f000f8df \	ldr.w	pc, [pc]
	.loc 6 29 0
	.loc 6 29 0
//    V_DOCONST !
	.inst.n	0x4630		//MOV	R0, R6
	MOVW	R6, #:lower16:sp_buff+672 @ 0x2A0
	MOVT	R6, #:upper16:sp_buff+672 @ 0x2A0
	.inst.n	0x6030		//STR	R0, [R6, #0]
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.loc 6 30 0
	.loc 6 30 0
//    ['] DOCONST V_DOCONST CELL+ !
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!

	MOVW R6, #:lower16:DOCONST+1
	MOVT R6, #:upper16:DOCONST
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+672 @ 0x2A0
	MOVT	R6, #:upper16:sp_buff+672 @ 0x2A0
	.inst.n	0x3602		//ADDS	R6, #2
	.inst.n	0x3601		//ADDS	R6, #1
	.inst.n	0x3601		//ADDS	R6, #1
	.inst.n	0xCF01		//LDMIA	R7!, {R0}
	.inst.n	0x6030		//STR	R0, [R6, #0]
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.loc 6 31 0
	.loc 6 31 0
//

	.loc 6 32 0
	.loc 6 32 0
//\	stm32f107_usb_init
	.loc 6 33 0
	.loc 6 33 0
//	
	.loc 6 34 0
	.loc 6 34 0
//\ 	MEID	VAR_BIG - RAMIMG +  @ MEID !
	.loc 6 35 0
	.loc 6 35 0
//	
	.loc 6 36 0
	.loc 6 36 0
//\  '$' SERIAL-EMIT
	.loc 6 37 0
	.loc 6 37 0
// \ '*' SERIAL-EMIT '*' SERIAL-EMIT '*' SERIAL-EMIT '*' SERIAL-EMIT '*' SERIAL-EMIT
	.loc 6 38 0
	.loc 6 38 0
// \ MEID.  TYPE   MEID @ . CR
	.loc 6 39 0
	.loc 6 39 0
//  
	.loc 6 40 0
	.loc 6 40 0
//\   -USB   cr ." MEID=" MEID @ .  cr   +USB
	.loc 6 41 0
	.loc 6 41 0
//

	.loc 6 42 0
	.loc 6 42 0
//  	MMENU   MEID  @
	.inst.n	0xF7FF,0xFEC3	//BL	MMENU
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+1192 @ 0x4A8
	MOVT	R6, #:upper16:sp_buff+1192 @ 0x4A8
	.inst.n	0x6836		//LDR	R6, [R6, #0]
	.loc 6 43 0
	.loc 6 43 0
//  	  cr ." me=" dup . 2 = 
	.inst.n	0xF7FD,0xFE2C	//BL	CR
	.inst.n	0xF7FD,0xFD00	//BL	cSdticcend
	.inst.n	0x6D03		//LDR	R3, [R0, #80]
	.inst.n	0x3D65		//SUBS	R5, #101
	.inst.n	0xF7FD,0xFD10	//BL	TYPE
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	.inst.n	0xF7FD,0xFDFE	//BL	dot
	.inst.n	0x4630		//MOV	R0, R6
	.inst.n	0x2602		//MOVS	R6, #2
	.inst.n	0x4046		//EORS	R6, R0
	.inst.n	0x3E01		//SUBS	R6, #1
	.inst.n	0x41B6		//SBCS	R6, R6
	.loc 6 44 0
	.loc 6 44 0
//       IF
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.inst.n	0xF000,0x8002	//BEQ.W	FMAIN+CC 
	.loc 6 45 0
	.loc 6 45 0
//        SLCAN_LOOP
	.inst.n	0xF7FF,0xFCD2	//BL	SLCAN_LOOP
	.loc 6 46 0
	.loc 6 46 0
//        THEN
	.loc 6 47 0
	.loc 6 47 0
//

	.loc 6 48 0
	.loc 6 48 0
//     MEID  @ 3 =
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+1192 @ 0x4A8
	MOVT	R6, #:upper16:sp_buff+1192 @ 0x4A8
	.inst.n	0x6830		//LDR	R0, [R6, #0]
	.inst.n	0x2603		//MOVS	R6, #3
	.inst.n	0x4046		//EORS	R6, R0
	.inst.n	0x3E01		//SUBS	R6, #1
	.inst.n	0x41B6		//SBCS	R6, R6
	.loc 6 49 0
	.loc 6 49 0
//     IF	USB<>UART
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.inst.n	0xF000,0x8002	//BEQ.W	FMAIN+EC 
	.inst.n	0xF7FF,0xFC1C	//BL	USBlessgreatUART
	.loc 6 50 0
	.loc 6 50 0
//     THEN
	.loc 6 51 0
	.loc 6 51 0
//

	.loc 6 52 0
	.loc 6 52 0
//     MEID  @ 1 =
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+1192 @ 0x4A8
	MOVT	R6, #:upper16:sp_buff+1192 @ 0x4A8
	.inst.n	0x6830		//LDR	R0, [R6, #0]
	.inst.n	0x2601		//MOVS	R6, #1
	.inst.n	0x4046		//EORS	R6, R0
	.inst.n	0x3E01		//SUBS	R6, #1
	.inst.n	0x41B6		//SBCS	R6, R6
	.loc 6 53 0
	.loc 6 53 0
//     IF	REST
	.inst.n	0xCF40		//LDMIA	R7!, {R6}
	.inst.n	0xF000,0x8002	//BEQ.W	FMAIN+10C 
	.inst.n	0xF7FF,0xFBBA	//BL	REST
	.loc 6 54 0
	.loc 6 54 0
//     THEN
	.loc 6 55 0
	.loc 6 55 0
//   
	.loc 6 56 0
	.loc 6 56 0
//    &MAIN PERFORM
	.inst.n	0xF847,0x6D04	//STR.W	R6, [R7, #-4]!
	MOVW	R6, #:lower16:sp_buff+1204 @ 0x4B4
	MOVT	R6, #:upper16:sp_buff+1204 @ 0x4B4
	.inst.n	0xF7FD,0xF98D	//BL	loadEXECUTE
	.loc 6 57 0
	.loc 6 57 0
//;
	.inst.n	0xBD00		//POP	{R15}
	.loc 6 58 0
	.loc 6 58 0
//

	.loc 6 59 0
	.loc 6 59 0
//: FFMAIN
	.inst.n	0xFFFF @ ?????

	.global FFMAIN
FFMAIN:	.inst.n	0xB500		//PUSH	{R14}
	.loc 6 60 0
	.loc 6 60 0
//[ ASMARM_BIG
	.loc 6 61 0
	.loc 6 61 0
//	MOVS	DSTK,R0
	.inst.n	0x0007		//MOVS	R7, R0
	.loc 6 62 0
	.loc 6 62 0
//ASM_END ]
	.loc 6 63 0
	.loc 6 63 0
//

	.loc 6 64 0
	.loc 6 64 0
// \ PPP \
	.loc 6 65 0
	.loc 6 65 0
//  FMAIN
	.inst.n	0xF7FF,0xFF6C	//BL	FMAIN
	.loc 6 66 0
	.loc 6 66 0
//;
	.inst.n	0xBD00		//POP	{R15}
	.loc 6 67 0
	.loc 6 67 0
//

